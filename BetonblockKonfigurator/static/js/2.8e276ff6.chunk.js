(this.webpackJsonponlineKonfi = this.webpackJsonponlineKonfi || []).push([[2], [function(e, t, n) {
    "use strict";
    e.exports = n(48)
}
, function(e, t, n) {
    "use strict";
    n.r(t),
    n.d(t, "ACESFilmicToneMapping", (function() {
        return ue
    }
    )),
    n.d(t, "AddEquation", (function() {
        return k
    }
    )),
    n.d(t, "AddOperation", (function() {
        return ie
    }
    )),
    n.d(t, "AdditiveAnimationBlendMode", (function() {
        return Qt
    }
    )),
    n.d(t, "AdditiveBlending", (function() {
        return P
    }
    )),
    n.d(t, "AlphaFormat", (function() {
        return je
    }
    )),
    n.d(t, "AlwaysDepth", (function() {
        return Z
    }
    )),
    n.d(t, "AlwaysStencilFunc", (function() {
        return Rn
    }
    )),
    n.d(t, "AmbientLight", (function() {
        return Ah
    }
    )),
    n.d(t, "AmbientLightProbe", (function() {
        return $h
    }
    )),
    n.d(t, "AnimationClip", (function() {
        return Ic
    }
    )),
    n.d(t, "AnimationLoader", (function() {
        return Vc
    }
    )),
    n.d(t, "AnimationMixer", (function() {
        return Tp
    }
    )),
    n.d(t, "AnimationObjectGroup", (function() {
        return Ep
    }
    )),
    n.d(t, "AnimationUtils", (function() {
        return wc
    }
    )),
    n.d(t, "ArcCurve", (function() {
        return $c
    }
    )),
    n.d(t, "ArrayCamera", (function() {
        return zs
    }
    )),
    n.d(t, "ArrowHelper", (function() {
        return mf
    }
    )),
    n.d(t, "Audio", (function() {
        return op
    }
    )),
    n.d(t, "AudioAnalyser", (function() {
        return pp
    }
    )),
    n.d(t, "AudioContext", (function() {
        return Xh
    }
    )),
    n.d(t, "AudioListener", (function() {
        return ap
    }
    )),
    n.d(t, "AudioLoader", (function() {
        return Yh
    }
    )),
    n.d(t, "AxesHelper", (function() {
        return gf
    }
    )),
    n.d(t, "AxisHelper", (function() {
        return cd
    }
    )),
    n.d(t, "BackSide", (function() {
        return _
    }
    )),
    n.d(t, "BasicDepthPacking", (function() {
        return pn
    }
    )),
    n.d(t, "BasicShadowMap", (function() {
        return v
    }
    )),
    n.d(t, "BinaryTextureLoader", (function() {
        return md
    }
    )),
    n.d(t, "Bone", (function() {
        return xl
    }
    )),
    n.d(t, "BooleanKeyframeTrack", (function() {
        return Ac
    }
    )),
    n.d(t, "BoundingBoxHelper", (function() {
        return hd
    }
    )),
    n.d(t, "Box2", (function() {
        return Op
    }
    )),
    n.d(t, "Box3", (function() {
        return Wr
    }
    )),
    n.d(t, "Box3Helper", (function() {
        return cf
    }
    )),
    n.d(t, "BoxBufferGeometry", (function() {
        return Sa
    }
    )),
    n.d(t, "BoxGeometry", (function() {
        return _a
    }
    )),
    n.d(t, "BoxHelper", (function() {
        return uf
    }
    )),
    n.d(t, "BufferAttribute", (function() {
        return Ri
    }
    )),
    n.d(t, "BufferGeometry", (function() {
        return $i
    }
    )),
    n.d(t, "BufferGeometryLoader", (function() {
        return Oh
    }
    )),
    n.d(t, "ByteType", (function() {
        return ke
    }
    )),
    n.d(t, "Cache", (function() {
        return Fc
    }
    )),
    n.d(t, "Camera", (function() {
        return Pa
    }
    )),
    n.d(t, "CameraHelper", (function() {
        return of
    }
    )),
    n.d(t, "CanvasRenderer", (function() {
        return yd
    }
    )),
    n.d(t, "CanvasTexture", (function() {
        return ql
    }
    )),
    n.d(t, "CatmullRomCurve3", (function() {
        return nh
    }
    )),
    n.d(t, "CineonToneMapping", (function() {
        return le
    }
    )),
    n.d(t, "CircleBufferGeometry", (function() {
        return lc
    }
    )),
    n.d(t, "CircleGeometry", (function() {
        return sc
    }
    )),
    n.d(t, "ClampToEdgeWrapping", (function() {
        return be
    }
    )),
    n.d(t, "Clock", (function() {
        return ep
    }
    )),
    n.d(t, "ClosedSplineCurve3", (function() {
        return sd
    }
    )),
    n.d(t, "Color", (function() {
        return wi
    }
    )),
    n.d(t, "ColorKeyframeTrack", (function() {
        return Pc
    }
    )),
    n.d(t, "CompressedTexture", (function() {
        return Wl
    }
    )),
    n.d(t, "CompressedTextureLoader", (function() {
        return jc
    }
    )),
    n.d(t, "ConeBufferGeometry", (function() {
        return oc
    }
    )),
    n.d(t, "ConeGeometry", (function() {
        return ac
    }
    )),
    n.d(t, "CubeCamera", (function() {
        return La
    }
    )),
    n.d(t, "CubeGeometry", (function() {
        return _a
    }
    )),
    n.d(t, "CubeReflectionMapping", (function() {
        return pe
    }
    )),
    n.d(t, "CubeRefractionMapping", (function() {
        return fe
    }
    )),
    n.d(t, "CubeTexture", (function() {
        return no
    }
    )),
    n.d(t, "CubeTextureLoader", (function() {
        return qc
    }
    )),
    n.d(t, "CubeUVReflectionMapping", (function() {
        return ge
    }
    )),
    n.d(t, "CubeUVRefractionMapping", (function() {
        return ve
    }
    )),
    n.d(t, "CubicBezierCurve", (function() {
        return oh
    }
    )),
    n.d(t, "CubicBezierCurve3", (function() {
        return sh
    }
    )),
    n.d(t, "CubicInterpolant", (function() {
        return Sc
    }
    )),
    n.d(t, "CullFaceBack", (function() {
        return d
    }
    )),
    n.d(t, "CullFaceFront", (function() {
        return m
    }
    )),
    n.d(t, "CullFaceFrontBack", (function() {
        return g
    }
    )),
    n.d(t, "CullFaceNone", (function() {
        return f
    }
    )),
    n.d(t, "Curve", (function() {
        return Yc
    }
    )),
    n.d(t, "CurvePath", (function() {
        return dh
    }
    )),
    n.d(t, "CustomBlending", (function() {
        return R
    }
    )),
    n.d(t, "CustomToneMapping", (function() {
        return ce
    }
    )),
    n.d(t, "CylinderBufferGeometry", (function() {
        return ic
    }
    )),
    n.d(t, "CylinderGeometry", (function() {
        return rc
    }
    )),
    n.d(t, "Cylindrical", (function() {
        return Dp
    }
    )),
    n.d(t, "DataTexture", (function() {
        return ka
    }
    )),
    n.d(t, "DataTexture2DArray", (function() {
        return ro
    }
    )),
    n.d(t, "DataTexture3D", (function() {
        return io
    }
    )),
    n.d(t, "DataTextureLoader", (function() {
        return Uc
    }
    )),
    n.d(t, "DecrementStencilOp", (function() {
        return xn
    }
    )),
    n.d(t, "DecrementWrapStencilOp", (function() {
        return _n
    }
    )),
    n.d(t, "DefaultLoadingManager", (function() {
        return Bc
    }
    )),
    n.d(t, "DepthFormat", (function() {
        return Ze
    }
    )),
    n.d(t, "DepthStencilFormat", (function() {
        return $e
    }
    )),
    n.d(t, "DepthTexture", (function() {
        return Xl
    }
    )),
    n.d(t, "DirectionalLight", (function() {
        return Th
    }
    )),
    n.d(t, "DirectionalLightHelper", (function() {
        return nf
    }
    )),
    n.d(t, "DirectionalLightShadow", (function() {
        return Mh
    }
    )),
    n.d(t, "DiscreteInterpolant", (function() {
        return Mc
    }
    )),
    n.d(t, "DodecahedronBufferGeometry", (function() {
        return ou
    }
    )),
    n.d(t, "DodecahedronGeometry", (function() {
        return au
    }
    )),
    n.d(t, "DoubleSide", (function() {
        return S
    }
    )),
    n.d(t, "DstAlphaFactor", (function() {
        return j
    }
    )),
    n.d(t, "DstColorFactor", (function() {
        return W
    }
    )),
    n.d(t, "DynamicBufferAttribute", (function() {
        return Jf
    }
    )),
    n.d(t, "DynamicCopyUsage", (function() {
        return zn
    }
    )),
    n.d(t, "DynamicDrawUsage", (function() {
        return Dn
    }
    )),
    n.d(t, "DynamicReadUsage", (function() {
        return Fn
    }
    )),
    n.d(t, "EdgesGeometry", (function() {
        return nc
    }
    )),
    n.d(t, "EdgesHelper", (function() {
        return pd
    }
    )),
    n.d(t, "EllipseCurve", (function() {
        return Zc
    }
    )),
    n.d(t, "EqualDepth", (function() {
        return K
    }
    )),
    n.d(t, "EqualStencilFunc", (function() {
        return Tn
    }
    )),
    n.d(t, "EquirectangularReflectionMapping", (function() {
        return de
    }
    )),
    n.d(t, "EquirectangularRefractionMapping", (function() {
        return me
    }
    )),
    n.d(t, "Euler", (function() {
        return mr
    }
    )),
    n.d(t, "EventDispatcher", (function() {
        return Hn
    }
    )),
    n.d(t, "ExtrudeBufferGeometry", (function() {
        return Vu
    }
    )),
    n.d(t, "ExtrudeGeometry", (function() {
        return Hu
    }
    )),
    n.d(t, "Face3", (function() {
        return Mi
    }
    )),
    n.d(t, "Face4", (function() {
        return Ff
    }
    )),
    n.d(t, "FaceColors", (function() {
        return Gf
    }
    )),
    n.d(t, "FileLoader", (function() {
        return Hc
    }
    )),
    n.d(t, "FlatShading", (function() {
        return E
    }
    )),
    n.d(t, "Float32Attribute", (function() {
        return ad
    }
    )),
    n.d(t, "Float32BufferAttribute", (function() {
        return zi
    }
    )),
    n.d(t, "Float64Attribute", (function() {
        return od
    }
    )),
    n.d(t, "Float64BufferAttribute", (function() {
        return Gi
    }
    )),
    n.d(t, "FloatType", (function() {
        return Ne
    }
    )),
    n.d(t, "Fog", (function() {
        return Xs
    }
    )),
    n.d(t, "FogExp2", (function() {
        return qs
    }
    )),
    n.d(t, "Font", (function() {
        return Uh
    }
    )),
    n.d(t, "FontLoader", (function() {
        return qh
    }
    )),
    n.d(t, "FrontSide", (function() {
        return w
    }
    )),
    n.d(t, "Frustum", (function() {
        return Oa
    }
    )),
    n.d(t, "GammaEncoding", (function() {
        return on
    }
    )),
    n.d(t, "Geometry", (function() {
        return wa
    }
    )),
    n.d(t, "GeometryUtils", (function() {
        return vd
    }
    )),
    n.d(t, "GreaterDepth", (function() {
        return ee
    }
    )),
    n.d(t, "GreaterEqualDepth", (function() {
        return Q
    }
    )),
    n.d(t, "GreaterEqualStencilFunc", (function() {
        return Ln
    }
    )),
    n.d(t, "GreaterStencilFunc", (function() {
        return Pn
    }
    )),
    n.d(t, "GridHelper", (function() {
        return Jp
    }
    )),
    n.d(t, "Group", (function() {
        return Gs
    }
    )),
    n.d(t, "HalfFloatType", (function() {
        return Be
    }
    )),
    n.d(t, "HemisphereLight", (function() {
        return yh
    }
    )),
    n.d(t, "HemisphereLightHelper", (function() {
        return $p
    }
    )),
    n.d(t, "HemisphereLightProbe", (function() {
        return Zh
    }
    )),
    n.d(t, "IcosahedronBufferGeometry", (function() {
        return iu
    }
    )),
    n.d(t, "IcosahedronGeometry", (function() {
        return ru
    }
    )),
    n.d(t, "ImageBitmapLoader", (function() {
        return Vh
    }
    )),
    n.d(t, "ImageLoader", (function() {
        return Wc
    }
    )),
    n.d(t, "ImageUtils", (function() {
        return Zn
    }
    )),
    n.d(t, "ImmediateRenderObject", (function() {
        return zp
    }
    )),
    n.d(t, "IncrementStencilOp", (function() {
        return bn
    }
    )),
    n.d(t, "IncrementWrapStencilOp", (function() {
        return wn
    }
    )),
    n.d(t, "InstancedBufferAttribute", (function() {
        return Ih
    }
    )),
    n.d(t, "InstancedBufferGeometry", (function() {
        return Dh
    }
    )),
    n.d(t, "InstancedInterleavedBuffer", (function() {
        return Pp
    }
    )),
    n.d(t, "InstancedMesh", (function() {
        return Ml
    }
    )),
    n.d(t, "Int16Attribute", (function() {
        return td
    }
    )),
    n.d(t, "Int16BufferAttribute", (function() {
        return Oi
    }
    )),
    n.d(t, "Int32Attribute", (function() {
        return rd
    }
    )),
    n.d(t, "Int32BufferAttribute", (function() {
        return Ni
    }
    )),
    n.d(t, "Int8Attribute", (function() {
        return Kf
    }
    )),
    n.d(t, "Int8BufferAttribute", (function() {
        return ki
    }
    )),
    n.d(t, "IntType", (function() {
        return Oe
    }
    )),
    n.d(t, "InterleavedBuffer", (function() {
        return Ys
    }
    )),
    n.d(t, "InterleavedBufferAttribute", (function() {
        return Js
    }
    )),
    n.d(t, "Interpolant", (function() {
        return _c
    }
    )),
    n.d(t, "InterpolateDiscrete", (function() {
        return qt
    }
    )),
    n.d(t, "InterpolateLinear", (function() {
        return Xt
    }
    )),
    n.d(t, "InterpolateSmooth", (function() {
        return Yt
    }
    )),
    n.d(t, "InvertStencilOp", (function() {
        return Sn
    }
    )),
    n.d(t, "JSONLoader", (function() {
        return bd
    }
    )),
    n.d(t, "KeepStencilOp", (function() {
        return vn
    }
    )),
    n.d(t, "KeyframeTrack", (function() {
        return Tc
    }
    )),
    n.d(t, "LOD", (function() {
        return ml
    }
    )),
    n.d(t, "LatheBufferGeometry", (function() {
        return Ku
    }
    )),
    n.d(t, "LatheGeometry", (function() {
        return Ju
    }
    )),
    n.d(t, "Layers", (function() {
        return gr
    }
    )),
    n.d(t, "LensFlare", (function() {
        return wd
    }
    )),
    n.d(t, "LessDepth", (function() {
        return $
    }
    )),
    n.d(t, "LessEqualDepth", (function() {
        return J
    }
    )),
    n.d(t, "LessEqualStencilFunc", (function() {
        return An
    }
    )),
    n.d(t, "LessStencilFunc", (function() {
        return Mn
    }
    )),
    n.d(t, "Light", (function() {
        return vh
    }
    )),
    n.d(t, "LightProbe", (function() {
        return Lh
    }
    )),
    n.d(t, "LightShadow", (function() {
        return bh
    }
    )),
    n.d(t, "Line", (function() {
        return kl
    }
    )),
    n.d(t, "Line3", (function() {
        return Bp
    }
    )),
    n.d(t, "LineBasicMaterial", (function() {
        return Tl
    }
    )),
    n.d(t, "LineCurve", (function() {
        return lh
    }
    )),
    n.d(t, "LineCurve3", (function() {
        return uh
    }
    )),
    n.d(t, "LineDashedMaterial", (function() {
        return bc
    }
    )),
    n.d(t, "LineLoop", (function() {
        return Fl
    }
    )),
    n.d(t, "LinePieces", (function() {
        return Bf
    }
    )),
    n.d(t, "LineSegments", (function() {
        return Ol
    }
    )),
    n.d(t, "LineStrip", (function() {
        return Nf
    }
    )),
    n.d(t, "LinearEncoding", (function() {
        return rn
    }
    )),
    n.d(t, "LinearFilter", (function() {
        return Te
    }
    )),
    n.d(t, "LinearInterpolant", (function() {
        return Ec
    }
    )),
    n.d(t, "LinearMipMapLinearFilter", (function() {
        return Le
    }
    )),
    n.d(t, "LinearMipMapNearestFilter", (function() {
        return Pe
    }
    )),
    n.d(t, "LinearMipmapLinearFilter", (function() {
        return Ce
    }
    )),
    n.d(t, "LinearMipmapNearestFilter", (function() {
        return Ae
    }
    )),
    n.d(t, "LinearToneMapping", (function() {
        return oe
    }
    )),
    n.d(t, "Loader", (function() {
        return zc
    }
    )),
    n.d(t, "LoaderUtils", (function() {
        return kh
    }
    )),
    n.d(t, "LoadingManager", (function() {
        return Nc
    }
    )),
    n.d(t, "LogLuvEncoding", (function() {
        return ln
    }
    )),
    n.d(t, "LoopOnce", (function() {
        return jt
    }
    )),
    n.d(t, "LoopPingPong", (function() {
        return Wt
    }
    )),
    n.d(t, "LoopRepeat", (function() {
        return Ut
    }
    )),
    n.d(t, "LuminanceAlphaFormat", (function() {
        return Xe
    }
    )),
    n.d(t, "LuminanceFormat", (function() {
        return qe
    }
    )),
    n.d(t, "MOUSE", (function() {
        return h
    }
    )),
    n.d(t, "Material", (function() {
        return Ai
    }
    )),
    n.d(t, "MaterialLoader", (function() {
        return Rh
    }
    )),
    n.d(t, "Math", (function() {
        return qn
    }
    )),
    n.d(t, "MathUtils", (function() {
        return qn
    }
    )),
    n.d(t, "Matrix3", (function() {
        return Yn
    }
    )),
    n.d(t, "Matrix4", (function() {
        return pr
    }
    )),
    n.d(t, "MaxEquation", (function() {
        return F
    }
    )),
    n.d(t, "Mesh", (function() {
        return da
    }
    )),
    n.d(t, "MeshBasicMaterial", (function() {
        return Pi
    }
    )),
    n.d(t, "MeshDepthMaterial", (function() {
        return Ds
    }
    )),
    n.d(t, "MeshDistanceMaterial", (function() {
        return Is
    }
    )),
    n.d(t, "MeshFaceMaterial", (function() {
        return Vf
    }
    )),
    n.d(t, "MeshLambertMaterial", (function() {
        return vc
    }
    )),
    n.d(t, "MeshMatcapMaterial", (function() {
        return yc
    }
    )),
    n.d(t, "MeshNormalMaterial", (function() {
        return gc
    }
    )),
    n.d(t, "MeshPhongMaterial", (function() {
        return dc
    }
    )),
    n.d(t, "MeshPhysicalMaterial", (function() {
        return fc
    }
    )),
    n.d(t, "MeshStandardMaterial", (function() {
        return pc
    }
    )),
    n.d(t, "MeshToonMaterial", (function() {
        return mc
    }
    )),
    n.d(t, "MinEquation", (function() {
        return O
    }
    )),
    n.d(t, "MirroredRepeatWrapping", (function() {
        return xe
    }
    )),
    n.d(t, "MixOperation", (function() {
        return re
    }
    )),
    n.d(t, "MultiMaterial", (function() {
        return jf
    }
    )),
    n.d(t, "MultiplyBlending", (function() {
        return L
    }
    )),
    n.d(t, "MultiplyOperation", (function() {
        return ne
    }
    )),
    n.d(t, "NearestFilter", (function() {
        return we
    }
    )),
    n.d(t, "NearestMipMapLinearFilter", (function() {
        return Me
    }
    )),
    n.d(t, "NearestMipMapNearestFilter", (function() {
        return Se
    }
    )),
    n.d(t, "NearestMipmapLinearFilter", (function() {
        return Ee
    }
    )),
    n.d(t, "NearestMipmapNearestFilter", (function() {
        return _e
    }
    )),
    n.d(t, "NeverDepth", (function() {
        return Y
    }
    )),
    n.d(t, "NeverStencilFunc", (function() {
        return En
    }
    )),
    n.d(t, "NoBlending", (function() {
        return T
    }
    )),
    n.d(t, "NoColors", (function() {
        return zf
    }
    )),
    n.d(t, "NoToneMapping", (function() {
        return ae
    }
    )),
    n.d(t, "NormalAnimationBlendMode", (function() {
        return Kt
    }
    )),
    n.d(t, "NormalBlending", (function() {
        return A
    }
    )),
    n.d(t, "NotEqualDepth", (function() {
        return te
    }
    )),
    n.d(t, "NotEqualStencilFunc", (function() {
        return Cn
    }
    )),
    n.d(t, "NumberKeyframeTrack", (function() {
        return Cc
    }
    )),
    n.d(t, "Object3D", (function() {
        return Lr
    }
    )),
    n.d(t, "ObjectLoader", (function() {
        return Nh
    }
    )),
    n.d(t, "ObjectSpaceNormalMap", (function() {
        return mn
    }
    )),
    n.d(t, "OctahedronBufferGeometry", (function() {
        return nu
    }
    )),
    n.d(t, "OctahedronGeometry", (function() {
        return tu
    }
    )),
    n.d(t, "OneFactor", (function() {
        return B
    }
    )),
    n.d(t, "OneMinusDstAlphaFactor", (function() {
        return U
    }
    )),
    n.d(t, "OneMinusDstColorFactor", (function() {
        return q
    }
    )),
    n.d(t, "OneMinusSrcAlphaFactor", (function() {
        return V
    }
    )),
    n.d(t, "OneMinusSrcColorFactor", (function() {
        return G
    }
    )),
    n.d(t, "OrthographicCamera", (function() {
        return Eh
    }
    )),
    n.d(t, "PCFShadowMap", (function() {
        return y
    }
    )),
    n.d(t, "PCFSoftShadowMap", (function() {
        return b
    }
    )),
    n.d(t, "PMREMGenerator", (function() {
        return Lf
    }
    )),
    n.d(t, "ParametricBufferGeometry", (function() {
        return $l
    }
    )),
    n.d(t, "ParametricGeometry", (function() {
        return Zl
    }
    )),
    n.d(t, "Particle", (function() {
        return Wf
    }
    )),
    n.d(t, "ParticleBasicMaterial", (function() {
        return Yf
    }
    )),
    n.d(t, "ParticleSystem", (function() {
        return qf
    }
    )),
    n.d(t, "ParticleSystemMaterial", (function() {
        return Zf
    }
    )),
    n.d(t, "Path", (function() {
        return mh
    }
    )),
    n.d(t, "PerspectiveCamera", (function() {
        return Ca
    }
    )),
    n.d(t, "Plane", (function() {
        return oi
    }
    )),
    n.d(t, "PlaneBufferGeometry", (function() {
        return Ga
    }
    )),
    n.d(t, "PlaneGeometry", (function() {
        return za
    }
    )),
    n.d(t, "PlaneHelper", (function() {
        return hf
    }
    )),
    n.d(t, "PointCloud", (function() {
        return Uf
    }
    )),
    n.d(t, "PointCloudMaterial", (function() {
        return Xf
    }
    )),
    n.d(t, "PointLight", (function() {
        return Sh
    }
    )),
    n.d(t, "PointLightHelper", (function() {
        return qp
    }
    )),
    n.d(t, "Points", (function() {
        return Vl
    }
    )),
    n.d(t, "PointsMaterial", (function() {
        return Nl
    }
    )),
    n.d(t, "PolarGridHelper", (function() {
        return Kp
    }
    )),
    n.d(t, "PolyhedronBufferGeometry", (function() {
        return Kl
    }
    )),
    n.d(t, "PolyhedronGeometry", (function() {
        return Jl
    }
    )),
    n.d(t, "PositionalAudio", (function() {
        return hp
    }
    )),
    n.d(t, "PropertyBinding", (function() {
        return Sp
    }
    )),
    n.d(t, "PropertyMixer", (function() {
        return fp
    }
    )),
    n.d(t, "QuadraticBezierCurve", (function() {
        return ch
    }
    )),
    n.d(t, "QuadraticBezierCurve3", (function() {
        return hh
    }
    )),
    n.d(t, "Quaternion", (function() {
        return tr
    }
    )),
    n.d(t, "QuaternionKeyframeTrack", (function() {
        return Rc
    }
    )),
    n.d(t, "QuaternionLinearInterpolant", (function() {
        return Lc
    }
    )),
    n.d(t, "REVISION", (function() {
        return c
    }
    )),
    n.d(t, "RGBADepthPacking", (function() {
        return fn
    }
    )),
    n.d(t, "RGBAFormat", (function() {
        return We
    }
    )),
    n.d(t, "RGBAIntegerFormat", (function() {
        return nt
    }
    )),
    n.d(t, "RGBA_ASTC_10x10_Format", (function() {
        return Mt
    }
    )),
    n.d(t, "RGBA_ASTC_10x5_Format", (function() {
        return _t
    }
    )),
    n.d(t, "RGBA_ASTC_10x6_Format", (function() {
        return St
    }
    )),
    n.d(t, "RGBA_ASTC_10x8_Format", (function() {
        return Et
    }
    )),
    n.d(t, "RGBA_ASTC_12x10_Format", (function() {
        return Tt
    }
    )),
    n.d(t, "RGBA_ASTC_12x12_Format", (function() {
        return At
    }
    )),
    n.d(t, "RGBA_ASTC_4x4_Format", (function() {
        return dt
    }
    )),
    n.d(t, "RGBA_ASTC_5x4_Format", (function() {
        return mt
    }
    )),
    n.d(t, "RGBA_ASTC_5x5_Format", (function() {
        return gt
    }
    )),
    n.d(t, "RGBA_ASTC_6x5_Format", (function() {
        return vt
    }
    )),
    n.d(t, "RGBA_ASTC_6x6_Format", (function() {
        return yt
    }
    )),
    n.d(t, "RGBA_ASTC_8x5_Format", (function() {
        return bt
    }
    )),
    n.d(t, "RGBA_ASTC_8x6_Format", (function() {
        return xt
    }
    )),
    n.d(t, "RGBA_ASTC_8x8_Format", (function() {
        return wt
    }
    )),
    n.d(t, "RGBA_BPTC_Format", (function() {
        return Pt
    }
    )),
    n.d(t, "RGBA_ETC2_EAC_Format", (function() {
        return ft
    }
    )),
    n.d(t, "RGBA_PVRTC_2BPPV1_Format", (function() {
        return ct
    }
    )),
    n.d(t, "RGBA_PVRTC_4BPPV1_Format", (function() {
        return ut
    }
    )),
    n.d(t, "RGBA_S3TC_DXT1_Format", (function() {
        return it
    }
    )),
    n.d(t, "RGBA_S3TC_DXT3_Format", (function() {
        return at
    }
    )),
    n.d(t, "RGBA_S3TC_DXT5_Format", (function() {
        return ot
    }
    )),
    n.d(t, "RGBDEncoding", (function() {
        return hn
    }
    )),
    n.d(t, "RGBEEncoding", (function() {
        return sn
    }
    )),
    n.d(t, "RGBEFormat", (function() {
        return Ye
    }
    )),
    n.d(t, "RGBFormat", (function() {
        return Ue
    }
    )),
    n.d(t, "RGBIntegerFormat", (function() {
        return tt
    }
    )),
    n.d(t, "RGBM16Encoding", (function() {
        return cn
    }
    )),
    n.d(t, "RGBM7Encoding", (function() {
        return un
    }
    )),
    n.d(t, "RGB_ETC1_Format", (function() {
        return ht
    }
    )),
    n.d(t, "RGB_ETC2_Format", (function() {
        return pt
    }
    )),
    n.d(t, "RGB_PVRTC_2BPPV1_Format", (function() {
        return lt
    }
    )),
    n.d(t, "RGB_PVRTC_4BPPV1_Format", (function() {
        return st
    }
    )),
    n.d(t, "RGB_S3TC_DXT1_Format", (function() {
        return rt
    }
    )),
    n.d(t, "RGFormat", (function() {
        return Qe
    }
    )),
    n.d(t, "RGIntegerFormat", (function() {
        return et
    }
    )),
    n.d(t, "RawShaderMaterial", (function() {
        return hc
    }
    )),
    n.d(t, "Ray", (function() {
        return ni
    }
    )),
    n.d(t, "Raycaster", (function() {
        return Cp
    }
    )),
    n.d(t, "RectAreaLight", (function() {
        return Ph
    }
    )),
    n.d(t, "RedFormat", (function() {
        return Je
    }
    )),
    n.d(t, "RedIntegerFormat", (function() {
        return Ke
    }
    )),
    n.d(t, "ReinhardToneMapping", (function() {
        return se
    }
    )),
    n.d(t, "RepeatWrapping", (function() {
        return ye
    }
    )),
    n.d(t, "ReplaceStencilOp", (function() {
        return yn
    }
    )),
    n.d(t, "ReverseSubtractEquation", (function() {
        return I
    }
    )),
    n.d(t, "RingBufferGeometry", (function() {
        return $u
    }
    )),
    n.d(t, "RingGeometry", (function() {
        return Zu
    }
    )),
    n.d(t, "SRGB8_ALPHA8_ASTC_10x10_Format", (function() {
        return Gt
    }
    )),
    n.d(t, "SRGB8_ALPHA8_ASTC_10x5_Format", (function() {
        return Nt
    }
    )),
    n.d(t, "SRGB8_ALPHA8_ASTC_10x6_Format", (function() {
        return Bt
    }
    )),
    n.d(t, "SRGB8_ALPHA8_ASTC_10x8_Format", (function() {
        return zt
    }
    )),
    n.d(t, "SRGB8_ALPHA8_ASTC_12x10_Format", (function() {
        return Ht
    }
    )),
    n.d(t, "SRGB8_ALPHA8_ASTC_12x12_Format", (function() {
        return Vt
    }
    )),
    n.d(t, "SRGB8_ALPHA8_ASTC_4x4_Format", (function() {
        return Ct
    }
    )),
    n.d(t, "SRGB8_ALPHA8_ASTC_5x4_Format", (function() {
        return Lt
    }
    )),
    n.d(t, "SRGB8_ALPHA8_ASTC_5x5_Format", (function() {
        return Rt
    }
    )),
    n.d(t, "SRGB8_ALPHA8_ASTC_6x5_Format", (function() {
        return kt
    }
    )),
    n.d(t, "SRGB8_ALPHA8_ASTC_6x6_Format", (function() {
        return Dt
    }
    )),
    n.d(t, "SRGB8_ALPHA8_ASTC_8x5_Format", (function() {
        return It
    }
    )),
    n.d(t, "SRGB8_ALPHA8_ASTC_8x6_Format", (function() {
        return Ot
    }
    )),
    n.d(t, "SRGB8_ALPHA8_ASTC_8x8_Format", (function() {
        return Ft
    }
    )),
    n.d(t, "Scene", (function() {
        return Rr
    }
    )),
    n.d(t, "SceneUtils", (function() {
        return xd
    }
    )),
    n.d(t, "ShaderChunk", (function() {
        return Ha
    }
    )),
    n.d(t, "ShaderLib", (function() {
        return Va
    }
    )),
    n.d(t, "ShaderMaterial", (function() {
        return Aa
    }
    )),
    n.d(t, "ShadowMaterial", (function() {
        return cc
    }
    )),
    n.d(t, "Shape", (function() {
        return gh
    }
    )),
    n.d(t, "ShapeBufferGeometry", (function() {
        return ec
    }
    )),
    n.d(t, "ShapeGeometry", (function() {
        return Qu
    }
    )),
    n.d(t, "ShapePath", (function() {
        return jh
    }
    )),
    n.d(t, "ShapeUtils", (function() {
        return Bu
    }
    )),
    n.d(t, "ShortType", (function() {
        return De
    }
    )),
    n.d(t, "Skeleton", (function() {
        return bl
    }
    )),
    n.d(t, "SkeletonHelper", (function() {
        return Wp
    }
    )),
    n.d(t, "SkinnedMesh", (function() {
        return gl
    }
    )),
    n.d(t, "SmoothShading", (function() {
        return M
    }
    )),
    n.d(t, "Sphere", (function() {
        return Yr
    }
    )),
    n.d(t, "SphereBufferGeometry", (function() {
        return Yu
    }
    )),
    n.d(t, "SphereGeometry", (function() {
        return Xu
    }
    )),
    n.d(t, "Spherical", (function() {
        return kp
    }
    )),
    n.d(t, "SphericalHarmonics3", (function() {
        return Ch
    }
    )),
    n.d(t, "Spline", (function() {
        return ud
    }
    )),
    n.d(t, "SplineCurve", (function() {
        return ph
    }
    )),
    n.d(t, "SplineCurve3", (function() {
        return ld
    }
    )),
    n.d(t, "SpotLight", (function() {
        return wh
    }
    )),
    n.d(t, "SpotLightHelper", (function() {
        return Hp
    }
    )),
    n.d(t, "SpotLightShadow", (function() {
        return xh
    }
    )),
    n.d(t, "Sprite", (function() {
        return hl
    }
    )),
    n.d(t, "SpriteMaterial", (function() {
        return Ks
    }
    )),
    n.d(t, "SrcAlphaFactor", (function() {
        return H
    }
    )),
    n.d(t, "SrcAlphaSaturateFactor", (function() {
        return X
    }
    )),
    n.d(t, "SrcColorFactor", (function() {
        return z
    }
    )),
    n.d(t, "StaticCopyUsage", (function() {
        return Bn
    }
    )),
    n.d(t, "StaticDrawUsage", (function() {
        return kn
    }
    )),
    n.d(t, "StaticReadUsage", (function() {
        return On
    }
    )),
    n.d(t, "StereoCamera", (function() {
        return Qh
    }
    )),
    n.d(t, "StreamCopyUsage", (function() {
        return Gn
    }
    )),
    n.d(t, "StreamDrawUsage", (function() {
        return In
    }
    )),
    n.d(t, "StreamReadUsage", (function() {
        return Nn
    }
    )),
    n.d(t, "StringKeyframeTrack", (function() {
        return kc
    }
    )),
    n.d(t, "SubtractEquation", (function() {
        return D
    }
    )),
    n.d(t, "SubtractiveBlending", (function() {
        return C
    }
    )),
    n.d(t, "TOUCH", (function() {
        return p
    }
    )),
    n.d(t, "TangentSpaceNormalMap", (function() {
        return dn
    }
    )),
    n.d(t, "TetrahedronBufferGeometry", (function() {
        return eu
    }
    )),
    n.d(t, "TetrahedronGeometry", (function() {
        return Ql
    }
    )),
    n.d(t, "TextBufferGeometry", (function() {
        return qu
    }
    )),
    n.d(t, "TextGeometry", (function() {
        return Wu
    }
    )),
    n.d(t, "Texture", (function() {
        return Jn
    }
    )),
    n.d(t, "TextureLoader", (function() {
        return Xc
    }
    )),
    n.d(t, "TorusBufferGeometry", (function() {
        return pu
    }
    )),
    n.d(t, "TorusGeometry", (function() {
        return hu
    }
    )),
    n.d(t, "TorusKnotBufferGeometry", (function() {
        return cu
    }
    )),
    n.d(t, "TorusKnotGeometry", (function() {
        return uu
    }
    )),
    n.d(t, "Triangle", (function() {
        return vi
    }
    )),
    n.d(t, "TriangleFanDrawMode", (function() {
        return nn
    }
    )),
    n.d(t, "TriangleStripDrawMode", (function() {
        return tn
    }
    )),
    n.d(t, "TrianglesDrawMode", (function() {
        return en
    }
    )),
    n.d(t, "TubeBufferGeometry", (function() {
        return lu
    }
    )),
    n.d(t, "TubeGeometry", (function() {
        return su
    }
    )),
    n.d(t, "UVMapping", (function() {
        return he
    }
    )),
    n.d(t, "Uint16Attribute", (function() {
        return nd
    }
    )),
    n.d(t, "Uint16BufferAttribute", (function() {
        return Fi
    }
    )),
    n.d(t, "Uint32Attribute", (function() {
        return id
    }
    )),
    n.d(t, "Uint32BufferAttribute", (function() {
        return Bi
    }
    )),
    n.d(t, "Uint8Attribute", (function() {
        return Qf
    }
    )),
    n.d(t, "Uint8BufferAttribute", (function() {
        return Di
    }
    )),
    n.d(t, "Uint8ClampedAttribute", (function() {
        return ed
    }
    )),
    n.d(t, "Uint8ClampedBufferAttribute", (function() {
        return Ii
    }
    )),
    n.d(t, "Uniform", (function() {
        return Ap
    }
    )),
    n.d(t, "UniformsLib", (function() {
        return Fa
    }
    )),
    n.d(t, "UniformsUtils", (function() {
        return Ta
    }
    )),
    n.d(t, "UnsignedByteType", (function() {
        return Re
    }
    )),
    n.d(t, "UnsignedInt248Type", (function() {
        return Ve
    }
    )),
    n.d(t, "UnsignedIntType", (function() {
        return Fe
    }
    )),
    n.d(t, "UnsignedShort4444Type", (function() {
        return ze
    }
    )),
    n.d(t, "UnsignedShort5551Type", (function() {
        return Ge
    }
    )),
    n.d(t, "UnsignedShort565Type", (function() {
        return He
    }
    )),
    n.d(t, "UnsignedShortType", (function() {
        return Ie
    }
    )),
    n.d(t, "VSMShadowMap", (function() {
        return x
    }
    )),
    n.d(t, "Vector2", (function() {
        return Xn
    }
    )),
    n.d(t, "Vector3", (function() {
        return ir
    }
    )),
    n.d(t, "Vector4", (function() {
        return Kn
    }
    )),
    n.d(t, "VectorKeyframeTrack", (function() {
        return Dc
    }
    )),
    n.d(t, "Vertex", (function() {
        return $f
    }
    )),
    n.d(t, "VertexColors", (function() {
        return Hf
    }
    )),
    n.d(t, "VideoTexture", (function() {
        return Ul
    }
    )),
    n.d(t, "WebGL1Renderer", (function() {
        return Ws
    }
    )),
    n.d(t, "WebGLCubeRenderTarget", (function() {
        return Ra
    }
    )),
    n.d(t, "WebGLMultisampleRenderTarget", (function() {
        return er
    }
    )),
    n.d(t, "WebGLRenderTarget", (function() {
        return Qn
    }
    )),
    n.d(t, "WebGLRenderTargetCube", (function() {
        return gd
    }
    )),
    n.d(t, "WebGLRenderer", (function() {
        return Us
    }
    )),
    n.d(t, "WebGLUtils", (function() {
        return Bs
    }
    )),
    n.d(t, "WireframeGeometry", (function() {
        return Yl
    }
    )),
    n.d(t, "WireframeHelper", (function() {
        return fd
    }
    )),
    n.d(t, "WrapAroundEnding", (function() {
        return Jt
    }
    )),
    n.d(t, "XHRLoader", (function() {
        return dd
    }
    )),
    n.d(t, "ZeroCurvatureEnding", (function() {
        return Zt
    }
    )),
    n.d(t, "ZeroFactor", (function() {
        return N
    }
    )),
    n.d(t, "ZeroSlopeEnding", (function() {
        return $t
    }
    )),
    n.d(t, "ZeroStencilOp", (function() {
        return gn
    }
    )),
    n.d(t, "sRGBEncoding", (function() {
        return an
    }
    ));
    var r, i = n(4), a = n(5), o = n(17), s = n(3), l = n(7), u = n(6);
    void 0 === Number.EPSILON && (Number.EPSILON = Math.pow(2, -52)),
    void 0 === Number.isInteger && (Number.isInteger = function(e) {
        return "number" === typeof e && isFinite(e) && Math.floor(e) === e
    }
    ),
    void 0 === Math.sign && (Math.sign = function(e) {
        return e < 0 ? -1 : e > 0 ? 1 : +e
    }
    ),
    "name"in Function.prototype === !1 && Object.defineProperty(Function.prototype, "name", {
        get: function() {
            return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]
        }
    }),
    void 0 === Object.assign && (Object.assign = function(e) {
        if (void 0 === e || null === e)
            throw new TypeError("Cannot convert undefined or null to object");
        for (var t = Object(e), n = 1; n < arguments.length; n++) {
            var r = arguments[n];
            if (void 0 !== r && null !== r)
                for (var i in r)
                    Object.prototype.hasOwnProperty.call(r, i) && (t[i] = r[i])
        }
        return t
    }
    );
    var c = "119"
      , h = {
        LEFT: 0,
        MIDDLE: 1,
        RIGHT: 2,
        ROTATE: 0,
        DOLLY: 1,
        PAN: 2
    }
      , p = {
        ROTATE: 0,
        PAN: 1,
        DOLLY_PAN: 2,
        DOLLY_ROTATE: 3
    }
      , f = 0
      , d = 1
      , m = 2
      , g = 3
      , v = 0
      , y = 1
      , b = 2
      , x = 3
      , w = 0
      , _ = 1
      , S = 2
      , E = 1
      , M = 2
      , T = 0
      , A = 1
      , P = 2
      , C = 3
      , L = 4
      , R = 5
      , k = 100
      , D = 101
      , I = 102
      , O = 103
      , F = 104
      , N = 200
      , B = 201
      , z = 202
      , G = 203
      , H = 204
      , V = 205
      , j = 206
      , U = 207
      , W = 208
      , q = 209
      , X = 210
      , Y = 0
      , Z = 1
      , $ = 2
      , J = 3
      , K = 4
      , Q = 5
      , ee = 6
      , te = 7
      , ne = 0
      , re = 1
      , ie = 2
      , ae = 0
      , oe = 1
      , se = 2
      , le = 3
      , ue = 4
      , ce = 5
      , he = 300
      , pe = 301
      , fe = 302
      , de = 303
      , me = 304
      , ge = 306
      , ve = 307
      , ye = 1e3
      , be = 1001
      , xe = 1002
      , we = 1003
      , _e = 1004
      , Se = 1004
      , Ee = 1005
      , Me = 1005
      , Te = 1006
      , Ae = 1007
      , Pe = 1007
      , Ce = 1008
      , Le = 1008
      , Re = 1009
      , ke = 1010
      , De = 1011
      , Ie = 1012
      , Oe = 1013
      , Fe = 1014
      , Ne = 1015
      , Be = 1016
      , ze = 1017
      , Ge = 1018
      , He = 1019
      , Ve = 1020
      , je = 1021
      , Ue = 1022
      , We = 1023
      , qe = 1024
      , Xe = 1025
      , Ye = We
      , Ze = 1026
      , $e = 1027
      , Je = 1028
      , Ke = 1029
      , Qe = 1030
      , et = 1031
      , tt = 1032
      , nt = 1033
      , rt = 33776
      , it = 33777
      , at = 33778
      , ot = 33779
      , st = 35840
      , lt = 35841
      , ut = 35842
      , ct = 35843
      , ht = 36196
      , pt = 37492
      , ft = 37496
      , dt = 37808
      , mt = 37809
      , gt = 37810
      , vt = 37811
      , yt = 37812
      , bt = 37813
      , xt = 37814
      , wt = 37815
      , _t = 37816
      , St = 37817
      , Et = 37818
      , Mt = 37819
      , Tt = 37820
      , At = 37821
      , Pt = 36492
      , Ct = 37840
      , Lt = 37841
      , Rt = 37842
      , kt = 37843
      , Dt = 37844
      , It = 37845
      , Ot = 37846
      , Ft = 37847
      , Nt = 37848
      , Bt = 37849
      , zt = 37850
      , Gt = 37851
      , Ht = 37852
      , Vt = 37853
      , jt = 2200
      , Ut = 2201
      , Wt = 2202
      , qt = 2300
      , Xt = 2301
      , Yt = 2302
      , Zt = 2400
      , $t = 2401
      , Jt = 2402
      , Kt = 2500
      , Qt = 2501
      , en = 0
      , tn = 1
      , nn = 2
      , rn = 3e3
      , an = 3001
      , on = 3007
      , sn = 3002
      , ln = 3003
      , un = 3004
      , cn = 3005
      , hn = 3006
      , pn = 3200
      , fn = 3201
      , dn = 0
      , mn = 1
      , gn = 0
      , vn = 7680
      , yn = 7681
      , bn = 7682
      , xn = 7683
      , wn = 34055
      , _n = 34056
      , Sn = 5386
      , En = 512
      , Mn = 513
      , Tn = 514
      , An = 515
      , Pn = 516
      , Cn = 517
      , Ln = 518
      , Rn = 519
      , kn = 35044
      , Dn = 35048
      , In = 35040
      , On = 35045
      , Fn = 35049
      , Nn = 35041
      , Bn = 35046
      , zn = 35050
      , Gn = 35042;
    function Hn() {}
    Object.assign(Hn.prototype, {
        addEventListener: function(e, t) {
            void 0 === this._listeners && (this._listeners = {});
            var n = this._listeners;
            void 0 === n[e] && (n[e] = []),
            -1 === n[e].indexOf(t) && n[e].push(t)
        },
        hasEventListener: function(e, t) {
            if (void 0 === this._listeners)
                return !1;
            var n = this._listeners;
            return void 0 !== n[e] && -1 !== n[e].indexOf(t)
        },
        removeEventListener: function(e, t) {
            if (void 0 !== this._listeners) {
                var n = this._listeners[e];
                if (void 0 !== n) {
                    var r = n.indexOf(t);
                    -1 !== r && n.splice(r, 1)
                }
            }
        },
        dispatchEvent: function(e) {
            if (void 0 !== this._listeners) {
                var t = this._listeners[e.type];
                if (void 0 !== t) {
                    e.target = this;
                    for (var n = t.slice(0), r = 0, i = n.length; r < i; r++)
                        n[r].call(this, e)
                }
            }
        }
    });
    for (var Vn = [], jn = 0; jn < 256; jn++)
        Vn[jn] = (jn < 16 ? "0" : "") + jn.toString(16);
    var Un, Wn = 1234567, qn = {
        DEG2RAD: Math.PI / 180,
        RAD2DEG: 180 / Math.PI,
        generateUUID: function() {
            var e = 4294967295 * Math.random() | 0
              , t = 4294967295 * Math.random() | 0
              , n = 4294967295 * Math.random() | 0
              , r = 4294967295 * Math.random() | 0;
            return (Vn[255 & e] + Vn[e >> 8 & 255] + Vn[e >> 16 & 255] + Vn[e >> 24 & 255] + "-" + Vn[255 & t] + Vn[t >> 8 & 255] + "-" + Vn[t >> 16 & 15 | 64] + Vn[t >> 24 & 255] + "-" + Vn[63 & n | 128] + Vn[n >> 8 & 255] + "-" + Vn[n >> 16 & 255] + Vn[n >> 24 & 255] + Vn[255 & r] + Vn[r >> 8 & 255] + Vn[r >> 16 & 255] + Vn[r >> 24 & 255]).toUpperCase()
        },
        clamp: function(e, t, n) {
            return Math.max(t, Math.min(n, e))
        },
        euclideanModulo: function(e, t) {
            return (e % t + t) % t
        },
        mapLinear: function(e, t, n, r, i) {
            return r + (e - t) * (i - r) / (n - t)
        },
        lerp: function(e, t, n) {
            return (1 - n) * e + n * t
        },
        smoothstep: function(e, t, n) {
            return e <= t ? 0 : e >= n ? 1 : (e = (e - t) / (n - t)) * e * (3 - 2 * e)
        },
        smootherstep: function(e, t, n) {
            return e <= t ? 0 : e >= n ? 1 : (e = (e - t) / (n - t)) * e * e * (e * (6 * e - 15) + 10)
        },
        randInt: function(e, t) {
            return e + Math.floor(Math.random() * (t - e + 1))
        },
        randFloat: function(e, t) {
            return e + Math.random() * (t - e)
        },
        randFloatSpread: function(e) {
            return e * (.5 - Math.random())
        },
        seededRandom: function(e) {
            return void 0 !== e && (Wn = e % 2147483647),
            ((Wn = 16807 * Wn % 2147483647) - 1) / 2147483646
        },
        degToRad: function(e) {
            return e * qn.DEG2RAD
        },
        radToDeg: function(e) {
            return e * qn.RAD2DEG
        },
        isPowerOfTwo: function(e) {
            return 0 === (e & e - 1) && 0 !== e
        },
        ceilPowerOfTwo: function(e) {
            return Math.pow(2, Math.ceil(Math.log(e) / Math.LN2))
        },
        floorPowerOfTwo: function(e) {
            return Math.pow(2, Math.floor(Math.log(e) / Math.LN2))
        },
        setQuaternionFromProperEuler: function(e, t, n, r, i) {
            var a = Math.cos
              , o = Math.sin
              , s = a(n / 2)
              , l = o(n / 2)
              , u = a((t + r) / 2)
              , c = o((t + r) / 2)
              , h = a((t - r) / 2)
              , p = o((t - r) / 2)
              , f = a((r - t) / 2)
              , d = o((r - t) / 2);
            switch (i) {
            case "XYX":
                e.set(s * c, l * h, l * p, s * u);
                break;
            case "YZY":
                e.set(l * p, s * c, l * h, s * u);
                break;
            case "ZXZ":
                e.set(l * h, l * p, s * c, s * u);
                break;
            case "XZX":
                e.set(s * c, l * d, l * f, s * u);
                break;
            case "YXY":
                e.set(l * f, s * c, l * d, s * u);
                break;
            case "ZYZ":
                e.set(l * d, l * f, s * c, s * u);
                break;
            default:
                console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: " + i)
            }
        }
    };
    function Xn() {
        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0
          , t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
        this.x = e,
        this.y = t
    }
    function Yn() {
        this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1],
        arguments.length > 0 && console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")
    }
    Object.defineProperties(Xn.prototype, {
        width: {
            get: function() {
                return this.x
            },
            set: function(e) {
                this.x = e
            }
        },
        height: {
            get: function() {
                return this.y
            },
            set: function(e) {
                this.y = e
            }
        }
    }),
    Object.assign(Xn.prototype, {
        isVector2: !0,
        set: function(e, t) {
            return this.x = e,
            this.y = t,
            this
        },
        setScalar: function(e) {
            return this.x = e,
            this.y = e,
            this
        },
        setX: function(e) {
            return this.x = e,
            this
        },
        setY: function(e) {
            return this.y = e,
            this
        },
        setComponent: function(e, t) {
            switch (e) {
            case 0:
                this.x = t;
                break;
            case 1:
                this.y = t;
                break;
            default:
                throw new Error("index is out of range: " + e)
            }
            return this
        },
        getComponent: function(e) {
            switch (e) {
            case 0:
                return this.x;
            case 1:
                return this.y;
            default:
                throw new Error("index is out of range: " + e)
            }
        },
        clone: function() {
            return new this.constructor(this.x,this.y)
        },
        copy: function(e) {
            return this.x = e.x,
            this.y = e.y,
            this
        },
        add: function(e, t) {
            return void 0 !== t ? (console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),
            this.addVectors(e, t)) : (this.x += e.x,
            this.y += e.y,
            this)
        },
        addScalar: function(e) {
            return this.x += e,
            this.y += e,
            this
        },
        addVectors: function(e, t) {
            return this.x = e.x + t.x,
            this.y = e.y + t.y,
            this
        },
        addScaledVector: function(e, t) {
            return this.x += e.x * t,
            this.y += e.y * t,
            this
        },
        sub: function(e, t) {
            return void 0 !== t ? (console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
            this.subVectors(e, t)) : (this.x -= e.x,
            this.y -= e.y,
            this)
        },
        subScalar: function(e) {
            return this.x -= e,
            this.y -= e,
            this
        },
        subVectors: function(e, t) {
            return this.x = e.x - t.x,
            this.y = e.y - t.y,
            this
        },
        multiply: function(e) {
            return this.x *= e.x,
            this.y *= e.y,
            this
        },
        multiplyScalar: function(e) {
            return this.x *= e,
            this.y *= e,
            this
        },
        divide: function(e) {
            return this.x /= e.x,
            this.y /= e.y,
            this
        },
        divideScalar: function(e) {
            return this.multiplyScalar(1 / e)
        },
        applyMatrix3: function(e) {
            var t = this.x
              , n = this.y
              , r = e.elements;
            return this.x = r[0] * t + r[3] * n + r[6],
            this.y = r[1] * t + r[4] * n + r[7],
            this
        },
        min: function(e) {
            return this.x = Math.min(this.x, e.x),
            this.y = Math.min(this.y, e.y),
            this
        },
        max: function(e) {
            return this.x = Math.max(this.x, e.x),
            this.y = Math.max(this.y, e.y),
            this
        },
        clamp: function(e, t) {
            return this.x = Math.max(e.x, Math.min(t.x, this.x)),
            this.y = Math.max(e.y, Math.min(t.y, this.y)),
            this
        },
        clampScalar: function(e, t) {
            return this.x = Math.max(e, Math.min(t, this.x)),
            this.y = Math.max(e, Math.min(t, this.y)),
            this
        },
        clampLength: function(e, t) {
            var n = this.length();
            return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)))
        },
        floor: function() {
            return this.x = Math.floor(this.x),
            this.y = Math.floor(this.y),
            this
        },
        ceil: function() {
            return this.x = Math.ceil(this.x),
            this.y = Math.ceil(this.y),
            this
        },
        round: function() {
            return this.x = Math.round(this.x),
            this.y = Math.round(this.y),
            this
        },
        roundToZero: function() {
            return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
            this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
            this
        },
        negate: function() {
            return this.x = -this.x,
            this.y = -this.y,
            this
        },
        dot: function(e) {
            return this.x * e.x + this.y * e.y
        },
        cross: function(e) {
            return this.x * e.y - this.y * e.x
        },
        lengthSq: function() {
            return this.x * this.x + this.y * this.y
        },
        length: function() {
            return Math.sqrt(this.x * this.x + this.y * this.y)
        },
        manhattanLength: function() {
            return Math.abs(this.x) + Math.abs(this.y)
        },
        normalize: function() {
            return this.divideScalar(this.length() || 1)
        },
        angle: function() {
            var e = Math.atan2(-this.y, -this.x) + Math.PI;
            return e
        },
        distanceTo: function(e) {
            return Math.sqrt(this.distanceToSquared(e))
        },
        distanceToSquared: function(e) {
            var t = this.x - e.x
              , n = this.y - e.y;
            return t * t + n * n
        },
        manhattanDistanceTo: function(e) {
            return Math.abs(this.x - e.x) + Math.abs(this.y - e.y)
        },
        setLength: function(e) {
            return this.normalize().multiplyScalar(e)
        },
        lerp: function(e, t) {
            return this.x += (e.x - this.x) * t,
            this.y += (e.y - this.y) * t,
            this
        },
        lerpVectors: function(e, t, n) {
            return this.x = e.x + (t.x - e.x) * n,
            this.y = e.y + (t.y - e.y) * n,
            this
        },
        equals: function(e) {
            return e.x === this.x && e.y === this.y
        },
        fromArray: function(e, t) {
            return void 0 === t && (t = 0),
            this.x = e[t],
            this.y = e[t + 1],
            this
        },
        toArray: function(e, t) {
            return void 0 === e && (e = []),
            void 0 === t && (t = 0),
            e[t] = this.x,
            e[t + 1] = this.y,
            e
        },
        fromBufferAttribute: function(e, t, n) {
            return void 0 !== n && console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),
            this.x = e.getX(t),
            this.y = e.getY(t),
            this
        },
        rotateAround: function(e, t) {
            var n = Math.cos(t)
              , r = Math.sin(t)
              , i = this.x - e.x
              , a = this.y - e.y;
            return this.x = i * n - a * r + e.x,
            this.y = i * r + a * n + e.y,
            this
        },
        random: function() {
            return this.x = Math.random(),
            this.y = Math.random(),
            this
        }
    }),
    Object.assign(Yn.prototype, {
        isMatrix3: !0,
        set: function(e, t, n, r, i, a, o, s, l) {
            var u = this.elements;
            return u[0] = e,
            u[1] = r,
            u[2] = o,
            u[3] = t,
            u[4] = i,
            u[5] = s,
            u[6] = n,
            u[7] = a,
            u[8] = l,
            this
        },
        identity: function() {
            return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1),
            this
        },
        clone: function() {
            return (new this.constructor).fromArray(this.elements)
        },
        copy: function(e) {
            var t = this.elements
              , n = e.elements;
            return t[0] = n[0],
            t[1] = n[1],
            t[2] = n[2],
            t[3] = n[3],
            t[4] = n[4],
            t[5] = n[5],
            t[6] = n[6],
            t[7] = n[7],
            t[8] = n[8],
            this
        },
        extractBasis: function(e, t, n) {
            return e.setFromMatrix3Column(this, 0),
            t.setFromMatrix3Column(this, 1),
            n.setFromMatrix3Column(this, 2),
            this
        },
        setFromMatrix4: function(e) {
            var t = e.elements;
            return this.set(t[0], t[4], t[8], t[1], t[5], t[9], t[2], t[6], t[10]),
            this
        },
        multiply: function(e) {
            return this.multiplyMatrices(this, e)
        },
        premultiply: function(e) {
            return this.multiplyMatrices(e, this)
        },
        multiplyMatrices: function(e, t) {
            var n = e.elements
              , r = t.elements
              , i = this.elements
              , a = n[0]
              , o = n[3]
              , s = n[6]
              , l = n[1]
              , u = n[4]
              , c = n[7]
              , h = n[2]
              , p = n[5]
              , f = n[8]
              , d = r[0]
              , m = r[3]
              , g = r[6]
              , v = r[1]
              , y = r[4]
              , b = r[7]
              , x = r[2]
              , w = r[5]
              , _ = r[8];
            return i[0] = a * d + o * v + s * x,
            i[3] = a * m + o * y + s * w,
            i[6] = a * g + o * b + s * _,
            i[1] = l * d + u * v + c * x,
            i[4] = l * m + u * y + c * w,
            i[7] = l * g + u * b + c * _,
            i[2] = h * d + p * v + f * x,
            i[5] = h * m + p * y + f * w,
            i[8] = h * g + p * b + f * _,
            this
        },
        multiplyScalar: function(e) {
            var t = this.elements;
            return t[0] *= e,
            t[3] *= e,
            t[6] *= e,
            t[1] *= e,
            t[4] *= e,
            t[7] *= e,
            t[2] *= e,
            t[5] *= e,
            t[8] *= e,
            this
        },
        determinant: function() {
            var e = this.elements
              , t = e[0]
              , n = e[1]
              , r = e[2]
              , i = e[3]
              , a = e[4]
              , o = e[5]
              , s = e[6]
              , l = e[7]
              , u = e[8];
            return t * a * u - t * o * l - n * i * u + n * o * s + r * i * l - r * a * s
        },
        getInverse: function(e, t) {
            void 0 !== t && console.warn("THREE.Matrix3: .getInverse() can no longer be configured to throw on degenerate.");
            var n = e.elements
              , r = this.elements
              , i = n[0]
              , a = n[1]
              , o = n[2]
              , s = n[3]
              , l = n[4]
              , u = n[5]
              , c = n[6]
              , h = n[7]
              , p = n[8]
              , f = p * l - u * h
              , d = u * c - p * s
              , m = h * s - l * c
              , g = i * f + a * d + o * m;
            if (0 === g)
                return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);
            var v = 1 / g;
            return r[0] = f * v,
            r[1] = (o * h - p * a) * v,
            r[2] = (u * a - o * l) * v,
            r[3] = d * v,
            r[4] = (p * i - o * c) * v,
            r[5] = (o * s - u * i) * v,
            r[6] = m * v,
            r[7] = (a * c - h * i) * v,
            r[8] = (l * i - a * s) * v,
            this
        },
        transpose: function() {
            var e, t = this.elements;
            return e = t[1],
            t[1] = t[3],
            t[3] = e,
            e = t[2],
            t[2] = t[6],
            t[6] = e,
            e = t[5],
            t[5] = t[7],
            t[7] = e,
            this
        },
        getNormalMatrix: function(e) {
            return this.setFromMatrix4(e).getInverse(this).transpose()
        },
        transposeIntoArray: function(e) {
            var t = this.elements;
            return e[0] = t[0],
            e[1] = t[3],
            e[2] = t[6],
            e[3] = t[1],
            e[4] = t[4],
            e[5] = t[7],
            e[6] = t[2],
            e[7] = t[5],
            e[8] = t[8],
            this
        },
        setUvTransform: function(e, t, n, r, i, a, o) {
            var s = Math.cos(i)
              , l = Math.sin(i);
            this.set(n * s, n * l, -n * (s * a + l * o) + a + e, -r * l, r * s, -r * (-l * a + s * o) + o + t, 0, 0, 1)
        },
        scale: function(e, t) {
            var n = this.elements;
            return n[0] *= e,
            n[3] *= e,
            n[6] *= e,
            n[1] *= t,
            n[4] *= t,
            n[7] *= t,
            this
        },
        rotate: function(e) {
            var t = Math.cos(e)
              , n = Math.sin(e)
              , r = this.elements
              , i = r[0]
              , a = r[3]
              , o = r[6]
              , s = r[1]
              , l = r[4]
              , u = r[7];
            return r[0] = t * i + n * s,
            r[3] = t * a + n * l,
            r[6] = t * o + n * u,
            r[1] = -n * i + t * s,
            r[4] = -n * a + t * l,
            r[7] = -n * o + t * u,
            this
        },
        translate: function(e, t) {
            var n = this.elements;
            return n[0] += e * n[2],
            n[3] += e * n[5],
            n[6] += e * n[8],
            n[1] += t * n[2],
            n[4] += t * n[5],
            n[7] += t * n[8],
            this
        },
        equals: function(e) {
            for (var t = this.elements, n = e.elements, r = 0; r < 9; r++)
                if (t[r] !== n[r])
                    return !1;
            return !0
        },
        fromArray: function(e, t) {
            void 0 === t && (t = 0);
            for (var n = 0; n < 9; n++)
                this.elements[n] = e[n + t];
            return this
        },
        toArray: function(e, t) {
            void 0 === e && (e = []),
            void 0 === t && (t = 0);
            var n = this.elements;
            return e[t] = n[0],
            e[t + 1] = n[1],
            e[t + 2] = n[2],
            e[t + 3] = n[3],
            e[t + 4] = n[4],
            e[t + 5] = n[5],
            e[t + 6] = n[6],
            e[t + 7] = n[7],
            e[t + 8] = n[8],
            e
        }
    });
    var Zn = {
        getDataURL: function(e) {
            if (/^data:/i.test(e.src))
                return e.src;
            if ("undefined" == typeof HTMLCanvasElement)
                return e.src;
            var t;
            if (e instanceof HTMLCanvasElement)
                t = e;
            else {
                void 0 === Un && (Un = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")),
                Un.width = e.width,
                Un.height = e.height;
                var n = Un.getContext("2d");
                e instanceof ImageData ? n.putImageData(e, 0, 0) : n.drawImage(e, 0, 0, e.width, e.height),
                t = Un
            }
            return t.width > 2048 || t.height > 2048 ? t.toDataURL("image/jpeg", .6) : t.toDataURL("image/png")
        }
    }
      , $n = 0;
    function Jn(e, t, n, r, i, a, o, s, l, u) {
        Object.defineProperty(this, "id", {
            value: $n++
        }),
        this.uuid = qn.generateUUID(),
        this.name = "",
        this.image = void 0 !== e ? e : Jn.DEFAULT_IMAGE,
        this.mipmaps = [],
        this.mapping = void 0 !== t ? t : Jn.DEFAULT_MAPPING,
        this.wrapS = void 0 !== n ? n : be,
        this.wrapT = void 0 !== r ? r : be,
        this.magFilter = void 0 !== i ? i : Te,
        this.minFilter = void 0 !== a ? a : Ce,
        this.anisotropy = void 0 !== l ? l : 1,
        this.format = void 0 !== o ? o : We,
        this.internalFormat = null,
        this.type = void 0 !== s ? s : Re,
        this.offset = new Xn(0,0),
        this.repeat = new Xn(1,1),
        this.center = new Xn(0,0),
        this.rotation = 0,
        this.matrixAutoUpdate = !0,
        this.matrix = new Yn,
        this.generateMipmaps = !0,
        this.premultiplyAlpha = !1,
        this.flipY = !0,
        this.unpackAlignment = 4,
        this.encoding = void 0 !== u ? u : rn,
        this.version = 0,
        this.onUpdate = null
    }
    function Kn() {
        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0
          , t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0
          , n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0
          , r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1;
        this.x = e,
        this.y = t,
        this.z = n,
        this.w = r
    }
    function Qn(e, t, n) {
        this.width = e,
        this.height = t,
        this.scissor = new Kn(0,0,e,t),
        this.scissorTest = !1,
        this.viewport = new Kn(0,0,e,t),
        n = n || {},
        this.texture = new Jn(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),
        this.texture.image = {},
        this.texture.image.width = e,
        this.texture.image.height = t,
        this.texture.generateMipmaps = void 0 !== n.generateMipmaps && n.generateMipmaps,
        this.texture.minFilter = void 0 !== n.minFilter ? n.minFilter : Te,
        this.depthBuffer = void 0 === n.depthBuffer || n.depthBuffer,
        this.stencilBuffer = void 0 === n.stencilBuffer || n.stencilBuffer,
        this.depthTexture = void 0 !== n.depthTexture ? n.depthTexture : null
    }
    function er(e, t, n) {
        Qn.call(this, e, t, n),
        this.samples = 4
    }
    function tr() {
        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0
          , t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0
          , n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0
          , r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1;
        this._x = e,
        this._y = t,
        this._z = n,
        this._w = r
    }
    Jn.DEFAULT_IMAGE = void 0,
    Jn.DEFAULT_MAPPING = he,
    Jn.prototype = Object.assign(Object.create(Hn.prototype), {
        constructor: Jn,
        isTexture: !0,
        updateMatrix: function() {
            this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y)
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(e) {
            return this.name = e.name,
            this.image = e.image,
            this.mipmaps = e.mipmaps.slice(0),
            this.mapping = e.mapping,
            this.wrapS = e.wrapS,
            this.wrapT = e.wrapT,
            this.magFilter = e.magFilter,
            this.minFilter = e.minFilter,
            this.anisotropy = e.anisotropy,
            this.format = e.format,
            this.internalFormat = e.internalFormat,
            this.type = e.type,
            this.offset.copy(e.offset),
            this.repeat.copy(e.repeat),
            this.center.copy(e.center),
            this.rotation = e.rotation,
            this.matrixAutoUpdate = e.matrixAutoUpdate,
            this.matrix.copy(e.matrix),
            this.generateMipmaps = e.generateMipmaps,
            this.premultiplyAlpha = e.premultiplyAlpha,
            this.flipY = e.flipY,
            this.unpackAlignment = e.unpackAlignment,
            this.encoding = e.encoding,
            this
        },
        toJSON: function(e) {
            var t = void 0 === e || "string" === typeof e;
            if (!t && void 0 !== e.textures[this.uuid])
                return e.textures[this.uuid];
            var n = {
                metadata: {
                    version: 4.5,
                    type: "Texture",
                    generator: "Texture.toJSON"
                },
                uuid: this.uuid,
                name: this.name,
                mapping: this.mapping,
                repeat: [this.repeat.x, this.repeat.y],
                offset: [this.offset.x, this.offset.y],
                center: [this.center.x, this.center.y],
                rotation: this.rotation,
                wrap: [this.wrapS, this.wrapT],
                format: this.format,
                type: this.type,
                encoding: this.encoding,
                minFilter: this.minFilter,
                magFilter: this.magFilter,
                anisotropy: this.anisotropy,
                flipY: this.flipY,
                premultiplyAlpha: this.premultiplyAlpha,
                unpackAlignment: this.unpackAlignment
            };
            if (void 0 !== this.image) {
                var r = this.image;
                if (void 0 === r.uuid && (r.uuid = qn.generateUUID()),
                !t && void 0 === e.images[r.uuid]) {
                    var i;
                    if (Array.isArray(r)) {
                        i = [];
                        for (var a = 0, o = r.length; a < o; a++)
                            i.push(Zn.getDataURL(r[a]))
                    } else
                        i = Zn.getDataURL(r);
                    e.images[r.uuid] = {
                        uuid: r.uuid,
                        url: i
                    }
                }
                n.image = r.uuid
            }
            return t || (e.textures[this.uuid] = n),
            n
        },
        dispose: function() {
            this.dispatchEvent({
                type: "dispose"
            })
        },
        transformUv: function(e) {
            if (this.mapping !== he)
                return e;
            if (e.applyMatrix3(this.matrix),
            e.x < 0 || e.x > 1)
                switch (this.wrapS) {
                case ye:
                    e.x = e.x - Math.floor(e.x);
                    break;
                case be:
                    e.x = e.x < 0 ? 0 : 1;
                    break;
                case xe:
                    1 === Math.abs(Math.floor(e.x) % 2) ? e.x = Math.ceil(e.x) - e.x : e.x = e.x - Math.floor(e.x)
                }
            if (e.y < 0 || e.y > 1)
                switch (this.wrapT) {
                case ye:
                    e.y = e.y - Math.floor(e.y);
                    break;
                case be:
                    e.y = e.y < 0 ? 0 : 1;
                    break;
                case xe:
                    1 === Math.abs(Math.floor(e.y) % 2) ? e.y = Math.ceil(e.y) - e.y : e.y = e.y - Math.floor(e.y)
                }
            return this.flipY && (e.y = 1 - e.y),
            e
        }
    }),
    Object.defineProperty(Jn.prototype, "needsUpdate", {
        set: function(e) {
            !0 === e && this.version++
        }
    }),
    Object.defineProperties(Kn.prototype, {
        width: {
            get: function() {
                return this.z
            },
            set: function(e) {
                this.z = e
            }
        },
        height: {
            get: function() {
                return this.w
            },
            set: function(e) {
                this.w = e
            }
        }
    }),
    Object.assign(Kn.prototype, {
        isVector4: !0,
        set: function(e, t, n, r) {
            return this.x = e,
            this.y = t,
            this.z = n,
            this.w = r,
            this
        },
        setScalar: function(e) {
            return this.x = e,
            this.y = e,
            this.z = e,
            this.w = e,
            this
        },
        setX: function(e) {
            return this.x = e,
            this
        },
        setY: function(e) {
            return this.y = e,
            this
        },
        setZ: function(e) {
            return this.z = e,
            this
        },
        setW: function(e) {
            return this.w = e,
            this
        },
        setComponent: function(e, t) {
            switch (e) {
            case 0:
                this.x = t;
                break;
            case 1:
                this.y = t;
                break;
            case 2:
                this.z = t;
                break;
            case 3:
                this.w = t;
                break;
            default:
                throw new Error("index is out of range: " + e)
            }
            return this
        },
        getComponent: function(e) {
            switch (e) {
            case 0:
                return this.x;
            case 1:
                return this.y;
            case 2:
                return this.z;
            case 3:
                return this.w;
            default:
                throw new Error("index is out of range: " + e)
            }
        },
        clone: function() {
            return new this.constructor(this.x,this.y,this.z,this.w)
        },
        copy: function(e) {
            return this.x = e.x,
            this.y = e.y,
            this.z = e.z,
            this.w = void 0 !== e.w ? e.w : 1,
            this
        },
        add: function(e, t) {
            return void 0 !== t ? (console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),
            this.addVectors(e, t)) : (this.x += e.x,
            this.y += e.y,
            this.z += e.z,
            this.w += e.w,
            this)
        },
        addScalar: function(e) {
            return this.x += e,
            this.y += e,
            this.z += e,
            this.w += e,
            this
        },
        addVectors: function(e, t) {
            return this.x = e.x + t.x,
            this.y = e.y + t.y,
            this.z = e.z + t.z,
            this.w = e.w + t.w,
            this
        },
        addScaledVector: function(e, t) {
            return this.x += e.x * t,
            this.y += e.y * t,
            this.z += e.z * t,
            this.w += e.w * t,
            this
        },
        sub: function(e, t) {
            return void 0 !== t ? (console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
            this.subVectors(e, t)) : (this.x -= e.x,
            this.y -= e.y,
            this.z -= e.z,
            this.w -= e.w,
            this)
        },
        subScalar: function(e) {
            return this.x -= e,
            this.y -= e,
            this.z -= e,
            this.w -= e,
            this
        },
        subVectors: function(e, t) {
            return this.x = e.x - t.x,
            this.y = e.y - t.y,
            this.z = e.z - t.z,
            this.w = e.w - t.w,
            this
        },
        multiplyScalar: function(e) {
            return this.x *= e,
            this.y *= e,
            this.z *= e,
            this.w *= e,
            this
        },
        applyMatrix4: function(e) {
            var t = this.x
              , n = this.y
              , r = this.z
              , i = this.w
              , a = e.elements;
            return this.x = a[0] * t + a[4] * n + a[8] * r + a[12] * i,
            this.y = a[1] * t + a[5] * n + a[9] * r + a[13] * i,
            this.z = a[2] * t + a[6] * n + a[10] * r + a[14] * i,
            this.w = a[3] * t + a[7] * n + a[11] * r + a[15] * i,
            this
        },
        divideScalar: function(e) {
            return this.multiplyScalar(1 / e)
        },
        setAxisAngleFromQuaternion: function(e) {
            this.w = 2 * Math.acos(e.w);
            var t = Math.sqrt(1 - e.w * e.w);
            return t < 1e-4 ? (this.x = 1,
            this.y = 0,
            this.z = 0) : (this.x = e.x / t,
            this.y = e.y / t,
            this.z = e.z / t),
            this
        },
        setAxisAngleFromRotationMatrix: function(e) {
            var t, n, r, i, a = e.elements, o = a[0], s = a[4], l = a[8], u = a[1], c = a[5], h = a[9], p = a[2], f = a[6], d = a[10];
            if (Math.abs(s - u) < .01 && Math.abs(l - p) < .01 && Math.abs(h - f) < .01) {
                if (Math.abs(s + u) < .1 && Math.abs(l + p) < .1 && Math.abs(h + f) < .1 && Math.abs(o + c + d - 3) < .1)
                    return this.set(1, 0, 0, 0),
                    this;
                t = Math.PI;
                var m = (o + 1) / 2
                  , g = (c + 1) / 2
                  , v = (d + 1) / 2
                  , y = (s + u) / 4
                  , b = (l + p) / 4
                  , x = (h + f) / 4;
                return m > g && m > v ? m < .01 ? (n = 0,
                r = .707106781,
                i = .707106781) : (r = y / (n = Math.sqrt(m)),
                i = b / n) : g > v ? g < .01 ? (n = .707106781,
                r = 0,
                i = .707106781) : (n = y / (r = Math.sqrt(g)),
                i = x / r) : v < .01 ? (n = .707106781,
                r = .707106781,
                i = 0) : (n = b / (i = Math.sqrt(v)),
                r = x / i),
                this.set(n, r, i, t),
                this
            }
            var w = Math.sqrt((f - h) * (f - h) + (l - p) * (l - p) + (u - s) * (u - s));
            return Math.abs(w) < .001 && (w = 1),
            this.x = (f - h) / w,
            this.y = (l - p) / w,
            this.z = (u - s) / w,
            this.w = Math.acos((o + c + d - 1) / 2),
            this
        },
        min: function(e) {
            return this.x = Math.min(this.x, e.x),
            this.y = Math.min(this.y, e.y),
            this.z = Math.min(this.z, e.z),
            this.w = Math.min(this.w, e.w),
            this
        },
        max: function(e) {
            return this.x = Math.max(this.x, e.x),
            this.y = Math.max(this.y, e.y),
            this.z = Math.max(this.z, e.z),
            this.w = Math.max(this.w, e.w),
            this
        },
        clamp: function(e, t) {
            return this.x = Math.max(e.x, Math.min(t.x, this.x)),
            this.y = Math.max(e.y, Math.min(t.y, this.y)),
            this.z = Math.max(e.z, Math.min(t.z, this.z)),
            this.w = Math.max(e.w, Math.min(t.w, this.w)),
            this
        },
        clampScalar: function(e, t) {
            return this.x = Math.max(e, Math.min(t, this.x)),
            this.y = Math.max(e, Math.min(t, this.y)),
            this.z = Math.max(e, Math.min(t, this.z)),
            this.w = Math.max(e, Math.min(t, this.w)),
            this
        },
        clampLength: function(e, t) {
            var n = this.length();
            return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)))
        },
        floor: function() {
            return this.x = Math.floor(this.x),
            this.y = Math.floor(this.y),
            this.z = Math.floor(this.z),
            this.w = Math.floor(this.w),
            this
        },
        ceil: function() {
            return this.x = Math.ceil(this.x),
            this.y = Math.ceil(this.y),
            this.z = Math.ceil(this.z),
            this.w = Math.ceil(this.w),
            this
        },
        round: function() {
            return this.x = Math.round(this.x),
            this.y = Math.round(this.y),
            this.z = Math.round(this.z),
            this.w = Math.round(this.w),
            this
        },
        roundToZero: function() {
            return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
            this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
            this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z),
            this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w),
            this
        },
        negate: function() {
            return this.x = -this.x,
            this.y = -this.y,
            this.z = -this.z,
            this.w = -this.w,
            this
        },
        dot: function(e) {
            return this.x * e.x + this.y * e.y + this.z * e.z + this.w * e.w
        },
        lengthSq: function() {
            return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w
        },
        length: function() {
            return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w)
        },
        manhattanLength: function() {
            return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w)
        },
        normalize: function() {
            return this.divideScalar(this.length() || 1)
        },
        setLength: function(e) {
            return this.normalize().multiplyScalar(e)
        },
        lerp: function(e, t) {
            return this.x += (e.x - this.x) * t,
            this.y += (e.y - this.y) * t,
            this.z += (e.z - this.z) * t,
            this.w += (e.w - this.w) * t,
            this
        },
        lerpVectors: function(e, t, n) {
            return this.x = e.x + (t.x - e.x) * n,
            this.y = e.y + (t.y - e.y) * n,
            this.z = e.z + (t.z - e.z) * n,
            this.w = e.w + (t.w - e.w) * n,
            this
        },
        equals: function(e) {
            return e.x === this.x && e.y === this.y && e.z === this.z && e.w === this.w
        },
        fromArray: function(e, t) {
            return void 0 === t && (t = 0),
            this.x = e[t],
            this.y = e[t + 1],
            this.z = e[t + 2],
            this.w = e[t + 3],
            this
        },
        toArray: function(e, t) {
            return void 0 === e && (e = []),
            void 0 === t && (t = 0),
            e[t] = this.x,
            e[t + 1] = this.y,
            e[t + 2] = this.z,
            e[t + 3] = this.w,
            e
        },
        fromBufferAttribute: function(e, t, n) {
            return void 0 !== n && console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),
            this.x = e.getX(t),
            this.y = e.getY(t),
            this.z = e.getZ(t),
            this.w = e.getW(t),
            this
        },
        random: function() {
            return this.x = Math.random(),
            this.y = Math.random(),
            this.z = Math.random(),
            this.w = Math.random(),
            this
        }
    }),
    Qn.prototype = Object.assign(Object.create(Hn.prototype), {
        constructor: Qn,
        isWebGLRenderTarget: !0,
        setSize: function(e, t) {
            this.width === e && this.height === t || (this.width = e,
            this.height = t,
            this.texture.image.width = e,
            this.texture.image.height = t,
            this.dispose()),
            this.viewport.set(0, 0, e, t),
            this.scissor.set(0, 0, e, t)
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(e) {
            return this.width = e.width,
            this.height = e.height,
            this.viewport.copy(e.viewport),
            this.texture = e.texture.clone(),
            this.depthBuffer = e.depthBuffer,
            this.stencilBuffer = e.stencilBuffer,
            this.depthTexture = e.depthTexture,
            this
        },
        dispose: function() {
            this.dispatchEvent({
                type: "dispose"
            })
        }
    }),
    er.prototype = Object.assign(Object.create(Qn.prototype), {
        constructor: er,
        isWebGLMultisampleRenderTarget: !0,
        copy: function(e) {
            return Qn.prototype.copy.call(this, e),
            this.samples = e.samples,
            this
        }
    }),
    Object.assign(tr, {
        slerp: function(e, t, n, r) {
            return n.copy(e).slerp(t, r)
        },
        slerpFlat: function(e, t, n, r, i, a, o) {
            var s = n[r + 0]
              , l = n[r + 1]
              , u = n[r + 2]
              , c = n[r + 3]
              , h = i[a + 0]
              , p = i[a + 1]
              , f = i[a + 2]
              , d = i[a + 3];
            if (c !== d || s !== h || l !== p || u !== f) {
                var m = 1 - o
                  , g = s * h + l * p + u * f + c * d
                  , v = g >= 0 ? 1 : -1
                  , y = 1 - g * g;
                if (y > Number.EPSILON) {
                    var b = Math.sqrt(y)
                      , x = Math.atan2(b, g * v);
                    m = Math.sin(m * x) / b,
                    o = Math.sin(o * x) / b
                }
                var w = o * v;
                if (s = s * m + h * w,
                l = l * m + p * w,
                u = u * m + f * w,
                c = c * m + d * w,
                m === 1 - o) {
                    var _ = 1 / Math.sqrt(s * s + l * l + u * u + c * c);
                    s *= _,
                    l *= _,
                    u *= _,
                    c *= _
                }
            }
            e[t] = s,
            e[t + 1] = l,
            e[t + 2] = u,
            e[t + 3] = c
        },
        multiplyQuaternionsFlat: function(e, t, n, r, i, a) {
            var o = n[r]
              , s = n[r + 1]
              , l = n[r + 2]
              , u = n[r + 3]
              , c = i[a]
              , h = i[a + 1]
              , p = i[a + 2]
              , f = i[a + 3];
            return e[t] = o * f + u * c + s * p - l * h,
            e[t + 1] = s * f + u * h + l * c - o * p,
            e[t + 2] = l * f + u * p + o * h - s * c,
            e[t + 3] = u * f - o * c - s * h - l * p,
            e
        }
    }),
    Object.defineProperties(tr.prototype, {
        x: {
            get: function() {
                return this._x
            },
            set: function(e) {
                this._x = e,
                this._onChangeCallback()
            }
        },
        y: {
            get: function() {
                return this._y
            },
            set: function(e) {
                this._y = e,
                this._onChangeCallback()
            }
        },
        z: {
            get: function() {
                return this._z
            },
            set: function(e) {
                this._z = e,
                this._onChangeCallback()
            }
        },
        w: {
            get: function() {
                return this._w
            },
            set: function(e) {
                this._w = e,
                this._onChangeCallback()
            }
        }
    }),
    Object.assign(tr.prototype, {
        isQuaternion: !0,
        set: function(e, t, n, r) {
            return this._x = e,
            this._y = t,
            this._z = n,
            this._w = r,
            this._onChangeCallback(),
            this
        },
        clone: function() {
            return new this.constructor(this._x,this._y,this._z,this._w)
        },
        copy: function(e) {
            return this._x = e.x,
            this._y = e.y,
            this._z = e.z,
            this._w = e.w,
            this._onChangeCallback(),
            this
        },
        setFromEuler: function(e, t) {
            if (!e || !e.isEuler)
                throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");
            var n = e._x
              , r = e._y
              , i = e._z
              , a = e.order
              , o = Math.cos
              , s = Math.sin
              , l = o(n / 2)
              , u = o(r / 2)
              , c = o(i / 2)
              , h = s(n / 2)
              , p = s(r / 2)
              , f = s(i / 2);
            switch (a) {
            case "XYZ":
                this._x = h * u * c + l * p * f,
                this._y = l * p * c - h * u * f,
                this._z = l * u * f + h * p * c,
                this._w = l * u * c - h * p * f;
                break;
            case "YXZ":
                this._x = h * u * c + l * p * f,
                this._y = l * p * c - h * u * f,
                this._z = l * u * f - h * p * c,
                this._w = l * u * c + h * p * f;
                break;
            case "ZXY":
                this._x = h * u * c - l * p * f,
                this._y = l * p * c + h * u * f,
                this._z = l * u * f + h * p * c,
                this._w = l * u * c - h * p * f;
                break;
            case "ZYX":
                this._x = h * u * c - l * p * f,
                this._y = l * p * c + h * u * f,
                this._z = l * u * f - h * p * c,
                this._w = l * u * c + h * p * f;
                break;
            case "YZX":
                this._x = h * u * c + l * p * f,
                this._y = l * p * c + h * u * f,
                this._z = l * u * f - h * p * c,
                this._w = l * u * c - h * p * f;
                break;
            case "XZY":
                this._x = h * u * c - l * p * f,
                this._y = l * p * c - h * u * f,
                this._z = l * u * f + h * p * c,
                this._w = l * u * c + h * p * f;
                break;
            default:
                console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: " + a)
            }
            return !1 !== t && this._onChangeCallback(),
            this
        },
        setFromAxisAngle: function(e, t) {
            var n = t / 2
              , r = Math.sin(n);
            return this._x = e.x * r,
            this._y = e.y * r,
            this._z = e.z * r,
            this._w = Math.cos(n),
            this._onChangeCallback(),
            this
        },
        setFromRotationMatrix: function(e) {
            var t = e.elements
              , n = t[0]
              , r = t[4]
              , i = t[8]
              , a = t[1]
              , o = t[5]
              , s = t[9]
              , l = t[2]
              , u = t[6]
              , c = t[10]
              , h = n + o + c;
            if (h > 0) {
                var p = .5 / Math.sqrt(h + 1);
                this._w = .25 / p,
                this._x = (u - s) * p,
                this._y = (i - l) * p,
                this._z = (a - r) * p
            } else if (n > o && n > c) {
                var f = 2 * Math.sqrt(1 + n - o - c);
                this._w = (u - s) / f,
                this._x = .25 * f,
                this._y = (r + a) / f,
                this._z = (i + l) / f
            } else if (o > c) {
                var d = 2 * Math.sqrt(1 + o - n - c);
                this._w = (i - l) / d,
                this._x = (r + a) / d,
                this._y = .25 * d,
                this._z = (s + u) / d
            } else {
                var m = 2 * Math.sqrt(1 + c - n - o);
                this._w = (a - r) / m,
                this._x = (i + l) / m,
                this._y = (s + u) / m,
                this._z = .25 * m
            }
            return this._onChangeCallback(),
            this
        },
        setFromUnitVectors: function(e, t) {
            var n = e.dot(t) + 1;
            return n < 1e-6 ? (n = 0,
            Math.abs(e.x) > Math.abs(e.z) ? (this._x = -e.y,
            this._y = e.x,
            this._z = 0,
            this._w = n) : (this._x = 0,
            this._y = -e.z,
            this._z = e.y,
            this._w = n)) : (this._x = e.y * t.z - e.z * t.y,
            this._y = e.z * t.x - e.x * t.z,
            this._z = e.x * t.y - e.y * t.x,
            this._w = n),
            this.normalize()
        },
        angleTo: function(e) {
            return 2 * Math.acos(Math.abs(qn.clamp(this.dot(e), -1, 1)))
        },
        rotateTowards: function(e, t) {
            var n = this.angleTo(e);
            if (0 === n)
                return this;
            var r = Math.min(1, t / n);
            return this.slerp(e, r),
            this
        },
        identity: function() {
            return this.set(0, 0, 0, 1)
        },
        inverse: function() {
            return this.conjugate()
        },
        conjugate: function() {
            return this._x *= -1,
            this._y *= -1,
            this._z *= -1,
            this._onChangeCallback(),
            this
        },
        dot: function(e) {
            return this._x * e._x + this._y * e._y + this._z * e._z + this._w * e._w
        },
        lengthSq: function() {
            return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w
        },
        length: function() {
            return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w)
        },
        normalize: function() {
            var e = this.length();
            return 0 === e ? (this._x = 0,
            this._y = 0,
            this._z = 0,
            this._w = 1) : (e = 1 / e,
            this._x = this._x * e,
            this._y = this._y * e,
            this._z = this._z * e,
            this._w = this._w * e),
            this._onChangeCallback(),
            this
        },
        multiply: function(e, t) {
            return void 0 !== t ? (console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),
            this.multiplyQuaternions(e, t)) : this.multiplyQuaternions(this, e)
        },
        premultiply: function(e) {
            return this.multiplyQuaternions(e, this)
        },
        multiplyQuaternions: function(e, t) {
            var n = e._x
              , r = e._y
              , i = e._z
              , a = e._w
              , o = t._x
              , s = t._y
              , l = t._z
              , u = t._w;
            return this._x = n * u + a * o + r * l - i * s,
            this._y = r * u + a * s + i * o - n * l,
            this._z = i * u + a * l + n * s - r * o,
            this._w = a * u - n * o - r * s - i * l,
            this._onChangeCallback(),
            this
        },
        slerp: function(e, t) {
            if (0 === t)
                return this;
            if (1 === t)
                return this.copy(e);
            var n = this._x
              , r = this._y
              , i = this._z
              , a = this._w
              , o = a * e._w + n * e._x + r * e._y + i * e._z;
            if (o < 0 ? (this._w = -e._w,
            this._x = -e._x,
            this._y = -e._y,
            this._z = -e._z,
            o = -o) : this.copy(e),
            o >= 1)
                return this._w = a,
                this._x = n,
                this._y = r,
                this._z = i,
                this;
            var s = 1 - o * o;
            if (s <= Number.EPSILON) {
                var l = 1 - t;
                return this._w = l * a + t * this._w,
                this._x = l * n + t * this._x,
                this._y = l * r + t * this._y,
                this._z = l * i + t * this._z,
                this.normalize(),
                this._onChangeCallback(),
                this
            }
            var u = Math.sqrt(s)
              , c = Math.atan2(u, o)
              , h = Math.sin((1 - t) * c) / u
              , p = Math.sin(t * c) / u;
            return this._w = a * h + this._w * p,
            this._x = n * h + this._x * p,
            this._y = r * h + this._y * p,
            this._z = i * h + this._z * p,
            this._onChangeCallback(),
            this
        },
        equals: function(e) {
            return e._x === this._x && e._y === this._y && e._z === this._z && e._w === this._w
        },
        fromArray: function(e, t) {
            return void 0 === t && (t = 0),
            this._x = e[t],
            this._y = e[t + 1],
            this._z = e[t + 2],
            this._w = e[t + 3],
            this._onChangeCallback(),
            this
        },
        toArray: function(e, t) {
            return void 0 === e && (e = []),
            void 0 === t && (t = 0),
            e[t] = this._x,
            e[t + 1] = this._y,
            e[t + 2] = this._z,
            e[t + 3] = this._w,
            e
        },
        fromBufferAttribute: function(e, t) {
            return this._x = e.getX(t),
            this._y = e.getY(t),
            this._z = e.getZ(t),
            this._w = e.getW(t),
            this
        },
        _onChange: function(e) {
            return this._onChangeCallback = e,
            this
        },
        _onChangeCallback: function() {}
    });
    var nr = new ir
      , rr = new tr;
    function ir() {
        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0
          , t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0
          , n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
        this.x = e,
        this.y = t,
        this.z = n
    }
    Object.assign(ir.prototype, {
        isVector3: !0,
        set: function(e, t, n) {
            return void 0 === n && (n = this.z),
            this.x = e,
            this.y = t,
            this.z = n,
            this
        },
        setScalar: function(e) {
            return this.x = e,
            this.y = e,
            this.z = e,
            this
        },
        setX: function(e) {
            return this.x = e,
            this
        },
        setY: function(e) {
            return this.y = e,
            this
        },
        setZ: function(e) {
            return this.z = e,
            this
        },
        setComponent: function(e, t) {
            switch (e) {
            case 0:
                this.x = t;
                break;
            case 1:
                this.y = t;
                break;
            case 2:
                this.z = t;
                break;
            default:
                throw new Error("index is out of range: " + e)
            }
            return this
        },
        getComponent: function(e) {
            switch (e) {
            case 0:
                return this.x;
            case 1:
                return this.y;
            case 2:
                return this.z;
            default:
                throw new Error("index is out of range: " + e)
            }
        },
        clone: function() {
            return new this.constructor(this.x,this.y,this.z)
        },
        copy: function(e) {
            return this.x = e.x,
            this.y = e.y,
            this.z = e.z,
            this
        },
        add: function(e, t) {
            return void 0 !== t ? (console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),
            this.addVectors(e, t)) : (this.x += e.x,
            this.y += e.y,
            this.z += e.z,
            this)
        },
        addScalar: function(e) {
            return this.x += e,
            this.y += e,
            this.z += e,
            this
        },
        addVectors: function(e, t) {
            return this.x = e.x + t.x,
            this.y = e.y + t.y,
            this.z = e.z + t.z,
            this
        },
        addScaledVector: function(e, t) {
            return this.x += e.x * t,
            this.y += e.y * t,
            this.z += e.z * t,
            this
        },
        sub: function(e, t) {
            return void 0 !== t ? (console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
            this.subVectors(e, t)) : (this.x -= e.x,
            this.y -= e.y,
            this.z -= e.z,
            this)
        },
        subScalar: function(e) {
            return this.x -= e,
            this.y -= e,
            this.z -= e,
            this
        },
        subVectors: function(e, t) {
            return this.x = e.x - t.x,
            this.y = e.y - t.y,
            this.z = e.z - t.z,
            this
        },
        multiply: function(e, t) {
            return void 0 !== t ? (console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),
            this.multiplyVectors(e, t)) : (this.x *= e.x,
            this.y *= e.y,
            this.z *= e.z,
            this)
        },
        multiplyScalar: function(e) {
            return this.x *= e,
            this.y *= e,
            this.z *= e,
            this
        },
        multiplyVectors: function(e, t) {
            return this.x = e.x * t.x,
            this.y = e.y * t.y,
            this.z = e.z * t.z,
            this
        },
        applyEuler: function(e) {
            return e && e.isEuler || console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),
            this.applyQuaternion(rr.setFromEuler(e))
        },
        applyAxisAngle: function(e, t) {
            return this.applyQuaternion(rr.setFromAxisAngle(e, t))
        },
        applyMatrix3: function(e) {
            var t = this.x
              , n = this.y
              , r = this.z
              , i = e.elements;
            return this.x = i[0] * t + i[3] * n + i[6] * r,
            this.y = i[1] * t + i[4] * n + i[7] * r,
            this.z = i[2] * t + i[5] * n + i[8] * r,
            this
        },
        applyNormalMatrix: function(e) {
            return this.applyMatrix3(e).normalize()
        },
        applyMatrix4: function(e) {
            var t = this.x
              , n = this.y
              , r = this.z
              , i = e.elements
              , a = 1 / (i[3] * t + i[7] * n + i[11] * r + i[15]);
            return this.x = (i[0] * t + i[4] * n + i[8] * r + i[12]) * a,
            this.y = (i[1] * t + i[5] * n + i[9] * r + i[13]) * a,
            this.z = (i[2] * t + i[6] * n + i[10] * r + i[14]) * a,
            this
        },
        applyQuaternion: function(e) {
            var t = this.x
              , n = this.y
              , r = this.z
              , i = e.x
              , a = e.y
              , o = e.z
              , s = e.w
              , l = s * t + a * r - o * n
              , u = s * n + o * t - i * r
              , c = s * r + i * n - a * t
              , h = -i * t - a * n - o * r;
            return this.x = l * s + h * -i + u * -o - c * -a,
            this.y = u * s + h * -a + c * -i - l * -o,
            this.z = c * s + h * -o + l * -a - u * -i,
            this
        },
        project: function(e) {
            return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)
        },
        unproject: function(e) {
            return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)
        },
        transformDirection: function(e) {
            var t = this.x
              , n = this.y
              , r = this.z
              , i = e.elements;
            return this.x = i[0] * t + i[4] * n + i[8] * r,
            this.y = i[1] * t + i[5] * n + i[9] * r,
            this.z = i[2] * t + i[6] * n + i[10] * r,
            this.normalize()
        },
        divide: function(e) {
            return this.x /= e.x,
            this.y /= e.y,
            this.z /= e.z,
            this
        },
        divideScalar: function(e) {
            return this.multiplyScalar(1 / e)
        },
        min: function(e) {
            return this.x = Math.min(this.x, e.x),
            this.y = Math.min(this.y, e.y),
            this.z = Math.min(this.z, e.z),
            this
        },
        max: function(e) {
            return this.x = Math.max(this.x, e.x),
            this.y = Math.max(this.y, e.y),
            this.z = Math.max(this.z, e.z),
            this
        },
        clamp: function(e, t) {
            return this.x = Math.max(e.x, Math.min(t.x, this.x)),
            this.y = Math.max(e.y, Math.min(t.y, this.y)),
            this.z = Math.max(e.z, Math.min(t.z, this.z)),
            this
        },
        clampScalar: function(e, t) {
            return this.x = Math.max(e, Math.min(t, this.x)),
            this.y = Math.max(e, Math.min(t, this.y)),
            this.z = Math.max(e, Math.min(t, this.z)),
            this
        },
        clampLength: function(e, t) {
            var n = this.length();
            return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)))
        },
        floor: function() {
            return this.x = Math.floor(this.x),
            this.y = Math.floor(this.y),
            this.z = Math.floor(this.z),
            this
        },
        ceil: function() {
            return this.x = Math.ceil(this.x),
            this.y = Math.ceil(this.y),
            this.z = Math.ceil(this.z),
            this
        },
        round: function() {
            return this.x = Math.round(this.x),
            this.y = Math.round(this.y),
            this.z = Math.round(this.z),
            this
        },
        roundToZero: function() {
            return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
            this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
            this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z),
            this
        },
        negate: function() {
            return this.x = -this.x,
            this.y = -this.y,
            this.z = -this.z,
            this
        },
        dot: function(e) {
            return this.x * e.x + this.y * e.y + this.z * e.z
        },
        lengthSq: function() {
            return this.x * this.x + this.y * this.y + this.z * this.z
        },
        length: function() {
            return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)
        },
        manhattanLength: function() {
            return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z)
        },
        normalize: function() {
            return this.divideScalar(this.length() || 1)
        },
        setLength: function(e) {
            return this.normalize().multiplyScalar(e)
        },
        lerp: function(e, t) {
            return this.x += (e.x - this.x) * t,
            this.y += (e.y - this.y) * t,
            this.z += (e.z - this.z) * t,
            this
        },
        lerpVectors: function(e, t, n) {
            return this.x = e.x + (t.x - e.x) * n,
            this.y = e.y + (t.y - e.y) * n,
            this.z = e.z + (t.z - e.z) * n,
            this
        },
        cross: function(e, t) {
            return void 0 !== t ? (console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),
            this.crossVectors(e, t)) : this.crossVectors(this, e)
        },
        crossVectors: function(e, t) {
            var n = e.x
              , r = e.y
              , i = e.z
              , a = t.x
              , o = t.y
              , s = t.z;
            return this.x = r * s - i * o,
            this.y = i * a - n * s,
            this.z = n * o - r * a,
            this
        },
        projectOnVector: function(e) {
            var t = e.lengthSq();
            if (0 === t)
                return this.set(0, 0, 0);
            var n = e.dot(this) / t;
            return this.copy(e).multiplyScalar(n)
        },
        projectOnPlane: function(e) {
            return nr.copy(this).projectOnVector(e),
            this.sub(nr)
        },
        reflect: function(e) {
            return this.sub(nr.copy(e).multiplyScalar(2 * this.dot(e)))
        },
        angleTo: function(e) {
            var t = Math.sqrt(this.lengthSq() * e.lengthSq());
            if (0 === t)
                return Math.PI / 2;
            var n = this.dot(e) / t;
            return Math.acos(qn.clamp(n, -1, 1))
        },
        distanceTo: function(e) {
            return Math.sqrt(this.distanceToSquared(e))
        },
        distanceToSquared: function(e) {
            var t = this.x - e.x
              , n = this.y - e.y
              , r = this.z - e.z;
            return t * t + n * n + r * r
        },
        manhattanDistanceTo: function(e) {
            return Math.abs(this.x - e.x) + Math.abs(this.y - e.y) + Math.abs(this.z - e.z)
        },
        setFromSpherical: function(e) {
            return this.setFromSphericalCoords(e.radius, e.phi, e.theta)
        },
        setFromSphericalCoords: function(e, t, n) {
            var r = Math.sin(t) * e;
            return this.x = r * Math.sin(n),
            this.y = Math.cos(t) * e,
            this.z = r * Math.cos(n),
            this
        },
        setFromCylindrical: function(e) {
            return this.setFromCylindricalCoords(e.radius, e.theta, e.y)
        },
        setFromCylindricalCoords: function(e, t, n) {
            return this.x = e * Math.sin(t),
            this.y = n,
            this.z = e * Math.cos(t),
            this
        },
        setFromMatrixPosition: function(e) {
            var t = e.elements;
            return this.x = t[12],
            this.y = t[13],
            this.z = t[14],
            this
        },
        setFromMatrixScale: function(e) {
            var t = this.setFromMatrixColumn(e, 0).length()
              , n = this.setFromMatrixColumn(e, 1).length()
              , r = this.setFromMatrixColumn(e, 2).length();
            return this.x = t,
            this.y = n,
            this.z = r,
            this
        },
        setFromMatrixColumn: function(e, t) {
            return this.fromArray(e.elements, 4 * t)
        },
        setFromMatrix3Column: function(e, t) {
            return this.fromArray(e.elements, 3 * t)
        },
        equals: function(e) {
            return e.x === this.x && e.y === this.y && e.z === this.z
        },
        fromArray: function(e, t) {
            return void 0 === t && (t = 0),
            this.x = e[t],
            this.y = e[t + 1],
            this.z = e[t + 2],
            this
        },
        toArray: function(e, t) {
            return void 0 === e && (e = []),
            void 0 === t && (t = 0),
            e[t] = this.x,
            e[t + 1] = this.y,
            e[t + 2] = this.z,
            e
        },
        fromBufferAttribute: function(e, t, n) {
            return void 0 !== n && console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),
            this.x = e.getX(t),
            this.y = e.getY(t),
            this.z = e.getZ(t),
            this
        },
        random: function() {
            return this.x = Math.random(),
            this.y = Math.random(),
            this.z = Math.random(),
            this
        }
    });
    var ar = new ir
      , or = new pr
      , sr = new ir(0,0,0)
      , lr = new ir(1,1,1)
      , ur = new ir
      , cr = new ir
      , hr = new ir;
    function pr() {
        this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
        arguments.length > 0 && console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")
    }
    Object.assign(pr.prototype, {
        isMatrix4: !0,
        set: function(e, t, n, r, i, a, o, s, l, u, c, h, p, f, d, m) {
            var g = this.elements;
            return g[0] = e,
            g[4] = t,
            g[8] = n,
            g[12] = r,
            g[1] = i,
            g[5] = a,
            g[9] = o,
            g[13] = s,
            g[2] = l,
            g[6] = u,
            g[10] = c,
            g[14] = h,
            g[3] = p,
            g[7] = f,
            g[11] = d,
            g[15] = m,
            this
        },
        identity: function() {
            return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
            this
        },
        clone: function() {
            return (new pr).fromArray(this.elements)
        },
        copy: function(e) {
            var t = this.elements
              , n = e.elements;
            return t[0] = n[0],
            t[1] = n[1],
            t[2] = n[2],
            t[3] = n[3],
            t[4] = n[4],
            t[5] = n[5],
            t[6] = n[6],
            t[7] = n[7],
            t[8] = n[8],
            t[9] = n[9],
            t[10] = n[10],
            t[11] = n[11],
            t[12] = n[12],
            t[13] = n[13],
            t[14] = n[14],
            t[15] = n[15],
            this
        },
        copyPosition: function(e) {
            var t = this.elements
              , n = e.elements;
            return t[12] = n[12],
            t[13] = n[13],
            t[14] = n[14],
            this
        },
        extractBasis: function(e, t, n) {
            return e.setFromMatrixColumn(this, 0),
            t.setFromMatrixColumn(this, 1),
            n.setFromMatrixColumn(this, 2),
            this
        },
        makeBasis: function(e, t, n) {
            return this.set(e.x, t.x, n.x, 0, e.y, t.y, n.y, 0, e.z, t.z, n.z, 0, 0, 0, 0, 1),
            this
        },
        extractRotation: function(e) {
            var t = this.elements
              , n = e.elements
              , r = 1 / ar.setFromMatrixColumn(e, 0).length()
              , i = 1 / ar.setFromMatrixColumn(e, 1).length()
              , a = 1 / ar.setFromMatrixColumn(e, 2).length();
            return t[0] = n[0] * r,
            t[1] = n[1] * r,
            t[2] = n[2] * r,
            t[3] = 0,
            t[4] = n[4] * i,
            t[5] = n[5] * i,
            t[6] = n[6] * i,
            t[7] = 0,
            t[8] = n[8] * a,
            t[9] = n[9] * a,
            t[10] = n[10] * a,
            t[11] = 0,
            t[12] = 0,
            t[13] = 0,
            t[14] = 0,
            t[15] = 1,
            this
        },
        makeRotationFromEuler: function(e) {
            e && e.isEuler || console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
            var t = this.elements
              , n = e.x
              , r = e.y
              , i = e.z
              , a = Math.cos(n)
              , o = Math.sin(n)
              , s = Math.cos(r)
              , l = Math.sin(r)
              , u = Math.cos(i)
              , c = Math.sin(i);
            if ("XYZ" === e.order) {
                var h = a * u
                  , p = a * c
                  , f = o * u
                  , d = o * c;
                t[0] = s * u,
                t[4] = -s * c,
                t[8] = l,
                t[1] = p + f * l,
                t[5] = h - d * l,
                t[9] = -o * s,
                t[2] = d - h * l,
                t[6] = f + p * l,
                t[10] = a * s
            } else if ("YXZ" === e.order) {
                var m = s * u
                  , g = s * c
                  , v = l * u
                  , y = l * c;
                t[0] = m + y * o,
                t[4] = v * o - g,
                t[8] = a * l,
                t[1] = a * c,
                t[5] = a * u,
                t[9] = -o,
                t[2] = g * o - v,
                t[6] = y + m * o,
                t[10] = a * s
            } else if ("ZXY" === e.order) {
                var b = s * u
                  , x = s * c
                  , w = l * u
                  , _ = l * c;
                t[0] = b - _ * o,
                t[4] = -a * c,
                t[8] = w + x * o,
                t[1] = x + w * o,
                t[5] = a * u,
                t[9] = _ - b * o,
                t[2] = -a * l,
                t[6] = o,
                t[10] = a * s
            } else if ("ZYX" === e.order) {
                var S = a * u
                  , E = a * c
                  , M = o * u
                  , T = o * c;
                t[0] = s * u,
                t[4] = M * l - E,
                t[8] = S * l + T,
                t[1] = s * c,
                t[5] = T * l + S,
                t[9] = E * l - M,
                t[2] = -l,
                t[6] = o * s,
                t[10] = a * s
            } else if ("YZX" === e.order) {
                var A = a * s
                  , P = a * l
                  , C = o * s
                  , L = o * l;
                t[0] = s * u,
                t[4] = L - A * c,
                t[8] = C * c + P,
                t[1] = c,
                t[5] = a * u,
                t[9] = -o * u,
                t[2] = -l * u,
                t[6] = P * c + C,
                t[10] = A - L * c
            } else if ("XZY" === e.order) {
                var R = a * s
                  , k = a * l
                  , D = o * s
                  , I = o * l;
                t[0] = s * u,
                t[4] = -c,
                t[8] = l * u,
                t[1] = R * c + I,
                t[5] = a * u,
                t[9] = k * c - D,
                t[2] = D * c - k,
                t[6] = o * u,
                t[10] = I * c + R
            }
            return t[3] = 0,
            t[7] = 0,
            t[11] = 0,
            t[12] = 0,
            t[13] = 0,
            t[14] = 0,
            t[15] = 1,
            this
        },
        makeRotationFromQuaternion: function(e) {
            return this.compose(sr, e, lr)
        },
        lookAt: function(e, t, n) {
            var r = this.elements;
            return hr.subVectors(e, t),
            0 === hr.lengthSq() && (hr.z = 1),
            hr.normalize(),
            ur.crossVectors(n, hr),
            0 === ur.lengthSq() && (1 === Math.abs(n.z) ? hr.x += 1e-4 : hr.z += 1e-4,
            hr.normalize(),
            ur.crossVectors(n, hr)),
            ur.normalize(),
            cr.crossVectors(hr, ur),
            r[0] = ur.x,
            r[4] = cr.x,
            r[8] = hr.x,
            r[1] = ur.y,
            r[5] = cr.y,
            r[9] = hr.y,
            r[2] = ur.z,
            r[6] = cr.z,
            r[10] = hr.z,
            this
        },
        multiply: function(e, t) {
            return void 0 !== t ? (console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),
            this.multiplyMatrices(e, t)) : this.multiplyMatrices(this, e)
        },
        premultiply: function(e) {
            return this.multiplyMatrices(e, this)
        },
        multiplyMatrices: function(e, t) {
            var n = e.elements
              , r = t.elements
              , i = this.elements
              , a = n[0]
              , o = n[4]
              , s = n[8]
              , l = n[12]
              , u = n[1]
              , c = n[5]
              , h = n[9]
              , p = n[13]
              , f = n[2]
              , d = n[6]
              , m = n[10]
              , g = n[14]
              , v = n[3]
              , y = n[7]
              , b = n[11]
              , x = n[15]
              , w = r[0]
              , _ = r[4]
              , S = r[8]
              , E = r[12]
              , M = r[1]
              , T = r[5]
              , A = r[9]
              , P = r[13]
              , C = r[2]
              , L = r[6]
              , R = r[10]
              , k = r[14]
              , D = r[3]
              , I = r[7]
              , O = r[11]
              , F = r[15];
            return i[0] = a * w + o * M + s * C + l * D,
            i[4] = a * _ + o * T + s * L + l * I,
            i[8] = a * S + o * A + s * R + l * O,
            i[12] = a * E + o * P + s * k + l * F,
            i[1] = u * w + c * M + h * C + p * D,
            i[5] = u * _ + c * T + h * L + p * I,
            i[9] = u * S + c * A + h * R + p * O,
            i[13] = u * E + c * P + h * k + p * F,
            i[2] = f * w + d * M + m * C + g * D,
            i[6] = f * _ + d * T + m * L + g * I,
            i[10] = f * S + d * A + m * R + g * O,
            i[14] = f * E + d * P + m * k + g * F,
            i[3] = v * w + y * M + b * C + x * D,
            i[7] = v * _ + y * T + b * L + x * I,
            i[11] = v * S + y * A + b * R + x * O,
            i[15] = v * E + y * P + b * k + x * F,
            this
        },
        multiplyScalar: function(e) {
            var t = this.elements;
            return t[0] *= e,
            t[4] *= e,
            t[8] *= e,
            t[12] *= e,
            t[1] *= e,
            t[5] *= e,
            t[9] *= e,
            t[13] *= e,
            t[2] *= e,
            t[6] *= e,
            t[10] *= e,
            t[14] *= e,
            t[3] *= e,
            t[7] *= e,
            t[11] *= e,
            t[15] *= e,
            this
        },
        determinant: function() {
            var e = this.elements
              , t = e[0]
              , n = e[4]
              , r = e[8]
              , i = e[12]
              , a = e[1]
              , o = e[5]
              , s = e[9]
              , l = e[13]
              , u = e[2]
              , c = e[6]
              , h = e[10]
              , p = e[14];
            return e[3] * (+i * s * c - r * l * c - i * o * h + n * l * h + r * o * p - n * s * p) + e[7] * (+t * s * p - t * l * h + i * a * h - r * a * p + r * l * u - i * s * u) + e[11] * (+t * l * c - t * o * p - i * a * c + n * a * p + i * o * u - n * l * u) + e[15] * (-r * o * u - t * s * c + t * o * h + r * a * c - n * a * h + n * s * u)
        },
        transpose: function() {
            var e, t = this.elements;
            return e = t[1],
            t[1] = t[4],
            t[4] = e,
            e = t[2],
            t[2] = t[8],
            t[8] = e,
            e = t[6],
            t[6] = t[9],
            t[9] = e,
            e = t[3],
            t[3] = t[12],
            t[12] = e,
            e = t[7],
            t[7] = t[13],
            t[13] = e,
            e = t[11],
            t[11] = t[14],
            t[14] = e,
            this
        },
        setPosition: function(e, t, n) {
            var r = this.elements;
            return e.isVector3 ? (r[12] = e.x,
            r[13] = e.y,
            r[14] = e.z) : (r[12] = e,
            r[13] = t,
            r[14] = n),
            this
        },
        getInverse: function(e, t) {
            void 0 !== t && console.warn("THREE.Matrix4: .getInverse() can no longer be configured to throw on degenerate.");
            var n = this.elements
              , r = e.elements
              , i = r[0]
              , a = r[1]
              , o = r[2]
              , s = r[3]
              , l = r[4]
              , u = r[5]
              , c = r[6]
              , h = r[7]
              , p = r[8]
              , f = r[9]
              , d = r[10]
              , m = r[11]
              , g = r[12]
              , v = r[13]
              , y = r[14]
              , b = r[15]
              , x = f * y * h - v * d * h + v * c * m - u * y * m - f * c * b + u * d * b
              , w = g * d * h - p * y * h - g * c * m + l * y * m + p * c * b - l * d * b
              , _ = p * v * h - g * f * h + g * u * m - l * v * m - p * u * b + l * f * b
              , S = g * f * c - p * v * c - g * u * d + l * v * d + p * u * y - l * f * y
              , E = i * x + a * w + o * _ + s * S;
            if (0 === E)
                return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
            var M = 1 / E;
            return n[0] = x * M,
            n[1] = (v * d * s - f * y * s - v * o * m + a * y * m + f * o * b - a * d * b) * M,
            n[2] = (u * y * s - v * c * s + v * o * h - a * y * h - u * o * b + a * c * b) * M,
            n[3] = (f * c * s - u * d * s - f * o * h + a * d * h + u * o * m - a * c * m) * M,
            n[4] = w * M,
            n[5] = (p * y * s - g * d * s + g * o * m - i * y * m - p * o * b + i * d * b) * M,
            n[6] = (g * c * s - l * y * s - g * o * h + i * y * h + l * o * b - i * c * b) * M,
            n[7] = (l * d * s - p * c * s + p * o * h - i * d * h - l * o * m + i * c * m) * M,
            n[8] = _ * M,
            n[9] = (g * f * s - p * v * s - g * a * m + i * v * m + p * a * b - i * f * b) * M,
            n[10] = (l * v * s - g * u * s + g * a * h - i * v * h - l * a * b + i * u * b) * M,
            n[11] = (p * u * s - l * f * s - p * a * h + i * f * h + l * a * m - i * u * m) * M,
            n[12] = S * M,
            n[13] = (p * v * o - g * f * o + g * a * d - i * v * d - p * a * y + i * f * y) * M,
            n[14] = (g * u * o - l * v * o - g * a * c + i * v * c + l * a * y - i * u * y) * M,
            n[15] = (l * f * o - p * u * o + p * a * c - i * f * c - l * a * d + i * u * d) * M,
            this
        },
        scale: function(e) {
            var t = this.elements
              , n = e.x
              , r = e.y
              , i = e.z;
            return t[0] *= n,
            t[4] *= r,
            t[8] *= i,
            t[1] *= n,
            t[5] *= r,
            t[9] *= i,
            t[2] *= n,
            t[6] *= r,
            t[10] *= i,
            t[3] *= n,
            t[7] *= r,
            t[11] *= i,
            this
        },
        getMaxScaleOnAxis: function() {
            var e = this.elements
              , t = e[0] * e[0] + e[1] * e[1] + e[2] * e[2]
              , n = e[4] * e[4] + e[5] * e[5] + e[6] * e[6]
              , r = e[8] * e[8] + e[9] * e[9] + e[10] * e[10];
            return Math.sqrt(Math.max(t, n, r))
        },
        makeTranslation: function(e, t, n) {
            return this.set(1, 0, 0, e, 0, 1, 0, t, 0, 0, 1, n, 0, 0, 0, 1),
            this
        },
        makeRotationX: function(e) {
            var t = Math.cos(e)
              , n = Math.sin(e);
            return this.set(1, 0, 0, 0, 0, t, -n, 0, 0, n, t, 0, 0, 0, 0, 1),
            this
        },
        makeRotationY: function(e) {
            var t = Math.cos(e)
              , n = Math.sin(e);
            return this.set(t, 0, n, 0, 0, 1, 0, 0, -n, 0, t, 0, 0, 0, 0, 1),
            this
        },
        makeRotationZ: function(e) {
            var t = Math.cos(e)
              , n = Math.sin(e);
            return this.set(t, -n, 0, 0, n, t, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
            this
        },
        makeRotationAxis: function(e, t) {
            var n = Math.cos(t)
              , r = Math.sin(t)
              , i = 1 - n
              , a = e.x
              , o = e.y
              , s = e.z
              , l = i * a
              , u = i * o;
            return this.set(l * a + n, l * o - r * s, l * s + r * o, 0, l * o + r * s, u * o + n, u * s - r * a, 0, l * s - r * o, u * s + r * a, i * s * s + n, 0, 0, 0, 0, 1),
            this
        },
        makeScale: function(e, t, n) {
            return this.set(e, 0, 0, 0, 0, t, 0, 0, 0, 0, n, 0, 0, 0, 0, 1),
            this
        },
        makeShear: function(e, t, n) {
            return this.set(1, t, n, 0, e, 1, n, 0, e, t, 1, 0, 0, 0, 0, 1),
            this
        },
        compose: function(e, t, n) {
            var r = this.elements
              , i = t._x
              , a = t._y
              , o = t._z
              , s = t._w
              , l = i + i
              , u = a + a
              , c = o + o
              , h = i * l
              , p = i * u
              , f = i * c
              , d = a * u
              , m = a * c
              , g = o * c
              , v = s * l
              , y = s * u
              , b = s * c
              , x = n.x
              , w = n.y
              , _ = n.z;
            return r[0] = (1 - (d + g)) * x,
            r[1] = (p + b) * x,
            r[2] = (f - y) * x,
            r[3] = 0,
            r[4] = (p - b) * w,
            r[5] = (1 - (h + g)) * w,
            r[6] = (m + v) * w,
            r[7] = 0,
            r[8] = (f + y) * _,
            r[9] = (m - v) * _,
            r[10] = (1 - (h + d)) * _,
            r[11] = 0,
            r[12] = e.x,
            r[13] = e.y,
            r[14] = e.z,
            r[15] = 1,
            this
        },
        decompose: function(e, t, n) {
            var r = this.elements
              , i = ar.set(r[0], r[1], r[2]).length()
              , a = ar.set(r[4], r[5], r[6]).length()
              , o = ar.set(r[8], r[9], r[10]).length();
            this.determinant() < 0 && (i = -i),
            e.x = r[12],
            e.y = r[13],
            e.z = r[14],
            or.copy(this);
            var s = 1 / i
              , l = 1 / a
              , u = 1 / o;
            return or.elements[0] *= s,
            or.elements[1] *= s,
            or.elements[2] *= s,
            or.elements[4] *= l,
            or.elements[5] *= l,
            or.elements[6] *= l,
            or.elements[8] *= u,
            or.elements[9] *= u,
            or.elements[10] *= u,
            t.setFromRotationMatrix(or),
            n.x = i,
            n.y = a,
            n.z = o,
            this
        },
        makePerspective: function(e, t, n, r, i, a) {
            void 0 === a && console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");
            var o = this.elements
              , s = 2 * i / (t - e)
              , l = 2 * i / (n - r)
              , u = (t + e) / (t - e)
              , c = (n + r) / (n - r)
              , h = -(a + i) / (a - i)
              , p = -2 * a * i / (a - i);
            return o[0] = s,
            o[4] = 0,
            o[8] = u,
            o[12] = 0,
            o[1] = 0,
            o[5] = l,
            o[9] = c,
            o[13] = 0,
            o[2] = 0,
            o[6] = 0,
            o[10] = h,
            o[14] = p,
            o[3] = 0,
            o[7] = 0,
            o[11] = -1,
            o[15] = 0,
            this
        },
        makeOrthographic: function(e, t, n, r, i, a) {
            var o = this.elements
              , s = 1 / (t - e)
              , l = 1 / (n - r)
              , u = 1 / (a - i)
              , c = (t + e) * s
              , h = (n + r) * l
              , p = (a + i) * u;
            return o[0] = 2 * s,
            o[4] = 0,
            o[8] = 0,
            o[12] = -c,
            o[1] = 0,
            o[5] = 2 * l,
            o[9] = 0,
            o[13] = -h,
            o[2] = 0,
            o[6] = 0,
            o[10] = -2 * u,
            o[14] = -p,
            o[3] = 0,
            o[7] = 0,
            o[11] = 0,
            o[15] = 1,
            this
        },
        equals: function(e) {
            for (var t = this.elements, n = e.elements, r = 0; r < 16; r++)
                if (t[r] !== n[r])
                    return !1;
            return !0
        },
        fromArray: function(e, t) {
            void 0 === t && (t = 0);
            for (var n = 0; n < 16; n++)
                this.elements[n] = e[n + t];
            return this
        },
        toArray: function(e, t) {
            void 0 === e && (e = []),
            void 0 === t && (t = 0);
            var n = this.elements;
            return e[t] = n[0],
            e[t + 1] = n[1],
            e[t + 2] = n[2],
            e[t + 3] = n[3],
            e[t + 4] = n[4],
            e[t + 5] = n[5],
            e[t + 6] = n[6],
            e[t + 7] = n[7],
            e[t + 8] = n[8],
            e[t + 9] = n[9],
            e[t + 10] = n[10],
            e[t + 11] = n[11],
            e[t + 12] = n[12],
            e[t + 13] = n[13],
            e[t + 14] = n[14],
            e[t + 15] = n[15],
            e
        }
    });
    var fr = new pr
      , dr = new tr;
    function mr() {
        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0
          , t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0
          , n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0
          , r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : mr.DefaultOrder;
        this._x = e,
        this._y = t,
        this._z = n,
        this._order = r
    }
    function gr() {
        this.mask = 1
    }
    mr.RotationOrders = ["XYZ", "YZX", "ZXY", "XZY", "YXZ", "ZYX"],
    mr.DefaultOrder = "XYZ",
    Object.defineProperties(mr.prototype, {
        x: {
            get: function() {
                return this._x
            },
            set: function(e) {
                this._x = e,
                this._onChangeCallback()
            }
        },
        y: {
            get: function() {
                return this._y
            },
            set: function(e) {
                this._y = e,
                this._onChangeCallback()
            }
        },
        z: {
            get: function() {
                return this._z
            },
            set: function(e) {
                this._z = e,
                this._onChangeCallback()
            }
        },
        order: {
            get: function() {
                return this._order
            },
            set: function(e) {
                this._order = e,
                this._onChangeCallback()
            }
        }
    }),
    Object.assign(mr.prototype, {
        isEuler: !0,
        set: function(e, t, n, r) {
            return this._x = e,
            this._y = t,
            this._z = n,
            this._order = r || this._order,
            this._onChangeCallback(),
            this
        },
        clone: function() {
            return new this.constructor(this._x,this._y,this._z,this._order)
        },
        copy: function(e) {
            return this._x = e._x,
            this._y = e._y,
            this._z = e._z,
            this._order = e._order,
            this._onChangeCallback(),
            this
        },
        setFromRotationMatrix: function(e, t, n) {
            var r = qn.clamp
              , i = e.elements
              , a = i[0]
              , o = i[4]
              , s = i[8]
              , l = i[1]
              , u = i[5]
              , c = i[9]
              , h = i[2]
              , p = i[6]
              , f = i[10];
            switch (t = t || this._order) {
            case "XYZ":
                this._y = Math.asin(r(s, -1, 1)),
                Math.abs(s) < .9999999 ? (this._x = Math.atan2(-c, f),
                this._z = Math.atan2(-o, a)) : (this._x = Math.atan2(p, u),
                this._z = 0);
                break;
            case "YXZ":
                this._x = Math.asin(-r(c, -1, 1)),
                Math.abs(c) < .9999999 ? (this._y = Math.atan2(s, f),
                this._z = Math.atan2(l, u)) : (this._y = Math.atan2(-h, a),
                this._z = 0);
                break;
            case "ZXY":
                this._x = Math.asin(r(p, -1, 1)),
                Math.abs(p) < .9999999 ? (this._y = Math.atan2(-h, f),
                this._z = Math.atan2(-o, u)) : (this._y = 0,
                this._z = Math.atan2(l, a));
                break;
            case "ZYX":
                this._y = Math.asin(-r(h, -1, 1)),
                Math.abs(h) < .9999999 ? (this._x = Math.atan2(p, f),
                this._z = Math.atan2(l, a)) : (this._x = 0,
                this._z = Math.atan2(-o, u));
                break;
            case "YZX":
                this._z = Math.asin(r(l, -1, 1)),
                Math.abs(l) < .9999999 ? (this._x = Math.atan2(-c, u),
                this._y = Math.atan2(-h, a)) : (this._x = 0,
                this._y = Math.atan2(s, f));
                break;
            case "XZY":
                this._z = Math.asin(-r(o, -1, 1)),
                Math.abs(o) < .9999999 ? (this._x = Math.atan2(p, u),
                this._y = Math.atan2(s, a)) : (this._x = Math.atan2(-c, f),
                this._y = 0);
                break;
            default:
                console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: " + t)
            }
            return this._order = t,
            !1 !== n && this._onChangeCallback(),
            this
        },
        setFromQuaternion: function(e, t, n) {
            return fr.makeRotationFromQuaternion(e),
            this.setFromRotationMatrix(fr, t, n)
        },
        setFromVector3: function(e, t) {
            return this.set(e.x, e.y, e.z, t || this._order)
        },
        reorder: function(e) {
            return dr.setFromEuler(this),
            this.setFromQuaternion(dr, e)
        },
        equals: function(e) {
            return e._x === this._x && e._y === this._y && e._z === this._z && e._order === this._order
        },
        fromArray: function(e) {
            return this._x = e[0],
            this._y = e[1],
            this._z = e[2],
            void 0 !== e[3] && (this._order = e[3]),
            this._onChangeCallback(),
            this
        },
        toArray: function(e, t) {
            return void 0 === e && (e = []),
            void 0 === t && (t = 0),
            e[t] = this._x,
            e[t + 1] = this._y,
            e[t + 2] = this._z,
            e[t + 3] = this._order,
            e
        },
        toVector3: function(e) {
            return e ? e.set(this._x, this._y, this._z) : new ir(this._x,this._y,this._z)
        },
        _onChange: function(e) {
            return this._onChangeCallback = e,
            this
        },
        _onChangeCallback: function() {}
    }),
    Object.assign(gr.prototype, {
        set: function(e) {
            this.mask = 1 << e | 0
        },
        enable: function(e) {
            this.mask |= 1 << e | 0
        },
        enableAll: function() {
            this.mask = -1
        },
        toggle: function(e) {
            this.mask ^= 1 << e | 0
        },
        disable: function(e) {
            this.mask &= ~(1 << e | 0)
        },
        disableAll: function() {
            this.mask = 0
        },
        test: function(e) {
            return 0 !== (this.mask & e.mask)
        }
    });
    var vr = 0
      , yr = new ir
      , br = new tr
      , xr = new pr
      , wr = new ir
      , _r = new ir
      , Sr = new ir
      , Er = new tr
      , Mr = new ir(1,0,0)
      , Tr = new ir(0,1,0)
      , Ar = new ir(0,0,1)
      , Pr = {
        type: "added"
    }
      , Cr = {
        type: "removed"
    };
    function Lr() {
        Object.defineProperty(this, "id", {
            value: vr++
        }),
        this.uuid = qn.generateUUID(),
        this.name = "",
        this.type = "Object3D",
        this.parent = null,
        this.children = [],
        this.up = Lr.DefaultUp.clone();
        var e = new ir
          , t = new mr
          , n = new tr
          , r = new ir(1,1,1);
        t._onChange((function() {
            n.setFromEuler(t, !1)
        }
        )),
        n._onChange((function() {
            t.setFromQuaternion(n, void 0, !1)
        }
        )),
        Object.defineProperties(this, {
            position: {
                configurable: !0,
                enumerable: !0,
                value: e
            },
            rotation: {
                configurable: !0,
                enumerable: !0,
                value: t
            },
            quaternion: {
                configurable: !0,
                enumerable: !0,
                value: n
            },
            scale: {
                configurable: !0,
                enumerable: !0,
                value: r
            },
            modelViewMatrix: {
                value: new pr
            },
            normalMatrix: {
                value: new Yn
            }
        }),
        this.matrix = new pr,
        this.matrixWorld = new pr,
        this.matrixAutoUpdate = Lr.DefaultMatrixAutoUpdate,
        this.matrixWorldNeedsUpdate = !1,
        this.layers = new gr,
        this.visible = !0,
        this.castShadow = !1,
        this.receiveShadow = !1,
        this.frustumCulled = !0,
        this.renderOrder = 0,
        this.userData = {}
    }
    function Rr() {
        Lr.call(this),
        this.type = "Scene",
        this.background = null,
        this.environment = null,
        this.fog = null,
        this.overrideMaterial = null,
        this.autoUpdate = !0,
        "undefined" !== typeof __THREE_DEVTOOLS__ && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{
            detail: this
        }))
    }
    Lr.DefaultUp = new ir(0,1,0),
    Lr.DefaultMatrixAutoUpdate = !0,
    Lr.prototype = Object.assign(Object.create(Hn.prototype), {
        constructor: Lr,
        isObject3D: !0,
        onBeforeRender: function() {},
        onAfterRender: function() {},
        applyMatrix4: function(e) {
            this.matrixAutoUpdate && this.updateMatrix(),
            this.matrix.premultiply(e),
            this.matrix.decompose(this.position, this.quaternion, this.scale)
        },
        applyQuaternion: function(e) {
            return this.quaternion.premultiply(e),
            this
        },
        setRotationFromAxisAngle: function(e, t) {
            this.quaternion.setFromAxisAngle(e, t)
        },
        setRotationFromEuler: function(e) {
            this.quaternion.setFromEuler(e, !0)
        },
        setRotationFromMatrix: function(e) {
            this.quaternion.setFromRotationMatrix(e)
        },
        setRotationFromQuaternion: function(e) {
            this.quaternion.copy(e)
        },
        rotateOnAxis: function(e, t) {
            return br.setFromAxisAngle(e, t),
            this.quaternion.multiply(br),
            this
        },
        rotateOnWorldAxis: function(e, t) {
            return br.setFromAxisAngle(e, t),
            this.quaternion.premultiply(br),
            this
        },
        rotateX: function(e) {
            return this.rotateOnAxis(Mr, e)
        },
        rotateY: function(e) {
            return this.rotateOnAxis(Tr, e)
        },
        rotateZ: function(e) {
            return this.rotateOnAxis(Ar, e)
        },
        translateOnAxis: function(e, t) {
            return yr.copy(e).applyQuaternion(this.quaternion),
            this.position.add(yr.multiplyScalar(t)),
            this
        },
        translateX: function(e) {
            return this.translateOnAxis(Mr, e)
        },
        translateY: function(e) {
            return this.translateOnAxis(Tr, e)
        },
        translateZ: function(e) {
            return this.translateOnAxis(Ar, e)
        },
        localToWorld: function(e) {
            return e.applyMatrix4(this.matrixWorld)
        },
        worldToLocal: function(e) {
            return e.applyMatrix4(xr.getInverse(this.matrixWorld))
        },
        lookAt: function(e, t, n) {
            e.isVector3 ? wr.copy(e) : wr.set(e, t, n);
            var r = this.parent;
            this.updateWorldMatrix(!0, !1),
            _r.setFromMatrixPosition(this.matrixWorld),
            this.isCamera || this.isLight ? xr.lookAt(_r, wr, this.up) : xr.lookAt(wr, _r, this.up),
            this.quaternion.setFromRotationMatrix(xr),
            r && (xr.extractRotation(r.matrixWorld),
            br.setFromRotationMatrix(xr),
            this.quaternion.premultiply(br.inverse()))
        },
        add: function(e) {
            if (arguments.length > 1) {
                for (var t = 0; t < arguments.length; t++)
                    this.add(arguments[t]);
                return this
            }
            return e === this ? (console.error("THREE.Object3D.add: object can't be added as a child of itself.", e),
            this) : (e && e.isObject3D ? (null !== e.parent && e.parent.remove(e),
            e.parent = this,
            this.children.push(e),
            e.dispatchEvent(Pr)) : console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.", e),
            this)
        },
        remove: function(e) {
            if (arguments.length > 1) {
                for (var t = 0; t < arguments.length; t++)
                    this.remove(arguments[t]);
                return this
            }
            var n = this.children.indexOf(e);
            return -1 !== n && (e.parent = null,
            this.children.splice(n, 1),
            e.dispatchEvent(Cr)),
            this
        },
        attach: function(e) {
            return this.updateWorldMatrix(!0, !1),
            xr.getInverse(this.matrixWorld),
            null !== e.parent && (e.parent.updateWorldMatrix(!0, !1),
            xr.multiply(e.parent.matrixWorld)),
            e.applyMatrix4(xr),
            e.updateWorldMatrix(!1, !1),
            this.add(e),
            this
        },
        getObjectById: function(e) {
            return this.getObjectByProperty("id", e)
        },
        getObjectByName: function(e) {
            return this.getObjectByProperty("name", e)
        },
        getObjectByProperty: function(e, t) {
            if (this[e] === t)
                return this;
            for (var n = 0, r = this.children.length; n < r; n++) {
                var i = this.children[n].getObjectByProperty(e, t);
                if (void 0 !== i)
                    return i
            }
        },
        getWorldPosition: function(e) {
            return void 0 === e && (console.warn("THREE.Object3D: .getWorldPosition() target is now required"),
            e = new ir),
            this.updateMatrixWorld(!0),
            e.setFromMatrixPosition(this.matrixWorld)
        },
        getWorldQuaternion: function(e) {
            return void 0 === e && (console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),
            e = new tr),
            this.updateMatrixWorld(!0),
            this.matrixWorld.decompose(_r, e, Sr),
            e
        },
        getWorldScale: function(e) {
            return void 0 === e && (console.warn("THREE.Object3D: .getWorldScale() target is now required"),
            e = new ir),
            this.updateMatrixWorld(!0),
            this.matrixWorld.decompose(_r, Er, e),
            e
        },
        getWorldDirection: function(e) {
            void 0 === e && (console.warn("THREE.Object3D: .getWorldDirection() target is now required"),
            e = new ir),
            this.updateMatrixWorld(!0);
            var t = this.matrixWorld.elements;
            return e.set(t[8], t[9], t[10]).normalize()
        },
        raycast: function() {},
        traverse: function(e) {
            e(this);
            for (var t = this.children, n = 0, r = t.length; n < r; n++)
                t[n].traverse(e)
        },
        traverseVisible: function(e) {
            if (!1 !== this.visible) {
                e(this);
                for (var t = this.children, n = 0, r = t.length; n < r; n++)
                    t[n].traverseVisible(e)
            }
        },
        traverseAncestors: function(e) {
            var t = this.parent;
            null !== t && (e(t),
            t.traverseAncestors(e))
        },
        updateMatrix: function() {
            this.matrix.compose(this.position, this.quaternion, this.scale),
            this.matrixWorldNeedsUpdate = !0
        },
        updateMatrixWorld: function(e) {
            this.matrixAutoUpdate && this.updateMatrix(),
            (this.matrixWorldNeedsUpdate || e) && (null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix),
            this.matrixWorldNeedsUpdate = !1,
            e = !0);
            for (var t = this.children, n = 0, r = t.length; n < r; n++)
                t[n].updateMatrixWorld(e)
        },
        updateWorldMatrix: function(e, t) {
            var n = this.parent;
            if (!0 === e && null !== n && n.updateWorldMatrix(!0, !1),
            this.matrixAutoUpdate && this.updateMatrix(),
            null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix),
            !0 === t)
                for (var r = this.children, i = 0, a = r.length; i < a; i++)
                    r[i].updateWorldMatrix(!1, !0)
        },
        toJSON: function(e) {
            var t = void 0 === e || "string" === typeof e
              , n = {};
            t && (e = {
                geometries: {},
                materials: {},
                textures: {},
                images: {},
                shapes: {}
            },
            n.metadata = {
                version: 4.5,
                type: "Object",
                generator: "Object3D.toJSON"
            });
            var r = {};
            function i(t, n) {
                return void 0 === t[n.uuid] && (t[n.uuid] = n.toJSON(e)),
                n.uuid
            }
            if (r.uuid = this.uuid,
            r.type = this.type,
            "" !== this.name && (r.name = this.name),
            !0 === this.castShadow && (r.castShadow = !0),
            !0 === this.receiveShadow && (r.receiveShadow = !0),
            !1 === this.visible && (r.visible = !1),
            !1 === this.frustumCulled && (r.frustumCulled = !1),
            0 !== this.renderOrder && (r.renderOrder = this.renderOrder),
            "{}" !== JSON.stringify(this.userData) && (r.userData = this.userData),
            r.layers = this.layers.mask,
            r.matrix = this.matrix.toArray(),
            !1 === this.matrixAutoUpdate && (r.matrixAutoUpdate = !1),
            this.isInstancedMesh && (r.type = "InstancedMesh",
            r.count = this.count,
            r.instanceMatrix = this.instanceMatrix.toJSON()),
            this.isMesh || this.isLine || this.isPoints) {
                r.geometry = i(e.geometries, this.geometry);
                var a = this.geometry.parameters;
                if (void 0 !== a && void 0 !== a.shapes) {
                    var o = a.shapes;
                    if (Array.isArray(o))
                        for (var s = 0, l = o.length; s < l; s++) {
                            var u = o[s];
                            i(e.shapes, u)
                        }
                    else
                        i(e.shapes, o)
                }
            }
            if (void 0 !== this.material)
                if (Array.isArray(this.material)) {
                    for (var c = [], h = 0, p = this.material.length; h < p; h++)
                        c.push(i(e.materials, this.material[h]));
                    r.material = c
                } else
                    r.material = i(e.materials, this.material);
            if (this.children.length > 0) {
                r.children = [];
                for (var f = 0; f < this.children.length; f++)
                    r.children.push(this.children[f].toJSON(e).object)
            }
            if (t) {
                var d = b(e.geometries)
                  , m = b(e.materials)
                  , g = b(e.textures)
                  , v = b(e.images)
                  , y = b(e.shapes);
                d.length > 0 && (n.geometries = d),
                m.length > 0 && (n.materials = m),
                g.length > 0 && (n.textures = g),
                v.length > 0 && (n.images = v),
                y.length > 0 && (n.shapes = y)
            }
            return n.object = r,
            n;
            function b(e) {
                var t = [];
                for (var n in e) {
                    var r = e[n];
                    delete r.metadata,
                    t.push(r)
                }
                return t
            }
        },
        clone: function(e) {
            return (new this.constructor).copy(this, e)
        },
        copy: function(e, t) {
            if (void 0 === t && (t = !0),
            this.name = e.name,
            this.up.copy(e.up),
            this.position.copy(e.position),
            this.rotation.order = e.rotation.order,
            this.quaternion.copy(e.quaternion),
            this.scale.copy(e.scale),
            this.matrix.copy(e.matrix),
            this.matrixWorld.copy(e.matrixWorld),
            this.matrixAutoUpdate = e.matrixAutoUpdate,
            this.matrixWorldNeedsUpdate = e.matrixWorldNeedsUpdate,
            this.layers.mask = e.layers.mask,
            this.visible = e.visible,
            this.castShadow = e.castShadow,
            this.receiveShadow = e.receiveShadow,
            this.frustumCulled = e.frustumCulled,
            this.renderOrder = e.renderOrder,
            this.userData = JSON.parse(JSON.stringify(e.userData)),
            !0 === t)
                for (var n = 0; n < e.children.length; n++) {
                    var r = e.children[n];
                    this.add(r.clone())
                }
            return this
        }
    }),
    Rr.prototype = Object.assign(Object.create(Lr.prototype), {
        constructor: Rr,
        isScene: !0,
        copy: function(e, t) {
            return Lr.prototype.copy.call(this, e, t),
            null !== e.background && (this.background = e.background.clone()),
            null !== e.environment && (this.environment = e.environment.clone()),
            null !== e.fog && (this.fog = e.fog.clone()),
            null !== e.overrideMaterial && (this.overrideMaterial = e.overrideMaterial.clone()),
            this.autoUpdate = e.autoUpdate,
            this.matrixAutoUpdate = e.matrixAutoUpdate,
            this
        },
        toJSON: function(e) {
            var t = Lr.prototype.toJSON.call(this, e);
            return null !== this.background && (t.object.background = this.background.toJSON(e)),
            null !== this.environment && (t.object.environment = this.environment.toJSON(e)),
            null !== this.fog && (t.object.fog = this.fog.toJSON()),
            t
        },
        dispose: function() {
            this.dispatchEvent({
                type: "dispose"
            })
        }
    });
    var kr = [new ir, new ir, new ir, new ir, new ir, new ir, new ir, new ir]
      , Dr = new ir
      , Ir = new Wr
      , Or = new ir
      , Fr = new ir
      , Nr = new ir
      , Br = new ir
      , zr = new ir
      , Gr = new ir
      , Hr = new ir
      , Vr = new ir
      , jr = new ir
      , Ur = new ir;
    function Wr(e, t) {
        this.min = void 0 !== e ? e : new ir(1 / 0,1 / 0,1 / 0),
        this.max = void 0 !== t ? t : new ir(-1 / 0,-1 / 0,-1 / 0)
    }
    function qr(e, t, n, r, i) {
        for (var a = 0, o = e.length - 3; a <= o; a += 3) {
            Ur.fromArray(e, a);
            var s = i.x * Math.abs(Ur.x) + i.y * Math.abs(Ur.y) + i.z * Math.abs(Ur.z)
              , l = t.dot(Ur)
              , u = n.dot(Ur)
              , c = r.dot(Ur);
            if (Math.max(-Math.max(l, u, c), Math.min(l, u, c)) > s)
                return !1
        }
        return !0
    }
    Object.assign(Wr.prototype, {
        isBox3: !0,
        set: function(e, t) {
            return this.min.copy(e),
            this.max.copy(t),
            this
        },
        setFromArray: function(e) {
            for (var t = 1 / 0, n = 1 / 0, r = 1 / 0, i = -1 / 0, a = -1 / 0, o = -1 / 0, s = 0, l = e.length; s < l; s += 3) {
                var u = e[s]
                  , c = e[s + 1]
                  , h = e[s + 2];
                u < t && (t = u),
                c < n && (n = c),
                h < r && (r = h),
                u > i && (i = u),
                c > a && (a = c),
                h > o && (o = h)
            }
            return this.min.set(t, n, r),
            this.max.set(i, a, o),
            this
        },
        setFromBufferAttribute: function(e) {
            for (var t = 1 / 0, n = 1 / 0, r = 1 / 0, i = -1 / 0, a = -1 / 0, o = -1 / 0, s = 0, l = e.count; s < l; s++) {
                var u = e.getX(s)
                  , c = e.getY(s)
                  , h = e.getZ(s);
                u < t && (t = u),
                c < n && (n = c),
                h < r && (r = h),
                u > i && (i = u),
                c > a && (a = c),
                h > o && (o = h)
            }
            return this.min.set(t, n, r),
            this.max.set(i, a, o),
            this
        },
        setFromPoints: function(e) {
            this.makeEmpty();
            for (var t = 0, n = e.length; t < n; t++)
                this.expandByPoint(e[t]);
            return this
        },
        setFromCenterAndSize: function(e, t) {
            var n = Dr.copy(t).multiplyScalar(.5);
            return this.min.copy(e).sub(n),
            this.max.copy(e).add(n),
            this
        },
        setFromObject: function(e) {
            return this.makeEmpty(),
            this.expandByObject(e)
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(e) {
            return this.min.copy(e.min),
            this.max.copy(e.max),
            this
        },
        makeEmpty: function() {
            return this.min.x = this.min.y = this.min.z = 1 / 0,
            this.max.x = this.max.y = this.max.z = -1 / 0,
            this
        },
        isEmpty: function() {
            return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z
        },
        getCenter: function(e) {
            return void 0 === e && (console.warn("THREE.Box3: .getCenter() target is now required"),
            e = new ir),
            this.isEmpty() ? e.set(0, 0, 0) : e.addVectors(this.min, this.max).multiplyScalar(.5)
        },
        getSize: function(e) {
            return void 0 === e && (console.warn("THREE.Box3: .getSize() target is now required"),
            e = new ir),
            this.isEmpty() ? e.set(0, 0, 0) : e.subVectors(this.max, this.min)
        },
        expandByPoint: function(e) {
            return this.min.min(e),
            this.max.max(e),
            this
        },
        expandByVector: function(e) {
            return this.min.sub(e),
            this.max.add(e),
            this
        },
        expandByScalar: function(e) {
            return this.min.addScalar(-e),
            this.max.addScalar(e),
            this
        },
        expandByObject: function(e) {
            e.updateWorldMatrix(!1, !1);
            var t = e.geometry;
            void 0 !== t && (null === t.boundingBox && t.computeBoundingBox(),
            Ir.copy(t.boundingBox),
            Ir.applyMatrix4(e.matrixWorld),
            this.union(Ir));
            for (var n = e.children, r = 0, i = n.length; r < i; r++)
                this.expandByObject(n[r]);
            return this
        },
        containsPoint: function(e) {
            return !(e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y || e.z < this.min.z || e.z > this.max.z)
        },
        containsBox: function(e) {
            return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y && this.min.z <= e.min.z && e.max.z <= this.max.z
        },
        getParameter: function(e, t) {
            return void 0 === t && (console.warn("THREE.Box3: .getParameter() target is now required"),
            t = new ir),
            t.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y), (e.z - this.min.z) / (this.max.z - this.min.z))
        },
        intersectsBox: function(e) {
            return !(e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y || e.max.z < this.min.z || e.min.z > this.max.z)
        },
        intersectsSphere: function(e) {
            return this.clampPoint(e.center, Dr),
            Dr.distanceToSquared(e.center) <= e.radius * e.radius
        },
        intersectsPlane: function(e) {
            var t, n;
            return e.normal.x > 0 ? (t = e.normal.x * this.min.x,
            n = e.normal.x * this.max.x) : (t = e.normal.x * this.max.x,
            n = e.normal.x * this.min.x),
            e.normal.y > 0 ? (t += e.normal.y * this.min.y,
            n += e.normal.y * this.max.y) : (t += e.normal.y * this.max.y,
            n += e.normal.y * this.min.y),
            e.normal.z > 0 ? (t += e.normal.z * this.min.z,
            n += e.normal.z * this.max.z) : (t += e.normal.z * this.max.z,
            n += e.normal.z * this.min.z),
            t <= -e.constant && n >= -e.constant
        },
        intersectsTriangle: function(e) {
            if (this.isEmpty())
                return !1;
            this.getCenter(Hr),
            Vr.subVectors(this.max, Hr),
            Or.subVectors(e.a, Hr),
            Fr.subVectors(e.b, Hr),
            Nr.subVectors(e.c, Hr),
            Br.subVectors(Fr, Or),
            zr.subVectors(Nr, Fr),
            Gr.subVectors(Or, Nr);
            var t = [0, -Br.z, Br.y, 0, -zr.z, zr.y, 0, -Gr.z, Gr.y, Br.z, 0, -Br.x, zr.z, 0, -zr.x, Gr.z, 0, -Gr.x, -Br.y, Br.x, 0, -zr.y, zr.x, 0, -Gr.y, Gr.x, 0];
            return !!qr(t, Or, Fr, Nr, Vr) && (!!qr(t = [1, 0, 0, 0, 1, 0, 0, 0, 1], Or, Fr, Nr, Vr) && (jr.crossVectors(Br, zr),
            qr(t = [jr.x, jr.y, jr.z], Or, Fr, Nr, Vr)))
        },
        clampPoint: function(e, t) {
            return void 0 === t && (console.warn("THREE.Box3: .clampPoint() target is now required"),
            t = new ir),
            t.copy(e).clamp(this.min, this.max)
        },
        distanceToPoint: function(e) {
            return Dr.copy(e).clamp(this.min, this.max).sub(e).length()
        },
        getBoundingSphere: function(e) {
            return void 0 === e && console.error("THREE.Box3: .getBoundingSphere() target is now required"),
            this.getCenter(e.center),
            e.radius = .5 * this.getSize(Dr).length(),
            e
        },
        intersect: function(e) {
            return this.min.max(e.min),
            this.max.min(e.max),
            this.isEmpty() && this.makeEmpty(),
            this
        },
        union: function(e) {
            return this.min.min(e.min),
            this.max.max(e.max),
            this
        },
        applyMatrix4: function(e) {
            return this.isEmpty() || (kr[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(e),
            kr[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(e),
            kr[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(e),
            kr[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(e),
            kr[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(e),
            kr[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(e),
            kr[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(e),
            kr[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(e),
            this.setFromPoints(kr)),
            this
        },
        translate: function(e) {
            return this.min.add(e),
            this.max.add(e),
            this
        },
        equals: function(e) {
            return e.min.equals(this.min) && e.max.equals(this.max)
        }
    });
    var Xr = new Wr;
    function Yr(e, t) {
        this.center = void 0 !== e ? e : new ir,
        this.radius = void 0 !== t ? t : -1
    }
    Object.assign(Yr.prototype, {
        set: function(e, t) {
            return this.center.copy(e),
            this.radius = t,
            this
        },
        setFromPoints: function(e, t) {
            var n = this.center;
            void 0 !== t ? n.copy(t) : Xr.setFromPoints(e).getCenter(n);
            for (var r = 0, i = 0, a = e.length; i < a; i++)
                r = Math.max(r, n.distanceToSquared(e[i]));
            return this.radius = Math.sqrt(r),
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(e) {
            return this.center.copy(e.center),
            this.radius = e.radius,
            this
        },
        isEmpty: function() {
            return this.radius < 0
        },
        makeEmpty: function() {
            return this.center.set(0, 0, 0),
            this.radius = -1,
            this
        },
        containsPoint: function(e) {
            return e.distanceToSquared(this.center) <= this.radius * this.radius
        },
        distanceToPoint: function(e) {
            return e.distanceTo(this.center) - this.radius
        },
        intersectsSphere: function(e) {
            var t = this.radius + e.radius;
            return e.center.distanceToSquared(this.center) <= t * t
        },
        intersectsBox: function(e) {
            return e.intersectsSphere(this)
        },
        intersectsPlane: function(e) {
            return Math.abs(e.distanceToPoint(this.center)) <= this.radius
        },
        clampPoint: function(e, t) {
            var n = this.center.distanceToSquared(e);
            return void 0 === t && (console.warn("THREE.Sphere: .clampPoint() target is now required"),
            t = new ir),
            t.copy(e),
            n > this.radius * this.radius && (t.sub(this.center).normalize(),
            t.multiplyScalar(this.radius).add(this.center)),
            t
        },
        getBoundingBox: function(e) {
            return void 0 === e && (console.warn("THREE.Sphere: .getBoundingBox() target is now required"),
            e = new Wr),
            this.isEmpty() ? (e.makeEmpty(),
            e) : (e.set(this.center, this.center),
            e.expandByScalar(this.radius),
            e)
        },
        applyMatrix4: function(e) {
            return this.center.applyMatrix4(e),
            this.radius = this.radius * e.getMaxScaleOnAxis(),
            this
        },
        translate: function(e) {
            return this.center.add(e),
            this
        },
        equals: function(e) {
            return e.center.equals(this.center) && e.radius === this.radius
        }
    });
    var Zr = new ir
      , $r = new ir
      , Jr = new ir
      , Kr = new ir
      , Qr = new ir
      , ei = new ir
      , ti = new ir;
    function ni(e, t) {
        this.origin = void 0 !== e ? e : new ir,
        this.direction = void 0 !== t ? t : new ir(0,0,-1)
    }
    Object.assign(ni.prototype, {
        set: function(e, t) {
            return this.origin.copy(e),
            this.direction.copy(t),
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(e) {
            return this.origin.copy(e.origin),
            this.direction.copy(e.direction),
            this
        },
        at: function(e, t) {
            return void 0 === t && (console.warn("THREE.Ray: .at() target is now required"),
            t = new ir),
            t.copy(this.direction).multiplyScalar(e).add(this.origin)
        },
        lookAt: function(e) {
            return this.direction.copy(e).sub(this.origin).normalize(),
            this
        },
        recast: function(e) {
            return this.origin.copy(this.at(e, Zr)),
            this
        },
        closestPointToPoint: function(e, t) {
            void 0 === t && (console.warn("THREE.Ray: .closestPointToPoint() target is now required"),
            t = new ir),
            t.subVectors(e, this.origin);
            var n = t.dot(this.direction);
            return n < 0 ? t.copy(this.origin) : t.copy(this.direction).multiplyScalar(n).add(this.origin)
        },
        distanceToPoint: function(e) {
            return Math.sqrt(this.distanceSqToPoint(e))
        },
        distanceSqToPoint: function(e) {
            var t = Zr.subVectors(e, this.origin).dot(this.direction);
            return t < 0 ? this.origin.distanceToSquared(e) : (Zr.copy(this.direction).multiplyScalar(t).add(this.origin),
            Zr.distanceToSquared(e))
        },
        distanceSqToSegment: function(e, t, n, r) {
            $r.copy(e).add(t).multiplyScalar(.5),
            Jr.copy(t).sub(e).normalize(),
            Kr.copy(this.origin).sub($r);
            var i, a, o, s, l = .5 * e.distanceTo(t), u = -this.direction.dot(Jr), c = Kr.dot(this.direction), h = -Kr.dot(Jr), p = Kr.lengthSq(), f = Math.abs(1 - u * u);
            if (f > 0)
                if (a = u * c - h,
                s = l * f,
                (i = u * h - c) >= 0)
                    if (a >= -s)
                        if (a <= s) {
                            var d = 1 / f;
                            o = (i *= d) * (i + u * (a *= d) + 2 * c) + a * (u * i + a + 2 * h) + p
                        } else
                            a = l,
                            o = -(i = Math.max(0, -(u * a + c))) * i + a * (a + 2 * h) + p;
                    else
                        a = -l,
                        o = -(i = Math.max(0, -(u * a + c))) * i + a * (a + 2 * h) + p;
                else
                    a <= -s ? o = -(i = Math.max(0, -(-u * l + c))) * i + (a = i > 0 ? -l : Math.min(Math.max(-l, -h), l)) * (a + 2 * h) + p : a <= s ? (i = 0,
                    o = (a = Math.min(Math.max(-l, -h), l)) * (a + 2 * h) + p) : o = -(i = Math.max(0, -(u * l + c))) * i + (a = i > 0 ? l : Math.min(Math.max(-l, -h), l)) * (a + 2 * h) + p;
            else
                a = u > 0 ? -l : l,
                o = -(i = Math.max(0, -(u * a + c))) * i + a * (a + 2 * h) + p;
            return n && n.copy(this.direction).multiplyScalar(i).add(this.origin),
            r && r.copy(Jr).multiplyScalar(a).add($r),
            o
        },
        intersectSphere: function(e, t) {
            Zr.subVectors(e.center, this.origin);
            var n = Zr.dot(this.direction)
              , r = Zr.dot(Zr) - n * n
              , i = e.radius * e.radius;
            if (r > i)
                return null;
            var a = Math.sqrt(i - r)
              , o = n - a
              , s = n + a;
            return o < 0 && s < 0 ? null : o < 0 ? this.at(s, t) : this.at(o, t)
        },
        intersectsSphere: function(e) {
            return this.distanceSqToPoint(e.center) <= e.radius * e.radius
        },
        distanceToPlane: function(e) {
            var t = e.normal.dot(this.direction);
            if (0 === t)
                return 0 === e.distanceToPoint(this.origin) ? 0 : null;
            var n = -(this.origin.dot(e.normal) + e.constant) / t;
            return n >= 0 ? n : null
        },
        intersectPlane: function(e, t) {
            var n = this.distanceToPlane(e);
            return null === n ? null : this.at(n, t)
        },
        intersectsPlane: function(e) {
            var t = e.distanceToPoint(this.origin);
            return 0 === t || e.normal.dot(this.direction) * t < 0
        },
        intersectBox: function(e, t) {
            var n, r, i, a, o, s, l = 1 / this.direction.x, u = 1 / this.direction.y, c = 1 / this.direction.z, h = this.origin;
            return l >= 0 ? (n = (e.min.x - h.x) * l,
            r = (e.max.x - h.x) * l) : (n = (e.max.x - h.x) * l,
            r = (e.min.x - h.x) * l),
            u >= 0 ? (i = (e.min.y - h.y) * u,
            a = (e.max.y - h.y) * u) : (i = (e.max.y - h.y) * u,
            a = (e.min.y - h.y) * u),
            n > a || i > r ? null : ((i > n || n !== n) && (n = i),
            (a < r || r !== r) && (r = a),
            c >= 0 ? (o = (e.min.z - h.z) * c,
            s = (e.max.z - h.z) * c) : (o = (e.max.z - h.z) * c,
            s = (e.min.z - h.z) * c),
            n > s || o > r ? null : ((o > n || n !== n) && (n = o),
            (s < r || r !== r) && (r = s),
            r < 0 ? null : this.at(n >= 0 ? n : r, t)))
        },
        intersectsBox: function(e) {
            return null !== this.intersectBox(e, Zr)
        },
        intersectTriangle: function(e, t, n, r, i) {
            Qr.subVectors(t, e),
            ei.subVectors(n, e),
            ti.crossVectors(Qr, ei);
            var a, o = this.direction.dot(ti);
            if (o > 0) {
                if (r)
                    return null;
                a = 1
            } else {
                if (!(o < 0))
                    return null;
                a = -1,
                o = -o
            }
            Kr.subVectors(this.origin, e);
            var s = a * this.direction.dot(ei.crossVectors(Kr, ei));
            if (s < 0)
                return null;
            var l = a * this.direction.dot(Qr.cross(Kr));
            if (l < 0)
                return null;
            if (s + l > o)
                return null;
            var u = -a * Kr.dot(ti);
            return u < 0 ? null : this.at(u / o, i)
        },
        applyMatrix4: function(e) {
            return this.origin.applyMatrix4(e),
            this.direction.transformDirection(e),
            this
        },
        equals: function(e) {
            return e.origin.equals(this.origin) && e.direction.equals(this.direction)
        }
    });
    var ri = new ir
      , ii = new ir
      , ai = new Yn;
    function oi(e, t) {
        this.normal = void 0 !== e ? e : new ir(1,0,0),
        this.constant = void 0 !== t ? t : 0
    }
    Object.assign(oi.prototype, {
        isPlane: !0,
        set: function(e, t) {
            return this.normal.copy(e),
            this.constant = t,
            this
        },
        setComponents: function(e, t, n, r) {
            return this.normal.set(e, t, n),
            this.constant = r,
            this
        },
        setFromNormalAndCoplanarPoint: function(e, t) {
            return this.normal.copy(e),
            this.constant = -t.dot(this.normal),
            this
        },
        setFromCoplanarPoints: function(e, t, n) {
            var r = ri.subVectors(n, t).cross(ii.subVectors(e, t)).normalize();
            return this.setFromNormalAndCoplanarPoint(r, e),
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(e) {
            return this.normal.copy(e.normal),
            this.constant = e.constant,
            this
        },
        normalize: function() {
            var e = 1 / this.normal.length();
            return this.normal.multiplyScalar(e),
            this.constant *= e,
            this
        },
        negate: function() {
            return this.constant *= -1,
            this.normal.negate(),
            this
        },
        distanceToPoint: function(e) {
            return this.normal.dot(e) + this.constant
        },
        distanceToSphere: function(e) {
            return this.distanceToPoint(e.center) - e.radius
        },
        projectPoint: function(e, t) {
            return void 0 === t && (console.warn("THREE.Plane: .projectPoint() target is now required"),
            t = new ir),
            t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)
        },
        intersectLine: function(e, t) {
            void 0 === t && (console.warn("THREE.Plane: .intersectLine() target is now required"),
            t = new ir);
            var n = e.delta(ri)
              , r = this.normal.dot(n);
            if (0 === r)
                return 0 === this.distanceToPoint(e.start) ? t.copy(e.start) : void 0;
            var i = -(e.start.dot(this.normal) + this.constant) / r;
            return i < 0 || i > 1 ? void 0 : t.copy(n).multiplyScalar(i).add(e.start)
        },
        intersectsLine: function(e) {
            var t = this.distanceToPoint(e.start)
              , n = this.distanceToPoint(e.end);
            return t < 0 && n > 0 || n < 0 && t > 0
        },
        intersectsBox: function(e) {
            return e.intersectsPlane(this)
        },
        intersectsSphere: function(e) {
            return e.intersectsPlane(this)
        },
        coplanarPoint: function(e) {
            return void 0 === e && (console.warn("THREE.Plane: .coplanarPoint() target is now required"),
            e = new ir),
            e.copy(this.normal).multiplyScalar(-this.constant)
        },
        applyMatrix4: function(e, t) {
            var n = t || ai.getNormalMatrix(e)
              , r = this.coplanarPoint(ri).applyMatrix4(e)
              , i = this.normal.applyMatrix3(n).normalize();
            return this.constant = -r.dot(i),
            this
        },
        translate: function(e) {
            return this.constant -= e.dot(this.normal),
            this
        },
        equals: function(e) {
            return e.normal.equals(this.normal) && e.constant === this.constant
        }
    });
    var si = new ir
      , li = new ir
      , ui = new ir
      , ci = new ir
      , hi = new ir
      , pi = new ir
      , fi = new ir
      , di = new ir
      , mi = new ir
      , gi = new ir;
    function vi(e, t, n) {
        this.a = void 0 !== e ? e : new ir,
        this.b = void 0 !== t ? t : new ir,
        this.c = void 0 !== n ? n : new ir
    }
    Object.assign(vi, {
        getNormal: function(e, t, n, r) {
            void 0 === r && (console.warn("THREE.Triangle: .getNormal() target is now required"),
            r = new ir),
            r.subVectors(n, t),
            si.subVectors(e, t),
            r.cross(si);
            var i = r.lengthSq();
            return i > 0 ? r.multiplyScalar(1 / Math.sqrt(i)) : r.set(0, 0, 0)
        },
        getBarycoord: function(e, t, n, r, i) {
            si.subVectors(r, t),
            li.subVectors(n, t),
            ui.subVectors(e, t);
            var a = si.dot(si)
              , o = si.dot(li)
              , s = si.dot(ui)
              , l = li.dot(li)
              , u = li.dot(ui)
              , c = a * l - o * o;
            if (void 0 === i && (console.warn("THREE.Triangle: .getBarycoord() target is now required"),
            i = new ir),
            0 === c)
                return i.set(-2, -1, -1);
            var h = 1 / c
              , p = (l * s - o * u) * h
              , f = (a * u - o * s) * h;
            return i.set(1 - p - f, f, p)
        },
        containsPoint: function(e, t, n, r) {
            return vi.getBarycoord(e, t, n, r, ci),
            ci.x >= 0 && ci.y >= 0 && ci.x + ci.y <= 1
        },
        getUV: function(e, t, n, r, i, a, o, s) {
            return this.getBarycoord(e, t, n, r, ci),
            s.set(0, 0),
            s.addScaledVector(i, ci.x),
            s.addScaledVector(a, ci.y),
            s.addScaledVector(o, ci.z),
            s
        },
        isFrontFacing: function(e, t, n, r) {
            return si.subVectors(n, t),
            li.subVectors(e, t),
            si.cross(li).dot(r) < 0
        }
    }),
    Object.assign(vi.prototype, {
        set: function(e, t, n) {
            return this.a.copy(e),
            this.b.copy(t),
            this.c.copy(n),
            this
        },
        setFromPointsAndIndices: function(e, t, n, r) {
            return this.a.copy(e[t]),
            this.b.copy(e[n]),
            this.c.copy(e[r]),
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(e) {
            return this.a.copy(e.a),
            this.b.copy(e.b),
            this.c.copy(e.c),
            this
        },
        getArea: function() {
            return si.subVectors(this.c, this.b),
            li.subVectors(this.a, this.b),
            .5 * si.cross(li).length()
        },
        getMidpoint: function(e) {
            return void 0 === e && (console.warn("THREE.Triangle: .getMidpoint() target is now required"),
            e = new ir),
            e.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3)
        },
        getNormal: function(e) {
            return vi.getNormal(this.a, this.b, this.c, e)
        },
        getPlane: function(e) {
            return void 0 === e && (console.warn("THREE.Triangle: .getPlane() target is now required"),
            e = new oi),
            e.setFromCoplanarPoints(this.a, this.b, this.c)
        },
        getBarycoord: function(e, t) {
            return vi.getBarycoord(e, this.a, this.b, this.c, t)
        },
        getUV: function(e, t, n, r, i) {
            return vi.getUV(e, this.a, this.b, this.c, t, n, r, i)
        },
        containsPoint: function(e) {
            return vi.containsPoint(e, this.a, this.b, this.c)
        },
        isFrontFacing: function(e) {
            return vi.isFrontFacing(this.a, this.b, this.c, e)
        },
        intersectsBox: function(e) {
            return e.intersectsTriangle(this)
        },
        closestPointToPoint: function(e, t) {
            void 0 === t && (console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),
            t = new ir);
            var n, r, i = this.a, a = this.b, o = this.c;
            hi.subVectors(a, i),
            pi.subVectors(o, i),
            di.subVectors(e, i);
            var s = hi.dot(di)
              , l = pi.dot(di);
            if (s <= 0 && l <= 0)
                return t.copy(i);
            mi.subVectors(e, a);
            var u = hi.dot(mi)
              , c = pi.dot(mi);
            if (u >= 0 && c <= u)
                return t.copy(a);
            var h = s * c - u * l;
            if (h <= 0 && s >= 0 && u <= 0)
                return n = s / (s - u),
                t.copy(i).addScaledVector(hi, n);
            gi.subVectors(e, o);
            var p = hi.dot(gi)
              , f = pi.dot(gi);
            if (f >= 0 && p <= f)
                return t.copy(o);
            var d = p * l - s * f;
            if (d <= 0 && l >= 0 && f <= 0)
                return r = l / (l - f),
                t.copy(i).addScaledVector(pi, r);
            var m = u * f - p * c;
            if (m <= 0 && c - u >= 0 && p - f >= 0)
                return fi.subVectors(o, a),
                r = (c - u) / (c - u + (p - f)),
                t.copy(a).addScaledVector(fi, r);
            var g = 1 / (m + d + h);
            return n = d * g,
            r = h * g,
            t.copy(i).addScaledVector(hi, n).addScaledVector(pi, r)
        },
        equals: function(e) {
            return e.a.equals(this.a) && e.b.equals(this.b) && e.c.equals(this.c)
        }
    });
    var yi = {
        aliceblue: 15792383,
        antiquewhite: 16444375,
        aqua: 65535,
        aquamarine: 8388564,
        azure: 15794175,
        beige: 16119260,
        bisque: 16770244,
        black: 0,
        blanchedalmond: 16772045,
        blue: 255,
        blueviolet: 9055202,
        brown: 10824234,
        burlywood: 14596231,
        cadetblue: 6266528,
        chartreuse: 8388352,
        chocolate: 13789470,
        coral: 16744272,
        cornflowerblue: 6591981,
        cornsilk: 16775388,
        crimson: 14423100,
        cyan: 65535,
        darkblue: 139,
        darkcyan: 35723,
        darkgoldenrod: 12092939,
        darkgray: 11119017,
        darkgreen: 25600,
        darkgrey: 11119017,
        darkkhaki: 12433259,
        darkmagenta: 9109643,
        darkolivegreen: 5597999,
        darkorange: 16747520,
        darkorchid: 10040012,
        darkred: 9109504,
        darksalmon: 15308410,
        darkseagreen: 9419919,
        darkslateblue: 4734347,
        darkslategray: 3100495,
        darkslategrey: 3100495,
        darkturquoise: 52945,
        darkviolet: 9699539,
        deeppink: 16716947,
        deepskyblue: 49151,
        dimgray: 6908265,
        dimgrey: 6908265,
        dodgerblue: 2003199,
        firebrick: 11674146,
        floralwhite: 16775920,
        forestgreen: 2263842,
        fuchsia: 16711935,
        gainsboro: 14474460,
        ghostwhite: 16316671,
        gold: 16766720,
        goldenrod: 14329120,
        gray: 8421504,
        green: 32768,
        greenyellow: 11403055,
        grey: 8421504,
        honeydew: 15794160,
        hotpink: 16738740,
        indianred: 13458524,
        indigo: 4915330,
        ivory: 16777200,
        khaki: 15787660,
        lavender: 15132410,
        lavenderblush: 16773365,
        lawngreen: 8190976,
        lemonchiffon: 16775885,
        lightblue: 11393254,
        lightcoral: 15761536,
        lightcyan: 14745599,
        lightgoldenrodyellow: 16448210,
        lightgray: 13882323,
        lightgreen: 9498256,
        lightgrey: 13882323,
        lightpink: 16758465,
        lightsalmon: 16752762,
        lightseagreen: 2142890,
        lightskyblue: 8900346,
        lightslategray: 7833753,
        lightslategrey: 7833753,
        lightsteelblue: 11584734,
        lightyellow: 16777184,
        lime: 65280,
        limegreen: 3329330,
        linen: 16445670,
        magenta: 16711935,
        maroon: 8388608,
        mediumaquamarine: 6737322,
        mediumblue: 205,
        mediumorchid: 12211667,
        mediumpurple: 9662683,
        mediumseagreen: 3978097,
        mediumslateblue: 8087790,
        mediumspringgreen: 64154,
        mediumturquoise: 4772300,
        mediumvioletred: 13047173,
        midnightblue: 1644912,
        mintcream: 16121850,
        mistyrose: 16770273,
        moccasin: 16770229,
        navajowhite: 16768685,
        navy: 128,
        oldlace: 16643558,
        olive: 8421376,
        olivedrab: 7048739,
        orange: 16753920,
        orangered: 16729344,
        orchid: 14315734,
        palegoldenrod: 15657130,
        palegreen: 10025880,
        paleturquoise: 11529966,
        palevioletred: 14381203,
        papayawhip: 16773077,
        peachpuff: 16767673,
        peru: 13468991,
        pink: 16761035,
        plum: 14524637,
        powderblue: 11591910,
        purple: 8388736,
        rebeccapurple: 6697881,
        red: 16711680,
        rosybrown: 12357519,
        royalblue: 4286945,
        saddlebrown: 9127187,
        salmon: 16416882,
        sandybrown: 16032864,
        seagreen: 3050327,
        seashell: 16774638,
        sienna: 10506797,
        silver: 12632256,
        skyblue: 8900331,
        slateblue: 6970061,
        slategray: 7372944,
        slategrey: 7372944,
        snow: 16775930,
        springgreen: 65407,
        steelblue: 4620980,
        tan: 13808780,
        teal: 32896,
        thistle: 14204888,
        tomato: 16737095,
        turquoise: 4251856,
        violet: 15631086,
        wheat: 16113331,
        white: 16777215,
        whitesmoke: 16119285,
        yellow: 16776960,
        yellowgreen: 10145074
    }
      , bi = {
        h: 0,
        s: 0,
        l: 0
    }
      , xi = {
        h: 0,
        s: 0,
        l: 0
    };
    function wi(e, t, n) {
        return void 0 === t && void 0 === n ? this.set(e) : this.setRGB(e, t, n)
    }
    function _i(e, t, n) {
        return n < 0 && (n += 1),
        n > 1 && (n -= 1),
        n < 1 / 6 ? e + 6 * (t - e) * n : n < .5 ? t : n < 2 / 3 ? e + 6 * (t - e) * (2 / 3 - n) : e
    }
    function Si(e) {
        return e < .04045 ? .0773993808 * e : Math.pow(.9478672986 * e + .0521327014, 2.4)
    }
    function Ei(e) {
        return e < .0031308 ? 12.92 * e : 1.055 * Math.pow(e, .41666) - .055
    }
    function Mi(e, t, n, r, i, a) {
        this.a = e,
        this.b = t,
        this.c = n,
        this.normal = r && r.isVector3 ? r : new ir,
        this.vertexNormals = Array.isArray(r) ? r : [],
        this.color = i && i.isColor ? i : new wi,
        this.vertexColors = Array.isArray(i) ? i : [],
        this.materialIndex = void 0 !== a ? a : 0
    }
    Object.assign(wi.prototype, {
        isColor: !0,
        r: 1,
        g: 1,
        b: 1,
        set: function(e) {
            return e && e.isColor ? this.copy(e) : "number" === typeof e ? this.setHex(e) : "string" === typeof e && this.setStyle(e),
            this
        },
        setScalar: function(e) {
            return this.r = e,
            this.g = e,
            this.b = e,
            this
        },
        setHex: function(e) {
            return e = Math.floor(e),
            this.r = (e >> 16 & 255) / 255,
            this.g = (e >> 8 & 255) / 255,
            this.b = (255 & e) / 255,
            this
        },
        setRGB: function(e, t, n) {
            return this.r = e,
            this.g = t,
            this.b = n,
            this
        },
        setHSL: function(e, t, n) {
            if (e = qn.euclideanModulo(e, 1),
            t = qn.clamp(t, 0, 1),
            n = qn.clamp(n, 0, 1),
            0 === t)
                this.r = this.g = this.b = n;
            else {
                var r = n <= .5 ? n * (1 + t) : n + t - n * t
                  , i = 2 * n - r;
                this.r = _i(i, r, e + 1 / 3),
                this.g = _i(i, r, e),
                this.b = _i(i, r, e - 1 / 3)
            }
            return this
        },
        setStyle: function(e) {
            function t(t) {
                void 0 !== t && parseFloat(t) < 1 && console.warn("THREE.Color: Alpha component of " + e + " will be ignored.")
            }
            var n;
            if (n = /^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(e)) {
                var r, i = n[1], a = n[2];
                switch (i) {
                case "rgb":
                case "rgba":
                    if (r = /^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))
                        return this.r = Math.min(255, parseInt(r[1], 10)) / 255,
                        this.g = Math.min(255, parseInt(r[2], 10)) / 255,
                        this.b = Math.min(255, parseInt(r[3], 10)) / 255,
                        t(r[5]),
                        this;
                    if (r = /^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))
                        return this.r = Math.min(100, parseInt(r[1], 10)) / 100,
                        this.g = Math.min(100, parseInt(r[2], 10)) / 100,
                        this.b = Math.min(100, parseInt(r[3], 10)) / 100,
                        t(r[5]),
                        this;
                    break;
                case "hsl":
                case "hsla":
                    if (r = /^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a)) {
                        var o = parseFloat(r[1]) / 360
                          , s = parseInt(r[2], 10) / 100
                          , l = parseInt(r[3], 10) / 100;
                        return t(r[5]),
                        this.setHSL(o, s, l)
                    }
                }
            } else if (n = /^\#([A-Fa-f0-9]+)$/.exec(e)) {
                var u = n[1]
                  , c = u.length;
                if (3 === c)
                    return this.r = parseInt(u.charAt(0) + u.charAt(0), 16) / 255,
                    this.g = parseInt(u.charAt(1) + u.charAt(1), 16) / 255,
                    this.b = parseInt(u.charAt(2) + u.charAt(2), 16) / 255,
                    this;
                if (6 === c)
                    return this.r = parseInt(u.charAt(0) + u.charAt(1), 16) / 255,
                    this.g = parseInt(u.charAt(2) + u.charAt(3), 16) / 255,
                    this.b = parseInt(u.charAt(4) + u.charAt(5), 16) / 255,
                    this
            }
            return e && e.length > 0 ? this.setColorName(e) : this
        },
        setColorName: function(e) {
            var t = yi[e];
            return void 0 !== t ? this.setHex(t) : console.warn("THREE.Color: Unknown color " + e),
            this
        },
        clone: function() {
            return new this.constructor(this.r,this.g,this.b)
        },
        copy: function(e) {
            return this.r = e.r,
            this.g = e.g,
            this.b = e.b,
            this
        },
        copyGammaToLinear: function(e, t) {
            return void 0 === t && (t = 2),
            this.r = Math.pow(e.r, t),
            this.g = Math.pow(e.g, t),
            this.b = Math.pow(e.b, t),
            this
        },
        copyLinearToGamma: function(e, t) {
            void 0 === t && (t = 2);
            var n = t > 0 ? 1 / t : 1;
            return this.r = Math.pow(e.r, n),
            this.g = Math.pow(e.g, n),
            this.b = Math.pow(e.b, n),
            this
        },
        convertGammaToLinear: function(e) {
            return this.copyGammaToLinear(this, e),
            this
        },
        convertLinearToGamma: function(e) {
            return this.copyLinearToGamma(this, e),
            this
        },
        copySRGBToLinear: function(e) {
            return this.r = Si(e.r),
            this.g = Si(e.g),
            this.b = Si(e.b),
            this
        },
        copyLinearToSRGB: function(e) {
            return this.r = Ei(e.r),
            this.g = Ei(e.g),
            this.b = Ei(e.b),
            this
        },
        convertSRGBToLinear: function() {
            return this.copySRGBToLinear(this),
            this
        },
        convertLinearToSRGB: function() {
            return this.copyLinearToSRGB(this),
            this
        },
        getHex: function() {
            return 255 * this.r << 16 ^ 255 * this.g << 8 ^ 255 * this.b << 0
        },
        getHexString: function() {
            return ("000000" + this.getHex().toString(16)).slice(-6)
        },
        getHSL: function(e) {
            void 0 === e && (console.warn("THREE.Color: .getHSL() target is now required"),
            e = {
                h: 0,
                s: 0,
                l: 0
            });
            var t, n, r = this.r, i = this.g, a = this.b, o = Math.max(r, i, a), s = Math.min(r, i, a), l = (s + o) / 2;
            if (s === o)
                t = 0,
                n = 0;
            else {
                var u = o - s;
                switch (n = l <= .5 ? u / (o + s) : u / (2 - o - s),
                o) {
                case r:
                    t = (i - a) / u + (i < a ? 6 : 0);
                    break;
                case i:
                    t = (a - r) / u + 2;
                    break;
                case a:
                    t = (r - i) / u + 4
                }
                t /= 6
            }
            return e.h = t,
            e.s = n,
            e.l = l,
            e
        },
        getStyle: function() {
            return "rgb(" + (255 * this.r | 0) + "," + (255 * this.g | 0) + "," + (255 * this.b | 0) + ")"
        },
        offsetHSL: function(e, t, n) {
            return this.getHSL(bi),
            bi.h += e,
            bi.s += t,
            bi.l += n,
            this.setHSL(bi.h, bi.s, bi.l),
            this
        },
        add: function(e) {
            return this.r += e.r,
            this.g += e.g,
            this.b += e.b,
            this
        },
        addColors: function(e, t) {
            return this.r = e.r + t.r,
            this.g = e.g + t.g,
            this.b = e.b + t.b,
            this
        },
        addScalar: function(e) {
            return this.r += e,
            this.g += e,
            this.b += e,
            this
        },
        sub: function(e) {
            return this.r = Math.max(0, this.r - e.r),
            this.g = Math.max(0, this.g - e.g),
            this.b = Math.max(0, this.b - e.b),
            this
        },
        multiply: function(e) {
            return this.r *= e.r,
            this.g *= e.g,
            this.b *= e.b,
            this
        },
        multiplyScalar: function(e) {
            return this.r *= e,
            this.g *= e,
            this.b *= e,
            this
        },
        lerp: function(e, t) {
            return this.r += (e.r - this.r) * t,
            this.g += (e.g - this.g) * t,
            this.b += (e.b - this.b) * t,
            this
        },
        lerpHSL: function(e, t) {
            this.getHSL(bi),
            e.getHSL(xi);
            var n = qn.lerp(bi.h, xi.h, t)
              , r = qn.lerp(bi.s, xi.s, t)
              , i = qn.lerp(bi.l, xi.l, t);
            return this.setHSL(n, r, i),
            this
        },
        equals: function(e) {
            return e.r === this.r && e.g === this.g && e.b === this.b
        },
        fromArray: function(e, t) {
            return void 0 === t && (t = 0),
            this.r = e[t],
            this.g = e[t + 1],
            this.b = e[t + 2],
            this
        },
        toArray: function(e, t) {
            return void 0 === e && (e = []),
            void 0 === t && (t = 0),
            e[t] = this.r,
            e[t + 1] = this.g,
            e[t + 2] = this.b,
            e
        },
        fromBufferAttribute: function(e, t) {
            return this.r = e.getX(t),
            this.g = e.getY(t),
            this.b = e.getZ(t),
            !0 === e.normalized && (this.r /= 255,
            this.g /= 255,
            this.b /= 255),
            this
        },
        toJSON: function() {
            return this.getHex()
        }
    }),
    wi.NAMES = yi,
    Object.assign(Mi.prototype, {
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(e) {
            this.a = e.a,
            this.b = e.b,
            this.c = e.c,
            this.normal.copy(e.normal),
            this.color.copy(e.color),
            this.materialIndex = e.materialIndex;
            for (var t = 0, n = e.vertexNormals.length; t < n; t++)
                this.vertexNormals[t] = e.vertexNormals[t].clone();
            for (var r = 0, i = e.vertexColors.length; r < i; r++)
                this.vertexColors[r] = e.vertexColors[r].clone();
            return this
        }
    });
    var Ti = 0;
    function Ai() {
        Object.defineProperty(this, "id", {
            value: Ti++
        }),
        this.uuid = qn.generateUUID(),
        this.name = "",
        this.type = "Material",
        this.fog = !0,
        this.blending = A,
        this.side = w,
        this.flatShading = !1,
        this.vertexColors = !1,
        this.opacity = 1,
        this.transparent = !1,
        this.blendSrc = H,
        this.blendDst = V,
        this.blendEquation = k,
        this.blendSrcAlpha = null,
        this.blendDstAlpha = null,
        this.blendEquationAlpha = null,
        this.depthFunc = J,
        this.depthTest = !0,
        this.depthWrite = !0,
        this.stencilWriteMask = 255,
        this.stencilFunc = Rn,
        this.stencilRef = 0,
        this.stencilFuncMask = 255,
        this.stencilFail = vn,
        this.stencilZFail = vn,
        this.stencilZPass = vn,
        this.stencilWrite = !1,
        this.clippingPlanes = null,
        this.clipIntersection = !1,
        this.clipShadows = !1,
        this.shadowSide = null,
        this.colorWrite = !0,
        this.precision = null,
        this.polygonOffset = !1,
        this.polygonOffsetFactor = 0,
        this.polygonOffsetUnits = 0,
        this.dithering = !1,
        this.alphaTest = 0,
        this.premultipliedAlpha = !1,
        this.visible = !0,
        this.toneMapped = !0,
        this.userData = {},
        this.version = 0
    }
    function Pi(e) {
        Ai.call(this),
        this.type = "MeshBasicMaterial",
        this.color = new wi(16777215),
        this.map = null,
        this.lightMap = null,
        this.lightMapIntensity = 1,
        this.aoMap = null,
        this.aoMapIntensity = 1,
        this.specularMap = null,
        this.alphaMap = null,
        this.envMap = null,
        this.combine = ne,
        this.reflectivity = 1,
        this.refractionRatio = .98,
        this.wireframe = !1,
        this.wireframeLinewidth = 1,
        this.wireframeLinecap = "round",
        this.wireframeLinejoin = "round",
        this.skinning = !1,
        this.morphTargets = !1,
        this.setValues(e)
    }
    Ai.prototype = Object.assign(Object.create(Hn.prototype), {
        constructor: Ai,
        isMaterial: !0,
        onBeforeCompile: function() {},
        customProgramCacheKey: function() {
            return this.onBeforeCompile.toString()
        },
        setValues: function(e) {
            if (void 0 !== e)
                for (var t in e) {
                    var n = e[t];
                    if (void 0 !== n)
                        if ("shading" !== t) {
                            var r = this[t];
                            void 0 !== r ? r && r.isColor ? r.set(n) : r && r.isVector3 && n && n.isVector3 ? r.copy(n) : this[t] = n : console.warn("THREE." + this.type + ": '" + t + "' is not a property of this material.")
                        } else
                            console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."),
                            this.flatShading = n === E;
                    else
                        console.warn("THREE.Material: '" + t + "' parameter is undefined.")
                }
        },
        toJSON: function(e) {
            var t = void 0 === e || "string" === typeof e;
            t && (e = {
                textures: {},
                images: {}
            });
            var n = {
                metadata: {
                    version: 4.5,
                    type: "Material",
                    generator: "Material.toJSON"
                }
            };
            function r(e) {
                var t = [];
                for (var n in e) {
                    var r = e[n];
                    delete r.metadata,
                    t.push(r)
                }
                return t
            }
            if (n.uuid = this.uuid,
            n.type = this.type,
            "" !== this.name && (n.name = this.name),
            this.color && this.color.isColor && (n.color = this.color.getHex()),
            void 0 !== this.roughness && (n.roughness = this.roughness),
            void 0 !== this.metalness && (n.metalness = this.metalness),
            this.sheen && this.sheen.isColor && (n.sheen = this.sheen.getHex()),
            this.emissive && this.emissive.isColor && (n.emissive = this.emissive.getHex()),
            this.emissiveIntensity && 1 !== this.emissiveIntensity && (n.emissiveIntensity = this.emissiveIntensity),
            this.specular && this.specular.isColor && (n.specular = this.specular.getHex()),
            void 0 !== this.shininess && (n.shininess = this.shininess),
            void 0 !== this.clearcoat && (n.clearcoat = this.clearcoat),
            void 0 !== this.clearcoatRoughness && (n.clearcoatRoughness = this.clearcoatRoughness),
            this.clearcoatMap && this.clearcoatMap.isTexture && (n.clearcoatMap = this.clearcoatMap.toJSON(e).uuid),
            this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture && (n.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(e).uuid),
            this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture && (n.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(e).uuid,
            n.clearcoatNormalScale = this.clearcoatNormalScale.toArray()),
            this.map && this.map.isTexture && (n.map = this.map.toJSON(e).uuid),
            this.matcap && this.matcap.isTexture && (n.matcap = this.matcap.toJSON(e).uuid),
            this.alphaMap && this.alphaMap.isTexture && (n.alphaMap = this.alphaMap.toJSON(e).uuid),
            this.lightMap && this.lightMap.isTexture && (n.lightMap = this.lightMap.toJSON(e).uuid),
            this.aoMap && this.aoMap.isTexture && (n.aoMap = this.aoMap.toJSON(e).uuid,
            n.aoMapIntensity = this.aoMapIntensity),
            this.bumpMap && this.bumpMap.isTexture && (n.bumpMap = this.bumpMap.toJSON(e).uuid,
            n.bumpScale = this.bumpScale),
            this.normalMap && this.normalMap.isTexture && (n.normalMap = this.normalMap.toJSON(e).uuid,
            n.normalMapType = this.normalMapType,
            n.normalScale = this.normalScale.toArray()),
            this.displacementMap && this.displacementMap.isTexture && (n.displacementMap = this.displacementMap.toJSON(e).uuid,
            n.displacementScale = this.displacementScale,
            n.displacementBias = this.displacementBias),
            this.roughnessMap && this.roughnessMap.isTexture && (n.roughnessMap = this.roughnessMap.toJSON(e).uuid),
            this.metalnessMap && this.metalnessMap.isTexture && (n.metalnessMap = this.metalnessMap.toJSON(e).uuid),
            this.emissiveMap && this.emissiveMap.isTexture && (n.emissiveMap = this.emissiveMap.toJSON(e).uuid),
            this.specularMap && this.specularMap.isTexture && (n.specularMap = this.specularMap.toJSON(e).uuid),
            this.envMap && this.envMap.isTexture && (n.envMap = this.envMap.toJSON(e).uuid,
            n.reflectivity = this.reflectivity,
            n.refractionRatio = this.refractionRatio,
            void 0 !== this.combine && (n.combine = this.combine),
            void 0 !== this.envMapIntensity && (n.envMapIntensity = this.envMapIntensity)),
            this.gradientMap && this.gradientMap.isTexture && (n.gradientMap = this.gradientMap.toJSON(e).uuid),
            void 0 !== this.size && (n.size = this.size),
            void 0 !== this.sizeAttenuation && (n.sizeAttenuation = this.sizeAttenuation),
            this.blending !== A && (n.blending = this.blending),
            !0 === this.flatShading && (n.flatShading = this.flatShading),
            this.side !== w && (n.side = this.side),
            this.vertexColors && (n.vertexColors = !0),
            this.opacity < 1 && (n.opacity = this.opacity),
            !0 === this.transparent && (n.transparent = this.transparent),
            n.depthFunc = this.depthFunc,
            n.depthTest = this.depthTest,
            n.depthWrite = this.depthWrite,
            n.stencilWrite = this.stencilWrite,
            n.stencilWriteMask = this.stencilWriteMask,
            n.stencilFunc = this.stencilFunc,
            n.stencilRef = this.stencilRef,
            n.stencilFuncMask = this.stencilFuncMask,
            n.stencilFail = this.stencilFail,
            n.stencilZFail = this.stencilZFail,
            n.stencilZPass = this.stencilZPass,
            this.rotation && 0 !== this.rotation && (n.rotation = this.rotation),
            !0 === this.polygonOffset && (n.polygonOffset = !0),
            0 !== this.polygonOffsetFactor && (n.polygonOffsetFactor = this.polygonOffsetFactor),
            0 !== this.polygonOffsetUnits && (n.polygonOffsetUnits = this.polygonOffsetUnits),
            this.linewidth && 1 !== this.linewidth && (n.linewidth = this.linewidth),
            void 0 !== this.dashSize && (n.dashSize = this.dashSize),
            void 0 !== this.gapSize && (n.gapSize = this.gapSize),
            void 0 !== this.scale && (n.scale = this.scale),
            !0 === this.dithering && (n.dithering = !0),
            this.alphaTest > 0 && (n.alphaTest = this.alphaTest),
            !0 === this.premultipliedAlpha && (n.premultipliedAlpha = this.premultipliedAlpha),
            !0 === this.wireframe && (n.wireframe = this.wireframe),
            this.wireframeLinewidth > 1 && (n.wireframeLinewidth = this.wireframeLinewidth),
            "round" !== this.wireframeLinecap && (n.wireframeLinecap = this.wireframeLinecap),
            "round" !== this.wireframeLinejoin && (n.wireframeLinejoin = this.wireframeLinejoin),
            !0 === this.morphTargets && (n.morphTargets = !0),
            !0 === this.morphNormals && (n.morphNormals = !0),
            !0 === this.skinning && (n.skinning = !0),
            !1 === this.visible && (n.visible = !1),
            !1 === this.toneMapped && (n.toneMapped = !1),
            "{}" !== JSON.stringify(this.userData) && (n.userData = this.userData),
            t) {
                var i = r(e.textures)
                  , a = r(e.images);
                i.length > 0 && (n.textures = i),
                a.length > 0 && (n.images = a)
            }
            return n
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(e) {
            this.name = e.name,
            this.fog = e.fog,
            this.blending = e.blending,
            this.side = e.side,
            this.flatShading = e.flatShading,
            this.vertexColors = e.vertexColors,
            this.opacity = e.opacity,
            this.transparent = e.transparent,
            this.blendSrc = e.blendSrc,
            this.blendDst = e.blendDst,
            this.blendEquation = e.blendEquation,
            this.blendSrcAlpha = e.blendSrcAlpha,
            this.blendDstAlpha = e.blendDstAlpha,
            this.blendEquationAlpha = e.blendEquationAlpha,
            this.depthFunc = e.depthFunc,
            this.depthTest = e.depthTest,
            this.depthWrite = e.depthWrite,
            this.stencilWriteMask = e.stencilWriteMask,
            this.stencilFunc = e.stencilFunc,
            this.stencilRef = e.stencilRef,
            this.stencilFuncMask = e.stencilFuncMask,
            this.stencilFail = e.stencilFail,
            this.stencilZFail = e.stencilZFail,
            this.stencilZPass = e.stencilZPass,
            this.stencilWrite = e.stencilWrite;
            var t = e.clippingPlanes
              , n = null;
            if (null !== t) {
                var r = t.length;
                n = new Array(r);
                for (var i = 0; i !== r; ++i)
                    n[i] = t[i].clone()
            }
            return this.clippingPlanes = n,
            this.clipIntersection = e.clipIntersection,
            this.clipShadows = e.clipShadows,
            this.shadowSide = e.shadowSide,
            this.colorWrite = e.colorWrite,
            this.precision = e.precision,
            this.polygonOffset = e.polygonOffset,
            this.polygonOffsetFactor = e.polygonOffsetFactor,
            this.polygonOffsetUnits = e.polygonOffsetUnits,
            this.dithering = e.dithering,
            this.alphaTest = e.alphaTest,
            this.premultipliedAlpha = e.premultipliedAlpha,
            this.visible = e.visible,
            this.toneMapped = e.toneMapped,
            this.userData = JSON.parse(JSON.stringify(e.userData)),
            this
        },
        dispose: function() {
            this.dispatchEvent({
                type: "dispose"
            })
        }
    }),
    Object.defineProperty(Ai.prototype, "needsUpdate", {
        set: function(e) {
            !0 === e && this.version++
        }
    }),
    Pi.prototype = Object.create(Ai.prototype),
    Pi.prototype.constructor = Pi,
    Pi.prototype.isMeshBasicMaterial = !0,
    Pi.prototype.copy = function(e) {
        return Ai.prototype.copy.call(this, e),
        this.color.copy(e.color),
        this.map = e.map,
        this.lightMap = e.lightMap,
        this.lightMapIntensity = e.lightMapIntensity,
        this.aoMap = e.aoMap,
        this.aoMapIntensity = e.aoMapIntensity,
        this.specularMap = e.specularMap,
        this.alphaMap = e.alphaMap,
        this.envMap = e.envMap,
        this.combine = e.combine,
        this.reflectivity = e.reflectivity,
        this.refractionRatio = e.refractionRatio,
        this.wireframe = e.wireframe,
        this.wireframeLinewidth = e.wireframeLinewidth,
        this.wireframeLinecap = e.wireframeLinecap,
        this.wireframeLinejoin = e.wireframeLinejoin,
        this.skinning = e.skinning,
        this.morphTargets = e.morphTargets,
        this
    }
    ;
    var Ci = new ir
      , Li = new Xn;
    function Ri(e, t, n) {
        if (Array.isArray(e))
            throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
        this.name = "",
        this.array = e,
        this.itemSize = t,
        this.count = void 0 !== e ? e.length / t : 0,
        this.normalized = !0 === n,
        this.usage = kn,
        this.updateRange = {
            offset: 0,
            count: -1
        },
        this.version = 0
    }
    function ki(e, t, n) {
        Ri.call(this, new Int8Array(e), t, n)
    }
    function Di(e, t, n) {
        Ri.call(this, new Uint8Array(e), t, n)
    }
    function Ii(e, t, n) {
        Ri.call(this, new Uint8ClampedArray(e), t, n)
    }
    function Oi(e, t, n) {
        Ri.call(this, new Int16Array(e), t, n)
    }
    function Fi(e, t, n) {
        Ri.call(this, new Uint16Array(e), t, n)
    }
    function Ni(e, t, n) {
        Ri.call(this, new Int32Array(e), t, n)
    }
    function Bi(e, t, n) {
        Ri.call(this, new Uint32Array(e), t, n)
    }
    function zi(e, t, n) {
        Ri.call(this, new Float32Array(e), t, n)
    }
    function Gi(e, t, n) {
        Ri.call(this, new Float64Array(e), t, n)
    }
    function Hi() {
        this.vertices = [],
        this.normals = [],
        this.colors = [],
        this.uvs = [],
        this.uvs2 = [],
        this.groups = [],
        this.morphTargets = {},
        this.skinWeights = [],
        this.skinIndices = [],
        this.boundingBox = null,
        this.boundingSphere = null,
        this.verticesNeedUpdate = !1,
        this.normalsNeedUpdate = !1,
        this.colorsNeedUpdate = !1,
        this.uvsNeedUpdate = !1,
        this.groupsNeedUpdate = !1
    }
    function Vi(e) {
        if (0 === e.length)
            return -1 / 0;
        for (var t = e[0], n = 1, r = e.length; n < r; ++n)
            e[n] > t && (t = e[n]);
        return t
    }
    Object.defineProperty(Ri.prototype, "needsUpdate", {
        set: function(e) {
            !0 === e && this.version++
        }
    }),
    Object.assign(Ri.prototype, {
        isBufferAttribute: !0,
        onUploadCallback: function() {},
        setUsage: function(e) {
            return this.usage = e,
            this
        },
        copy: function(e) {
            return this.name = e.name,
            this.array = new e.array.constructor(e.array),
            this.itemSize = e.itemSize,
            this.count = e.count,
            this.normalized = e.normalized,
            this.usage = e.usage,
            this
        },
        copyAt: function(e, t, n) {
            e *= this.itemSize,
            n *= t.itemSize;
            for (var r = 0, i = this.itemSize; r < i; r++)
                this.array[e + r] = t.array[n + r];
            return this
        },
        copyArray: function(e) {
            return this.array.set(e),
            this
        },
        copyColorsArray: function(e) {
            for (var t = this.array, n = 0, r = 0, i = e.length; r < i; r++) {
                var a = e[r];
                void 0 === a && (console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined", r),
                a = new wi),
                t[n++] = a.r,
                t[n++] = a.g,
                t[n++] = a.b
            }
            return this
        },
        copyVector2sArray: function(e) {
            for (var t = this.array, n = 0, r = 0, i = e.length; r < i; r++) {
                var a = e[r];
                void 0 === a && (console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined", r),
                a = new Xn),
                t[n++] = a.x,
                t[n++] = a.y
            }
            return this
        },
        copyVector3sArray: function(e) {
            for (var t = this.array, n = 0, r = 0, i = e.length; r < i; r++) {
                var a = e[r];
                void 0 === a && (console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined", r),
                a = new ir),
                t[n++] = a.x,
                t[n++] = a.y,
                t[n++] = a.z
            }
            return this
        },
        copyVector4sArray: function(e) {
            for (var t = this.array, n = 0, r = 0, i = e.length; r < i; r++) {
                var a = e[r];
                void 0 === a && (console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined", r),
                a = new Kn),
                t[n++] = a.x,
                t[n++] = a.y,
                t[n++] = a.z,
                t[n++] = a.w
            }
            return this
        },
        applyMatrix3: function(e) {
            if (2 === this.itemSize)
                for (var t = 0, n = this.count; t < n; t++)
                    Li.fromBufferAttribute(this, t),
                    Li.applyMatrix3(e),
                    this.setXY(t, Li.x, Li.y);
            else if (3 === this.itemSize)
                for (var r = 0, i = this.count; r < i; r++)
                    Ci.fromBufferAttribute(this, r),
                    Ci.applyMatrix3(e),
                    this.setXYZ(r, Ci.x, Ci.y, Ci.z);
            return this
        },
        applyMatrix4: function(e) {
            for (var t = 0, n = this.count; t < n; t++)
                Ci.x = this.getX(t),
                Ci.y = this.getY(t),
                Ci.z = this.getZ(t),
                Ci.applyMatrix4(e),
                this.setXYZ(t, Ci.x, Ci.y, Ci.z);
            return this
        },
        applyNormalMatrix: function(e) {
            for (var t = 0, n = this.count; t < n; t++)
                Ci.x = this.getX(t),
                Ci.y = this.getY(t),
                Ci.z = this.getZ(t),
                Ci.applyNormalMatrix(e),
                this.setXYZ(t, Ci.x, Ci.y, Ci.z);
            return this
        },
        transformDirection: function(e) {
            for (var t = 0, n = this.count; t < n; t++)
                Ci.x = this.getX(t),
                Ci.y = this.getY(t),
                Ci.z = this.getZ(t),
                Ci.transformDirection(e),
                this.setXYZ(t, Ci.x, Ci.y, Ci.z);
            return this
        },
        set: function(e, t) {
            return void 0 === t && (t = 0),
            this.array.set(e, t),
            this
        },
        getX: function(e) {
            return this.array[e * this.itemSize]
        },
        setX: function(e, t) {
            return this.array[e * this.itemSize] = t,
            this
        },
        getY: function(e) {
            return this.array[e * this.itemSize + 1]
        },
        setY: function(e, t) {
            return this.array[e * this.itemSize + 1] = t,
            this
        },
        getZ: function(e) {
            return this.array[e * this.itemSize + 2]
        },
        setZ: function(e, t) {
            return this.array[e * this.itemSize + 2] = t,
            this
        },
        getW: function(e) {
            return this.array[e * this.itemSize + 3]
        },
        setW: function(e, t) {
            return this.array[e * this.itemSize + 3] = t,
            this
        },
        setXY: function(e, t, n) {
            return e *= this.itemSize,
            this.array[e + 0] = t,
            this.array[e + 1] = n,
            this
        },
        setXYZ: function(e, t, n, r) {
            return e *= this.itemSize,
            this.array[e + 0] = t,
            this.array[e + 1] = n,
            this.array[e + 2] = r,
            this
        },
        setXYZW: function(e, t, n, r, i) {
            return e *= this.itemSize,
            this.array[e + 0] = t,
            this.array[e + 1] = n,
            this.array[e + 2] = r,
            this.array[e + 3] = i,
            this
        },
        onUpload: function(e) {
            return this.onUploadCallback = e,
            this
        },
        clone: function() {
            return new this.constructor(this.array,this.itemSize).copy(this)
        },
        toJSON: function() {
            return {
                itemSize: this.itemSize,
                type: this.array.constructor.name,
                array: Array.prototype.slice.call(this.array),
                normalized: this.normalized
            }
        }
    }),
    ki.prototype = Object.create(Ri.prototype),
    ki.prototype.constructor = ki,
    Di.prototype = Object.create(Ri.prototype),
    Di.prototype.constructor = Di,
    Ii.prototype = Object.create(Ri.prototype),
    Ii.prototype.constructor = Ii,
    Oi.prototype = Object.create(Ri.prototype),
    Oi.prototype.constructor = Oi,
    Fi.prototype = Object.create(Ri.prototype),
    Fi.prototype.constructor = Fi,
    Ni.prototype = Object.create(Ri.prototype),
    Ni.prototype.constructor = Ni,
    Bi.prototype = Object.create(Ri.prototype),
    Bi.prototype.constructor = Bi,
    zi.prototype = Object.create(Ri.prototype),
    zi.prototype.constructor = zi,
    Gi.prototype = Object.create(Ri.prototype),
    Gi.prototype.constructor = Gi,
    Object.assign(Hi.prototype, {
        computeGroups: function(e) {
            var t, n, r = [], i = void 0, a = e.faces;
            for (n = 0; n < a.length; n++) {
                var o = a[n];
                o.materialIndex !== i && (i = o.materialIndex,
                void 0 !== t && (t.count = 3 * n - t.start,
                r.push(t)),
                t = {
                    start: 3 * n,
                    materialIndex: i
                })
            }
            void 0 !== t && (t.count = 3 * n - t.start,
            r.push(t)),
            this.groups = r
        },
        fromGeometry: function(e) {
            var t, n = e.faces, r = e.vertices, i = e.faceVertexUvs, a = i[0] && i[0].length > 0, o = i[1] && i[1].length > 0, s = e.morphTargets, l = s.length;
            if (l > 0) {
                t = [];
                for (var u = 0; u < l; u++)
                    t[u] = {
                        name: s[u].name,
                        data: []
                    };
                this.morphTargets.position = t
            }
            var c, h = e.morphNormals, p = h.length;
            if (p > 0) {
                c = [];
                for (var f = 0; f < p; f++)
                    c[f] = {
                        name: h[f].name,
                        data: []
                    };
                this.morphTargets.normal = c
            }
            var d = e.skinIndices
              , m = e.skinWeights
              , g = d.length === r.length
              , v = m.length === r.length;
            r.length > 0 && 0 === n.length && console.error("THREE.DirectGeometry: Faceless geometries are not supported.");
            for (var y = 0; y < n.length; y++) {
                var b = n[y];
                this.vertices.push(r[b.a], r[b.b], r[b.c]);
                var x = b.vertexNormals;
                if (3 === x.length)
                    this.normals.push(x[0], x[1], x[2]);
                else {
                    var w = b.normal;
                    this.normals.push(w, w, w)
                }
                var _ = b.vertexColors;
                if (3 === _.length)
                    this.colors.push(_[0], _[1], _[2]);
                else {
                    var S = b.color;
                    this.colors.push(S, S, S)
                }
                if (!0 === a) {
                    var E = i[0][y];
                    void 0 !== E ? this.uvs.push(E[0], E[1], E[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ", y),
                    this.uvs.push(new Xn, new Xn, new Xn))
                }
                if (!0 === o) {
                    var M = i[1][y];
                    void 0 !== M ? this.uvs2.push(M[0], M[1], M[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ", y),
                    this.uvs2.push(new Xn, new Xn, new Xn))
                }
                for (var T = 0; T < l; T++) {
                    var A = s[T].vertices;
                    t[T].data.push(A[b.a], A[b.b], A[b.c])
                }
                for (var P = 0; P < p; P++) {
                    var C = h[P].vertexNormals[y];
                    c[P].data.push(C.a, C.b, C.c)
                }
                g && this.skinIndices.push(d[b.a], d[b.b], d[b.c]),
                v && this.skinWeights.push(m[b.a], m[b.b], m[b.c])
            }
            return this.computeGroups(e),
            this.verticesNeedUpdate = e.verticesNeedUpdate,
            this.normalsNeedUpdate = e.normalsNeedUpdate,
            this.colorsNeedUpdate = e.colorsNeedUpdate,
            this.uvsNeedUpdate = e.uvsNeedUpdate,
            this.groupsNeedUpdate = e.groupsNeedUpdate,
            null !== e.boundingSphere && (this.boundingSphere = e.boundingSphere.clone()),
            null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone()),
            this
        }
    });
    var ji = 1
      , Ui = new pr
      , Wi = new Lr
      , qi = new ir
      , Xi = new Wr
      , Yi = new Wr
      , Zi = new ir;
    function $i() {
        Object.defineProperty(this, "id", {
            value: ji += 2
        }),
        this.uuid = qn.generateUUID(),
        this.name = "",
        this.type = "BufferGeometry",
        this.index = null,
        this.attributes = {},
        this.morphAttributes = {},
        this.morphTargetsRelative = !1,
        this.groups = [],
        this.boundingBox = null,
        this.boundingSphere = null,
        this.drawRange = {
            start: 0,
            count: 1 / 0
        },
        this.userData = {}
    }
    $i.prototype = Object.assign(Object.create(Hn.prototype), {
        constructor: $i,
        isBufferGeometry: !0,
        getIndex: function() {
            return this.index
        },
        setIndex: function(e) {
            Array.isArray(e) ? this.index = new (Vi(e) > 65535 ? Bi : Fi)(e,1) : this.index = e
        },
        getAttribute: function(e) {
            return this.attributes[e]
        },
        setAttribute: function(e, t) {
            return this.attributes[e] = t,
            this
        },
        deleteAttribute: function(e) {
            return delete this.attributes[e],
            this
        },
        addGroup: function(e, t, n) {
            this.groups.push({
                start: e,
                count: t,
                materialIndex: void 0 !== n ? n : 0
            })
        },
        clearGroups: function() {
            this.groups = []
        },
        setDrawRange: function(e, t) {
            this.drawRange.start = e,
            this.drawRange.count = t
        },
        applyMatrix4: function(e) {
            var t = this.attributes.position;
            void 0 !== t && (t.applyMatrix4(e),
            t.needsUpdate = !0);
            var n = this.attributes.normal;
            if (void 0 !== n) {
                var r = (new Yn).getNormalMatrix(e);
                n.applyNormalMatrix(r),
                n.needsUpdate = !0
            }
            var i = this.attributes.tangent;
            return void 0 !== i && (i.transformDirection(e),
            i.needsUpdate = !0),
            null !== this.boundingBox && this.computeBoundingBox(),
            null !== this.boundingSphere && this.computeBoundingSphere(),
            this
        },
        rotateX: function(e) {
            return Ui.makeRotationX(e),
            this.applyMatrix4(Ui),
            this
        },
        rotateY: function(e) {
            return Ui.makeRotationY(e),
            this.applyMatrix4(Ui),
            this
        },
        rotateZ: function(e) {
            return Ui.makeRotationZ(e),
            this.applyMatrix4(Ui),
            this
        },
        translate: function(e, t, n) {
            return Ui.makeTranslation(e, t, n),
            this.applyMatrix4(Ui),
            this
        },
        scale: function(e, t, n) {
            return Ui.makeScale(e, t, n),
            this.applyMatrix4(Ui),
            this
        },
        lookAt: function(e) {
            return Wi.lookAt(e),
            Wi.updateMatrix(),
            this.applyMatrix4(Wi.matrix),
            this
        },
        center: function() {
            return this.computeBoundingBox(),
            this.boundingBox.getCenter(qi).negate(),
            this.translate(qi.x, qi.y, qi.z),
            this
        },
        setFromObject: function(e) {
            var t = e.geometry;
            if (e.isPoints || e.isLine) {
                var n = new zi(3 * t.vertices.length,3)
                  , r = new zi(3 * t.colors.length,3);
                if (this.setAttribute("position", n.copyVector3sArray(t.vertices)),
                this.setAttribute("color", r.copyColorsArray(t.colors)),
                t.lineDistances && t.lineDistances.length === t.vertices.length) {
                    var i = new zi(t.lineDistances.length,1);
                    this.setAttribute("lineDistance", i.copyArray(t.lineDistances))
                }
                null !== t.boundingSphere && (this.boundingSphere = t.boundingSphere.clone()),
                null !== t.boundingBox && (this.boundingBox = t.boundingBox.clone())
            } else
                e.isMesh && t && t.isGeometry && this.fromGeometry(t);
            return this
        },
        setFromPoints: function(e) {
            for (var t = [], n = 0, r = e.length; n < r; n++) {
                var i = e[n];
                t.push(i.x, i.y, i.z || 0)
            }
            return this.setAttribute("position", new zi(t,3)),
            this
        },
        updateFromObject: function(e) {
            var t = e.geometry;
            if (e.isMesh) {
                var n = t.__directGeometry;
                if (!0 === t.elementsNeedUpdate && (n = void 0,
                t.elementsNeedUpdate = !1),
                void 0 === n)
                    return this.fromGeometry(t);
                n.verticesNeedUpdate = t.verticesNeedUpdate,
                n.normalsNeedUpdate = t.normalsNeedUpdate,
                n.colorsNeedUpdate = t.colorsNeedUpdate,
                n.uvsNeedUpdate = t.uvsNeedUpdate,
                n.groupsNeedUpdate = t.groupsNeedUpdate,
                t.verticesNeedUpdate = !1,
                t.normalsNeedUpdate = !1,
                t.colorsNeedUpdate = !1,
                t.uvsNeedUpdate = !1,
                t.groupsNeedUpdate = !1,
                t = n
            }
            if (!0 === t.verticesNeedUpdate) {
                var r = this.attributes.position;
                void 0 !== r && (r.copyVector3sArray(t.vertices),
                r.needsUpdate = !0),
                t.verticesNeedUpdate = !1
            }
            if (!0 === t.normalsNeedUpdate) {
                var i = this.attributes.normal;
                void 0 !== i && (i.copyVector3sArray(t.normals),
                i.needsUpdate = !0),
                t.normalsNeedUpdate = !1
            }
            if (!0 === t.colorsNeedUpdate) {
                var a = this.attributes.color;
                void 0 !== a && (a.copyColorsArray(t.colors),
                a.needsUpdate = !0),
                t.colorsNeedUpdate = !1
            }
            if (t.uvsNeedUpdate) {
                var o = this.attributes.uv;
                void 0 !== o && (o.copyVector2sArray(t.uvs),
                o.needsUpdate = !0),
                t.uvsNeedUpdate = !1
            }
            if (t.lineDistancesNeedUpdate) {
                var s = this.attributes.lineDistance;
                void 0 !== s && (s.copyArray(t.lineDistances),
                s.needsUpdate = !0),
                t.lineDistancesNeedUpdate = !1
            }
            return t.groupsNeedUpdate && (t.computeGroups(e.geometry),
            this.groups = t.groups,
            t.groupsNeedUpdate = !1),
            this
        },
        fromGeometry: function(e) {
            return e.__directGeometry = (new Hi).fromGeometry(e),
            this.fromDirectGeometry(e.__directGeometry)
        },
        fromDirectGeometry: function(e) {
            var t = new Float32Array(3 * e.vertices.length);
            if (this.setAttribute("position", new Ri(t,3).copyVector3sArray(e.vertices)),
            e.normals.length > 0) {
                var n = new Float32Array(3 * e.normals.length);
                this.setAttribute("normal", new Ri(n,3).copyVector3sArray(e.normals))
            }
            if (e.colors.length > 0) {
                var r = new Float32Array(3 * e.colors.length);
                this.setAttribute("color", new Ri(r,3).copyColorsArray(e.colors))
            }
            if (e.uvs.length > 0) {
                var i = new Float32Array(2 * e.uvs.length);
                this.setAttribute("uv", new Ri(i,2).copyVector2sArray(e.uvs))
            }
            if (e.uvs2.length > 0) {
                var a = new Float32Array(2 * e.uvs2.length);
                this.setAttribute("uv2", new Ri(a,2).copyVector2sArray(e.uvs2))
            }
            for (var o in this.groups = e.groups,
            e.morphTargets) {
                for (var s = [], l = e.morphTargets[o], u = 0, c = l.length; u < c; u++) {
                    var h = l[u]
                      , p = new zi(3 * h.data.length,3);
                    p.name = h.name,
                    s.push(p.copyVector3sArray(h.data))
                }
                this.morphAttributes[o] = s
            }
            if (e.skinIndices.length > 0) {
                var f = new zi(4 * e.skinIndices.length,4);
                this.setAttribute("skinIndex", f.copyVector4sArray(e.skinIndices))
            }
            if (e.skinWeights.length > 0) {
                var d = new zi(4 * e.skinWeights.length,4);
                this.setAttribute("skinWeight", d.copyVector4sArray(e.skinWeights))
            }
            return null !== e.boundingSphere && (this.boundingSphere = e.boundingSphere.clone()),
            null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone()),
            this
        },
        computeBoundingBox: function() {
            null === this.boundingBox && (this.boundingBox = new Wr);
            var e = this.attributes.position
              , t = this.morphAttributes.position;
            if (void 0 !== e) {
                if (this.boundingBox.setFromBufferAttribute(e),
                t)
                    for (var n = 0, r = t.length; n < r; n++) {
                        var i = t[n];
                        Xi.setFromBufferAttribute(i),
                        this.morphTargetsRelative ? (Zi.addVectors(this.boundingBox.min, Xi.min),
                        this.boundingBox.expandByPoint(Zi),
                        Zi.addVectors(this.boundingBox.max, Xi.max),
                        this.boundingBox.expandByPoint(Zi)) : (this.boundingBox.expandByPoint(Xi.min),
                        this.boundingBox.expandByPoint(Xi.max))
                    }
            } else
                this.boundingBox.makeEmpty();
            (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) && console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this)
        },
        computeBoundingSphere: function() {
            null === this.boundingSphere && (this.boundingSphere = new Yr);
            var e = this.attributes.position
              , t = this.morphAttributes.position;
            if (e) {
                var n = this.boundingSphere.center;
                if (Xi.setFromBufferAttribute(e),
                t)
                    for (var r = 0, i = t.length; r < i; r++) {
                        var a = t[r];
                        Yi.setFromBufferAttribute(a),
                        this.morphTargetsRelative ? (Zi.addVectors(Xi.min, Yi.min),
                        Xi.expandByPoint(Zi),
                        Zi.addVectors(Xi.max, Yi.max),
                        Xi.expandByPoint(Zi)) : (Xi.expandByPoint(Yi.min),
                        Xi.expandByPoint(Yi.max))
                    }
                Xi.getCenter(n);
                for (var o = 0, s = 0, l = e.count; s < l; s++)
                    Zi.fromBufferAttribute(e, s),
                    o = Math.max(o, n.distanceToSquared(Zi));
                if (t)
                    for (var u = 0, c = t.length; u < c; u++)
                        for (var h = t[u], p = this.morphTargetsRelative, f = 0, d = h.count; f < d; f++)
                            Zi.fromBufferAttribute(h, f),
                            p && (qi.fromBufferAttribute(e, f),
                            Zi.add(qi)),
                            o = Math.max(o, n.distanceToSquared(Zi));
                this.boundingSphere.radius = Math.sqrt(o),
                isNaN(this.boundingSphere.radius) && console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this)
            }
        },
        computeFaceNormals: function() {},
        computeVertexNormals: function() {
            var e = this.index
              , t = this.getAttribute("position");
            if (void 0 !== t) {
                var n = this.getAttribute("normal");
                if (void 0 === n)
                    n = new Ri(new Float32Array(3 * t.count),3),
                    this.setAttribute("normal", n);
                else
                    for (var r = 0, i = n.count; r < i; r++)
                        n.setXYZ(r, 0, 0, 0);
                var a = new ir
                  , o = new ir
                  , s = new ir
                  , l = new ir
                  , u = new ir
                  , c = new ir
                  , h = new ir
                  , p = new ir;
                if (e)
                    for (var f = 0, d = e.count; f < d; f += 3) {
                        var m = e.getX(f + 0)
                          , g = e.getX(f + 1)
                          , v = e.getX(f + 2);
                        a.fromBufferAttribute(t, m),
                        o.fromBufferAttribute(t, g),
                        s.fromBufferAttribute(t, v),
                        h.subVectors(s, o),
                        p.subVectors(a, o),
                        h.cross(p),
                        l.fromBufferAttribute(n, m),
                        u.fromBufferAttribute(n, g),
                        c.fromBufferAttribute(n, v),
                        l.add(h),
                        u.add(h),
                        c.add(h),
                        n.setXYZ(m, l.x, l.y, l.z),
                        n.setXYZ(g, u.x, u.y, u.z),
                        n.setXYZ(v, c.x, c.y, c.z)
                    }
                else
                    for (var y = 0, b = t.count; y < b; y += 3)
                        a.fromBufferAttribute(t, y + 0),
                        o.fromBufferAttribute(t, y + 1),
                        s.fromBufferAttribute(t, y + 2),
                        h.subVectors(s, o),
                        p.subVectors(a, o),
                        h.cross(p),
                        n.setXYZ(y + 0, h.x, h.y, h.z),
                        n.setXYZ(y + 1, h.x, h.y, h.z),
                        n.setXYZ(y + 2, h.x, h.y, h.z);
                this.normalizeNormals(),
                n.needsUpdate = !0
            }
        },
        merge: function(e, t) {
            if (e && e.isBufferGeometry) {
                void 0 === t && (t = 0,
                console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));
                var n = this.attributes;
                for (var r in n)
                    if (void 0 !== e.attributes[r])
                        for (var i = n[r].array, a = e.attributes[r], o = a.array, s = a.itemSize * t, l = Math.min(o.length, i.length - s), u = 0, c = s; u < l; u++,
                        c++)
                            i[c] = o[u];
                return this
            }
            console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.", e)
        },
        normalizeNormals: function() {
            for (var e = this.attributes.normal, t = 0, n = e.count; t < n; t++)
                Zi.fromBufferAttribute(e, t),
                Zi.normalize(),
                e.setXYZ(t, Zi.x, Zi.y, Zi.z)
        },
        toNonIndexed: function() {
            function e(e, t) {
                for (var n = e.array, r = e.itemSize, i = e.normalized, a = new n.constructor(t.length * r), o = 0, s = 0, l = 0, u = t.length; l < u; l++) {
                    o = t[l] * r;
                    for (var c = 0; c < r; c++)
                        a[s++] = n[o++]
                }
                return new Ri(a,r,i)
            }
            if (null === this.index)
                return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),
                this;
            var t = new $i
              , n = this.index.array
              , r = this.attributes;
            for (var i in r) {
                var a = e(r[i], n);
                t.setAttribute(i, a)
            }
            var o = this.morphAttributes;
            for (var s in o) {
                for (var l = [], u = o[s], c = 0, h = u.length; c < h; c++) {
                    var p = e(u[c], n);
                    l.push(p)
                }
                t.morphAttributes[s] = l
            }
            t.morphTargetsRelative = this.morphTargetsRelative;
            for (var f = this.groups, d = 0, m = f.length; d < m; d++) {
                var g = f[d];
                t.addGroup(g.start, g.count, g.materialIndex)
            }
            return t
        },
        toJSON: function() {
            var e = {
                metadata: {
                    version: 4.5,
                    type: "BufferGeometry",
                    generator: "BufferGeometry.toJSON"
                }
            };
            if (e.uuid = this.uuid,
            e.type = this.type,
            "" !== this.name && (e.name = this.name),
            Object.keys(this.userData).length > 0 && (e.userData = this.userData),
            void 0 !== this.parameters) {
                var t = this.parameters;
                for (var n in t)
                    void 0 !== t[n] && (e[n] = t[n]);
                return e
            }
            e.data = {
                attributes: {}
            };
            var r = this.index;
            null !== r && (e.data.index = {
                type: r.array.constructor.name,
                array: Array.prototype.slice.call(r.array)
            });
            var i = this.attributes;
            for (var a in i) {
                var o = i[a]
                  , s = o.toJSON(e.data);
                "" !== o.name && (s.name = o.name),
                e.data.attributes[a] = s
            }
            var l = {}
              , u = !1;
            for (var c in this.morphAttributes) {
                for (var h = this.morphAttributes[c], p = [], f = 0, d = h.length; f < d; f++) {
                    var m = h[f]
                      , g = m.toJSON(e.data);
                    "" !== m.name && (g.name = m.name),
                    p.push(g)
                }
                p.length > 0 && (l[c] = p,
                u = !0)
            }
            u && (e.data.morphAttributes = l,
            e.data.morphTargetsRelative = this.morphTargetsRelative);
            var v = this.groups;
            v.length > 0 && (e.data.groups = JSON.parse(JSON.stringify(v)));
            var y = this.boundingSphere;
            return null !== y && (e.data.boundingSphere = {
                center: y.center.toArray(),
                radius: y.radius
            }),
            e
        },
        clone: function() {
            return (new $i).copy(this)
        },
        copy: function(e) {
            this.index = null,
            this.attributes = {},
            this.morphAttributes = {},
            this.groups = [],
            this.boundingBox = null,
            this.boundingSphere = null;
            var t = {};
            this.name = e.name;
            var n = e.index;
            null !== n && this.setIndex(n.clone(t));
            var r = e.attributes;
            for (var i in r) {
                var a = r[i];
                this.setAttribute(i, a.clone(t))
            }
            var o = e.morphAttributes;
            for (var s in o) {
                for (var l = [], u = o[s], c = 0, h = u.length; c < h; c++)
                    l.push(u[c].clone(t));
                this.morphAttributes[s] = l
            }
            this.morphTargetsRelative = e.morphTargetsRelative;
            for (var p = e.groups, f = 0, d = p.length; f < d; f++) {
                var m = p[f];
                this.addGroup(m.start, m.count, m.materialIndex)
            }
            var g = e.boundingBox;
            null !== g && (this.boundingBox = g.clone());
            var v = e.boundingSphere;
            return null !== v && (this.boundingSphere = v.clone()),
            this.drawRange.start = e.drawRange.start,
            this.drawRange.count = e.drawRange.count,
            this.userData = e.userData,
            this
        },
        dispose: function() {
            this.dispatchEvent({
                type: "dispose"
            })
        }
    });
    var Ji = new pr
      , Ki = new ni
      , Qi = new Yr
      , ea = new ir
      , ta = new ir
      , na = new ir
      , ra = new ir
      , ia = new ir
      , aa = new ir
      , oa = new ir
      , sa = new ir
      , la = new ir
      , ua = new Xn
      , ca = new Xn
      , ha = new Xn
      , pa = new ir
      , fa = new ir;
    function da(e, t) {
        Lr.call(this),
        this.type = "Mesh",
        this.geometry = void 0 !== e ? e : new $i,
        this.material = void 0 !== t ? t : new Pi,
        this.updateMorphTargets()
    }
    function ma(e, t, n, r, i, a, o, s) {
        if (null === (t.side === _ ? r.intersectTriangle(o, a, i, !0, s) : r.intersectTriangle(i, a, o, t.side !== S, s)))
            return null;
        fa.copy(s),
        fa.applyMatrix4(e.matrixWorld);
        var l = n.ray.origin.distanceTo(fa);
        return l < n.near || l > n.far ? null : {
            distance: l,
            point: fa.clone(),
            object: e
        }
    }
    function ga(e, t, n, r, i, a, o, s, l, u, c, h) {
        ea.fromBufferAttribute(i, u),
        ta.fromBufferAttribute(i, c),
        na.fromBufferAttribute(i, h);
        var p = e.morphTargetInfluences;
        if (t.morphTargets && a && p) {
            oa.set(0, 0, 0),
            sa.set(0, 0, 0),
            la.set(0, 0, 0);
            for (var f = 0, d = a.length; f < d; f++) {
                var m = p[f]
                  , g = a[f];
                0 !== m && (ra.fromBufferAttribute(g, u),
                ia.fromBufferAttribute(g, c),
                aa.fromBufferAttribute(g, h),
                o ? (oa.addScaledVector(ra, m),
                sa.addScaledVector(ia, m),
                la.addScaledVector(aa, m)) : (oa.addScaledVector(ra.sub(ea), m),
                sa.addScaledVector(ia.sub(ta), m),
                la.addScaledVector(aa.sub(na), m)))
            }
            ea.add(oa),
            ta.add(sa),
            na.add(la)
        }
        e.isSkinnedMesh && (e.boneTransform(u, ea),
        e.boneTransform(c, ta),
        e.boneTransform(h, na));
        var v = ma(e, t, n, r, ea, ta, na, pa);
        if (v) {
            s && (ua.fromBufferAttribute(s, u),
            ca.fromBufferAttribute(s, c),
            ha.fromBufferAttribute(s, h),
            v.uv = vi.getUV(pa, ea, ta, na, ua, ca, ha, new Xn)),
            l && (ua.fromBufferAttribute(l, u),
            ca.fromBufferAttribute(l, c),
            ha.fromBufferAttribute(l, h),
            v.uv2 = vi.getUV(pa, ea, ta, na, ua, ca, ha, new Xn));
            var y = new Mi(u,c,h);
            vi.getNormal(ea, ta, na, y.normal),
            v.face = y
        }
        return v
    }
    da.prototype = Object.assign(Object.create(Lr.prototype), {
        constructor: da,
        isMesh: !0,
        copy: function(e) {
            return Lr.prototype.copy.call(this, e),
            void 0 !== e.morphTargetInfluences && (this.morphTargetInfluences = e.morphTargetInfluences.slice()),
            void 0 !== e.morphTargetDictionary && (this.morphTargetDictionary = Object.assign({}, e.morphTargetDictionary)),
            this.material = e.material,
            this.geometry = e.geometry,
            this
        },
        updateMorphTargets: function() {
            var e = this.geometry;
            if (e.isBufferGeometry) {
                var t = e.morphAttributes
                  , n = Object.keys(t);
                if (n.length > 0) {
                    var r = t[n[0]];
                    if (void 0 !== r) {
                        this.morphTargetInfluences = [],
                        this.morphTargetDictionary = {};
                        for (var i = 0, a = r.length; i < a; i++) {
                            var o = r[i].name || String(i);
                            this.morphTargetInfluences.push(0),
                            this.morphTargetDictionary[o] = i
                        }
                    }
                }
            } else {
                var s = e.morphTargets;
                void 0 !== s && s.length > 0 && console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")
            }
        },
        raycast: function(e, t) {
            var n, r = this.geometry, i = this.material, a = this.matrixWorld;
            if (void 0 !== i && (null === r.boundingSphere && r.computeBoundingSphere(),
            Qi.copy(r.boundingSphere),
            Qi.applyMatrix4(a),
            !1 !== e.ray.intersectsSphere(Qi) && (Ji.getInverse(a),
            Ki.copy(e.ray).applyMatrix4(Ji),
            null === r.boundingBox || !1 !== Ki.intersectsBox(r.boundingBox))))
                if (r.isBufferGeometry) {
                    var o = r.index
                      , s = r.attributes.position
                      , l = r.morphAttributes.position
                      , u = r.morphTargetsRelative
                      , c = r.attributes.uv
                      , h = r.attributes.uv2
                      , p = r.groups
                      , f = r.drawRange;
                    if (null !== o)
                        if (Array.isArray(i))
                            for (var d = 0, m = p.length; d < m; d++)
                                for (var g = p[d], v = i[g.materialIndex], y = Math.max(g.start, f.start), b = Math.min(g.start + g.count, f.start + f.count); y < b; y += 3) {
                                    var x = o.getX(y)
                                      , w = o.getX(y + 1)
                                      , _ = o.getX(y + 2);
                                    (n = ga(this, v, e, Ki, s, l, u, c, h, x, w, _)) && (n.faceIndex = Math.floor(y / 3),
                                    n.face.materialIndex = g.materialIndex,
                                    t.push(n))
                                }
                        else
                            for (var S = Math.max(0, f.start), E = Math.min(o.count, f.start + f.count); S < E; S += 3) {
                                var M = o.getX(S)
                                  , T = o.getX(S + 1)
                                  , A = o.getX(S + 2);
                                (n = ga(this, i, e, Ki, s, l, u, c, h, M, T, A)) && (n.faceIndex = Math.floor(S / 3),
                                t.push(n))
                            }
                    else if (void 0 !== s)
                        if (Array.isArray(i))
                            for (var P = 0, C = p.length; P < C; P++)
                                for (var L = p[P], R = i[L.materialIndex], k = Math.max(L.start, f.start), D = Math.min(L.start + L.count, f.start + f.count); k < D; k += 3) {
                                    (n = ga(this, R, e, Ki, s, l, u, c, h, k, k + 1, k + 2)) && (n.faceIndex = Math.floor(k / 3),
                                    n.face.materialIndex = L.materialIndex,
                                    t.push(n))
                                }
                        else
                            for (var I = Math.max(0, f.start), O = Math.min(s.count, f.start + f.count); I < O; I += 3) {
                                (n = ga(this, i, e, Ki, s, l, u, c, h, I, I + 1, I + 2)) && (n.faceIndex = Math.floor(I / 3),
                                t.push(n))
                            }
                } else if (r.isGeometry) {
                    var F, N = Array.isArray(i), B = r.vertices, z = r.faces, G = r.faceVertexUvs[0];
                    G.length > 0 && (F = G);
                    for (var H = 0, V = z.length; H < V; H++) {
                        var j = z[H]
                          , U = N ? i[j.materialIndex] : i;
                        if (void 0 !== U) {
                            var W = B[j.a]
                              , q = B[j.b]
                              , X = B[j.c];
                            if (n = ma(this, U, e, Ki, W, q, X, pa)) {
                                if (F && F[H]) {
                                    var Y = F[H];
                                    ua.copy(Y[0]),
                                    ca.copy(Y[1]),
                                    ha.copy(Y[2]),
                                    n.uv = vi.getUV(pa, W, q, X, ua, ca, ha, new Xn)
                                }
                                n.face = j,
                                n.faceIndex = H,
                                t.push(n)
                            }
                        }
                    }
                }
        }
    });
    var va = 0
      , ya = new pr
      , ba = new Lr
      , xa = new ir;
    function wa() {
        Object.defineProperty(this, "id", {
            value: va += 2
        }),
        this.uuid = qn.generateUUID(),
        this.name = "",
        this.type = "Geometry",
        this.vertices = [],
        this.colors = [],
        this.faces = [],
        this.faceVertexUvs = [[]],
        this.morphTargets = [],
        this.morphNormals = [],
        this.skinWeights = [],
        this.skinIndices = [],
        this.lineDistances = [],
        this.boundingBox = null,
        this.boundingSphere = null,
        this.elementsNeedUpdate = !1,
        this.verticesNeedUpdate = !1,
        this.uvsNeedUpdate = !1,
        this.normalsNeedUpdate = !1,
        this.colorsNeedUpdate = !1,
        this.lineDistancesNeedUpdate = !1,
        this.groupsNeedUpdate = !1
    }
    wa.prototype = Object.assign(Object.create(Hn.prototype), {
        constructor: wa,
        isGeometry: !0,
        applyMatrix4: function(e) {
            for (var t = (new Yn).getNormalMatrix(e), n = 0, r = this.vertices.length; n < r; n++) {
                this.vertices[n].applyMatrix4(e)
            }
            for (var i = 0, a = this.faces.length; i < a; i++) {
                var o = this.faces[i];
                o.normal.applyMatrix3(t).normalize();
                for (var s = 0, l = o.vertexNormals.length; s < l; s++)
                    o.vertexNormals[s].applyMatrix3(t).normalize()
            }
            return null !== this.boundingBox && this.computeBoundingBox(),
            null !== this.boundingSphere && this.computeBoundingSphere(),
            this.verticesNeedUpdate = !0,
            this.normalsNeedUpdate = !0,
            this
        },
        rotateX: function(e) {
            return ya.makeRotationX(e),
            this.applyMatrix4(ya),
            this
        },
        rotateY: function(e) {
            return ya.makeRotationY(e),
            this.applyMatrix4(ya),
            this
        },
        rotateZ: function(e) {
            return ya.makeRotationZ(e),
            this.applyMatrix4(ya),
            this
        },
        translate: function(e, t, n) {
            return ya.makeTranslation(e, t, n),
            this.applyMatrix4(ya),
            this
        },
        scale: function(e, t, n) {
            return ya.makeScale(e, t, n),
            this.applyMatrix4(ya),
            this
        },
        lookAt: function(e) {
            return ba.lookAt(e),
            ba.updateMatrix(),
            this.applyMatrix4(ba.matrix),
            this
        },
        fromBufferGeometry: function(e) {
            var t = this
              , n = null !== e.index ? e.index : void 0
              , r = e.attributes;
            if (void 0 === r.position)
                return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."),
                this;
            var i = r.position
              , a = r.normal
              , o = r.color
              , s = r.uv
              , l = r.uv2;
            void 0 !== l && (this.faceVertexUvs[1] = []);
            for (var u = 0; u < i.count; u++)
                t.vertices.push((new ir).fromBufferAttribute(i, u)),
                void 0 !== o && t.colors.push((new wi).fromBufferAttribute(o, u));
            function c(e, n, r, i) {
                var u = void 0 === o ? [] : [t.colors[e].clone(), t.colors[n].clone(), t.colors[r].clone()]
                  , c = new Mi(e,n,r,void 0 === a ? [] : [(new ir).fromBufferAttribute(a, e), (new ir).fromBufferAttribute(a, n), (new ir).fromBufferAttribute(a, r)],u,i);
                t.faces.push(c),
                void 0 !== s && t.faceVertexUvs[0].push([(new Xn).fromBufferAttribute(s, e), (new Xn).fromBufferAttribute(s, n), (new Xn).fromBufferAttribute(s, r)]),
                void 0 !== l && t.faceVertexUvs[1].push([(new Xn).fromBufferAttribute(l, e), (new Xn).fromBufferAttribute(l, n), (new Xn).fromBufferAttribute(l, r)])
            }
            var h = e.groups;
            if (h.length > 0)
                for (var p = 0; p < h.length; p++)
                    for (var f = h[p], d = f.start, m = d, g = d + f.count; m < g; m += 3)
                        void 0 !== n ? c(n.getX(m), n.getX(m + 1), n.getX(m + 2), f.materialIndex) : c(m, m + 1, m + 2, f.materialIndex);
            else if (void 0 !== n)
                for (var v = 0; v < n.count; v += 3)
                    c(n.getX(v), n.getX(v + 1), n.getX(v + 2));
            else
                for (var y = 0; y < i.count; y += 3)
                    c(y, y + 1, y + 2);
            return this.computeFaceNormals(),
            null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone()),
            null !== e.boundingSphere && (this.boundingSphere = e.boundingSphere.clone()),
            this
        },
        center: function() {
            return this.computeBoundingBox(),
            this.boundingBox.getCenter(xa).negate(),
            this.translate(xa.x, xa.y, xa.z),
            this
        },
        normalize: function() {
            this.computeBoundingSphere();
            var e = this.boundingSphere.center
              , t = this.boundingSphere.radius
              , n = 0 === t ? 1 : 1 / t
              , r = new pr;
            return r.set(n, 0, 0, -n * e.x, 0, n, 0, -n * e.y, 0, 0, n, -n * e.z, 0, 0, 0, 1),
            this.applyMatrix4(r),
            this
        },
        computeFaceNormals: function() {
            for (var e = new ir, t = new ir, n = 0, r = this.faces.length; n < r; n++) {
                var i = this.faces[n]
                  , a = this.vertices[i.a]
                  , o = this.vertices[i.b]
                  , s = this.vertices[i.c];
                e.subVectors(s, o),
                t.subVectors(a, o),
                e.cross(t),
                e.normalize(),
                i.normal.copy(e)
            }
        },
        computeVertexNormals: function(e) {
            void 0 === e && (e = !0);
            for (var t = new Array(this.vertices.length), n = 0, r = this.vertices.length; n < r; n++)
                t[n] = new ir;
            if (e)
                for (var i = new ir, a = new ir, o = 0, s = this.faces.length; o < s; o++) {
                    var l = this.faces[o]
                      , u = this.vertices[l.a]
                      , c = this.vertices[l.b]
                      , h = this.vertices[l.c];
                    i.subVectors(h, c),
                    a.subVectors(u, c),
                    i.cross(a),
                    t[l.a].add(i),
                    t[l.b].add(i),
                    t[l.c].add(i)
                }
            else {
                this.computeFaceNormals();
                for (var p = 0, f = this.faces.length; p < f; p++) {
                    var d = this.faces[p];
                    t[d.a].add(d.normal),
                    t[d.b].add(d.normal),
                    t[d.c].add(d.normal)
                }
            }
            for (var m = 0, g = this.vertices.length; m < g; m++)
                t[m].normalize();
            for (var v = 0, y = this.faces.length; v < y; v++) {
                var b = this.faces[v]
                  , x = b.vertexNormals;
                3 === x.length ? (x[0].copy(t[b.a]),
                x[1].copy(t[b.b]),
                x[2].copy(t[b.c])) : (x[0] = t[b.a].clone(),
                x[1] = t[b.b].clone(),
                x[2] = t[b.c].clone())
            }
            this.faces.length > 0 && (this.normalsNeedUpdate = !0)
        },
        computeFlatVertexNormals: function() {
            this.computeFaceNormals();
            for (var e = 0, t = this.faces.length; e < t; e++) {
                var n = this.faces[e]
                  , r = n.vertexNormals;
                3 === r.length ? (r[0].copy(n.normal),
                r[1].copy(n.normal),
                r[2].copy(n.normal)) : (r[0] = n.normal.clone(),
                r[1] = n.normal.clone(),
                r[2] = n.normal.clone())
            }
            this.faces.length > 0 && (this.normalsNeedUpdate = !0)
        },
        computeMorphNormals: function() {
            for (var e = 0, t = this.faces.length; e < t; e++) {
                var n = this.faces[e];
                n.__originalFaceNormal ? n.__originalFaceNormal.copy(n.normal) : n.__originalFaceNormal = n.normal.clone(),
                n.__originalVertexNormals || (n.__originalVertexNormals = []);
                for (var r = 0, i = n.vertexNormals.length; r < i; r++)
                    n.__originalVertexNormals[r] ? n.__originalVertexNormals[r].copy(n.vertexNormals[r]) : n.__originalVertexNormals[r] = n.vertexNormals[r].clone()
            }
            var a = new wa;
            a.faces = this.faces;
            for (var o = 0, s = this.morphTargets.length; o < s; o++) {
                if (!this.morphNormals[o]) {
                    this.morphNormals[o] = {},
                    this.morphNormals[o].faceNormals = [],
                    this.morphNormals[o].vertexNormals = [];
                    for (var l = this.morphNormals[o].faceNormals, u = this.morphNormals[o].vertexNormals, c = 0, h = this.faces.length; c < h; c++) {
                        var p = new ir
                          , f = {
                            a: new ir,
                            b: new ir,
                            c: new ir
                        };
                        l.push(p),
                        u.push(f)
                    }
                }
                var d = this.morphNormals[o];
                a.vertices = this.morphTargets[o].vertices,
                a.computeFaceNormals(),
                a.computeVertexNormals();
                for (var m = 0, g = this.faces.length; m < g; m++) {
                    var v = this.faces[m]
                      , y = d.faceNormals[m]
                      , b = d.vertexNormals[m];
                    y.copy(v.normal),
                    b.a.copy(v.vertexNormals[0]),
                    b.b.copy(v.vertexNormals[1]),
                    b.c.copy(v.vertexNormals[2])
                }
            }
            for (var x = 0, w = this.faces.length; x < w; x++) {
                var _ = this.faces[x];
                _.normal = _.__originalFaceNormal,
                _.vertexNormals = _.__originalVertexNormals
            }
        },
        computeBoundingBox: function() {
            null === this.boundingBox && (this.boundingBox = new Wr),
            this.boundingBox.setFromPoints(this.vertices)
        },
        computeBoundingSphere: function() {
            null === this.boundingSphere && (this.boundingSphere = new Yr),
            this.boundingSphere.setFromPoints(this.vertices)
        },
        merge: function(e, t, n) {
            if (e && e.isGeometry) {
                var r, i = this.vertices.length, a = this.vertices, o = e.vertices, s = this.faces, l = e.faces, u = this.colors, c = e.colors;
                void 0 === n && (n = 0),
                void 0 !== t && (r = (new Yn).getNormalMatrix(t));
                for (var h = 0, p = o.length; h < p; h++) {
                    var f = o[h].clone();
                    void 0 !== t && f.applyMatrix4(t),
                    a.push(f)
                }
                for (var d = 0, m = c.length; d < m; d++)
                    u.push(c[d].clone());
                for (var g = 0, v = l.length; g < v; g++) {
                    var y = l[g]
                      , b = void 0
                      , x = void 0
                      , w = void 0
                      , _ = y.vertexNormals
                      , S = y.vertexColors;
                    (b = new Mi(y.a + i,y.b + i,y.c + i)).normal.copy(y.normal),
                    void 0 !== r && b.normal.applyMatrix3(r).normalize();
                    for (var E = 0, M = _.length; E < M; E++)
                        x = _[E].clone(),
                        void 0 !== r && x.applyMatrix3(r).normalize(),
                        b.vertexNormals.push(x);
                    b.color.copy(y.color);
                    for (var T = 0, A = S.length; T < A; T++)
                        w = S[T],
                        b.vertexColors.push(w.clone());
                    b.materialIndex = y.materialIndex + n,
                    s.push(b)
                }
                for (var P = 0, C = e.faceVertexUvs.length; P < C; P++) {
                    var L = e.faceVertexUvs[P];
                    void 0 === this.faceVertexUvs[P] && (this.faceVertexUvs[P] = []);
                    for (var R = 0, k = L.length; R < k; R++) {
                        for (var D = L[R], I = [], O = 0, F = D.length; O < F; O++)
                            I.push(D[O].clone());
                        this.faceVertexUvs[P].push(I)
                    }
                }
            } else
                console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.", e)
        },
        mergeMesh: function(e) {
            e && e.isMesh ? (e.matrixAutoUpdate && e.updateMatrix(),
            this.merge(e.geometry, e.matrix)) : console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.", e)
        },
        mergeVertices: function() {
            for (var e = {}, t = [], n = [], r = Math.pow(10, 4), i = 0, a = this.vertices.length; i < a; i++) {
                var o = this.vertices[i]
                  , s = Math.round(o.x * r) + "_" + Math.round(o.y * r) + "_" + Math.round(o.z * r);
                void 0 === e[s] ? (e[s] = i,
                t.push(this.vertices[i]),
                n[i] = t.length - 1) : n[i] = n[e[s]]
            }
            for (var l = [], u = 0, c = this.faces.length; u < c; u++) {
                var h = this.faces[u];
                h.a = n[h.a],
                h.b = n[h.b],
                h.c = n[h.c];
                for (var p = [h.a, h.b, h.c], f = 0; f < 3; f++)
                    if (p[f] === p[(f + 1) % 3]) {
                        l.push(u);
                        break
                    }
            }
            for (var d = l.length - 1; d >= 0; d--) {
                var m = l[d];
                this.faces.splice(m, 1);
                for (var g = 0, v = this.faceVertexUvs.length; g < v; g++)
                    this.faceVertexUvs[g].splice(m, 1)
            }
            var y = this.vertices.length - t.length;
            return this.vertices = t,
            y
        },
        setFromPoints: function(e) {
            this.vertices = [];
            for (var t = 0, n = e.length; t < n; t++) {
                var r = e[t];
                this.vertices.push(new ir(r.x,r.y,r.z || 0))
            }
            return this
        },
        sortFacesByMaterialIndex: function() {
            for (var e = this.faces, t = e.length, n = 0; n < t; n++)
                e[n]._id = n;
            e.sort((function(e, t) {
                return e.materialIndex - t.materialIndex
            }
            ));
            var r, i, a = this.faceVertexUvs[0], o = this.faceVertexUvs[1];
            a && a.length === t && (r = []),
            o && o.length === t && (i = []);
            for (var s = 0; s < t; s++) {
                var l = e[s]._id;
                r && r.push(a[l]),
                i && i.push(o[l])
            }
            r && (this.faceVertexUvs[0] = r),
            i && (this.faceVertexUvs[1] = i)
        },
        toJSON: function() {
            var e = {
                metadata: {
                    version: 4.5,
                    type: "Geometry",
                    generator: "Geometry.toJSON"
                }
            };
            if (e.uuid = this.uuid,
            e.type = this.type,
            "" !== this.name && (e.name = this.name),
            void 0 !== this.parameters) {
                var t = this.parameters;
                for (var n in t)
                    void 0 !== t[n] && (e[n] = t[n]);
                return e
            }
            for (var r = [], i = 0; i < this.vertices.length; i++) {
                var a = this.vertices[i];
                r.push(a.x, a.y, a.z)
            }
            for (var o = [], s = [], l = {}, u = [], c = {}, h = [], p = {}, f = 0; f < this.faces.length; f++) {
                var d = this.faces[f]
                  , m = void 0 !== this.faceVertexUvs[0][f]
                  , g = d.normal.length() > 0
                  , v = d.vertexNormals.length > 0
                  , y = 1 !== d.color.r || 1 !== d.color.g || 1 !== d.color.b
                  , b = d.vertexColors.length > 0
                  , x = 0;
                if (x = E(x, 0, 0),
                x = E(x, 1, !0),
                x = E(x, 2, !1),
                x = E(x, 3, m),
                x = E(x, 4, g),
                x = E(x, 5, v),
                x = E(x, 6, y),
                x = E(x, 7, b),
                o.push(x),
                o.push(d.a, d.b, d.c),
                o.push(d.materialIndex),
                m) {
                    var w = this.faceVertexUvs[0][f];
                    o.push(A(w[0]), A(w[1]), A(w[2]))
                }
                if (g && o.push(M(d.normal)),
                v) {
                    var _ = d.vertexNormals;
                    o.push(M(_[0]), M(_[1]), M(_[2]))
                }
                if (y && o.push(T(d.color)),
                b) {
                    var S = d.vertexColors;
                    o.push(T(S[0]), T(S[1]), T(S[2]))
                }
            }
            function E(e, t, n) {
                return n ? e | 1 << t : e & ~(1 << t)
            }
            function M(e) {
                var t = e.x.toString() + e.y.toString() + e.z.toString();
                return void 0 !== l[t] || (l[t] = s.length / 3,
                s.push(e.x, e.y, e.z)),
                l[t]
            }
            function T(e) {
                var t = e.r.toString() + e.g.toString() + e.b.toString();
                return void 0 !== c[t] || (c[t] = u.length,
                u.push(e.getHex())),
                c[t]
            }
            function A(e) {
                var t = e.x.toString() + e.y.toString();
                return void 0 !== p[t] || (p[t] = h.length / 2,
                h.push(e.x, e.y)),
                p[t]
            }
            return e.data = {},
            e.data.vertices = r,
            e.data.normals = s,
            u.length > 0 && (e.data.colors = u),
            h.length > 0 && (e.data.uvs = [h]),
            e.data.faces = o,
            e
        },
        clone: function() {
            return (new wa).copy(this)
        },
        copy: function(e) {
            this.vertices = [],
            this.colors = [],
            this.faces = [],
            this.faceVertexUvs = [[]],
            this.morphTargets = [],
            this.morphNormals = [],
            this.skinWeights = [],
            this.skinIndices = [],
            this.lineDistances = [],
            this.boundingBox = null,
            this.boundingSphere = null,
            this.name = e.name;
            for (var t = e.vertices, n = 0, r = t.length; n < r; n++)
                this.vertices.push(t[n].clone());
            for (var i = e.colors, a = 0, o = i.length; a < o; a++)
                this.colors.push(i[a].clone());
            for (var s = e.faces, l = 0, u = s.length; l < u; l++)
                this.faces.push(s[l].clone());
            for (var c = 0, h = e.faceVertexUvs.length; c < h; c++) {
                var p = e.faceVertexUvs[c];
                void 0 === this.faceVertexUvs[c] && (this.faceVertexUvs[c] = []);
                for (var f = 0, d = p.length; f < d; f++) {
                    for (var m = p[f], g = [], v = 0, y = m.length; v < y; v++) {
                        var b = m[v];
                        g.push(b.clone())
                    }
                    this.faceVertexUvs[c].push(g)
                }
            }
            for (var x = e.morphTargets, w = 0, _ = x.length; w < _; w++) {
                var S = {};
                if (S.name = x[w].name,
                void 0 !== x[w].vertices) {
                    S.vertices = [];
                    for (var E = 0, M = x[w].vertices.length; E < M; E++)
                        S.vertices.push(x[w].vertices[E].clone())
                }
                if (void 0 !== x[w].normals) {
                    S.normals = [];
                    for (var T = 0, A = x[w].normals.length; T < A; T++)
                        S.normals.push(x[w].normals[T].clone())
                }
                this.morphTargets.push(S)
            }
            for (var P = e.morphNormals, C = 0, L = P.length; C < L; C++) {
                var R = {};
                if (void 0 !== P[C].vertexNormals) {
                    R.vertexNormals = [];
                    for (var k = 0, D = P[C].vertexNormals.length; k < D; k++) {
                        var I = P[C].vertexNormals[k]
                          , O = {};
                        O.a = I.a.clone(),
                        O.b = I.b.clone(),
                        O.c = I.c.clone(),
                        R.vertexNormals.push(O)
                    }
                }
                if (void 0 !== P[C].faceNormals) {
                    R.faceNormals = [];
                    for (var F = 0, N = P[C].faceNormals.length; F < N; F++)
                        R.faceNormals.push(P[C].faceNormals[F].clone())
                }
                this.morphNormals.push(R)
            }
            for (var B = e.skinWeights, z = 0, G = B.length; z < G; z++)
                this.skinWeights.push(B[z].clone());
            for (var H = e.skinIndices, V = 0, j = H.length; V < j; V++)
                this.skinIndices.push(H[V].clone());
            for (var U = e.lineDistances, W = 0, q = U.length; W < q; W++)
                this.lineDistances.push(U[W]);
            var X = e.boundingBox;
            null !== X && (this.boundingBox = X.clone());
            var Y = e.boundingSphere;
            return null !== Y && (this.boundingSphere = Y.clone()),
            this.elementsNeedUpdate = e.elementsNeedUpdate,
            this.verticesNeedUpdate = e.verticesNeedUpdate,
            this.uvsNeedUpdate = e.uvsNeedUpdate,
            this.normalsNeedUpdate = e.normalsNeedUpdate,
            this.colorsNeedUpdate = e.colorsNeedUpdate,
            this.lineDistancesNeedUpdate = e.lineDistancesNeedUpdate,
            this.groupsNeedUpdate = e.groupsNeedUpdate,
            this
        },
        dispose: function() {
            this.dispatchEvent({
                type: "dispose"
            })
        }
    });
    var _a = function(e) {
        Object(l.a)(n, e);
        var t = Object(u.a)(n);
        function n(e, r, i, a, o, l) {
            var u;
            return Object(s.a)(this, n),
            (u = t.call(this)).type = "BoxGeometry",
            u.parameters = {
                width: e,
                height: r,
                depth: i,
                widthSegments: a,
                heightSegments: o,
                depthSegments: l
            },
            u.fromBufferGeometry(new Sa(e,r,i,a,o,l)),
            u.mergeVertices(),
            u
        }
        return n
    }(wa)
      , Sa = function(e) {
        Object(l.a)(n, e);
        var t = Object(u.a)(n);
        function n() {
            var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1, a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1, l = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1, u = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 1, c = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 1;
            Object(s.a)(this, n),
            (e = t.call(this)).type = "BoxBufferGeometry",
            e.parameters = {
                width: r,
                height: i,
                depth: a,
                widthSegments: l,
                heightSegments: u,
                depthSegments: c
            };
            var h = Object(o.a)(e);
            l = Math.floor(l),
            u = Math.floor(u),
            c = Math.floor(c);
            var p = []
              , f = []
              , d = []
              , m = []
              , g = 0
              , v = 0;
            function y(e, t, n, r, i, a, o, s, l, u, c) {
                for (var y = a / l, b = o / u, x = a / 2, w = o / 2, _ = s / 2, S = l + 1, E = u + 1, M = 0, T = 0, A = new ir, P = 0; P < E; P++)
                    for (var C = P * b - w, L = 0; L < S; L++) {
                        var R = L * y - x;
                        A[e] = R * r,
                        A[t] = C * i,
                        A[n] = _,
                        f.push(A.x, A.y, A.z),
                        A[e] = 0,
                        A[t] = 0,
                        A[n] = s > 0 ? 1 : -1,
                        d.push(A.x, A.y, A.z),
                        m.push(L / l),
                        m.push(1 - P / u),
                        M += 1
                    }
                for (var k = 0; k < u; k++)
                    for (var D = 0; D < l; D++) {
                        var I = g + D + S * k
                          , O = g + D + S * (k + 1)
                          , F = g + (D + 1) + S * (k + 1)
                          , N = g + (D + 1) + S * k;
                        p.push(I, O, N),
                        p.push(O, F, N),
                        T += 6
                    }
                h.addGroup(v, T, c),
                v += T,
                g += M
            }
            return y("z", "y", "x", -1, -1, a, i, r, c, u, 0),
            y("z", "y", "x", 1, -1, a, i, -r, c, u, 1),
            y("x", "z", "y", 1, 1, r, a, i, l, c, 2),
            y("x", "z", "y", 1, -1, r, a, -i, l, c, 3),
            y("x", "y", "z", 1, -1, r, i, a, l, u, 4),
            y("x", "y", "z", -1, -1, r, i, -a, l, u, 5),
            e.setIndex(p),
            e.setAttribute("position", new zi(f,3)),
            e.setAttribute("normal", new zi(d,3)),
            e.setAttribute("uv", new zi(m,2)),
            e
        }
        return n
    }($i);
    function Ea(e) {
        var t = {};
        for (var n in e)
            for (var r in t[n] = {},
            e[n]) {
                var i = e[n][r];
                i && (i.isColor || i.isMatrix3 || i.isMatrix4 || i.isVector2 || i.isVector3 || i.isVector4 || i.isTexture) ? t[n][r] = i.clone() : Array.isArray(i) ? t[n][r] = i.slice() : t[n][r] = i
            }
        return t
    }
    function Ma(e) {
        for (var t = {}, n = 0; n < e.length; n++) {
            var r = Ea(e[n]);
            for (var i in r)
                t[i] = r[i]
        }
        return t
    }
    var Ta = {
        clone: Ea,
        merge: Ma
    };
    function Aa(e) {
        Ai.call(this),
        this.type = "ShaderMaterial",
        this.defines = {},
        this.uniforms = {},
        this.vertexShader = "void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",
        this.fragmentShader = "void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",
        this.linewidth = 1,
        this.wireframe = !1,
        this.wireframeLinewidth = 1,
        this.fog = !1,
        this.lights = !1,
        this.clipping = !1,
        this.skinning = !1,
        this.morphTargets = !1,
        this.morphNormals = !1,
        this.extensions = {
            derivatives: !1,
            fragDepth: !1,
            drawBuffers: !1,
            shaderTextureLOD: !1
        },
        this.defaultAttributeValues = {
            color: [1, 1, 1],
            uv: [0, 0],
            uv2: [0, 0]
        },
        this.index0AttributeName = void 0,
        this.uniformsNeedUpdate = !1,
        void 0 !== e && (void 0 !== e.attributes && console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),
        this.setValues(e))
    }
    function Pa() {
        Lr.call(this),
        this.type = "Camera",
        this.matrixWorldInverse = new pr,
        this.projectionMatrix = new pr,
        this.projectionMatrixInverse = new pr
    }
    function Ca(e, t, n, r) {
        Pa.call(this),
        this.type = "PerspectiveCamera",
        this.fov = void 0 !== e ? e : 50,
        this.zoom = 1,
        this.near = void 0 !== n ? n : .1,
        this.far = void 0 !== r ? r : 2e3,
        this.focus = 10,
        this.aspect = void 0 !== t ? t : 1,
        this.view = null,
        this.filmGauge = 35,
        this.filmOffset = 0,
        this.updateProjectionMatrix()
    }
    Aa.prototype = Object.create(Ai.prototype),
    Aa.prototype.constructor = Aa,
    Aa.prototype.isShaderMaterial = !0,
    Aa.prototype.copy = function(e) {
        return Ai.prototype.copy.call(this, e),
        this.fragmentShader = e.fragmentShader,
        this.vertexShader = e.vertexShader,
        this.uniforms = Ea(e.uniforms),
        this.defines = Object.assign({}, e.defines),
        this.wireframe = e.wireframe,
        this.wireframeLinewidth = e.wireframeLinewidth,
        this.lights = e.lights,
        this.clipping = e.clipping,
        this.skinning = e.skinning,
        this.morphTargets = e.morphTargets,
        this.morphNormals = e.morphNormals,
        this.extensions = Object.assign({}, e.extensions),
        this
    }
    ,
    Aa.prototype.toJSON = function(e) {
        var t = Ai.prototype.toJSON.call(this, e);
        for (var n in t.uniforms = {},
        this.uniforms) {
            var r = this.uniforms[n].value;
            r && r.isTexture ? t.uniforms[n] = {
                type: "t",
                value: r.toJSON(e).uuid
            } : r && r.isColor ? t.uniforms[n] = {
                type: "c",
                value: r.getHex()
            } : r && r.isVector2 ? t.uniforms[n] = {
                type: "v2",
                value: r.toArray()
            } : r && r.isVector3 ? t.uniforms[n] = {
                type: "v3",
                value: r.toArray()
            } : r && r.isVector4 ? t.uniforms[n] = {
                type: "v4",
                value: r.toArray()
            } : r && r.isMatrix3 ? t.uniforms[n] = {
                type: "m3",
                value: r.toArray()
            } : r && r.isMatrix4 ? t.uniforms[n] = {
                type: "m4",
                value: r.toArray()
            } : t.uniforms[n] = {
                value: r
            }
        }
        Object.keys(this.defines).length > 0 && (t.defines = this.defines),
        t.vertexShader = this.vertexShader,
        t.fragmentShader = this.fragmentShader;
        var i = {};
        for (var a in this.extensions)
            !0 === this.extensions[a] && (i[a] = !0);
        return Object.keys(i).length > 0 && (t.extensions = i),
        t
    }
    ,
    Pa.prototype = Object.assign(Object.create(Lr.prototype), {
        constructor: Pa,
        isCamera: !0,
        copy: function(e, t) {
            return Lr.prototype.copy.call(this, e, t),
            this.matrixWorldInverse.copy(e.matrixWorldInverse),
            this.projectionMatrix.copy(e.projectionMatrix),
            this.projectionMatrixInverse.copy(e.projectionMatrixInverse),
            this
        },
        getWorldDirection: function(e) {
            void 0 === e && (console.warn("THREE.Camera: .getWorldDirection() target is now required"),
            e = new ir),
            this.updateMatrixWorld(!0);
            var t = this.matrixWorld.elements;
            return e.set(-t[8], -t[9], -t[10]).normalize()
        },
        updateMatrixWorld: function(e) {
            Lr.prototype.updateMatrixWorld.call(this, e),
            this.matrixWorldInverse.getInverse(this.matrixWorld)
        },
        updateWorldMatrix: function(e, t) {
            Lr.prototype.updateWorldMatrix.call(this, e, t),
            this.matrixWorldInverse.getInverse(this.matrixWorld)
        },
        clone: function() {
            return (new this.constructor).copy(this)
        }
    }),
    Ca.prototype = Object.assign(Object.create(Pa.prototype), {
        constructor: Ca,
        isPerspectiveCamera: !0,
        copy: function(e, t) {
            return Pa.prototype.copy.call(this, e, t),
            this.fov = e.fov,
            this.zoom = e.zoom,
            this.near = e.near,
            this.far = e.far,
            this.focus = e.focus,
            this.aspect = e.aspect,
            this.view = null === e.view ? null : Object.assign({}, e.view),
            this.filmGauge = e.filmGauge,
            this.filmOffset = e.filmOffset,
            this
        },
        setFocalLength: function(e) {
            var t = .5 * this.getFilmHeight() / e;
            this.fov = 2 * qn.RAD2DEG * Math.atan(t),
            this.updateProjectionMatrix()
        },
        getFocalLength: function() {
            var e = Math.tan(.5 * qn.DEG2RAD * this.fov);
            return .5 * this.getFilmHeight() / e
        },
        getEffectiveFOV: function() {
            return 2 * qn.RAD2DEG * Math.atan(Math.tan(.5 * qn.DEG2RAD * this.fov) / this.zoom)
        },
        getFilmWidth: function() {
            return this.filmGauge * Math.min(this.aspect, 1)
        },
        getFilmHeight: function() {
            return this.filmGauge / Math.max(this.aspect, 1)
        },
        setViewOffset: function(e, t, n, r, i, a) {
            this.aspect = e / t,
            null === this.view && (this.view = {
                enabled: !0,
                fullWidth: 1,
                fullHeight: 1,
                offsetX: 0,
                offsetY: 0,
                width: 1,
                height: 1
            }),
            this.view.enabled = !0,
            this.view.fullWidth = e,
            this.view.fullHeight = t,
            this.view.offsetX = n,
            this.view.offsetY = r,
            this.view.width = i,
            this.view.height = a,
            this.updateProjectionMatrix()
        },
        clearViewOffset: function() {
            null !== this.view && (this.view.enabled = !1),
            this.updateProjectionMatrix()
        },
        updateProjectionMatrix: function() {
            var e = this.near
              , t = e * Math.tan(.5 * qn.DEG2RAD * this.fov) / this.zoom
              , n = 2 * t
              , r = this.aspect * n
              , i = -.5 * r
              , a = this.view;
            if (null !== this.view && this.view.enabled) {
                var o = a.fullWidth
                  , s = a.fullHeight;
                i += a.offsetX * r / o,
                t -= a.offsetY * n / s,
                r *= a.width / o,
                n *= a.height / s
            }
            var l = this.filmOffset;
            0 !== l && (i += e * l / this.getFilmWidth()),
            this.projectionMatrix.makePerspective(i, i + r, t, t - n, e, this.far),
            this.projectionMatrixInverse.getInverse(this.projectionMatrix)
        },
        toJSON: function(e) {
            var t = Lr.prototype.toJSON.call(this, e);
            return t.object.fov = this.fov,
            t.object.zoom = this.zoom,
            t.object.near = this.near,
            t.object.far = this.far,
            t.object.focus = this.focus,
            t.object.aspect = this.aspect,
            null !== this.view && (t.object.view = Object.assign({}, this.view)),
            t.object.filmGauge = this.filmGauge,
            t.object.filmOffset = this.filmOffset,
            t
        }
    });
    function La(e, t, n) {
        if (Lr.call(this),
        this.type = "CubeCamera",
        !0 === n.isWebGLCubeRenderTarget) {
            this.renderTarget = n;
            var r = new Ca(90,1,e,t);
            r.layers = this.layers,
            r.up.set(0, -1, 0),
            r.lookAt(new ir(1,0,0)),
            this.add(r);
            var i = new Ca(90,1,e,t);
            i.layers = this.layers,
            i.up.set(0, -1, 0),
            i.lookAt(new ir(-1,0,0)),
            this.add(i);
            var a = new Ca(90,1,e,t);
            a.layers = this.layers,
            a.up.set(0, 0, 1),
            a.lookAt(new ir(0,1,0)),
            this.add(a);
            var o = new Ca(90,1,e,t);
            o.layers = this.layers,
            o.up.set(0, 0, -1),
            o.lookAt(new ir(0,-1,0)),
            this.add(o);
            var s = new Ca(90,1,e,t);
            s.layers = this.layers,
            s.up.set(0, -1, 0),
            s.lookAt(new ir(0,0,1)),
            this.add(s);
            var l = new Ca(90,1,e,t);
            l.layers = this.layers,
            l.up.set(0, -1, 0),
            l.lookAt(new ir(0,0,-1)),
            this.add(l),
            this.update = function(e, t) {
                null === this.parent && this.updateMatrixWorld();
                var u = e.xr.enabled
                  , c = e.getRenderTarget();
                e.xr.enabled = !1;
                var h = n.texture.generateMipmaps;
                n.texture.generateMipmaps = !1,
                e.setRenderTarget(n, 0),
                e.render(t, r),
                e.setRenderTarget(n, 1),
                e.render(t, i),
                e.setRenderTarget(n, 2),
                e.render(t, a),
                e.setRenderTarget(n, 3),
                e.render(t, o),
                e.setRenderTarget(n, 4),
                e.render(t, s),
                n.texture.generateMipmaps = h,
                e.setRenderTarget(n, 5),
                e.render(t, l),
                e.setRenderTarget(c),
                e.xr.enabled = u
            }
            ,
            this.clear = function(e, t, r, i) {
                for (var a = e.getRenderTarget(), o = 0; o < 6; o++)
                    e.setRenderTarget(n, o),
                    e.clear(t, r, i);
                e.setRenderTarget(a)
            }
        } else
            console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.")
    }
    function Ra(e, t, n) {
        Number.isInteger(t) && (console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),
        t = n),
        Qn.call(this, e, e, t)
    }
    function ka(e, t, n, r, i, a, o, s, l, u, c, h) {
        Jn.call(this, null, a, o, s, l, u, r, i, c, h),
        this.image = {
            data: e || null,
            width: t || 1,
            height: n || 1
        },
        this.magFilter = void 0 !== l ? l : we,
        this.minFilter = void 0 !== u ? u : we,
        this.generateMipmaps = !1,
        this.flipY = !1,
        this.unpackAlignment = 1,
        this.needsUpdate = !0
    }
    La.prototype = Object.create(Lr.prototype),
    La.prototype.constructor = La,
    Ra.prototype = Object.create(Qn.prototype),
    Ra.prototype.constructor = Ra,
    Ra.prototype.isWebGLCubeRenderTarget = !0,
    Ra.prototype.fromEquirectangularTexture = function(e, t) {
        this.texture.type = t.type,
        this.texture.format = We,
        this.texture.encoding = t.encoding,
        this.texture.generateMipmaps = t.generateMipmaps,
        this.texture.minFilter = t.minFilter,
        this.texture.magFilter = t.magFilter;
        var n = new Rr
          , r = "\n\n\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t#include <begin_vertex>\n\t\t\t\t#include <project_vertex>\n\n\t\t\t}\n\t\t"
          , i = "\n\n\t\t\tuniform sampler2D tEquirect;\n\n\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t}\n\t\t"
          , a = new Aa({
            name: "CubemapFromEquirect",
            uniforms: Ea({
                tEquirect: {
                    value: null
                }
            }),
            vertexShader: r,
            fragmentShader: i,
            side: _,
            blending: T
        });
        a.uniforms.tEquirect.value = t;
        var o = new da(new Sa(5,5,5),a);
        return n.add(o),
        new La(1,10,this).update(e, n),
        o.geometry.dispose(),
        o.material.dispose(),
        this
    }
    ,
    ka.prototype = Object.create(Jn.prototype),
    ka.prototype.constructor = ka,
    ka.prototype.isDataTexture = !0;
    var Da = new Yr
      , Ia = new ir;
    function Oa(e, t, n, r, i, a) {
        this.planes = [void 0 !== e ? e : new oi, void 0 !== t ? t : new oi, void 0 !== n ? n : new oi, void 0 !== r ? r : new oi, void 0 !== i ? i : new oi, void 0 !== a ? a : new oi]
    }
    Object.assign(Oa.prototype, {
        set: function(e, t, n, r, i, a) {
            var o = this.planes;
            return o[0].copy(e),
            o[1].copy(t),
            o[2].copy(n),
            o[3].copy(r),
            o[4].copy(i),
            o[5].copy(a),
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(e) {
            for (var t = this.planes, n = 0; n < 6; n++)
                t[n].copy(e.planes[n]);
            return this
        },
        setFromProjectionMatrix: function(e) {
            var t = this.planes
              , n = e.elements
              , r = n[0]
              , i = n[1]
              , a = n[2]
              , o = n[3]
              , s = n[4]
              , l = n[5]
              , u = n[6]
              , c = n[7]
              , h = n[8]
              , p = n[9]
              , f = n[10]
              , d = n[11]
              , m = n[12]
              , g = n[13]
              , v = n[14]
              , y = n[15];
            return t[0].setComponents(o - r, c - s, d - h, y - m).normalize(),
            t[1].setComponents(o + r, c + s, d + h, y + m).normalize(),
            t[2].setComponents(o + i, c + l, d + p, y + g).normalize(),
            t[3].setComponents(o - i, c - l, d - p, y - g).normalize(),
            t[4].setComponents(o - a, c - u, d - f, y - v).normalize(),
            t[5].setComponents(o + a, c + u, d + f, y + v).normalize(),
            this
        },
        intersectsObject: function(e) {
            var t = e.geometry;
            return null === t.boundingSphere && t.computeBoundingSphere(),
            Da.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),
            this.intersectsSphere(Da)
        },
        intersectsSprite: function(e) {
            return Da.center.set(0, 0, 0),
            Da.radius = .7071067811865476,
            Da.applyMatrix4(e.matrixWorld),
            this.intersectsSphere(Da)
        },
        intersectsSphere: function(e) {
            for (var t = this.planes, n = e.center, r = -e.radius, i = 0; i < 6; i++) {
                if (t[i].distanceToPoint(n) < r)
                    return !1
            }
            return !0
        },
        intersectsBox: function(e) {
            for (var t = this.planes, n = 0; n < 6; n++) {
                var r = t[n];
                if (Ia.x = r.normal.x > 0 ? e.max.x : e.min.x,
                Ia.y = r.normal.y > 0 ? e.max.y : e.min.y,
                Ia.z = r.normal.z > 0 ? e.max.z : e.min.z,
                r.distanceToPoint(Ia) < 0)
                    return !1
            }
            return !0
        },
        containsPoint: function(e) {
            for (var t = this.planes, n = 0; n < 6; n++)
                if (t[n].distanceToPoint(e) < 0)
                    return !1;
            return !0
        }
    });
    var Fa = {
        common: {
            diffuse: {
                value: new wi(15658734)
            },
            opacity: {
                value: 1
            },
            map: {
                value: null
            },
            uvTransform: {
                value: new Yn
            },
            uv2Transform: {
                value: new Yn
            },
            alphaMap: {
                value: null
            }
        },
        specularmap: {
            specularMap: {
                value: null
            }
        },
        envmap: {
            envMap: {
                value: null
            },
            flipEnvMap: {
                value: -1
            },
            reflectivity: {
                value: 1
            },
            refractionRatio: {
                value: .98
            },
            maxMipLevel: {
                value: 0
            }
        },
        aomap: {
            aoMap: {
                value: null
            },
            aoMapIntensity: {
                value: 1
            }
        },
        lightmap: {
            lightMap: {
                value: null
            },
            lightMapIntensity: {
                value: 1
            }
        },
        emissivemap: {
            emissiveMap: {
                value: null
            }
        },
        bumpmap: {
            bumpMap: {
                value: null
            },
            bumpScale: {
                value: 1
            }
        },
        normalmap: {
            normalMap: {
                value: null
            },
            normalScale: {
                value: new Xn(1,1)
            }
        },
        displacementmap: {
            displacementMap: {
                value: null
            },
            displacementScale: {
                value: 1
            },
            displacementBias: {
                value: 0
            }
        },
        roughnessmap: {
            roughnessMap: {
                value: null
            }
        },
        metalnessmap: {
            metalnessMap: {
                value: null
            }
        },
        gradientmap: {
            gradientMap: {
                value: null
            }
        },
        fog: {
            fogDensity: {
                value: 25e-5
            },
            fogNear: {
                value: 1
            },
            fogFar: {
                value: 2e3
            },
            fogColor: {
                value: new wi(16777215)
            }
        },
        lights: {
            ambientLightColor: {
                value: []
            },
            lightProbe: {
                value: []
            },
            directionalLights: {
                value: [],
                properties: {
                    direction: {},
                    color: {}
                }
            },
            directionalLightShadows: {
                value: [],
                properties: {
                    shadowBias: {},
                    shadowNormalBias: {},
                    shadowRadius: {},
                    shadowMapSize: {}
                }
            },
            directionalShadowMap: {
                value: []
            },
            directionalShadowMatrix: {
                value: []
            },
            spotLights: {
                value: [],
                properties: {
                    color: {},
                    position: {},
                    direction: {},
                    distance: {},
                    coneCos: {},
                    penumbraCos: {},
                    decay: {}
                }
            },
            spotLightShadows: {
                value: [],
                properties: {
                    shadowBias: {},
                    shadowNormalBias: {},
                    shadowRadius: {},
                    shadowMapSize: {}
                }
            },
            spotShadowMap: {
                value: []
            },
            spotShadowMatrix: {
                value: []
            },
            pointLights: {
                value: [],
                properties: {
                    color: {},
                    position: {},
                    decay: {},
                    distance: {}
                }
            },
            pointLightShadows: {
                value: [],
                properties: {
                    shadowBias: {},
                    shadowNormalBias: {},
                    shadowRadius: {},
                    shadowMapSize: {},
                    shadowCameraNear: {},
                    shadowCameraFar: {}
                }
            },
            pointShadowMap: {
                value: []
            },
            pointShadowMatrix: {
                value: []
            },
            hemisphereLights: {
                value: [],
                properties: {
                    direction: {},
                    skyColor: {},
                    groundColor: {}
                }
            },
            rectAreaLights: {
                value: [],
                properties: {
                    color: {},
                    position: {},
                    width: {},
                    height: {}
                }
            }
        },
        points: {
            diffuse: {
                value: new wi(15658734)
            },
            opacity: {
                value: 1
            },
            size: {
                value: 1
            },
            scale: {
                value: 1
            },
            map: {
                value: null
            },
            alphaMap: {
                value: null
            },
            uvTransform: {
                value: new Yn
            }
        },
        sprite: {
            diffuse: {
                value: new wi(15658734)
            },
            opacity: {
                value: 1
            },
            center: {
                value: new Xn(.5,.5)
            },
            rotation: {
                value: 0
            },
            map: {
                value: null
            },
            alphaMap: {
                value: null
            },
            uvTransform: {
                value: new Yn
            }
        }
    };
    function Na() {
        var e = null
          , t = !1
          , n = null
          , r = null;
        function i(t, a) {
            n(t, a),
            r = e.requestAnimationFrame(i)
        }
        return {
            start: function() {
                !0 !== t && null !== n && (r = e.requestAnimationFrame(i),
                t = !0)
            },
            stop: function() {
                e.cancelAnimationFrame(r),
                t = !1
            },
            setAnimationLoop: function(e) {
                n = e
            },
            setContext: function(t) {
                e = t
            }
        }
    }
    function Ba(e, t) {
        var n = t.isWebGL2
          , r = new WeakMap;
        return {
            get: function(e) {
                return e.isInterleavedBufferAttribute && (e = e.data),
                r.get(e)
            },
            remove: function(t) {
                t.isInterleavedBufferAttribute && (t = t.data);
                var n = r.get(t);
                n && (e.deleteBuffer(n.buffer),
                r.delete(t))
            },
            update: function(t, i) {
                t.isInterleavedBufferAttribute && (t = t.data);
                var a = r.get(t);
                void 0 === a ? r.set(t, function(t, n) {
                    var r = t.array
                      , i = t.usage
                      , a = e.createBuffer();
                    e.bindBuffer(n, a),
                    e.bufferData(n, r, i),
                    t.onUploadCallback();
                    var o = 5126;
                    return r instanceof Float32Array ? o = 5126 : r instanceof Float64Array ? console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.") : r instanceof Uint16Array ? o = 5123 : r instanceof Int16Array ? o = 5122 : r instanceof Uint32Array ? o = 5125 : r instanceof Int32Array ? o = 5124 : r instanceof Int8Array ? o = 5120 : r instanceof Uint8Array && (o = 5121),
                    {
                        buffer: a,
                        type: o,
                        bytesPerElement: r.BYTES_PER_ELEMENT,
                        version: t.version
                    }
                }(t, i)) : a.version < t.version && (!function(t, r, i) {
                    var a = r.array
                      , o = r.updateRange;
                    e.bindBuffer(i, t),
                    -1 === o.count ? e.bufferSubData(i, 0, a) : (n ? e.bufferSubData(i, o.offset * a.BYTES_PER_ELEMENT, a, o.offset, o.count) : e.bufferSubData(i, o.offset * a.BYTES_PER_ELEMENT, a.subarray(o.offset, o.offset + o.count)),
                    o.count = -1)
                }(a.buffer, t, i),
                a.version = t.version)
            }
        }
    }
    function za(e, t, n, r) {
        wa.call(this),
        this.type = "PlaneGeometry",
        this.parameters = {
            width: e,
            height: t,
            widthSegments: n,
            heightSegments: r
        },
        this.fromBufferGeometry(new Ga(e,t,n,r)),
        this.mergeVertices()
    }
    function Ga(e, t, n, r) {
        $i.call(this),
        this.type = "PlaneBufferGeometry",
        this.parameters = {
            width: e,
            height: t,
            widthSegments: n,
            heightSegments: r
        };
        for (var i = (e = e || 1) / 2, a = (t = t || 1) / 2, o = Math.floor(n) || 1, s = Math.floor(r) || 1, l = o + 1, u = s + 1, c = e / o, h = t / s, p = [], f = [], d = [], m = [], g = 0; g < u; g++)
            for (var v = g * h - a, y = 0; y < l; y++) {
                var b = y * c - i;
                f.push(b, -v, 0),
                d.push(0, 0, 1),
                m.push(y / o),
                m.push(1 - g / s)
            }
        for (var x = 0; x < s; x++)
            for (var w = 0; w < o; w++) {
                var _ = w + l * x
                  , S = w + l * (x + 1)
                  , E = w + 1 + l * (x + 1)
                  , M = w + 1 + l * x;
                p.push(_, S, M),
                p.push(S, E, M)
            }
        this.setIndex(p),
        this.setAttribute("position", new zi(f,3)),
        this.setAttribute("normal", new zi(d,3)),
        this.setAttribute("uv", new zi(m,2))
    }
    za.prototype = Object.create(wa.prototype),
    za.prototype.constructor = za,
    Ga.prototype = Object.create($i.prototype),
    Ga.prototype.constructor = Ga;
    var Ha = {
        alphamap_fragment: "#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",
        alphamap_pars_fragment: "#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",
        alphatest_fragment: "#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",
        aomap_fragment: "#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",
        aomap_pars_fragment: "#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",
        begin_vertex: "vec3 transformed = vec3( position );",
        beginnormal_vertex: "vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",
        bsdfs: "vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha  = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",
        bumpmap_pars_fragment: "#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",
        clipping_planes_fragment: "#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",
        clipping_planes_pars_fragment: "#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",
        clipping_planes_pars_vertex: "#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",
        clipping_planes_vertex: "#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",
        color_fragment: "#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",
        color_pars_fragment: "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",
        color_pars_vertex: "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",
        color_vertex: "#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif",
        common: "#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",
        cube_uv_reflection_fragment: "#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_maxMipLevel 8.0\n#define cubeUV_minMipLevel 4.0\n#define cubeUV_maxTileSize 256.0\n#define cubeUV_minTileSize 16.0\nfloat getFace(vec3 direction) {\n    vec3 absDirection = abs(direction);\n    float face = -1.0;\n    if (absDirection.x > absDirection.z) {\n      if (absDirection.x > absDirection.y)\n        face = direction.x > 0.0 ? 0.0 : 3.0;\n      else\n        face = direction.y > 0.0 ? 1.0 : 4.0;\n    } else {\n      if (absDirection.z > absDirection.y)\n        face = direction.z > 0.0 ? 2.0 : 5.0;\n      else\n        face = direction.y > 0.0 ? 1.0 : 4.0;\n    }\n    return face;\n}\nvec2 getUV(vec3 direction, float face) {\n    vec2 uv;\n    if (face == 0.0) {\n      uv = vec2(direction.z, direction.y) / abs(direction.x);    } else if (face == 1.0) {\n      uv = vec2(-direction.x, -direction.z) / abs(direction.y);    } else if (face == 2.0) {\n      uv = vec2(-direction.x, direction.y) / abs(direction.z);    } else if (face == 3.0) {\n      uv = vec2(-direction.z, direction.y) / abs(direction.x);    } else if (face == 4.0) {\n      uv = vec2(-direction.x, direction.z) / abs(direction.y);    } else {\n      uv = vec2(direction.x, direction.y) / abs(direction.z);    }\n    return 0.5 * (uv + 1.0);\n}\nvec3 bilinearCubeUV(sampler2D envMap, vec3 direction, float mipInt) {\n  float face = getFace(direction);\n  float filterInt = max(cubeUV_minMipLevel - mipInt, 0.0);\n  mipInt = max(mipInt, cubeUV_minMipLevel);\n  float faceSize = exp2(mipInt);\n  float texelSize = 1.0 / (3.0 * cubeUV_maxTileSize);\n  vec2 uv = getUV(direction, face) * (faceSize - 1.0);\n  vec2 f = fract(uv);\n  uv += 0.5 - f;\n  if (face > 2.0) {\n    uv.y += faceSize;\n    face -= 3.0;\n  }\n  uv.x += face * faceSize;\n  if(mipInt < cubeUV_maxMipLevel){\n    uv.y += 2.0 * cubeUV_maxTileSize;\n  }\n  uv.y += filterInt * 2.0 * cubeUV_minTileSize;\n  uv.x += 3.0 * max(0.0, cubeUV_maxTileSize - 2.0 * faceSize);\n  uv *= texelSize;\n  vec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.x += texelSize;\n  vec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.y += texelSize;\n  vec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.x -= texelSize;\n  vec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  vec3 tm = mix(tl, tr, f.x);\n  vec3 bm = mix(bl, br, f.x);\n  return mix(tm, bm, f.y);\n}\n#define r0 1.0\n#define v0 0.339\n#define m0 -2.0\n#define r1 0.8\n#define v1 0.276\n#define m1 -1.0\n#define r4 0.4\n#define v4 0.046\n#define m4 2.0\n#define r5 0.305\n#define v5 0.016\n#define m5 3.0\n#define r6 0.21\n#define v6 0.0038\n#define m6 4.0\nfloat roughnessToMip(float roughness) {\n  float mip = 0.0;\n  if (roughness >= r1) {\n    mip = (r0 - roughness) * (m1 - m0) / (r0 - r1) + m0;\n  } else if (roughness >= r4) {\n    mip = (r1 - roughness) * (m4 - m1) / (r1 - r4) + m1;\n  } else if (roughness >= r5) {\n    mip = (r4 - roughness) * (m5 - m4) / (r4 - r5) + m4;\n  } else if (roughness >= r6) {\n    mip = (r5 - roughness) * (m6 - m5) / (r5 - r6) + m5;\n  } else {\n    mip = -2.0 * log2(1.16 * roughness);  }\n  return mip;\n}\nvec4 textureCubeUV(sampler2D envMap, vec3 sampleDir, float roughness) {\n  float mip = clamp(roughnessToMip(roughness), m0, cubeUV_maxMipLevel);\n  float mipF = fract(mip);\n  float mipInt = floor(mip);\n  vec3 color0 = bilinearCubeUV(envMap, sampleDir, mipInt);\n  if (mipF == 0.0) {\n    return vec4(color0, 1.0);\n  } else {\n    vec3 color1 = bilinearCubeUV(envMap, sampleDir, mipInt + 1.0);\n    return vec4(mix(color0, color1, mipF), 1.0);\n  }\n}\n#endif",
        defaultnormal_vertex: "vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",
        displacementmap_pars_vertex: "#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",
        displacementmap_vertex: "#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",
        emissivemap_fragment: "#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",
        emissivemap_pars_fragment: "#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",
        encodings_fragment: "gl_FragColor = linearToOutputTexel( gl_FragColor );",
        encodings_pars_fragment: "\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",
        envmap_fragment: "#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\t\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t}  else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\treflectVec = normalize( reflectVec );\n\t\tvec2 sampleUV = equirectUv( reflectVec );\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",
        envmap_common_pars_fragment: "#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",
        envmap_pars_fragment: "#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",
        envmap_pars_vertex: "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",
        envmap_physical_pars_fragment: "#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t  vec3 reflectVec = reflect( -viewDir, normal );\n\t\t  reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t  vec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV = equirectUv( reflectVec );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",
        envmap_vertex: "#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",
        fog_vertex: "#ifdef USE_FOG\n\tfogDepth = - mvPosition.z;\n#endif",
        fog_pars_vertex: "#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",
        fog_fragment: "#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",
        fog_pars_fragment: "#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",
        gradientmap_pars_fragment: "#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",
        lightmap_fragment: "#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",
        lightmap_pars_fragment: "#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",
        lights_lambert_vertex: "vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",
        lights_pars_begin: "uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",
        lights_toon_fragment: "ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",
        lights_toon_pars_fragment: "varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",
        lights_phong_fragment: "BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",
        lights_phong_pars_fragment: "varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",
        lights_physical_fragment: "PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",
        lights_physical_pars_fragment: "struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",
        lights_fragment_begin: "\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",
        lights_fragment_maps: "#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",
        lights_fragment_end: "#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",
        logdepthbuf_fragment: "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",
        logdepthbuf_pars_fragment: "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",
        logdepthbuf_pars_vertex: "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",
        logdepthbuf_vertex: "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",
        map_fragment: "#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",
        map_pars_fragment: "#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",
        map_particle_fragment: "#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",
        map_particle_pars_fragment: "#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",
        metalnessmap_fragment: "float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",
        metalnessmap_pars_fragment: "#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",
        morphnormal_vertex: "#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",
        morphtarget_pars_vertex: "#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\t\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\t\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",
        morphtarget_vertex: "#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",
        normal_fragment_begin: "#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",
        normal_fragment_maps: "#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif",
        normalmap_pars_fragment: "#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\t\tmat3 tsn = mat3( S, T, N );\n\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif",
        clearcoat_normal_fragment_begin: "#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",
        clearcoat_normal_fragment_maps: "#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\n\t#endif\n#endif",
        clearcoat_pars_fragment: "#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",
        packing: "vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",
        premultiplied_alpha_fragment: "#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",
        project_vertex: "vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",
        dithering_fragment: "#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",
        dithering_pars_fragment: "#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",
        roughnessmap_fragment: "float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",
        roughnessmap_pars_fragment: "#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",
        shadowmap_pars_fragment: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",
        shadowmap_pars_vertex: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",
        shadowmap_vertex: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",
        shadowmask_pars_fragment: "float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",
        skinbase_vertex: "#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",
        skinning_pars_vertex: "#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",
        skinning_vertex: "#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",
        skinnormal_vertex: "#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",
        specularmap_fragment: "float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",
        specularmap_pars_fragment: "#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",
        tonemapping_fragment: "#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",
        tonemapping_pars_fragment: "#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",
        transmissionmap_fragment: "#ifdef USE_TRANSMISSIONMAP\n\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\n#endif",
        transmissionmap_pars_fragment: "#ifdef USE_TRANSMISSIONMAP\n\tuniform sampler2D transmissionMap;\n#endif",
        uv_pars_fragment: "#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",
        uv_pars_vertex: "#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",
        uv_vertex: "#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",
        uv2_pars_fragment: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",
        uv2_pars_vertex: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",
        uv2_vertex: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",
        worldpos_vertex: "#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",
        background_frag: "uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",
        background_vert: "varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",
        cube_frag: "#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",
        cube_vert: "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",
        depth_frag: "#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",
        depth_vert: "#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",
        distanceRGBA_frag: "#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",
        distanceRGBA_vert: "#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",
        equirect_frag: "uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",
        equirect_vert: "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",
        linedashed_frag: "uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",
        linedashed_vert: "uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",
        meshbasic_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
        meshbasic_vert: "#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",
        meshlambert_frag: "uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
        meshlambert_vert: "#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
        meshmatcap_frag: "#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
        meshmatcap_vert: "#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",
        meshtoon_frag: "#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
        meshtoon_vert: "#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
        meshphong_frag: "#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
        meshphong_vert: "#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
        meshphysical_frag: "#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSMISSION\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSMISSION\n\tuniform float transmission;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <transmissionmap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#ifdef TRANSMISSION\n\t\tfloat totalTransmission = transmission;\n\t#endif\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <transmissionmap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSMISSION\n\t\tdiffuseColor.a *= saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
        meshphysical_vert: "#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
        normal_frag: "#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",
        normal_vert: "#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",
        points_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",
        points_vert: "uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",
        shadow_frag: "uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",
        shadow_vert: "#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
        sprite_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",
        sprite_vert: "uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"
    }
      , Va = {
        basic: {
            uniforms: Ma([Fa.common, Fa.specularmap, Fa.envmap, Fa.aomap, Fa.lightmap, Fa.fog]),
            vertexShader: Ha.meshbasic_vert,
            fragmentShader: Ha.meshbasic_frag
        },
        lambert: {
            uniforms: Ma([Fa.common, Fa.specularmap, Fa.envmap, Fa.aomap, Fa.lightmap, Fa.emissivemap, Fa.fog, Fa.lights, {
                emissive: {
                    value: new wi(0)
                }
            }]),
            vertexShader: Ha.meshlambert_vert,
            fragmentShader: Ha.meshlambert_frag
        },
        phong: {
            uniforms: Ma([Fa.common, Fa.specularmap, Fa.envmap, Fa.aomap, Fa.lightmap, Fa.emissivemap, Fa.bumpmap, Fa.normalmap, Fa.displacementmap, Fa.fog, Fa.lights, {
                emissive: {
                    value: new wi(0)
                },
                specular: {
                    value: new wi(1118481)
                },
                shininess: {
                    value: 30
                }
            }]),
            vertexShader: Ha.meshphong_vert,
            fragmentShader: Ha.meshphong_frag
        },
        standard: {
            uniforms: Ma([Fa.common, Fa.envmap, Fa.aomap, Fa.lightmap, Fa.emissivemap, Fa.bumpmap, Fa.normalmap, Fa.displacementmap, Fa.roughnessmap, Fa.metalnessmap, Fa.fog, Fa.lights, {
                emissive: {
                    value: new wi(0)
                },
                roughness: {
                    value: 1
                },
                metalness: {
                    value: 0
                },
                envMapIntensity: {
                    value: 1
                }
            }]),
            vertexShader: Ha.meshphysical_vert,
            fragmentShader: Ha.meshphysical_frag
        },
        toon: {
            uniforms: Ma([Fa.common, Fa.aomap, Fa.lightmap, Fa.emissivemap, Fa.bumpmap, Fa.normalmap, Fa.displacementmap, Fa.gradientmap, Fa.fog, Fa.lights, {
                emissive: {
                    value: new wi(0)
                }
            }]),
            vertexShader: Ha.meshtoon_vert,
            fragmentShader: Ha.meshtoon_frag
        },
        matcap: {
            uniforms: Ma([Fa.common, Fa.bumpmap, Fa.normalmap, Fa.displacementmap, Fa.fog, {
                matcap: {
                    value: null
                }
            }]),
            vertexShader: Ha.meshmatcap_vert,
            fragmentShader: Ha.meshmatcap_frag
        },
        points: {
            uniforms: Ma([Fa.points, Fa.fog]),
            vertexShader: Ha.points_vert,
            fragmentShader: Ha.points_frag
        },
        dashed: {
            uniforms: Ma([Fa.common, Fa.fog, {
                scale: {
                    value: 1
                },
                dashSize: {
                    value: 1
                },
                totalSize: {
                    value: 2
                }
            }]),
            vertexShader: Ha.linedashed_vert,
            fragmentShader: Ha.linedashed_frag
        },
        depth: {
            uniforms: Ma([Fa.common, Fa.displacementmap]),
            vertexShader: Ha.depth_vert,
            fragmentShader: Ha.depth_frag
        },
        normal: {
            uniforms: Ma([Fa.common, Fa.bumpmap, Fa.normalmap, Fa.displacementmap, {
                opacity: {
                    value: 1
                }
            }]),
            vertexShader: Ha.normal_vert,
            fragmentShader: Ha.normal_frag
        },
        sprite: {
            uniforms: Ma([Fa.sprite, Fa.fog]),
            vertexShader: Ha.sprite_vert,
            fragmentShader: Ha.sprite_frag
        },
        background: {
            uniforms: {
                uvTransform: {
                    value: new Yn
                },
                t2D: {
                    value: null
                }
            },
            vertexShader: Ha.background_vert,
            fragmentShader: Ha.background_frag
        },
        cube: {
            uniforms: Ma([Fa.envmap, {
                opacity: {
                    value: 1
                }
            }]),
            vertexShader: Ha.cube_vert,
            fragmentShader: Ha.cube_frag
        },
        equirect: {
            uniforms: {
                tEquirect: {
                    value: null
                }
            },
            vertexShader: Ha.equirect_vert,
            fragmentShader: Ha.equirect_frag
        },
        distanceRGBA: {
            uniforms: Ma([Fa.common, Fa.displacementmap, {
                referencePosition: {
                    value: new ir
                },
                nearDistance: {
                    value: 1
                },
                farDistance: {
                    value: 1e3
                }
            }]),
            vertexShader: Ha.distanceRGBA_vert,
            fragmentShader: Ha.distanceRGBA_frag
        },
        shadow: {
            uniforms: Ma([Fa.lights, Fa.fog, {
                color: {
                    value: new wi(0)
                },
                opacity: {
                    value: 1
                }
            }]),
            vertexShader: Ha.shadow_vert,
            fragmentShader: Ha.shadow_frag
        }
    };
    function ja(e, t, n, r) {
        var i, a, o = new wi(0), s = 0, l = null, u = 0, c = null;
        function h(e, n) {
            t.buffers.color.setClear(e.r, e.g, e.b, n, r)
        }
        return {
            getClearColor: function() {
                return o
            },
            setClearColor: function(e, t) {
                o.set(e),
                h(o, s = void 0 !== t ? t : 1)
            },
            getClearAlpha: function() {
                return s
            },
            setClearAlpha: function(e) {
                h(o, s = e)
            },
            render: function(t, r, p, f) {
                var d = !0 === r.isScene ? r.background : null
                  , m = e.xr
                  , g = m.getSession && m.getSession();
                if (g && "additive" === g.environmentBlendMode && (d = null),
                null === d ? h(o, s) : d && d.isColor && (h(d, 1),
                f = !0),
                (e.autoClear || f) && e.clear(e.autoClearColor, e.autoClearDepth, e.autoClearStencil),
                d && (d.isCubeTexture || d.isWebGLCubeRenderTarget || d.mapping === ge)) {
                    void 0 === a && ((a = new da(new Sa(1,1,1),new Aa({
                        name: "BackgroundCubeMaterial",
                        uniforms: Ea(Va.cube.uniforms),
                        vertexShader: Va.cube.vertexShader,
                        fragmentShader: Va.cube.fragmentShader,
                        side: _,
                        depthTest: !1,
                        depthWrite: !1,
                        fog: !1
                    }))).geometry.deleteAttribute("normal"),
                    a.geometry.deleteAttribute("uv"),
                    a.onBeforeRender = function(e, t, n) {
                        this.matrixWorld.copyPosition(n.matrixWorld)
                    }
                    ,
                    Object.defineProperty(a.material, "envMap", {
                        get: function() {
                            return this.uniforms.envMap.value
                        }
                    }),
                    n.update(a));
                    var v = d.isWebGLCubeRenderTarget ? d.texture : d;
                    a.material.uniforms.envMap.value = v,
                    a.material.uniforms.flipEnvMap.value = v.isCubeTexture ? -1 : 1,
                    l === d && u === v.version && c === e.toneMapping || (a.material.needsUpdate = !0,
                    l = d,
                    u = v.version,
                    c = e.toneMapping),
                    t.unshift(a, a.geometry, a.material, 0, 0, null)
                } else
                    d && d.isTexture && (void 0 === i && ((i = new da(new Ga(2,2),new Aa({
                        name: "BackgroundMaterial",
                        uniforms: Ea(Va.background.uniforms),
                        vertexShader: Va.background.vertexShader,
                        fragmentShader: Va.background.fragmentShader,
                        side: w,
                        depthTest: !1,
                        depthWrite: !1,
                        fog: !1
                    }))).geometry.deleteAttribute("normal"),
                    Object.defineProperty(i.material, "map", {
                        get: function() {
                            return this.uniforms.t2D.value
                        }
                    }),
                    n.update(i)),
                    i.material.uniforms.t2D.value = d,
                    !0 === d.matrixAutoUpdate && d.updateMatrix(),
                    i.material.uniforms.uvTransform.value.copy(d.matrix),
                    l === d && u === d.version && c === e.toneMapping || (i.material.needsUpdate = !0,
                    l = d,
                    u = d.version,
                    c = e.toneMapping),
                    t.unshift(i, i.geometry, i.material, 0, 0, null))
            }
        }
    }
    function Ua(e, t, n, r) {
        var i = e.getParameter(34921)
          , a = r.isWebGL2 ? null : t.get("OES_vertex_array_object")
          , o = r.isWebGL2 || null !== a
          , s = {}
          , l = p(null)
          , u = l;
        function c(t) {
            return r.isWebGL2 ? e.bindVertexArray(t) : a.bindVertexArrayOES(t)
        }
        function h(t) {
            return r.isWebGL2 ? e.deleteVertexArray(t) : a.deleteVertexArrayOES(t)
        }
        function p(e) {
            for (var t = [], n = [], r = [], a = 0; a < i; a++)
                t[a] = 0,
                n[a] = 0,
                r[a] = 0;
            return {
                geometry: null,
                program: null,
                wireframe: !1,
                newAttributes: t,
                enabledAttributes: n,
                attributeDivisors: r,
                object: e,
                attributes: {}
            }
        }
        function f() {
            for (var e = u.newAttributes, t = 0, n = e.length; t < n; t++)
                e[t] = 0
        }
        function d(e) {
            m(e, 0)
        }
        function m(n, i) {
            var a = u.newAttributes
              , o = u.enabledAttributes
              , s = u.attributeDivisors;
            (a[n] = 1,
            0 === o[n] && (e.enableVertexAttribArray(n),
            o[n] = 1),
            s[n] !== i) && ((r.isWebGL2 ? e : t.get("ANGLE_instanced_arrays"))[r.isWebGL2 ? "vertexAttribDivisor" : "vertexAttribDivisorANGLE"](n, i),
            s[n] = i)
        }
        function g() {
            for (var t = u.newAttributes, n = u.enabledAttributes, r = 0, i = n.length; r < i; r++)
                n[r] !== t[r] && (e.disableVertexAttribArray(r),
                n[r] = 0)
        }
        function v(t, n, i, a, o, s) {
            !0 !== r.isWebGL2 || 5124 !== i && 5125 !== i ? e.vertexAttribPointer(t, n, i, a, o, s) : e.vertexAttribIPointer(t, n, i, o, s)
        }
        function y() {
            b(),
            u !== l && c((u = l).object)
        }
        function b() {
            l.geometry = null,
            l.program = null,
            l.wireframe = !1
        }
        return {
            setup: function(i, l, h, y, b) {
                var x = !1;
                if (o) {
                    var w = function(t, n, i) {
                        var o = !0 === i.wireframe
                          , l = s[t.id];
                        void 0 === l && (l = {},
                        s[t.id] = l);
                        var u = l[n.id];
                        void 0 === u && (u = {},
                        l[n.id] = u);
                        var c = u[o];
                        void 0 === c && (c = p(r.isWebGL2 ? e.createVertexArray() : a.createVertexArrayOES()),
                        u[o] = c);
                        return c
                    }(y, h, l);
                    u !== w && c((u = w).object),
                    (x = function(e) {
                        var t = u.attributes
                          , n = e.attributes;
                        if (Object.keys(t).length !== Object.keys(n).length)
                            return !0;
                        for (var r in n) {
                            var i = t[r]
                              , a = n[r];
                            if (i.attribute !== a)
                                return !0;
                            if (i.data !== a.data)
                                return !0
                        }
                        return !1
                    }(y)) && function(e) {
                        var t = {}
                          , n = e.attributes;
                        for (var r in n) {
                            var i = n[r]
                              , a = {};
                            a.attribute = i,
                            i.data && (a.data = i.data),
                            t[r] = a
                        }
                        u.attributes = t
                    }(y)
                } else {
                    var _ = !0 === l.wireframe;
                    u.geometry === y.id && u.program === h.id && u.wireframe === _ || (u.geometry = y.id,
                    u.program = h.id,
                    u.wireframe = _,
                    x = !0)
                }
                !0 === i.isInstancedMesh && (x = !0),
                null !== b && n.update(b, 34963),
                x && (!function(i, a, o, s) {
                    if (!1 === r.isWebGL2 && (i.isInstancedMesh || s.isInstancedBufferGeometry) && null === t.get("ANGLE_instanced_arrays"))
                        return;
                    f();
                    var l = s.attributes
                      , u = o.getAttributes()
                      , c = a.defaultAttributeValues;
                    for (var h in u) {
                        var p = u[h];
                        if (p >= 0) {
                            var y = l[h];
                            if (void 0 !== y) {
                                var b = y.normalized
                                  , x = y.itemSize
                                  , w = n.get(y);
                                if (void 0 === w)
                                    continue;
                                var _ = w.buffer
                                  , S = w.type
                                  , E = w.bytesPerElement;
                                if (y.isInterleavedBufferAttribute) {
                                    var M = y.data
                                      , T = M.stride
                                      , A = y.offset;
                                    M && M.isInstancedInterleavedBuffer ? (m(p, M.meshPerAttribute),
                                    void 0 === s._maxInstanceCount && (s._maxInstanceCount = M.meshPerAttribute * M.count)) : d(p),
                                    e.bindBuffer(34962, _),
                                    v(p, x, S, b, T * E, A * E)
                                } else
                                    y.isInstancedBufferAttribute ? (m(p, y.meshPerAttribute),
                                    void 0 === s._maxInstanceCount && (s._maxInstanceCount = y.meshPerAttribute * y.count)) : d(p),
                                    e.bindBuffer(34962, _),
                                    v(p, x, S, b, 0, 0)
                            } else if ("instanceMatrix" === h) {
                                var P = n.get(i.instanceMatrix);
                                if (void 0 === P)
                                    continue;
                                var C = P.buffer
                                  , L = P.type;
                                m(p + 0, 1),
                                m(p + 1, 1),
                                m(p + 2, 1),
                                m(p + 3, 1),
                                e.bindBuffer(34962, C),
                                e.vertexAttribPointer(p + 0, 4, L, !1, 64, 0),
                                e.vertexAttribPointer(p + 1, 4, L, !1, 64, 16),
                                e.vertexAttribPointer(p + 2, 4, L, !1, 64, 32),
                                e.vertexAttribPointer(p + 3, 4, L, !1, 64, 48)
                            } else if (void 0 !== c) {
                                var R = c[h];
                                if (void 0 !== R)
                                    switch (R.length) {
                                    case 2:
                                        e.vertexAttrib2fv(p, R);
                                        break;
                                    case 3:
                                        e.vertexAttrib3fv(p, R);
                                        break;
                                    case 4:
                                        e.vertexAttrib4fv(p, R);
                                        break;
                                    default:
                                        e.vertexAttrib1fv(p, R)
                                    }
                            }
                        }
                    }
                    g()
                }(i, l, h, y),
                null !== b && e.bindBuffer(34963, n.get(b).buffer))
            },
            reset: y,
            resetDefaultState: b,
            dispose: function() {
                for (var e in y(),
                s) {
                    var t = s[e];
                    for (var n in t) {
                        var r = t[n];
                        for (var i in r)
                            h(r[i].object),
                            delete r[i];
                        delete t[n]
                    }
                    delete s[e]
                }
            },
            releaseStatesOfGeometry: function(e) {
                if (void 0 !== s[e.id]) {
                    var t = s[e.id];
                    for (var n in t) {
                        var r = t[n];
                        for (var i in r)
                            h(r[i].object),
                            delete r[i];
                        delete t[n]
                    }
                    delete s[e.id]
                }
            },
            releaseStatesOfProgram: function(e) {
                for (var t in s) {
                    var n = s[t];
                    if (void 0 !== n[e.id]) {
                        var r = n[e.id];
                        for (var i in r)
                            h(r[i].object),
                            delete r[i];
                        delete n[e.id]
                    }
                }
            },
            initAttributes: f,
            enableAttribute: d,
            disableUnusedAttributes: g
        }
    }
    function Wa(e, t, n, r) {
        var i, a = r.isWebGL2;
        this.setMode = function(e) {
            i = e
        }
        ,
        this.render = function(t, r) {
            e.drawArrays(i, t, r),
            n.update(r, i, 1)
        }
        ,
        this.renderInstances = function(r, o, s) {
            if (0 !== s) {
                var l, u;
                if (a)
                    l = e,
                    u = "drawArraysInstanced";
                else if (u = "drawArraysInstancedANGLE",
                null === (l = t.get("ANGLE_instanced_arrays")))
                    return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
                l[u](i, r, o, s),
                n.update(o, i, s)
            }
        }
    }
    function qa(e, t, n) {
        var r;
        function i(t) {
            if ("highp" === t) {
                if (e.getShaderPrecisionFormat(35633, 36338).precision > 0 && e.getShaderPrecisionFormat(35632, 36338).precision > 0)
                    return "highp";
                t = "mediump"
            }
            return "mediump" === t && e.getShaderPrecisionFormat(35633, 36337).precision > 0 && e.getShaderPrecisionFormat(35632, 36337).precision > 0 ? "mediump" : "lowp"
        }
        var a = "undefined" !== typeof WebGL2RenderingContext && e instanceof WebGL2RenderingContext || "undefined" !== typeof WebGL2ComputeRenderingContext && e instanceof WebGL2ComputeRenderingContext
          , o = void 0 !== n.precision ? n.precision : "highp"
          , s = i(o);
        s !== o && (console.warn("THREE.WebGLRenderer:", o, "not supported, using", s, "instead."),
        o = s);
        var l = !0 === n.logarithmicDepthBuffer
          , u = e.getParameter(34930)
          , c = e.getParameter(35660)
          , h = e.getParameter(3379)
          , p = e.getParameter(34076)
          , f = e.getParameter(34921)
          , d = e.getParameter(36347)
          , m = e.getParameter(36348)
          , g = e.getParameter(36349)
          , v = c > 0
          , y = a || !!t.get("OES_texture_float");
        return {
            isWebGL2: a,
            getMaxAnisotropy: function() {
                if (void 0 !== r)
                    return r;
                var n = t.get("EXT_texture_filter_anisotropic");
                return r = null !== n ? e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0
            },
            getMaxPrecision: i,
            precision: o,
            logarithmicDepthBuffer: l,
            maxTextures: u,
            maxVertexTextures: c,
            maxTextureSize: h,
            maxCubemapSize: p,
            maxAttributes: f,
            maxVertexUniforms: d,
            maxVaryings: m,
            maxFragmentUniforms: g,
            vertexTextures: v,
            floatFragmentTextures: y,
            floatVertexTextures: v && y,
            maxSamples: a ? e.getParameter(36183) : 0
        }
    }
    function Xa() {
        var e = this
          , t = null
          , n = 0
          , r = !1
          , i = !1
          , a = new oi
          , o = new Yn
          , s = {
            value: null,
            needsUpdate: !1
        };
        function l() {
            s.value !== t && (s.value = t,
            s.needsUpdate = n > 0),
            e.numPlanes = n,
            e.numIntersection = 0
        }
        function u(t, n, r, i) {
            var l = null !== t ? t.length : 0
              , u = null;
            if (0 !== l) {
                if (u = s.value,
                !0 !== i || null === u) {
                    var c = r + 4 * l
                      , h = n.matrixWorldInverse;
                    o.getNormalMatrix(h),
                    (null === u || u.length < c) && (u = new Float32Array(c));
                    for (var p = 0, f = r; p !== l; ++p,
                    f += 4)
                        a.copy(t[p]).applyMatrix4(h, o),
                        a.normal.toArray(u, f),
                        u[f + 3] = a.constant
                }
                s.value = u,
                s.needsUpdate = !0
            }
            return e.numPlanes = l,
            e.numIntersection = 0,
            u
        }
        this.uniform = s,
        this.numPlanes = 0,
        this.numIntersection = 0,
        this.init = function(e, i, a) {
            var o = 0 !== e.length || i || 0 !== n || r;
            return r = i,
            t = u(e, a, 0),
            n = e.length,
            o
        }
        ,
        this.beginShadows = function() {
            i = !0,
            u(null)
        }
        ,
        this.endShadows = function() {
            i = !1,
            l()
        }
        ,
        this.setState = function(e, a, o, c, h, p) {
            if (!r || null === e || 0 === e.length || i && !o)
                i ? u(null) : l();
            else {
                var f = i ? 0 : n
                  , d = 4 * f
                  , m = h.clippingState || null;
                s.value = m,
                m = u(e, c, d, p);
                for (var g = 0; g !== d; ++g)
                    m[g] = t[g];
                h.clippingState = m,
                this.numIntersection = a ? this.numPlanes : 0,
                this.numPlanes += f
            }
        }
    }
    function Ya(e) {
        var t = {};
        return {
            has: function(n) {
                if (void 0 !== t[n])
                    return t[n];
                var r;
                switch (n) {
                case "WEBGL_depth_texture":
                    r = e.getExtension("WEBGL_depth_texture") || e.getExtension("MOZ_WEBGL_depth_texture") || e.getExtension("WEBKIT_WEBGL_depth_texture");
                    break;
                case "EXT_texture_filter_anisotropic":
                    r = e.getExtension("EXT_texture_filter_anisotropic") || e.getExtension("MOZ_EXT_texture_filter_anisotropic") || e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
                    break;
                case "WEBGL_compressed_texture_s3tc":
                    r = e.getExtension("WEBGL_compressed_texture_s3tc") || e.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
                    break;
                case "WEBGL_compressed_texture_pvrtc":
                    r = e.getExtension("WEBGL_compressed_texture_pvrtc") || e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
                    break;
                default:
                    r = e.getExtension(n)
                }
                return t[n] = r,
                !!r
            },
            get: function(e) {
                return this.has(e) || console.warn("THREE.WebGLRenderer: " + e + " extension not supported."),
                t[e]
            }
        }
    }
    function Za(e, t, n, r) {
        var i = new WeakMap
          , a = new WeakMap;
        function o(e) {
            var s = e.target
              , l = i.get(s);
            for (var u in null !== l.index && t.remove(l.index),
            l.attributes)
                t.remove(l.attributes[u]);
            s.removeEventListener("dispose", o),
            i.delete(s);
            var c = a.get(l);
            c && (t.remove(c),
            a.delete(l)),
            r.releaseStatesOfGeometry(s),
            !0 === s.isInstancedBufferGeometry && delete s._maxInstanceCount,
            n.memory.geometries--
        }
        function s(e) {
            var n = []
              , r = e.index
              , i = e.attributes.position
              , o = 0;
            if (null !== r) {
                var s = r.array;
                o = r.version;
                for (var l = 0, u = s.length; l < u; l += 3) {
                    var c = s[l + 0]
                      , h = s[l + 1]
                      , p = s[l + 2];
                    n.push(c, h, h, p, p, c)
                }
            } else {
                var f = i.array;
                o = i.version;
                for (var d = 0, m = f.length / 3 - 1; d < m; d += 3) {
                    var g = d + 0
                      , v = d + 1
                      , y = d + 2;
                    n.push(g, v, v, y, y, g)
                }
            }
            var b = new (Vi(n) > 65535 ? Bi : Fi)(n,1);
            b.version = o;
            var x = a.get(e);
            x && t.remove(x),
            a.set(e, b)
        }
        return {
            get: function(e, t) {
                var r = i.get(t);
                return r || (t.addEventListener("dispose", o),
                t.isBufferGeometry ? r = t : t.isGeometry && (void 0 === t._bufferGeometry && (t._bufferGeometry = (new $i).setFromObject(e)),
                r = t._bufferGeometry),
                i.set(t, r),
                n.memory.geometries++,
                r)
            },
            update: function(e) {
                var n = e.attributes;
                for (var r in n)
                    t.update(n[r], 34962);
                var i = e.morphAttributes;
                for (var a in i)
                    for (var o = i[a], s = 0, l = o.length; s < l; s++)
                        t.update(o[s], 34962)
            },
            getWireframeAttribute: function(e) {
                var t = a.get(e);
                if (t) {
                    var n = e.index;
                    null !== n && t.version < n.version && s(e)
                } else
                    s(e);
                return a.get(e)
            }
        }
    }
    function $a(e, t, n, r) {
        var i, a, o, s = r.isWebGL2;
        this.setMode = function(e) {
            i = e
        }
        ,
        this.setIndex = function(e) {
            a = e.type,
            o = e.bytesPerElement
        }
        ,
        this.render = function(t, r) {
            e.drawElements(i, r, a, t * o),
            n.update(r, i, 1)
        }
        ,
        this.renderInstances = function(r, l, u) {
            if (0 !== u) {
                var c, h;
                if (s)
                    c = e,
                    h = "drawElementsInstanced";
                else if (h = "drawElementsInstancedANGLE",
                null === (c = t.get("ANGLE_instanced_arrays")))
                    return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
                c[h](i, l, a, r * o, u),
                n.update(l, i, u)
            }
        }
    }
    function Ja(e) {
        var t = {
            frame: 0,
            calls: 0,
            triangles: 0,
            points: 0,
            lines: 0
        };
        return {
            memory: {
                geometries: 0,
                textures: 0
            },
            render: t,
            programs: null,
            autoReset: !0,
            reset: function() {
                t.frame++,
                t.calls = 0,
                t.triangles = 0,
                t.points = 0,
                t.lines = 0
            },
            update: function(e, n, r) {
                switch (t.calls++,
                n) {
                case 4:
                    t.triangles += r * (e / 3);
                    break;
                case 1:
                    t.lines += r * (e / 2);
                    break;
                case 3:
                    t.lines += r * (e - 1);
                    break;
                case 2:
                    t.lines += r * e;
                    break;
                case 0:
                    t.points += r * e;
                    break;
                default:
                    console.error("THREE.WebGLInfo: Unknown draw mode:", n)
                }
            }
        }
    }
    function Ka(e, t) {
        return e[0] - t[0]
    }
    function Qa(e, t) {
        return Math.abs(t[1]) - Math.abs(e[1])
    }
    function eo(e) {
        for (var t = {}, n = new Float32Array(8), r = [], i = 0; i < 8; i++)
            r[i] = [i, 0];
        return {
            update: function(i, a, o, s) {
                var l = i.morphTargetInfluences
                  , u = void 0 === l ? 0 : l.length
                  , c = t[a.id];
                if (void 0 === c) {
                    c = [];
                    for (var h = 0; h < u; h++)
                        c[h] = [h, 0];
                    t[a.id] = c
                }
                for (var p = 0; p < u; p++) {
                    var f = c[p];
                    f[0] = p,
                    f[1] = l[p]
                }
                c.sort(Qa);
                for (var d = 0; d < 8; d++)
                    d < u && c[d][1] ? (r[d][0] = c[d][0],
                    r[d][1] = c[d][1]) : (r[d][0] = Number.MAX_SAFE_INTEGER,
                    r[d][1] = 0);
                r.sort(Ka);
                for (var m = o.morphTargets && a.morphAttributes.position, g = o.morphNormals && a.morphAttributes.normal, v = 0, y = 0; y < 8; y++) {
                    var b = r[y]
                      , x = b[0]
                      , w = b[1];
                    x !== Number.MAX_SAFE_INTEGER && w ? (m && a.getAttribute("morphTarget" + y) !== m[x] && a.setAttribute("morphTarget" + y, m[x]),
                    g && a.getAttribute("morphNormal" + y) !== g[x] && a.setAttribute("morphNormal" + y, g[x]),
                    n[y] = w,
                    v += w) : (m && void 0 !== a.getAttribute("morphTarget" + y) && a.deleteAttribute("morphTarget" + y),
                    g && void 0 !== a.getAttribute("morphNormal" + y) && a.deleteAttribute("morphNormal" + y),
                    n[y] = 0)
                }
                var _ = a.morphTargetsRelative ? 1 : 1 - v;
                s.getUniforms().setValue(e, "morphTargetBaseInfluence", _),
                s.getUniforms().setValue(e, "morphTargetInfluences", n)
            }
        }
    }
    function to(e, t, n, r) {
        var i = new WeakMap;
        return {
            update: function(e) {
                var a = r.render.frame
                  , o = e.geometry
                  , s = t.get(e, o);
                return i.get(s) !== a && (o.isGeometry && s.updateFromObject(e),
                t.update(s),
                i.set(s, a)),
                e.isInstancedMesh && n.update(e.instanceMatrix, 34962),
                s
            },
            dispose: function() {
                i = new WeakMap
            }
        }
    }
    function no(e, t, n, r, i, a, o, s, l, u) {
        e = void 0 !== e ? e : [],
        t = void 0 !== t ? t : pe,
        o = void 0 !== o ? o : Ue,
        Jn.call(this, e, t, n, r, i, a, o, s, l, u),
        this.flipY = !1
    }
    function ro(e, t, n, r) {
        Jn.call(this, null),
        this.image = {
            data: e || null,
            width: t || 1,
            height: n || 1,
            depth: r || 1
        },
        this.magFilter = we,
        this.minFilter = we,
        this.wrapR = be,
        this.generateMipmaps = !1,
        this.flipY = !1,
        this.needsUpdate = !0
    }
    function io(e, t, n, r) {
        Jn.call(this, null),
        this.image = {
            data: e || null,
            width: t || 1,
            height: n || 1,
            depth: r || 1
        },
        this.magFilter = we,
        this.minFilter = we,
        this.wrapR = be,
        this.generateMipmaps = !1,
        this.flipY = !1,
        this.needsUpdate = !0
    }
    Va.physical = {
        uniforms: Ma([Va.standard.uniforms, {
            clearcoat: {
                value: 0
            },
            clearcoatMap: {
                value: null
            },
            clearcoatRoughness: {
                value: 0
            },
            clearcoatRoughnessMap: {
                value: null
            },
            clearcoatNormalScale: {
                value: new Xn(1,1)
            },
            clearcoatNormalMap: {
                value: null
            },
            sheen: {
                value: new wi(0)
            },
            transmission: {
                value: 0
            },
            transmissionMap: {
                value: null
            }
        }]),
        vertexShader: Ha.meshphysical_vert,
        fragmentShader: Ha.meshphysical_frag
    },
    no.prototype = Object.create(Jn.prototype),
    no.prototype.constructor = no,
    no.prototype.isCubeTexture = !0,
    Object.defineProperty(no.prototype, "images", {
        get: function() {
            return this.image
        },
        set: function(e) {
            this.image = e
        }
    }),
    ro.prototype = Object.create(Jn.prototype),
    ro.prototype.constructor = ro,
    ro.prototype.isDataTexture2DArray = !0,
    io.prototype = Object.create(Jn.prototype),
    io.prototype.constructor = io,
    io.prototype.isDataTexture3D = !0;
    var ao = new Jn
      , oo = new ro
      , so = new io
      , lo = new no
      , uo = []
      , co = []
      , ho = new Float32Array(16)
      , po = new Float32Array(9)
      , fo = new Float32Array(4);
    function mo(e, t, n) {
        var r = e[0];
        if (r <= 0 || r > 0)
            return e;
        var i = t * n
          , a = uo[i];
        if (void 0 === a && (a = new Float32Array(i),
        uo[i] = a),
        0 !== t) {
            r.toArray(a, 0);
            for (var o = 1, s = 0; o !== t; ++o)
                s += n,
                e[o].toArray(a, s)
        }
        return a
    }
    function go(e, t) {
        if (e.length !== t.length)
            return !1;
        for (var n = 0, r = e.length; n < r; n++)
            if (e[n] !== t[n])
                return !1;
        return !0
    }
    function vo(e, t) {
        for (var n = 0, r = t.length; n < r; n++)
            e[n] = t[n]
    }
    function yo(e, t) {
        var n = co[t];
        void 0 === n && (n = new Int32Array(t),
        co[t] = n);
        for (var r = 0; r !== t; ++r)
            n[r] = e.allocateTextureUnit();
        return n
    }
    function bo(e, t) {
        var n = this.cache;
        n[0] !== t && (e.uniform1f(this.addr, t),
        n[0] = t)
    }
    function xo(e, t) {
        var n = this.cache;
        if (void 0 !== t.x)
            n[0] === t.x && n[1] === t.y || (e.uniform2f(this.addr, t.x, t.y),
            n[0] = t.x,
            n[1] = t.y);
        else {
            if (go(n, t))
                return;
            e.uniform2fv(this.addr, t),
            vo(n, t)
        }
    }
    function wo(e, t) {
        var n = this.cache;
        if (void 0 !== t.x)
            n[0] === t.x && n[1] === t.y && n[2] === t.z || (e.uniform3f(this.addr, t.x, t.y, t.z),
            n[0] = t.x,
            n[1] = t.y,
            n[2] = t.z);
        else if (void 0 !== t.r)
            n[0] === t.r && n[1] === t.g && n[2] === t.b || (e.uniform3f(this.addr, t.r, t.g, t.b),
            n[0] = t.r,
            n[1] = t.g,
            n[2] = t.b);
        else {
            if (go(n, t))
                return;
            e.uniform3fv(this.addr, t),
            vo(n, t)
        }
    }
    function _o(e, t) {
        var n = this.cache;
        if (void 0 !== t.x)
            n[0] === t.x && n[1] === t.y && n[2] === t.z && n[3] === t.w || (e.uniform4f(this.addr, t.x, t.y, t.z, t.w),
            n[0] = t.x,
            n[1] = t.y,
            n[2] = t.z,
            n[3] = t.w);
        else {
            if (go(n, t))
                return;
            e.uniform4fv(this.addr, t),
            vo(n, t)
        }
    }
    function So(e, t) {
        var n = this.cache
          , r = t.elements;
        if (void 0 === r) {
            if (go(n, t))
                return;
            e.uniformMatrix2fv(this.addr, !1, t),
            vo(n, t)
        } else {
            if (go(n, r))
                return;
            fo.set(r),
            e.uniformMatrix2fv(this.addr, !1, fo),
            vo(n, r)
        }
    }
    function Eo(e, t) {
        var n = this.cache
          , r = t.elements;
        if (void 0 === r) {
            if (go(n, t))
                return;
            e.uniformMatrix3fv(this.addr, !1, t),
            vo(n, t)
        } else {
            if (go(n, r))
                return;
            po.set(r),
            e.uniformMatrix3fv(this.addr, !1, po),
            vo(n, r)
        }
    }
    function Mo(e, t) {
        var n = this.cache
          , r = t.elements;
        if (void 0 === r) {
            if (go(n, t))
                return;
            e.uniformMatrix4fv(this.addr, !1, t),
            vo(n, t)
        } else {
            if (go(n, r))
                return;
            ho.set(r),
            e.uniformMatrix4fv(this.addr, !1, ho),
            vo(n, r)
        }
    }
    function To(e, t, n) {
        var r = this.cache
          , i = n.allocateTextureUnit();
        r[0] !== i && (e.uniform1i(this.addr, i),
        r[0] = i),
        n.safeSetTexture2D(t || ao, i)
    }
    function Ao(e, t, n) {
        var r = this.cache
          , i = n.allocateTextureUnit();
        r[0] !== i && (e.uniform1i(this.addr, i),
        r[0] = i),
        n.setTexture2DArray(t || oo, i)
    }
    function Po(e, t, n) {
        var r = this.cache
          , i = n.allocateTextureUnit();
        r[0] !== i && (e.uniform1i(this.addr, i),
        r[0] = i),
        n.setTexture3D(t || so, i)
    }
    function Co(e, t, n) {
        var r = this.cache
          , i = n.allocateTextureUnit();
        r[0] !== i && (e.uniform1i(this.addr, i),
        r[0] = i),
        n.safeSetTextureCube(t || lo, i)
    }
    function Lo(e, t) {
        var n = this.cache;
        n[0] !== t && (e.uniform1i(this.addr, t),
        n[0] = t)
    }
    function Ro(e, t) {
        var n = this.cache;
        go(n, t) || (e.uniform2iv(this.addr, t),
        vo(n, t))
    }
    function ko(e, t) {
        var n = this.cache;
        go(n, t) || (e.uniform3iv(this.addr, t),
        vo(n, t))
    }
    function Do(e, t) {
        var n = this.cache;
        go(n, t) || (e.uniform4iv(this.addr, t),
        vo(n, t))
    }
    function Io(e, t) {
        var n = this.cache;
        n[0] !== t && (e.uniform1ui(this.addr, t),
        n[0] = t)
    }
    function Oo(e, t) {
        e.uniform1fv(this.addr, t)
    }
    function Fo(e, t) {
        e.uniform1iv(this.addr, t)
    }
    function No(e, t) {
        e.uniform2iv(this.addr, t)
    }
    function Bo(e, t) {
        e.uniform3iv(this.addr, t)
    }
    function zo(e, t) {
        e.uniform4iv(this.addr, t)
    }
    function Go(e, t) {
        var n = mo(t, this.size, 2);
        e.uniform2fv(this.addr, n)
    }
    function Ho(e, t) {
        var n = mo(t, this.size, 3);
        e.uniform3fv(this.addr, n)
    }
    function Vo(e, t) {
        var n = mo(t, this.size, 4);
        e.uniform4fv(this.addr, n)
    }
    function jo(e, t) {
        var n = mo(t, this.size, 4);
        e.uniformMatrix2fv(this.addr, !1, n)
    }
    function Uo(e, t) {
        var n = mo(t, this.size, 9);
        e.uniformMatrix3fv(this.addr, !1, n)
    }
    function Wo(e, t) {
        var n = mo(t, this.size, 16);
        e.uniformMatrix4fv(this.addr, !1, n)
    }
    function qo(e, t, n) {
        var r = t.length
          , i = yo(n, r);
        e.uniform1iv(this.addr, i);
        for (var a = 0; a !== r; ++a)
            n.safeSetTexture2D(t[a] || ao, i[a])
    }
    function Xo(e, t, n) {
        var r = t.length
          , i = yo(n, r);
        e.uniform1iv(this.addr, i);
        for (var a = 0; a !== r; ++a)
            n.safeSetTextureCube(t[a] || lo, i[a])
    }
    function Yo(e, t, n) {
        this.id = e,
        this.addr = n,
        this.cache = [],
        this.setValue = function(e) {
            switch (e) {
            case 5126:
                return bo;
            case 35664:
                return xo;
            case 35665:
                return wo;
            case 35666:
                return _o;
            case 35674:
                return So;
            case 35675:
                return Eo;
            case 35676:
                return Mo;
            case 5124:
            case 35670:
                return Lo;
            case 35667:
            case 35671:
                return Ro;
            case 35668:
            case 35672:
                return ko;
            case 35669:
            case 35673:
                return Do;
            case 5125:
                return Io;
            case 35678:
            case 36198:
            case 36298:
            case 36306:
            case 35682:
                return To;
            case 35679:
            case 36299:
            case 36307:
                return Po;
            case 35680:
            case 36300:
            case 36308:
            case 36293:
                return Co;
            case 36289:
            case 36303:
            case 36311:
            case 36292:
                return Ao
            }
        }(t.type)
    }
    function Zo(e, t, n) {
        this.id = e,
        this.addr = n,
        this.cache = [],
        this.size = t.size,
        this.setValue = function(e) {
            switch (e) {
            case 5126:
                return Oo;
            case 35664:
                return Go;
            case 35665:
                return Ho;
            case 35666:
                return Vo;
            case 35674:
                return jo;
            case 35675:
                return Uo;
            case 35676:
                return Wo;
            case 5124:
            case 35670:
                return Fo;
            case 35667:
            case 35671:
                return No;
            case 35668:
            case 35672:
                return Bo;
            case 35669:
            case 35673:
                return zo;
            case 35678:
            case 36198:
            case 36298:
            case 36306:
            case 35682:
                return qo;
            case 35680:
            case 36300:
            case 36308:
            case 36293:
                return Xo
            }
        }(t.type)
    }
    function $o(e) {
        this.id = e,
        this.seq = [],
        this.map = {}
    }
    Zo.prototype.updateCache = function(e) {
        var t = this.cache;
        e instanceof Float32Array && t.length !== e.length && (this.cache = new Float32Array(e.length)),
        vo(t, e)
    }
    ,
    $o.prototype.setValue = function(e, t, n) {
        for (var r = this.seq, i = 0, a = r.length; i !== a; ++i) {
            var o = r[i];
            o.setValue(e, t[o.id], n)
        }
    }
    ;
    var Jo = /([\w\d_]+)(\])?(\[|\.)?/g;
    function Ko(e, t) {
        e.seq.push(t),
        e.map[t.id] = t
    }
    function Qo(e, t, n) {
        var r = e.name
          , i = r.length;
        for (Jo.lastIndex = 0; ; ) {
            var a = Jo.exec(r)
              , o = Jo.lastIndex
              , s = a[1]
              , l = "]" === a[2]
              , u = a[3];
            if (l && (s |= 0),
            void 0 === u || "[" === u && o + 2 === i) {
                Ko(n, void 0 === u ? new Yo(s,e,t) : new Zo(s,e,t));
                break
            }
            var c = n.map[s];
            void 0 === c && Ko(n, c = new $o(s)),
            n = c
        }
    }
    function es(e, t) {
        this.seq = [],
        this.map = {};
        for (var n = e.getProgramParameter(t, 35718), r = 0; r < n; ++r) {
            var i = e.getActiveUniform(t, r);
            Qo(i, e.getUniformLocation(t, i.name), this)
        }
    }
    function ts(e, t, n) {
        var r = e.createShader(t);
        return e.shaderSource(r, n),
        e.compileShader(r),
        r
    }
    es.prototype.setValue = function(e, t, n, r) {
        var i = this.map[t];
        void 0 !== i && i.setValue(e, n, r)
    }
    ,
    es.prototype.setOptional = function(e, t, n) {
        var r = t[n];
        void 0 !== r && this.setValue(e, n, r)
    }
    ,
    es.upload = function(e, t, n, r) {
        for (var i = 0, a = t.length; i !== a; ++i) {
            var o = t[i]
              , s = n[o.id];
            !1 !== s.needsUpdate && o.setValue(e, s.value, r)
        }
    }
    ,
    es.seqWithValue = function(e, t) {
        for (var n = [], r = 0, i = e.length; r !== i; ++r) {
            var a = e[r];
            a.id in t && n.push(a)
        }
        return n
    }
    ;
    var ns = 0;
    function rs(e) {
        switch (e) {
        case rn:
            return ["Linear", "( value )"];
        case an:
            return ["sRGB", "( value )"];
        case sn:
            return ["RGBE", "( value )"];
        case un:
            return ["RGBM", "( value, 7.0 )"];
        case cn:
            return ["RGBM", "( value, 16.0 )"];
        case hn:
            return ["RGBD", "( value, 256.0 )"];
        case on:
            return ["Gamma", "( value, float( GAMMA_FACTOR ) )"];
        case ln:
            return ["LogLuv", "( value )"];
        default:
            return console.warn("THREE.WebGLProgram: Unsupported encoding:", e),
            ["Linear", "( value )"]
        }
    }
    function is(e, t, n) {
        var r = e.getShaderParameter(t, 35713)
          , i = e.getShaderInfoLog(t).trim();
        return r && "" === i ? "" : "THREE.WebGLShader: gl.getShaderInfoLog() " + n + "\n" + i + function(e) {
            for (var t = e.split("\n"), n = 0; n < t.length; n++)
                t[n] = n + 1 + ": " + t[n];
            return t.join("\n")
        }(e.getShaderSource(t))
    }
    function as(e, t) {
        var n = rs(t);
        return "vec4 " + e + "( vec4 value ) { return " + n[0] + "ToLinear" + n[1] + "; }"
    }
    function os(e, t) {
        var n = rs(t);
        return "vec4 " + e + "( vec4 value ) { return LinearTo" + n[0] + n[1] + "; }"
    }
    function ss(e, t) {
        var n;
        switch (t) {
        case oe:
            n = "Linear";
            break;
        case se:
            n = "Reinhard";
            break;
        case le:
            n = "OptimizedCineon";
            break;
        case ue:
            n = "ACESFilmic";
            break;
        case ce:
            n = "Custom";
            break;
        default:
            console.warn("THREE.WebGLProgram: Unsupported toneMapping:", t),
            n = "Linear"
        }
        return "vec3 " + e + "( vec3 color ) { return " + n + "ToneMapping( color ); }"
    }
    function ls(e) {
        return "" !== e
    }
    function us(e, t) {
        return e.replace(/NUM_DIR_LIGHTS/g, t.numDirLights).replace(/NUM_SPOT_LIGHTS/g, t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, t.numPointLights).replace(/NUM_HEMI_LIGHTS/g, t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g, t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, t.numPointLightShadows)
    }
    function cs(e, t) {
        return e.replace(/NUM_CLIPPING_PLANES/g, t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, t.numClippingPlanes - t.numClipIntersection)
    }
    var hs = /^[ \t]*#include +<([\w\d./]+)>/gm;
    function ps(e) {
        return e.replace(hs, fs)
    }
    function fs(e, t) {
        var n = Ha[t];
        if (void 0 === n)
            throw new Error("Can not resolve #include <" + t + ">");
        return ps(n)
    }
    var ds = /#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g
      , ms = /#pragma unroll_loop_start[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}[\s]+?#pragma unroll_loop_end/g;
    function gs(e) {
        return e.replace(ms, ys).replace(ds, vs)
    }
    function vs(e, t, n, r) {
        return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),
        ys(e, t, n, r)
    }
    function ys(e, t, n, r) {
        for (var i = "", a = parseInt(t); a < parseInt(n); a++)
            i += r.replace(/\[ i \]/g, "[ " + a + " ]").replace(/UNROLLED_LOOP_INDEX/g, a);
        return i
    }
    function bs(e) {
        var t = "precision " + e.precision + " float;\nprecision " + e.precision + " int;";
        return "highp" === e.precision ? t += "\n#define HIGH_PRECISION" : "mediump" === e.precision ? t += "\n#define MEDIUM_PRECISION" : "lowp" === e.precision && (t += "\n#define LOW_PRECISION"),
        t
    }
    function xs(e, t, n, r) {
        var i, a, o = e.getContext(), s = n.defines, l = n.vertexShader, u = n.fragmentShader, c = function(e) {
            var t = "SHADOWMAP_TYPE_BASIC";
            return e.shadowMapType === y ? t = "SHADOWMAP_TYPE_PCF" : e.shadowMapType === b ? t = "SHADOWMAP_TYPE_PCF_SOFT" : e.shadowMapType === x && (t = "SHADOWMAP_TYPE_VSM"),
            t
        }(n), h = function(e) {
            var t = "ENVMAP_TYPE_CUBE";
            if (e.envMap)
                switch (e.envMapMode) {
                case pe:
                case fe:
                    t = "ENVMAP_TYPE_CUBE";
                    break;
                case ge:
                case ve:
                    t = "ENVMAP_TYPE_CUBE_UV";
                    break;
                case de:
                case me:
                    t = "ENVMAP_TYPE_EQUIREC"
                }
            return t
        }(n), p = function(e) {
            var t = "ENVMAP_MODE_REFLECTION";
            if (e.envMap)
                switch (e.envMapMode) {
                case fe:
                case me:
                case ve:
                    t = "ENVMAP_MODE_REFRACTION"
                }
            return t
        }(n), f = function(e) {
            var t = "ENVMAP_BLENDING_NONE";
            if (e.envMap)
                switch (e.combine) {
                case ne:
                    t = "ENVMAP_BLENDING_MULTIPLY";
                    break;
                case re:
                    t = "ENVMAP_BLENDING_MIX";
                    break;
                case ie:
                    t = "ENVMAP_BLENDING_ADD"
                }
            return t
        }(n), d = e.gammaFactor > 0 ? e.gammaFactor : 1, m = n.isWebGL2 ? "" : function(e) {
            return [e.extensionDerivatives || e.envMapCubeUV || e.bumpMap || e.tangentSpaceNormalMap || e.clearcoatNormalMap || e.flatShading || "physical" === e.shaderID ? "#extension GL_OES_standard_derivatives : enable" : "", (e.extensionFragDepth || e.logarithmicDepthBuffer) && e.rendererExtensionFragDepth ? "#extension GL_EXT_frag_depth : enable" : "", e.extensionDrawBuffers && e.rendererExtensionDrawBuffers ? "#extension GL_EXT_draw_buffers : require" : "", (e.extensionShaderTextureLOD || e.envMap) && e.rendererExtensionShaderTextureLod ? "#extension GL_EXT_shader_texture_lod : enable" : ""].filter(ls).join("\n")
        }(n), g = function(e) {
            var t = [];
            for (var n in e) {
                var r = e[n];
                !1 !== r && t.push("#define " + n + " " + r)
            }
            return t.join("\n")
        }(s), v = o.createProgram();
        n.isRawShaderMaterial ? ((i = [g].filter(ls).join("\n")).length > 0 && (i += "\n"),
        (a = [m, g].filter(ls).join("\n")).length > 0 && (a += "\n")) : (i = [bs(n), "#define SHADER_NAME " + n.shaderName, g, n.instancing ? "#define USE_INSTANCING" : "", n.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "", "#define GAMMA_FACTOR " + d, "#define MAX_BONES " + n.maxBones, n.useFog && n.fog ? "#define USE_FOG" : "", n.useFog && n.fogExp2 ? "#define FOG_EXP2" : "", n.map ? "#define USE_MAP" : "", n.envMap ? "#define USE_ENVMAP" : "", n.envMap ? "#define " + p : "", n.lightMap ? "#define USE_LIGHTMAP" : "", n.aoMap ? "#define USE_AOMAP" : "", n.emissiveMap ? "#define USE_EMISSIVEMAP" : "", n.bumpMap ? "#define USE_BUMPMAP" : "", n.normalMap ? "#define USE_NORMALMAP" : "", n.normalMap && n.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "", n.normalMap && n.tangentSpaceNormalMap ? "#define TANGENTSPACE_NORMALMAP" : "", n.clearcoatMap ? "#define USE_CLEARCOATMAP" : "", n.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "", n.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "", n.displacementMap && n.supportsVertexTextures ? "#define USE_DISPLACEMENTMAP" : "", n.specularMap ? "#define USE_SPECULARMAP" : "", n.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", n.metalnessMap ? "#define USE_METALNESSMAP" : "", n.alphaMap ? "#define USE_ALPHAMAP" : "", n.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "", n.vertexTangents ? "#define USE_TANGENT" : "", n.vertexColors ? "#define USE_COLOR" : "", n.vertexUvs ? "#define USE_UV" : "", n.uvsVertexOnly ? "#define UVS_VERTEX_ONLY" : "", n.flatShading ? "#define FLAT_SHADED" : "", n.skinning ? "#define USE_SKINNING" : "", n.useVertexTexture ? "#define BONE_TEXTURE" : "", n.morphTargets ? "#define USE_MORPHTARGETS" : "", n.morphNormals && !1 === n.flatShading ? "#define USE_MORPHNORMALS" : "", n.doubleSided ? "#define DOUBLE_SIDED" : "", n.flipSided ? "#define FLIP_SIDED" : "", n.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", n.shadowMapEnabled ? "#define " + c : "", n.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "", n.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", n.logarithmicDepthBuffer && n.rendererExtensionFragDepth ? "#define USE_LOGDEPTHBUF_EXT" : "", "uniform mat4 modelMatrix;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat3 normalMatrix;", "uniform vec3 cameraPosition;", "uniform bool isOrthographic;", "#ifdef USE_INSTANCING", " attribute mat4 instanceMatrix;", "#endif", "attribute vec3 position;", "attribute vec3 normal;", "attribute vec2 uv;", "#ifdef USE_TANGENT", "\tattribute vec4 tangent;", "#endif", "#ifdef USE_COLOR", "\tattribute vec3 color;", "#endif", "#ifdef USE_MORPHTARGETS", "\tattribute vec3 morphTarget0;", "\tattribute vec3 morphTarget1;", "\tattribute vec3 morphTarget2;", "\tattribute vec3 morphTarget3;", "\t#ifdef USE_MORPHNORMALS", "\t\tattribute vec3 morphNormal0;", "\t\tattribute vec3 morphNormal1;", "\t\tattribute vec3 morphNormal2;", "\t\tattribute vec3 morphNormal3;", "\t#else", "\t\tattribute vec3 morphTarget4;", "\t\tattribute vec3 morphTarget5;", "\t\tattribute vec3 morphTarget6;", "\t\tattribute vec3 morphTarget7;", "\t#endif", "#endif", "#ifdef USE_SKINNING", "\tattribute vec4 skinIndex;", "\tattribute vec4 skinWeight;", "#endif", "\n"].filter(ls).join("\n"),
        a = [m, bs(n), "#define SHADER_NAME " + n.shaderName, g, n.alphaTest ? "#define ALPHATEST " + n.alphaTest + (n.alphaTest % 1 ? "" : ".0") : "", "#define GAMMA_FACTOR " + d, n.useFog && n.fog ? "#define USE_FOG" : "", n.useFog && n.fogExp2 ? "#define FOG_EXP2" : "", n.map ? "#define USE_MAP" : "", n.matcap ? "#define USE_MATCAP" : "", n.envMap ? "#define USE_ENVMAP" : "", n.envMap ? "#define " + h : "", n.envMap ? "#define " + p : "", n.envMap ? "#define " + f : "", n.lightMap ? "#define USE_LIGHTMAP" : "", n.aoMap ? "#define USE_AOMAP" : "", n.emissiveMap ? "#define USE_EMISSIVEMAP" : "", n.bumpMap ? "#define USE_BUMPMAP" : "", n.normalMap ? "#define USE_NORMALMAP" : "", n.normalMap && n.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "", n.normalMap && n.tangentSpaceNormalMap ? "#define TANGENTSPACE_NORMALMAP" : "", n.clearcoatMap ? "#define USE_CLEARCOATMAP" : "", n.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "", n.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "", n.specularMap ? "#define USE_SPECULARMAP" : "", n.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", n.metalnessMap ? "#define USE_METALNESSMAP" : "", n.alphaMap ? "#define USE_ALPHAMAP" : "", n.sheen ? "#define USE_SHEEN" : "", n.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "", n.vertexTangents ? "#define USE_TANGENT" : "", n.vertexColors ? "#define USE_COLOR" : "", n.vertexUvs ? "#define USE_UV" : "", n.uvsVertexOnly ? "#define UVS_VERTEX_ONLY" : "", n.gradientMap ? "#define USE_GRADIENTMAP" : "", n.flatShading ? "#define FLAT_SHADED" : "", n.doubleSided ? "#define DOUBLE_SIDED" : "", n.flipSided ? "#define FLIP_SIDED" : "", n.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", n.shadowMapEnabled ? "#define " + c : "", n.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "", n.physicallyCorrectLights ? "#define PHYSICALLY_CORRECT_LIGHTS" : "", n.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", n.logarithmicDepthBuffer && n.rendererExtensionFragDepth ? "#define USE_LOGDEPTHBUF_EXT" : "", (n.extensionShaderTextureLOD || n.envMap) && n.rendererExtensionShaderTextureLod ? "#define TEXTURE_LOD_EXT" : "", "uniform mat4 viewMatrix;", "uniform vec3 cameraPosition;", "uniform bool isOrthographic;", n.toneMapping !== ae ? "#define TONE_MAPPING" : "", n.toneMapping !== ae ? Ha.tonemapping_pars_fragment : "", n.toneMapping !== ae ? ss("toneMapping", n.toneMapping) : "", n.dithering ? "#define DITHERING" : "", Ha.encodings_pars_fragment, n.map ? as("mapTexelToLinear", n.mapEncoding) : "", n.matcap ? as("matcapTexelToLinear", n.matcapEncoding) : "", n.envMap ? as("envMapTexelToLinear", n.envMapEncoding) : "", n.emissiveMap ? as("emissiveMapTexelToLinear", n.emissiveMapEncoding) : "", n.lightMap ? as("lightMapTexelToLinear", n.lightMapEncoding) : "", os("linearToOutputTexel", n.outputEncoding), n.depthPacking ? "#define DEPTH_PACKING " + n.depthPacking : "", "\n"].filter(ls).join("\n")),
        l = cs(l = us(l = ps(l), n), n),
        u = cs(u = us(u = ps(u), n), n),
        l = gs(l),
        u = gs(u),
        n.isWebGL2 && !n.isRawShaderMaterial && (i = ["#version 300 es\n", "#define attribute in", "#define varying out", "#define texture2D texture"].join("\n") + "\n" + i,
        a = ["#version 300 es\n", "#define varying in", "out highp vec4 pc_fragColor;", "#define gl_FragColor pc_fragColor", "#define gl_FragDepthEXT gl_FragDepth", "#define texture2D texture", "#define textureCube texture", "#define texture2DProj textureProj", "#define texture2DLodEXT textureLod", "#define texture2DProjLodEXT textureProjLod", "#define textureCubeLodEXT textureLod", "#define texture2DGradEXT textureGrad", "#define texture2DProjGradEXT textureProjGrad", "#define textureCubeGradEXT textureGrad"].join("\n") + "\n" + a);
        var w, _, S = a + u, E = ts(o, 35633, i + l), M = ts(o, 35632, S);
        if (o.attachShader(v, E),
        o.attachShader(v, M),
        void 0 !== n.index0AttributeName ? o.bindAttribLocation(v, 0, n.index0AttributeName) : !0 === n.morphTargets && o.bindAttribLocation(v, 0, "position"),
        o.linkProgram(v),
        e.debug.checkShaderErrors) {
            var T = o.getProgramInfoLog(v).trim()
              , A = o.getShaderInfoLog(E).trim()
              , P = o.getShaderInfoLog(M).trim()
              , C = !0
              , L = !0;
            if (!1 === o.getProgramParameter(v, 35714)) {
                C = !1;
                var R = is(o, E, "vertex")
                  , k = is(o, M, "fragment");
                console.error("THREE.WebGLProgram: shader error: ", o.getError(), "35715", o.getProgramParameter(v, 35715), "gl.getProgramInfoLog", T, R, k)
            } else
                "" !== T ? console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()", T) : "" !== A && "" !== P || (L = !1);
            L && (this.diagnostics = {
                runnable: C,
                programLog: T,
                vertexShader: {
                    log: A,
                    prefix: i
                },
                fragmentShader: {
                    log: P,
                    prefix: a
                }
            })
        }
        return o.deleteShader(E),
        o.deleteShader(M),
        this.getUniforms = function() {
            return void 0 === w && (w = new es(o,v)),
            w
        }
        ,
        this.getAttributes = function() {
            return void 0 === _ && (_ = function(e, t) {
                for (var n = {}, r = e.getProgramParameter(t, 35721), i = 0; i < r; i++) {
                    var a = e.getActiveAttrib(t, i).name;
                    n[a] = e.getAttribLocation(t, a)
                }
                return n
            }(o, v)),
            _
        }
        ,
        this.destroy = function() {
            r.releaseStatesOfProgram(this),
            o.deleteProgram(v),
            this.program = void 0
        }
        ,
        this.name = n.shaderName,
        this.id = ns++,
        this.cacheKey = t,
        this.usedTimes = 1,
        this.program = v,
        this.vertexShader = E,
        this.fragmentShader = M,
        this
    }
    function ws(e, t, n, r) {
        var i = []
          , a = n.isWebGL2
          , o = n.logarithmicDepthBuffer
          , s = n.floatVertexTextures
          , l = n.maxVertexUniforms
          , u = n.vertexTextures
          , c = n.precision
          , h = {
            MeshDepthMaterial: "depth",
            MeshDistanceMaterial: "distanceRGBA",
            MeshNormalMaterial: "normal",
            MeshBasicMaterial: "basic",
            MeshLambertMaterial: "lambert",
            MeshPhongMaterial: "phong",
            MeshToonMaterial: "toon",
            MeshStandardMaterial: "physical",
            MeshPhysicalMaterial: "physical",
            MeshMatcapMaterial: "matcap",
            LineBasicMaterial: "basic",
            LineDashedMaterial: "dashed",
            PointsMaterial: "points",
            ShadowMaterial: "shadow",
            SpriteMaterial: "sprite"
        }
          , p = ["precision", "isWebGL2", "supportsVertexTextures", "outputEncoding", "instancing", "map", "mapEncoding", "matcap", "matcapEncoding", "envMap", "envMapMode", "envMapEncoding", "envMapCubeUV", "lightMap", "lightMapEncoding", "aoMap", "emissiveMap", "emissiveMapEncoding", "bumpMap", "normalMap", "objectSpaceNormalMap", "tangentSpaceNormalMap", "clearcoatMap", "clearcoatRoughnessMap", "clearcoatNormalMap", "displacementMap", "specularMap", "roughnessMap", "metalnessMap", "gradientMap", "alphaMap", "combine", "vertexColors", "vertexTangents", "vertexUvs", "uvsVertexOnly", "fog", "useFog", "fogExp2", "flatShading", "sizeAttenuation", "logarithmicDepthBuffer", "skinning", "maxBones", "useVertexTexture", "morphTargets", "morphNormals", "maxMorphTargets", "maxMorphNormals", "premultipliedAlpha", "numDirLights", "numPointLights", "numSpotLights", "numHemiLights", "numRectAreaLights", "numDirLightShadows", "numPointLightShadows", "numSpotLightShadows", "shadowMapEnabled", "shadowMapType", "toneMapping", "physicallyCorrectLights", "alphaTest", "doubleSided", "flipSided", "numClippingPlanes", "numClipIntersection", "depthPacking", "dithering", "sheen", "transmissionMap"];
        function f(e) {
            var t;
            return e ? e.isTexture ? t = e.encoding : e.isWebGLRenderTarget && (console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),
            t = e.texture.encoding) : t = rn,
            t
        }
        return {
            getParameters: function(r, i, p, d, m, g, v) {
                var y, b, x = d.fog, w = r.isMeshStandardMaterial ? d.environment : null, E = r.envMap || w, M = h[r.type], T = v.isSkinnedMesh ? function(e) {
                    var t = e.skeleton.bones;
                    if (s)
                        return 1024;
                    var n = l
                      , r = Math.floor((n - 20) / 4)
                      , i = Math.min(r, t.length);
                    return i < t.length ? (console.warn("THREE.WebGLRenderer: Skeleton has " + t.length + " bones. This GPU supports " + i + "."),
                    0) : i
                }(v) : 0;
                if (null !== r.precision && (c = n.getMaxPrecision(r.precision)) !== r.precision && console.warn("THREE.WebGLProgram.getParameters:", r.precision, "not supported, using", c, "instead."),
                M) {
                    var A = Va[M];
                    y = A.vertexShader,
                    b = A.fragmentShader
                } else
                    y = r.vertexShader,
                    b = r.fragmentShader;
                var P = e.getRenderTarget();
                return {
                    isWebGL2: a,
                    shaderID: M,
                    shaderName: r.type,
                    vertexShader: y,
                    fragmentShader: b,
                    defines: r.defines,
                    isRawShaderMaterial: r.isRawShaderMaterial,
                    isShaderMaterial: r.isShaderMaterial,
                    precision: c,
                    instancing: !0 === v.isInstancedMesh,
                    supportsVertexTextures: u,
                    outputEncoding: null !== P ? f(P.texture) : e.outputEncoding,
                    map: !!r.map,
                    mapEncoding: f(r.map),
                    matcap: !!r.matcap,
                    matcapEncoding: f(r.matcap),
                    envMap: !!E,
                    envMapMode: E && E.mapping,
                    envMapEncoding: f(E),
                    envMapCubeUV: !!E && (E.mapping === ge || E.mapping === ve),
                    lightMap: !!r.lightMap,
                    lightMapEncoding: f(r.lightMap),
                    aoMap: !!r.aoMap,
                    emissiveMap: !!r.emissiveMap,
                    emissiveMapEncoding: f(r.emissiveMap),
                    bumpMap: !!r.bumpMap,
                    normalMap: !!r.normalMap,
                    objectSpaceNormalMap: r.normalMapType === mn,
                    tangentSpaceNormalMap: r.normalMapType === dn,
                    clearcoatMap: !!r.clearcoatMap,
                    clearcoatRoughnessMap: !!r.clearcoatRoughnessMap,
                    clearcoatNormalMap: !!r.clearcoatNormalMap,
                    displacementMap: !!r.displacementMap,
                    roughnessMap: !!r.roughnessMap,
                    metalnessMap: !!r.metalnessMap,
                    specularMap: !!r.specularMap,
                    alphaMap: !!r.alphaMap,
                    gradientMap: !!r.gradientMap,
                    sheen: !!r.sheen,
                    transmissionMap: !!r.transmissionMap,
                    combine: r.combine,
                    vertexTangents: r.normalMap && r.vertexTangents,
                    vertexColors: r.vertexColors,
                    vertexUvs: !!r.map || !!r.bumpMap || !!r.normalMap || !!r.specularMap || !!r.alphaMap || !!r.emissiveMap || !!r.roughnessMap || !!r.metalnessMap || !!r.clearcoatMap || !!r.clearcoatRoughnessMap || !!r.clearcoatNormalMap || !!r.displacementMap || !!r.transmissionMap,
                    uvsVertexOnly: !(r.map || r.bumpMap || r.normalMap || r.specularMap || r.alphaMap || r.emissiveMap || r.roughnessMap || r.metalnessMap || r.clearcoatNormalMap || r.transmissionMap) && !!r.displacementMap,
                    fog: !!x,
                    useFog: r.fog,
                    fogExp2: x && x.isFogExp2,
                    flatShading: r.flatShading,
                    sizeAttenuation: r.sizeAttenuation,
                    logarithmicDepthBuffer: o,
                    skinning: r.skinning && T > 0,
                    maxBones: T,
                    useVertexTexture: s,
                    morphTargets: r.morphTargets,
                    morphNormals: r.morphNormals,
                    maxMorphTargets: e.maxMorphTargets,
                    maxMorphNormals: e.maxMorphNormals,
                    numDirLights: i.directional.length,
                    numPointLights: i.point.length,
                    numSpotLights: i.spot.length,
                    numRectAreaLights: i.rectArea.length,
                    numHemiLights: i.hemi.length,
                    numDirLightShadows: i.directionalShadowMap.length,
                    numPointLightShadows: i.pointShadowMap.length,
                    numSpotLightShadows: i.spotShadowMap.length,
                    numClippingPlanes: m,
                    numClipIntersection: g,
                    dithering: r.dithering,
                    shadowMapEnabled: e.shadowMap.enabled && p.length > 0,
                    shadowMapType: e.shadowMap.type,
                    toneMapping: r.toneMapped ? e.toneMapping : ae,
                    physicallyCorrectLights: e.physicallyCorrectLights,
                    premultipliedAlpha: r.premultipliedAlpha,
                    alphaTest: r.alphaTest,
                    doubleSided: r.side === S,
                    flipSided: r.side === _,
                    depthPacking: void 0 !== r.depthPacking && r.depthPacking,
                    index0AttributeName: r.index0AttributeName,
                    extensionDerivatives: r.extensions && r.extensions.derivatives,
                    extensionFragDepth: r.extensions && r.extensions.fragDepth,
                    extensionDrawBuffers: r.extensions && r.extensions.drawBuffers,
                    extensionShaderTextureLOD: r.extensions && r.extensions.shaderTextureLOD,
                    rendererExtensionFragDepth: a || null !== t.get("EXT_frag_depth"),
                    rendererExtensionDrawBuffers: a || null !== t.get("WEBGL_draw_buffers"),
                    rendererExtensionShaderTextureLod: a || null !== t.get("EXT_shader_texture_lod"),
                    customProgramCacheKey: r.customProgramCacheKey()
                }
            },
            getProgramCacheKey: function(t) {
                var n = [];
                if (t.shaderID ? n.push(t.shaderID) : (n.push(t.fragmentShader),
                n.push(t.vertexShader)),
                void 0 !== t.defines)
                    for (var r in t.defines)
                        n.push(r),
                        n.push(t.defines[r]);
                if (void 0 === t.isRawShaderMaterial) {
                    for (var i = 0; i < p.length; i++)
                        n.push(t[p[i]]);
                    n.push(e.outputEncoding),
                    n.push(e.gammaFactor)
                }
                return n.push(t.customProgramCacheKey),
                n.join()
            },
            getUniforms: function(e) {
                var t, n = h[e.type];
                if (n) {
                    var r = Va[n];
                    t = Ta.clone(r.uniforms)
                } else
                    t = e.uniforms;
                return t
            },
            acquireProgram: function(t, n) {
                for (var a, o = 0, s = i.length; o < s; o++) {
                    var l = i[o];
                    if (l.cacheKey === n) {
                        ++(a = l).usedTimes;
                        break
                    }
                }
                return void 0 === a && (a = new xs(e,n,t,r),
                i.push(a)),
                a
            },
            releaseProgram: function(e) {
                if (0 === --e.usedTimes) {
                    var t = i.indexOf(e);
                    i[t] = i[i.length - 1],
                    i.pop(),
                    e.destroy()
                }
            },
            programs: i
        }
    }
    function _s() {
        var e = new WeakMap;
        return {
            get: function(t) {
                var n = e.get(t);
                return void 0 === n && (n = {},
                e.set(t, n)),
                n
            },
            remove: function(t) {
                e.delete(t)
            },
            update: function(t, n, r) {
                e.get(t)[n] = r
            },
            dispose: function() {
                e = new WeakMap
            }
        }
    }
    function Ss(e, t) {
        return e.groupOrder !== t.groupOrder ? e.groupOrder - t.groupOrder : e.renderOrder !== t.renderOrder ? e.renderOrder - t.renderOrder : e.program !== t.program ? e.program.id - t.program.id : e.material.id !== t.material.id ? e.material.id - t.material.id : e.z !== t.z ? e.z - t.z : e.id - t.id
    }
    function Es(e, t) {
        return e.groupOrder !== t.groupOrder ? e.groupOrder - t.groupOrder : e.renderOrder !== t.renderOrder ? e.renderOrder - t.renderOrder : e.z !== t.z ? t.z - e.z : e.id - t.id
    }
    function Ms(e) {
        var t = []
          , n = 0
          , r = []
          , i = []
          , a = {
            id: -1
        };
        function o(r, i, o, s, l, u) {
            var c = t[n]
              , h = e.get(o);
            return void 0 === c ? (c = {
                id: r.id,
                object: r,
                geometry: i,
                material: o,
                program: h.program || a,
                groupOrder: s,
                renderOrder: r.renderOrder,
                z: l,
                group: u
            },
            t[n] = c) : (c.id = r.id,
            c.object = r,
            c.geometry = i,
            c.material = o,
            c.program = h.program || a,
            c.groupOrder = s,
            c.renderOrder = r.renderOrder,
            c.z = l,
            c.group = u),
            n++,
            c
        }
        return {
            opaque: r,
            transparent: i,
            init: function() {
                n = 0,
                r.length = 0,
                i.length = 0
            },
            push: function(e, t, n, a, s, l) {
                var u = o(e, t, n, a, s, l);
                (!0 === n.transparent ? i : r).push(u)
            },
            unshift: function(e, t, n, a, s, l) {
                var u = o(e, t, n, a, s, l);
                (!0 === n.transparent ? i : r).unshift(u)
            },
            finish: function() {
                for (var e = n, r = t.length; e < r; e++) {
                    var i = t[e];
                    if (null === i.id)
                        break;
                    i.id = null,
                    i.object = null,
                    i.geometry = null,
                    i.material = null,
                    i.program = null,
                    i.group = null
                }
            },
            sort: function(e, t) {
                r.length > 1 && r.sort(e || Ss),
                i.length > 1 && i.sort(t || Es)
            }
        }
    }
    function Ts(e) {
        var t = new WeakMap;
        function n(e) {
            var r = e.target;
            r.removeEventListener("dispose", n),
            t.delete(r)
        }
        return {
            get: function(r, i) {
                var a, o = t.get(r);
                return void 0 === o ? (a = new Ms(e),
                t.set(r, new WeakMap),
                t.get(r).set(i, a),
                r.addEventListener("dispose", n)) : void 0 === (a = o.get(i)) && (a = new Ms(e),
                o.set(i, a)),
                a
            },
            dispose: function() {
                t = new WeakMap
            }
        }
    }
    function As() {
        var e = {};
        return {
            get: function(t) {
                if (void 0 !== e[t.id])
                    return e[t.id];
                var n;
                switch (t.type) {
                case "DirectionalLight":
                    n = {
                        direction: new ir,
                        color: new wi
                    };
                    break;
                case "SpotLight":
                    n = {
                        position: new ir,
                        direction: new ir,
                        color: new wi,
                        distance: 0,
                        coneCos: 0,
                        penumbraCos: 0,
                        decay: 0
                    };
                    break;
                case "PointLight":
                    n = {
                        position: new ir,
                        color: new wi,
                        distance: 0,
                        decay: 0
                    };
                    break;
                case "HemisphereLight":
                    n = {
                        direction: new ir,
                        skyColor: new wi,
                        groundColor: new wi
                    };
                    break;
                case "RectAreaLight":
                    n = {
                        color: new wi,
                        position: new ir,
                        halfWidth: new ir,
                        halfHeight: new ir
                    }
                }
                return e[t.id] = n,
                n
            }
        }
    }
    var Ps = 0;
    function Cs(e, t) {
        return (t.castShadow ? 1 : 0) - (e.castShadow ? 1 : 0)
    }
    function Ls() {
        for (var e = new As, t = function() {
            var e = {};
            return {
                get: function(t) {
                    if (void 0 !== e[t.id])
                        return e[t.id];
                    var n;
                    switch (t.type) {
                    case "DirectionalLight":
                    case "SpotLight":
                        n = {
                            shadowBias: 0,
                            shadowNormalBias: 0,
                            shadowRadius: 1,
                            shadowMapSize: new Xn
                        };
                        break;
                    case "PointLight":
                        n = {
                            shadowBias: 0,
                            shadowNormalBias: 0,
                            shadowRadius: 1,
                            shadowMapSize: new Xn,
                            shadowCameraNear: 1,
                            shadowCameraFar: 1e3
                        }
                    }
                    return e[t.id] = n,
                    n
                }
            }
        }(), n = {
            version: 0,
            hash: {
                directionalLength: -1,
                pointLength: -1,
                spotLength: -1,
                rectAreaLength: -1,
                hemiLength: -1,
                numDirectionalShadows: -1,
                numPointShadows: -1,
                numSpotShadows: -1
            },
            ambient: [0, 0, 0],
            probe: [],
            directional: [],
            directionalShadow: [],
            directionalShadowMap: [],
            directionalShadowMatrix: [],
            spot: [],
            spotShadow: [],
            spotShadowMap: [],
            spotShadowMatrix: [],
            rectArea: [],
            point: [],
            pointShadow: [],
            pointShadowMap: [],
            pointShadowMatrix: [],
            hemi: []
        }, r = 0; r < 9; r++)
            n.probe.push(new ir);
        var i = new ir
          , a = new pr
          , o = new pr;
        return {
            setup: function(r, s, l) {
                for (var u = 0, c = 0, h = 0, p = 0; p < 9; p++)
                    n.probe[p].set(0, 0, 0);
                var f = 0
                  , d = 0
                  , m = 0
                  , g = 0
                  , v = 0
                  , y = 0
                  , b = 0
                  , x = 0
                  , w = l.matrixWorldInverse;
                r.sort(Cs);
                for (var _ = 0, S = r.length; _ < S; _++) {
                    var E = r[_]
                      , M = E.color
                      , T = E.intensity
                      , A = E.distance
                      , P = E.shadow && E.shadow.map ? E.shadow.map.texture : null;
                    if (E.isAmbientLight)
                        u += M.r * T,
                        c += M.g * T,
                        h += M.b * T;
                    else if (E.isLightProbe)
                        for (var C = 0; C < 9; C++)
                            n.probe[C].addScaledVector(E.sh.coefficients[C], T);
                    else if (E.isDirectionalLight) {
                        var L = e.get(E);
                        if (L.color.copy(E.color).multiplyScalar(E.intensity),
                        L.direction.setFromMatrixPosition(E.matrixWorld),
                        i.setFromMatrixPosition(E.target.matrixWorld),
                        L.direction.sub(i),
                        L.direction.transformDirection(w),
                        E.castShadow) {
                            var R = E.shadow
                              , k = t.get(E);
                            k.shadowBias = R.bias,
                            k.shadowNormalBias = R.normalBias,
                            k.shadowRadius = R.radius,
                            k.shadowMapSize = R.mapSize,
                            n.directionalShadow[f] = k,
                            n.directionalShadowMap[f] = P,
                            n.directionalShadowMatrix[f] = E.shadow.matrix,
                            y++
                        }
                        n.directional[f] = L,
                        f++
                    } else if (E.isSpotLight) {
                        var D = e.get(E);
                        if (D.position.setFromMatrixPosition(E.matrixWorld),
                        D.position.applyMatrix4(w),
                        D.color.copy(M).multiplyScalar(T),
                        D.distance = A,
                        D.direction.setFromMatrixPosition(E.matrixWorld),
                        i.setFromMatrixPosition(E.target.matrixWorld),
                        D.direction.sub(i),
                        D.direction.transformDirection(w),
                        D.coneCos = Math.cos(E.angle),
                        D.penumbraCos = Math.cos(E.angle * (1 - E.penumbra)),
                        D.decay = E.decay,
                        E.castShadow) {
                            var I = E.shadow
                              , O = t.get(E);
                            O.shadowBias = I.bias,
                            O.shadowNormalBias = I.normalBias,
                            O.shadowRadius = I.radius,
                            O.shadowMapSize = I.mapSize,
                            n.spotShadow[m] = O,
                            n.spotShadowMap[m] = P,
                            n.spotShadowMatrix[m] = E.shadow.matrix,
                            x++
                        }
                        n.spot[m] = D,
                        m++
                    } else if (E.isRectAreaLight) {
                        var F = e.get(E);
                        F.color.copy(M).multiplyScalar(T),
                        F.position.setFromMatrixPosition(E.matrixWorld),
                        F.position.applyMatrix4(w),
                        o.identity(),
                        a.copy(E.matrixWorld),
                        a.premultiply(w),
                        o.extractRotation(a),
                        F.halfWidth.set(.5 * E.width, 0, 0),
                        F.halfHeight.set(0, .5 * E.height, 0),
                        F.halfWidth.applyMatrix4(o),
                        F.halfHeight.applyMatrix4(o),
                        n.rectArea[g] = F,
                        g++
                    } else if (E.isPointLight) {
                        var N = e.get(E);
                        if (N.position.setFromMatrixPosition(E.matrixWorld),
                        N.position.applyMatrix4(w),
                        N.color.copy(E.color).multiplyScalar(E.intensity),
                        N.distance = E.distance,
                        N.decay = E.decay,
                        E.castShadow) {
                            var B = E.shadow
                              , z = t.get(E);
                            z.shadowBias = B.bias,
                            z.shadowNormalBias = B.normalBias,
                            z.shadowRadius = B.radius,
                            z.shadowMapSize = B.mapSize,
                            z.shadowCameraNear = B.camera.near,
                            z.shadowCameraFar = B.camera.far,
                            n.pointShadow[d] = z,
                            n.pointShadowMap[d] = P,
                            n.pointShadowMatrix[d] = E.shadow.matrix,
                            b++
                        }
                        n.point[d] = N,
                        d++
                    } else if (E.isHemisphereLight) {
                        var G = e.get(E);
                        G.direction.setFromMatrixPosition(E.matrixWorld),
                        G.direction.transformDirection(w),
                        G.direction.normalize(),
                        G.skyColor.copy(E.color).multiplyScalar(T),
                        G.groundColor.copy(E.groundColor).multiplyScalar(T),
                        n.hemi[v] = G,
                        v++
                    }
                }
                n.ambient[0] = u,
                n.ambient[1] = c,
                n.ambient[2] = h;
                var H = n.hash;
                H.directionalLength === f && H.pointLength === d && H.spotLength === m && H.rectAreaLength === g && H.hemiLength === v && H.numDirectionalShadows === y && H.numPointShadows === b && H.numSpotShadows === x || (n.directional.length = f,
                n.spot.length = m,
                n.rectArea.length = g,
                n.point.length = d,
                n.hemi.length = v,
                n.directionalShadow.length = y,
                n.directionalShadowMap.length = y,
                n.pointShadow.length = b,
                n.pointShadowMap.length = b,
                n.spotShadow.length = x,
                n.spotShadowMap.length = x,
                n.directionalShadowMatrix.length = y,
                n.pointShadowMatrix.length = b,
                n.spotShadowMatrix.length = x,
                H.directionalLength = f,
                H.pointLength = d,
                H.spotLength = m,
                H.rectAreaLength = g,
                H.hemiLength = v,
                H.numDirectionalShadows = y,
                H.numPointShadows = b,
                H.numSpotShadows = x,
                n.version = Ps++)
            },
            state: n
        }
    }
    function Rs() {
        var e = new Ls
          , t = []
          , n = [];
        return {
            init: function() {
                t.length = 0,
                n.length = 0
            },
            state: {
                lightsArray: t,
                shadowsArray: n,
                lights: e
            },
            setupLights: function(r) {
                e.setup(t, n, r)
            },
            pushLight: function(e) {
                t.push(e)
            },
            pushShadow: function(e) {
                n.push(e)
            }
        }
    }
    function ks() {
        var e = new WeakMap;
        function t(n) {
            var r = n.target;
            r.removeEventListener("dispose", t),
            e.delete(r)
        }
        return {
            get: function(n, r) {
                var i;
                return !1 === e.has(n) ? (i = new Rs,
                e.set(n, new WeakMap),
                e.get(n).set(r, i),
                n.addEventListener("dispose", t)) : !1 === e.get(n).has(r) ? (i = new Rs,
                e.get(n).set(r, i)) : i = e.get(n).get(r),
                i
            },
            dispose: function() {
                e = new WeakMap
            }
        }
    }
    function Ds(e) {
        Ai.call(this),
        this.type = "MeshDepthMaterial",
        this.depthPacking = pn,
        this.skinning = !1,
        this.morphTargets = !1,
        this.map = null,
        this.alphaMap = null,
        this.displacementMap = null,
        this.displacementScale = 1,
        this.displacementBias = 0,
        this.wireframe = !1,
        this.wireframeLinewidth = 1,
        this.fog = !1,
        this.setValues(e)
    }
    function Is(e) {
        Ai.call(this),
        this.type = "MeshDistanceMaterial",
        this.referencePosition = new ir,
        this.nearDistance = 1,
        this.farDistance = 1e3,
        this.skinning = !1,
        this.morphTargets = !1,
        this.map = null,
        this.alphaMap = null,
        this.displacementMap = null,
        this.displacementScale = 1,
        this.displacementBias = 0,
        this.fog = !1,
        this.setValues(e)
    }
    Ds.prototype = Object.create(Ai.prototype),
    Ds.prototype.constructor = Ds,
    Ds.prototype.isMeshDepthMaterial = !0,
    Ds.prototype.copy = function(e) {
        return Ai.prototype.copy.call(this, e),
        this.depthPacking = e.depthPacking,
        this.skinning = e.skinning,
        this.morphTargets = e.morphTargets,
        this.map = e.map,
        this.alphaMap = e.alphaMap,
        this.displacementMap = e.displacementMap,
        this.displacementScale = e.displacementScale,
        this.displacementBias = e.displacementBias,
        this.wireframe = e.wireframe,
        this.wireframeLinewidth = e.wireframeLinewidth,
        this
    }
    ,
    Is.prototype = Object.create(Ai.prototype),
    Is.prototype.constructor = Is,
    Is.prototype.isMeshDistanceMaterial = !0,
    Is.prototype.copy = function(e) {
        return Ai.prototype.copy.call(this, e),
        this.referencePosition.copy(e.referencePosition),
        this.nearDistance = e.nearDistance,
        this.farDistance = e.farDistance,
        this.skinning = e.skinning,
        this.morphTargets = e.morphTargets,
        this.map = e.map,
        this.alphaMap = e.alphaMap,
        this.displacementMap = e.displacementMap,
        this.displacementScale = e.displacementScale,
        this.displacementBias = e.displacementBias,
        this
    }
    ;
    function Os(e, t, n) {
        var r = new Oa
          , i = new Xn
          , a = new Xn
          , o = new Kn
          , s = []
          , l = []
          , u = {}
          , c = {
            0: _,
            1: w,
            2: S
        }
          , h = new Aa({
            defines: {
                SAMPLE_RATE: 2 / 8,
                HALF_SAMPLE_RATE: 1 / 8
            },
            uniforms: {
                shadow_pass: {
                    value: null
                },
                resolution: {
                    value: new Xn
                },
                radius: {
                    value: 4
                }
            },
            vertexShader: "void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",
            fragmentShader: "uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n  float mean = 0.0;\n  float squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy  ) / resolution ) );\n  for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n    #ifdef HORIZONAL_PASS\n      vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n      mean += distribution.x;\n      squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n    #else\n      float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0,  i )  * radius ) / resolution ) );\n      mean += depth;\n      squared_mean += depth * depth;\n    #endif\n  }\n  mean = mean * HALF_SAMPLE_RATE;\n  squared_mean = squared_mean * HALF_SAMPLE_RATE;\n  float std_dev = sqrt( squared_mean - mean * mean );\n  gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"
        })
          , p = h.clone();
        p.defines.HORIZONAL_PASS = 1;
        var f = new $i;
        f.setAttribute("position", new Ri(new Float32Array([-1, -1, .5, 3, -1, .5, -1, 3, .5]),3));
        var d = new da(f,h)
          , m = this;
        function g(n, r) {
            var i = t.update(d);
            h.uniforms.shadow_pass.value = n.map.texture,
            h.uniforms.resolution.value = n.mapSize,
            h.uniforms.radius.value = n.radius,
            e.setRenderTarget(n.mapPass),
            e.clear(),
            e.renderBufferDirect(r, null, i, h, d, null),
            p.uniforms.shadow_pass.value = n.mapPass.texture,
            p.uniforms.resolution.value = n.mapSize,
            p.uniforms.radius.value = n.radius,
            e.setRenderTarget(n.map),
            e.clear(),
            e.renderBufferDirect(r, null, i, p, d, null)
        }
        function v(e, t, n) {
            var r = e << 0 | t << 1 | n << 2
              , i = s[r];
            return void 0 === i && (i = new Ds({
                depthPacking: fn,
                morphTargets: e,
                skinning: t
            }),
            s[r] = i),
            i
        }
        function b(e, t, n) {
            var r = e << 0 | t << 1 | n << 2
              , i = l[r];
            return void 0 === i && (i = new Is({
                morphTargets: e,
                skinning: t
            }),
            l[r] = i),
            i
        }
        function E(t, n, r, i, a, o, s) {
            var l = null
              , h = v
              , p = t.customDepthMaterial;
            if (!0 === i.isPointLight && (h = b,
            p = t.customDistanceMaterial),
            void 0 === p) {
                var f = !1;
                !0 === r.morphTargets && (f = n.morphAttributes && n.morphAttributes.position && n.morphAttributes.position.length > 0);
                var d = !1;
                !0 === t.isSkinnedMesh && (!0 === r.skinning ? d = !0 : console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:", t)),
                l = h(f, d, !0 === t.isInstancedMesh)
            } else
                l = p;
            if (e.localClippingEnabled && !0 === r.clipShadows && 0 !== r.clippingPlanes.length) {
                var m = l.uuid
                  , g = r.uuid
                  , y = u[m];
                void 0 === y && (y = {},
                u[m] = y);
                var w = y[g];
                void 0 === w && (w = l.clone(),
                y[g] = w),
                l = w
            }
            return l.visible = r.visible,
            l.wireframe = r.wireframe,
            l.side = s === x ? null !== r.shadowSide ? r.shadowSide : r.side : null !== r.shadowSide ? r.shadowSide : c[r.side],
            l.clipShadows = r.clipShadows,
            l.clippingPlanes = r.clippingPlanes,
            l.clipIntersection = r.clipIntersection,
            l.wireframeLinewidth = r.wireframeLinewidth,
            l.linewidth = r.linewidth,
            !0 === i.isPointLight && !0 === l.isMeshDistanceMaterial && (l.referencePosition.setFromMatrixPosition(i.matrixWorld),
            l.nearDistance = a,
            l.farDistance = o),
            l
        }
        function M(n, i, a, o, s) {
            if (!1 !== n.visible) {
                if (n.layers.test(i.layers) && (n.isMesh || n.isLine || n.isPoints) && (n.castShadow || n.receiveShadow && s === x) && (!n.frustumCulled || r.intersectsObject(n))) {
                    n.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse, n.matrixWorld);
                    var l = t.update(n)
                      , u = n.material;
                    if (Array.isArray(u))
                        for (var c = l.groups, h = 0, p = c.length; h < p; h++) {
                            var f = c[h]
                              , d = u[f.materialIndex];
                            if (d && d.visible) {
                                var m = E(n, l, d, o, a.near, a.far, s);
                                e.renderBufferDirect(a, null, l, m, n, f)
                            }
                        }
                    else if (u.visible) {
                        var g = E(n, l, u, o, a.near, a.far, s);
                        e.renderBufferDirect(a, null, l, g, n, null)
                    }
                }
                for (var v = n.children, y = 0, b = v.length; y < b; y++)
                    M(v[y], i, a, o, s)
            }
        }
        this.enabled = !1,
        this.autoUpdate = !0,
        this.needsUpdate = !1,
        this.type = y,
        this.render = function(t, s, l) {
            if (!1 !== m.enabled && (!1 !== m.autoUpdate || !1 !== m.needsUpdate) && 0 !== t.length) {
                var u = e.getRenderTarget()
                  , c = e.getActiveCubeFace()
                  , h = e.getActiveMipmapLevel()
                  , p = e.state;
                p.setBlending(T),
                p.buffers.color.setClear(1, 1, 1, 1),
                p.buffers.depth.setTest(!0),
                p.setScissorTest(!1);
                for (var f = 0, d = t.length; f < d; f++) {
                    var v = t[f]
                      , y = v.shadow;
                    if (!1 !== y.autoUpdate || !1 !== y.needsUpdate)
                        if (void 0 !== y) {
                            i.copy(y.mapSize);
                            var b = y.getFrameExtents();
                            if (i.multiply(b),
                            a.copy(y.mapSize),
                            (i.x > n || i.y > n) && (i.x > n && (a.x = Math.floor(n / b.x),
                            i.x = a.x * b.x,
                            y.mapSize.x = a.x),
                            i.y > n && (a.y = Math.floor(n / b.y),
                            i.y = a.y * b.y,
                            y.mapSize.y = a.y)),
                            null === y.map && !y.isPointLightShadow && this.type === x) {
                                var w = {
                                    minFilter: Te,
                                    magFilter: Te,
                                    format: We,
                                    stencilBuffer: !1
                                };
                                y.map = new Qn(i.x,i.y,w),
                                y.map.texture.name = v.name + ".shadowMap",
                                y.mapPass = new Qn(i.x,i.y,w),
                                y.camera.updateProjectionMatrix()
                            }
                            if (null === y.map) {
                                var _ = {
                                    minFilter: we,
                                    magFilter: we,
                                    format: We,
                                    stencilBuffer: !1
                                };
                                y.map = new Qn(i.x,i.y,_),
                                y.map.texture.name = v.name + ".shadowMap",
                                y.camera.updateProjectionMatrix()
                            }
                            e.setRenderTarget(y.map),
                            e.clear();
                            for (var S = y.getViewportCount(), E = 0; E < S; E++) {
                                var A = y.getViewport(E);
                                o.set(a.x * A.x, a.y * A.y, a.x * A.z, a.y * A.w),
                                p.viewport(o),
                                y.updateMatrices(v, E),
                                r = y.getFrustum(),
                                M(s, l, y.camera, v, this.type)
                            }
                            y.isPointLightShadow || this.type !== x || g(y, l),
                            y.needsUpdate = !1
                        } else
                            console.warn("THREE.WebGLShadowMap:", v, "has no shadow.")
                }
                m.needsUpdate = !1,
                e.setRenderTarget(u, c, h)
            }
        }
    }
    function Fs(e, t, n) {
        var r, i, o = n.isWebGL2;
        var s = new function() {
            var t = !1
              , n = new Kn
              , r = null
              , i = new Kn(0,0,0,0);
            return {
                setMask: function(n) {
                    r === n || t || (e.colorMask(n, n, n, n),
                    r = n)
                },
                setLocked: function(e) {
                    t = e
                },
                setClear: function(t, r, a, o, s) {
                    !0 === s && (t *= o,
                    r *= o,
                    a *= o),
                    n.set(t, r, a, o),
                    !1 === i.equals(n) && (e.clearColor(t, r, a, o),
                    i.copy(n))
                },
                reset: function() {
                    t = !1,
                    r = null,
                    i.set(-1, 0, 0, 0)
                }
            }
        }
          , l = new function() {
            var t = !1
              , n = null
              , r = null
              , i = null;
            return {
                setTest: function(e) {
                    e ? ve(2929) : ye(2929)
                },
                setMask: function(r) {
                    n === r || t || (e.depthMask(r),
                    n = r)
                },
                setFunc: function(t) {
                    if (r !== t) {
                        if (t)
                            switch (t) {
                            case Y:
                                e.depthFunc(512);
                                break;
                            case Z:
                                e.depthFunc(519);
                                break;
                            case $:
                                e.depthFunc(513);
                                break;
                            case J:
                                e.depthFunc(515);
                                break;
                            case K:
                                e.depthFunc(514);
                                break;
                            case Q:
                                e.depthFunc(518);
                                break;
                            case ee:
                                e.depthFunc(516);
                                break;
                            case te:
                                e.depthFunc(517);
                                break;
                            default:
                                e.depthFunc(515)
                            }
                        else
                            e.depthFunc(515);
                        r = t
                    }
                },
                setLocked: function(e) {
                    t = e
                },
                setClear: function(t) {
                    i !== t && (e.clearDepth(t),
                    i = t)
                },
                reset: function() {
                    t = !1,
                    n = null,
                    r = null,
                    i = null
                }
            }
        }
          , u = new function() {
            var t = !1
              , n = null
              , r = null
              , i = null
              , a = null
              , o = null
              , s = null
              , l = null
              , u = null;
            return {
                setTest: function(e) {
                    t || (e ? ve(2960) : ye(2960))
                },
                setMask: function(r) {
                    n === r || t || (e.stencilMask(r),
                    n = r)
                },
                setFunc: function(t, n, o) {
                    r === t && i === n && a === o || (e.stencilFunc(t, n, o),
                    r = t,
                    i = n,
                    a = o)
                },
                setOp: function(t, n, r) {
                    o === t && s === n && l === r || (e.stencilOp(t, n, r),
                    o = t,
                    s = n,
                    l = r)
                },
                setLocked: function(e) {
                    t = e
                },
                setClear: function(t) {
                    u !== t && (e.clearStencil(t),
                    u = t)
                },
                reset: function() {
                    t = !1,
                    n = null,
                    r = null,
                    i = null,
                    a = null,
                    o = null,
                    s = null,
                    l = null,
                    u = null
                }
            }
        }
          , c = {}
          , h = null
          , p = null
          , g = null
          , v = null
          , y = null
          , b = null
          , x = null
          , w = null
          , E = null
          , M = !1
          , ne = null
          , re = null
          , ie = null
          , ae = null
          , oe = null
          , se = e.getParameter(35661)
          , le = !1
          , ue = 0
          , ce = e.getParameter(7938);
        -1 !== ce.indexOf("WebGL") ? (ue = parseFloat(/^WebGL\ ([0-9])/.exec(ce)[1]),
        le = ue >= 1) : -1 !== ce.indexOf("OpenGL ES") && (ue = parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(ce)[1]),
        le = ue >= 2);
        var he = null
          , pe = {}
          , fe = new Kn
          , de = new Kn;
        function me(t, n, r) {
            var i = new Uint8Array(4)
              , a = e.createTexture();
            e.bindTexture(t, a),
            e.texParameteri(t, 10241, 9728),
            e.texParameteri(t, 10240, 9728);
            for (var o = 0; o < r; o++)
                e.texImage2D(n + o, 0, 6408, 1, 1, 0, 6408, 5121, i);
            return a
        }
        var ge = {};
        function ve(t) {
            !0 !== c[t] && (e.enable(t),
            c[t] = !0)
        }
        function ye(t) {
            !1 !== c[t] && (e.disable(t),
            c[t] = !1)
        }
        ge[3553] = me(3553, 3553, 1),
        ge[34067] = me(34067, 34069, 6),
        s.setClear(0, 0, 0, 1),
        l.setClear(1),
        u.setClear(0),
        ve(2929),
        l.setFunc(J),
        Se(!1),
        Ee(d),
        ve(2884),
        _e(T);
        var be = (r = {},
        Object(a.a)(r, k, 32774),
        Object(a.a)(r, D, 32778),
        Object(a.a)(r, I, 32779),
        r);
        if (o)
            be[O] = 32775,
            be[F] = 32776;
        else {
            var xe = t.get("EXT_blend_minmax");
            null !== xe && (be[O] = xe.MIN_EXT,
            be[F] = xe.MAX_EXT)
        }
        var we = (i = {},
        Object(a.a)(i, N, 0),
        Object(a.a)(i, B, 1),
        Object(a.a)(i, z, 768),
        Object(a.a)(i, H, 770),
        Object(a.a)(i, X, 776),
        Object(a.a)(i, W, 774),
        Object(a.a)(i, j, 772),
        Object(a.a)(i, G, 769),
        Object(a.a)(i, V, 771),
        Object(a.a)(i, q, 775),
        Object(a.a)(i, U, 773),
        i);
        function _e(t, n, r, i, a, o, s, l) {
            if (t !== T) {
                if (p || (ve(3042),
                p = !0),
                t === R)
                    a = a || n,
                    o = o || r,
                    s = s || i,
                    n === v && a === x || (e.blendEquationSeparate(be[n], be[a]),
                    v = n,
                    x = a),
                    r === y && i === b && o === w && s === E || (e.blendFuncSeparate(we[r], we[i], we[o], we[s]),
                    y = r,
                    b = i,
                    w = o,
                    E = s),
                    g = t,
                    M = null;
                else if (t !== g || l !== M) {
                    if (v === k && x === k || (e.blendEquation(32774),
                    v = k,
                    x = k),
                    l)
                        switch (t) {
                        case A:
                            e.blendFuncSeparate(1, 771, 1, 771);
                            break;
                        case P:
                            e.blendFunc(1, 1);
                            break;
                        case C:
                            e.blendFuncSeparate(0, 0, 769, 771);
                            break;
                        case L:
                            e.blendFuncSeparate(0, 768, 0, 770);
                            break;
                        default:
                            console.error("THREE.WebGLState: Invalid blending: ", t)
                        }
                    else
                        switch (t) {
                        case A:
                            e.blendFuncSeparate(770, 771, 1, 771);
                            break;
                        case P:
                            e.blendFunc(770, 1);
                            break;
                        case C:
                            e.blendFunc(0, 769);
                            break;
                        case L:
                            e.blendFunc(0, 768);
                            break;
                        default:
                            console.error("THREE.WebGLState: Invalid blending: ", t)
                        }
                    y = null,
                    b = null,
                    w = null,
                    E = null,
                    g = t,
                    M = l
                }
            } else
                p && (ye(3042),
                p = !1)
        }
        function Se(t) {
            ne !== t && (t ? e.frontFace(2304) : e.frontFace(2305),
            ne = t)
        }
        function Ee(t) {
            t !== f ? (ve(2884),
            t !== re && (t === d ? e.cullFace(1029) : t === m ? e.cullFace(1028) : e.cullFace(1032))) : ye(2884),
            re = t
        }
        function Me(t, n, r) {
            t ? (ve(32823),
            ae === n && oe === r || (e.polygonOffset(n, r),
            ae = n,
            oe = r)) : ye(32823)
        }
        function Te(t) {
            void 0 === t && (t = 33984 + se - 1),
            he !== t && (e.activeTexture(t),
            he = t)
        }
        return {
            buffers: {
                color: s,
                depth: l,
                stencil: u
            },
            enable: ve,
            disable: ye,
            useProgram: function(t) {
                return h !== t && (e.useProgram(t),
                h = t,
                !0)
            },
            setBlending: _e,
            setMaterial: function(e, t) {
                e.side === S ? ye(2884) : ve(2884);
                var n = e.side === _;
                t && (n = !n),
                Se(n),
                e.blending === A && !1 === e.transparent ? _e(T) : _e(e.blending, e.blendEquation, e.blendSrc, e.blendDst, e.blendEquationAlpha, e.blendSrcAlpha, e.blendDstAlpha, e.premultipliedAlpha),
                l.setFunc(e.depthFunc),
                l.setTest(e.depthTest),
                l.setMask(e.depthWrite),
                s.setMask(e.colorWrite);
                var r = e.stencilWrite;
                u.setTest(r),
                r && (u.setMask(e.stencilWriteMask),
                u.setFunc(e.stencilFunc, e.stencilRef, e.stencilFuncMask),
                u.setOp(e.stencilFail, e.stencilZFail, e.stencilZPass)),
                Me(e.polygonOffset, e.polygonOffsetFactor, e.polygonOffsetUnits)
            },
            setFlipSided: Se,
            setCullFace: Ee,
            setLineWidth: function(t) {
                t !== ie && (le && e.lineWidth(t),
                ie = t)
            },
            setPolygonOffset: Me,
            setScissorTest: function(e) {
                e ? ve(3089) : ye(3089)
            },
            activeTexture: Te,
            bindTexture: function(t, n) {
                null === he && Te();
                var r = pe[he];
                void 0 === r && (r = {
                    type: void 0,
                    texture: void 0
                },
                pe[he] = r),
                r.type === t && r.texture === n || (e.bindTexture(t, n || ge[t]),
                r.type = t,
                r.texture = n)
            },
            unbindTexture: function() {
                var t = pe[he];
                void 0 !== t && void 0 !== t.type && (e.bindTexture(t.type, null),
                t.type = void 0,
                t.texture = void 0)
            },
            compressedTexImage2D: function() {
                try {
                    e.compressedTexImage2D.apply(e, arguments)
                } catch (t) {
                    console.error("THREE.WebGLState:", t)
                }
            },
            texImage2D: function() {
                try {
                    e.texImage2D.apply(e, arguments)
                } catch (t) {
                    console.error("THREE.WebGLState:", t)
                }
            },
            texImage3D: function() {
                try {
                    e.texImage3D.apply(e, arguments)
                } catch (t) {
                    console.error("THREE.WebGLState:", t)
                }
            },
            scissor: function(t) {
                !1 === fe.equals(t) && (e.scissor(t.x, t.y, t.z, t.w),
                fe.copy(t))
            },
            viewport: function(t) {
                !1 === de.equals(t) && (e.viewport(t.x, t.y, t.z, t.w),
                de.copy(t))
            },
            reset: function() {
                c = {},
                he = null,
                pe = {},
                h = null,
                g = null,
                ne = null,
                re = null,
                s.reset(),
                l.reset(),
                u.reset()
            }
        }
    }
    function Ns(e, t, n, r, i, o, s) {
        var l, u, c, h = i.isWebGL2, p = i.maxTextures, f = i.maxCubemapSize, d = i.maxTextureSize, m = i.maxSamples, g = new WeakMap, v = !1;
        try {
            v = "undefined" !== typeof OffscreenCanvas && null !== new OffscreenCanvas(1,1).getContext("2d")
        } catch (V) {}
        function y(e, t) {
            return v ? new OffscreenCanvas(e,t) : document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")
        }
        function b(e, t, n, r) {
            var i = 1;
            if ((e.width > r || e.height > r) && (i = r / Math.max(e.width, e.height)),
            i < 1 || !0 === t) {
                if ("undefined" !== typeof HTMLImageElement && e instanceof HTMLImageElement || "undefined" !== typeof HTMLCanvasElement && e instanceof HTMLCanvasElement || "undefined" !== typeof ImageBitmap && e instanceof ImageBitmap) {
                    var a = t ? qn.floorPowerOfTwo : Math.floor
                      , o = a(i * e.width)
                      , s = a(i * e.height);
                    void 0 === c && (c = y(o, s));
                    var l = n ? y(o, s) : c;
                    return l.width = o,
                    l.height = s,
                    l.getContext("2d").drawImage(e, 0, 0, o, s),
                    console.warn("THREE.WebGLRenderer: Texture has been resized from (" + e.width + "x" + e.height + ") to (" + o + "x" + s + ")."),
                    l
                }
                return "data"in e && console.warn("THREE.WebGLRenderer: Image in DataTexture is too big (" + e.width + "x" + e.height + ")."),
                e
            }
            return e
        }
        function x(e) {
            return qn.isPowerOfTwo(e.width) && qn.isPowerOfTwo(e.height)
        }
        function w(e, t) {
            return e.generateMipmaps && t && e.minFilter !== we && e.minFilter !== Te
        }
        function _(t, n, i, a) {
            e.generateMipmap(t),
            r.get(n).__maxMipLevel = Math.log(Math.max(i, a)) * Math.LOG2E
        }
        function S(n, r, i) {
            if (!1 === h)
                return r;
            if (null !== n) {
                if (void 0 !== e[n])
                    return e[n];
                console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '" + n + "'")
            }
            var a = r;
            return 6403 === r && (5126 === i && (a = 33326),
            5131 === i && (a = 33325),
            5121 === i && (a = 33321)),
            6407 === r && (5126 === i && (a = 34837),
            5131 === i && (a = 34843),
            5121 === i && (a = 32849)),
            6408 === r && (5126 === i && (a = 34836),
            5131 === i && (a = 34842),
            5121 === i && (a = 32856)),
            33325 !== a && 33326 !== a && 34842 !== a && 34836 !== a || t.get("EXT_color_buffer_float"),
            a
        }
        function E(e) {
            return e === we || e === _e || e === Ee ? 9728 : 9729
        }
        function M(t) {
            var n = t.target;
            n.removeEventListener("dispose", M),
            function(t) {
                var n = r.get(t);
                if (void 0 === n.__webglInit)
                    return;
                e.deleteTexture(n.__webglTexture),
                r.remove(t)
            }(n),
            n.isVideoTexture && g.delete(n),
            s.memory.textures--
        }
        function T(t) {
            var n = t.target;
            n.removeEventListener("dispose", T),
            function(t) {
                var n = r.get(t)
                  , i = r.get(t.texture);
                if (!t)
                    return;
                void 0 !== i.__webglTexture && e.deleteTexture(i.__webglTexture);
                t.depthTexture && t.depthTexture.dispose();
                if (t.isWebGLCubeRenderTarget)
                    for (var a = 0; a < 6; a++)
                        e.deleteFramebuffer(n.__webglFramebuffer[a]),
                        n.__webglDepthbuffer && e.deleteRenderbuffer(n.__webglDepthbuffer[a]);
                else
                    e.deleteFramebuffer(n.__webglFramebuffer),
                    n.__webglDepthbuffer && e.deleteRenderbuffer(n.__webglDepthbuffer),
                    n.__webglMultisampledFramebuffer && e.deleteFramebuffer(n.__webglMultisampledFramebuffer),
                    n.__webglColorRenderbuffer && e.deleteRenderbuffer(n.__webglColorRenderbuffer),
                    n.__webglDepthRenderbuffer && e.deleteRenderbuffer(n.__webglDepthRenderbuffer);
                r.remove(t.texture),
                r.remove(t)
            }(n),
            s.memory.textures--
        }
        var A = 0;
        function P(e, t) {
            var i = r.get(e);
            if (e.isVideoTexture && function(e) {
                var t = s.render.frame;
                g.get(e) !== t && (g.set(e, t),
                e.update())
            }(e),
            e.version > 0 && i.__version !== e.version) {
                var a = e.image;
                if (void 0 === a)
                    console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");
                else {
                    if (!1 !== a.complete)
                        return void O(i, e, t);
                    console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")
                }
            }
            n.activeTexture(33984 + t),
            n.bindTexture(3553, i.__webglTexture)
        }
        function C(t, i) {
            if (6 === t.image.length) {
                var a = r.get(t);
                if (t.version > 0 && a.__version !== t.version) {
                    I(a, t),
                    n.activeTexture(33984 + i),
                    n.bindTexture(34067, a.__webglTexture),
                    e.pixelStorei(37440, t.flipY);
                    for (var s = t && (t.isCompressedTexture || t.image[0].isCompressedTexture), l = t.image[0] && t.image[0].isDataTexture, u = [], c = 0; c < 6; c++)
                        u[c] = s || l ? l ? t.image[c].image : t.image[c] : b(t.image[c], !1, !0, f);
                    var p, d = u[0], m = x(d) || h, g = o.convert(t.format), v = o.convert(t.type), y = S(t.internalFormat, g, v);
                    if (D(34067, t, m),
                    s) {
                        for (var E = 0; E < 6; E++) {
                            p = u[E].mipmaps;
                            for (var M = 0; M < p.length; M++) {
                                var T = p[M];
                                t.format !== We && t.format !== Ue ? null !== g ? n.compressedTexImage2D(34069 + E, M, y, T.width, T.height, 0, T.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()") : n.texImage2D(34069 + E, M, y, T.width, T.height, 0, g, v, T.data)
                            }
                        }
                        a.__maxMipLevel = p.length - 1
                    } else {
                        p = t.mipmaps;
                        for (var A = 0; A < 6; A++)
                            if (l) {
                                n.texImage2D(34069 + A, 0, y, u[A].width, u[A].height, 0, g, v, u[A].data);
                                for (var P = 0; P < p.length; P++) {
                                    var C = p[P].image[A].image;
                                    n.texImage2D(34069 + A, P + 1, y, C.width, C.height, 0, g, v, C.data)
                                }
                            } else {
                                n.texImage2D(34069 + A, 0, y, g, v, u[A]);
                                for (var L = 0; L < p.length; L++) {
                                    var R = p[L];
                                    n.texImage2D(34069 + A, L + 1, y, g, v, R.image[A])
                                }
                            }
                        a.__maxMipLevel = p.length
                    }
                    w(t, m) && _(34067, t, d.width, d.height),
                    a.__version = t.version,
                    t.onUpdate && t.onUpdate(t)
                } else
                    n.activeTexture(33984 + i),
                    n.bindTexture(34067, a.__webglTexture)
            }
        }
        function L(e, t) {
            n.activeTexture(33984 + t),
            n.bindTexture(34067, r.get(e).__webglTexture)
        }
        var R = (l = {},
        Object(a.a)(l, ye, 10497),
        Object(a.a)(l, be, 33071),
        Object(a.a)(l, xe, 33648),
        l)
          , k = (u = {},
        Object(a.a)(u, we, 9728),
        Object(a.a)(u, _e, 9984),
        Object(a.a)(u, Ee, 9986),
        Object(a.a)(u, Te, 9729),
        Object(a.a)(u, Ae, 9985),
        Object(a.a)(u, Ce, 9987),
        u);
        function D(n, a, o) {
            o ? (e.texParameteri(n, 10242, R[a.wrapS]),
            e.texParameteri(n, 10243, R[a.wrapT]),
            32879 !== n && 35866 !== n || e.texParameteri(n, 32882, R[a.wrapR]),
            e.texParameteri(n, 10240, k[a.magFilter]),
            e.texParameteri(n, 10241, k[a.minFilter])) : (e.texParameteri(n, 10242, 33071),
            e.texParameteri(n, 10243, 33071),
            32879 !== n && 35866 !== n || e.texParameteri(n, 32882, 33071),
            a.wrapS === be && a.wrapT === be || console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),
            e.texParameteri(n, 10240, E(a.magFilter)),
            e.texParameteri(n, 10241, E(a.minFilter)),
            a.minFilter !== we && a.minFilter !== Te && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));
            var s = t.get("EXT_texture_filter_anisotropic");
            if (s) {
                if (a.type === Ne && null === t.get("OES_texture_float_linear"))
                    return;
                if (a.type === Be && null === (h || t.get("OES_texture_half_float_linear")))
                    return;
                (a.anisotropy > 1 || r.get(a).__currentAnisotropy) && (e.texParameterf(n, s.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(a.anisotropy, i.getMaxAnisotropy())),
                r.get(a).__currentAnisotropy = a.anisotropy)
            }
        }
        function I(t, n) {
            void 0 === t.__webglInit && (t.__webglInit = !0,
            n.addEventListener("dispose", M),
            t.__webglTexture = e.createTexture(),
            s.memory.textures++)
        }
        function O(t, r, i) {
            var a = 3553;
            r.isDataTexture2DArray && (a = 35866),
            r.isDataTexture3D && (a = 32879),
            I(t, r),
            n.activeTexture(33984 + i),
            n.bindTexture(a, t.__webglTexture),
            e.pixelStorei(37440, r.flipY),
            e.pixelStorei(37441, r.premultiplyAlpha),
            e.pixelStorei(3317, r.unpackAlignment);
            var s, l = function(e) {
                return !h && (e.wrapS !== be || e.wrapT !== be || e.minFilter !== we && e.minFilter !== Te)
            }(r) && !1 === x(r.image), u = b(r.image, l, !1, d), c = x(u) || h, p = o.convert(r.format), f = o.convert(r.type), m = S(r.internalFormat, p, f);
            D(a, r, c);
            var g = r.mipmaps;
            if (r.isDepthTexture)
                m = 6402,
                h ? m = r.type === Ne ? 36012 : r.type === Fe ? 33190 : r.type === Ve ? 35056 : 33189 : r.type === Ne && console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),
                r.format === Ze && 6402 === m && r.type !== Ie && r.type !== Fe && (console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),
                r.type = Ie,
                f = o.convert(r.type)),
                r.format === $e && 6402 === m && (m = 34041,
                r.type !== Ve && (console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),
                r.type = Ve,
                f = o.convert(r.type))),
                n.texImage2D(3553, 0, m, u.width, u.height, 0, p, f, null);
            else if (r.isDataTexture)
                if (g.length > 0 && c) {
                    for (var v = 0, y = g.length; v < y; v++)
                        s = g[v],
                        n.texImage2D(3553, v, m, s.width, s.height, 0, p, f, s.data);
                    r.generateMipmaps = !1,
                    t.__maxMipLevel = g.length - 1
                } else
                    n.texImage2D(3553, 0, m, u.width, u.height, 0, p, f, u.data),
                    t.__maxMipLevel = 0;
            else if (r.isCompressedTexture) {
                for (var E = 0, M = g.length; E < M; E++)
                    s = g[E],
                    r.format !== We && r.format !== Ue ? null !== p ? n.compressedTexImage2D(3553, E, m, s.width, s.height, 0, s.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()") : n.texImage2D(3553, E, m, s.width, s.height, 0, p, f, s.data);
                t.__maxMipLevel = g.length - 1
            } else if (r.isDataTexture2DArray)
                n.texImage3D(35866, 0, m, u.width, u.height, u.depth, 0, p, f, u.data),
                t.__maxMipLevel = 0;
            else if (r.isDataTexture3D)
                n.texImage3D(32879, 0, m, u.width, u.height, u.depth, 0, p, f, u.data),
                t.__maxMipLevel = 0;
            else if (g.length > 0 && c) {
                for (var T = 0, A = g.length; T < A; T++)
                    s = g[T],
                    n.texImage2D(3553, T, m, p, f, s);
                r.generateMipmaps = !1,
                t.__maxMipLevel = g.length - 1
            } else
                n.texImage2D(3553, 0, m, p, f, u),
                t.__maxMipLevel = 0;
            w(r, c) && _(a, r, u.width, u.height),
            t.__version = r.version,
            r.onUpdate && r.onUpdate(r)
        }
        function F(t, i, a, s) {
            var l = o.convert(i.texture.format)
              , u = o.convert(i.texture.type)
              , c = S(i.texture.internalFormat, l, u);
            n.texImage2D(s, 0, c, i.width, i.height, 0, l, u, null),
            e.bindFramebuffer(36160, t),
            e.framebufferTexture2D(36160, a, s, r.get(i.texture).__webglTexture, 0),
            e.bindFramebuffer(36160, null)
        }
        function N(t, n, r) {
            if (e.bindRenderbuffer(36161, t),
            n.depthBuffer && !n.stencilBuffer) {
                var i = 33189;
                if (r) {
                    var a = n.depthTexture;
                    a && a.isDepthTexture && (a.type === Ne ? i = 36012 : a.type === Fe && (i = 33190));
                    var s = z(n);
                    e.renderbufferStorageMultisample(36161, s, i, n.width, n.height)
                } else
                    e.renderbufferStorage(36161, i, n.width, n.height);
                e.framebufferRenderbuffer(36160, 36096, 36161, t)
            } else if (n.depthBuffer && n.stencilBuffer) {
                if (r) {
                    var l = z(n);
                    e.renderbufferStorageMultisample(36161, l, 35056, n.width, n.height)
                } else
                    e.renderbufferStorage(36161, 34041, n.width, n.height);
                e.framebufferRenderbuffer(36160, 33306, 36161, t)
            } else {
                var u = o.convert(n.texture.format)
                  , c = o.convert(n.texture.type)
                  , h = S(n.texture.internalFormat, u, c);
                if (r) {
                    var p = z(n);
                    e.renderbufferStorageMultisample(36161, p, h, n.width, n.height)
                } else
                    e.renderbufferStorage(36161, h, n.width, n.height)
            }
            e.bindRenderbuffer(36161, null)
        }
        function B(t) {
            var n = r.get(t)
              , i = !0 === t.isWebGLCubeRenderTarget;
            if (t.depthTexture) {
                if (i)
                    throw new Error("target.depthTexture not supported in Cube render targets");
                !function(t, n) {
                    if (n && n.isWebGLCubeRenderTarget)
                        throw new Error("Depth Texture with cube render targets is not supported");
                    if (e.bindFramebuffer(36160, t),
                    !n.depthTexture || !n.depthTexture.isDepthTexture)
                        throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
                    r.get(n.depthTexture).__webglTexture && n.depthTexture.image.width === n.width && n.depthTexture.image.height === n.height || (n.depthTexture.image.width = n.width,
                    n.depthTexture.image.height = n.height,
                    n.depthTexture.needsUpdate = !0),
                    P(n.depthTexture, 0);
                    var i = r.get(n.depthTexture).__webglTexture;
                    if (n.depthTexture.format === Ze)
                        e.framebufferTexture2D(36160, 36096, 3553, i, 0);
                    else {
                        if (n.depthTexture.format !== $e)
                            throw new Error("Unknown depthTexture format");
                        e.framebufferTexture2D(36160, 33306, 3553, i, 0)
                    }
                }(n.__webglFramebuffer, t)
            } else if (i) {
                n.__webglDepthbuffer = [];
                for (var a = 0; a < 6; a++)
                    e.bindFramebuffer(36160, n.__webglFramebuffer[a]),
                    n.__webglDepthbuffer[a] = e.createRenderbuffer(),
                    N(n.__webglDepthbuffer[a], t, !1)
            } else
                e.bindFramebuffer(36160, n.__webglFramebuffer),
                n.__webglDepthbuffer = e.createRenderbuffer(),
                N(n.__webglDepthbuffer, t, !1);
            e.bindFramebuffer(36160, null)
        }
        function z(e) {
            return h && e.isWebGLMultisampleRenderTarget ? Math.min(m, e.samples) : 0
        }
        var G = !1
          , H = !1;
        this.allocateTextureUnit = function() {
            var e = A;
            return e >= p && console.warn("THREE.WebGLTextures: Trying to use " + e + " texture units while this GPU supports only " + p),
            A += 1,
            e
        }
        ,
        this.resetTextureUnits = function() {
            A = 0
        }
        ,
        this.setTexture2D = P,
        this.setTexture2DArray = function(e, t) {
            var i = r.get(e);
            e.version > 0 && i.__version !== e.version ? O(i, e, t) : (n.activeTexture(33984 + t),
            n.bindTexture(35866, i.__webglTexture))
        }
        ,
        this.setTexture3D = function(e, t) {
            var i = r.get(e);
            e.version > 0 && i.__version !== e.version ? O(i, e, t) : (n.activeTexture(33984 + t),
            n.bindTexture(32879, i.__webglTexture))
        }
        ,
        this.setTextureCube = C,
        this.setTextureCubeDynamic = L,
        this.setupRenderTarget = function(t) {
            var i = r.get(t)
              , a = r.get(t.texture);
            t.addEventListener("dispose", T),
            a.__webglTexture = e.createTexture(),
            s.memory.textures++;
            var l = !0 === t.isWebGLCubeRenderTarget
              , u = !0 === t.isWebGLMultisampleRenderTarget
              , c = x(t) || h;
            if (!h || t.texture.format !== Ue || t.texture.type !== Ne && t.texture.type !== Be || (t.texture.format = We,
            console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),
            l) {
                i.__webglFramebuffer = [];
                for (var p = 0; p < 6; p++)
                    i.__webglFramebuffer[p] = e.createFramebuffer()
            } else if (i.__webglFramebuffer = e.createFramebuffer(),
            u)
                if (h) {
                    i.__webglMultisampledFramebuffer = e.createFramebuffer(),
                    i.__webglColorRenderbuffer = e.createRenderbuffer(),
                    e.bindRenderbuffer(36161, i.__webglColorRenderbuffer);
                    var f = o.convert(t.texture.format)
                      , d = o.convert(t.texture.type)
                      , m = S(t.texture.internalFormat, f, d)
                      , g = z(t);
                    e.renderbufferStorageMultisample(36161, g, m, t.width, t.height),
                    e.bindFramebuffer(36160, i.__webglMultisampledFramebuffer),
                    e.framebufferRenderbuffer(36160, 36064, 36161, i.__webglColorRenderbuffer),
                    e.bindRenderbuffer(36161, null),
                    t.depthBuffer && (i.__webglDepthRenderbuffer = e.createRenderbuffer(),
                    N(i.__webglDepthRenderbuffer, t, !0)),
                    e.bindFramebuffer(36160, null)
                } else
                    console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");
            if (l) {
                n.bindTexture(34067, a.__webglTexture),
                D(34067, t.texture, c);
                for (var v = 0; v < 6; v++)
                    F(i.__webglFramebuffer[v], t, 36064, 34069 + v);
                w(t.texture, c) && _(34067, t.texture, t.width, t.height),
                n.bindTexture(34067, null)
            } else
                n.bindTexture(3553, a.__webglTexture),
                D(3553, t.texture, c),
                F(i.__webglFramebuffer, t, 36064, 3553),
                w(t.texture, c) && _(3553, t.texture, t.width, t.height),
                n.bindTexture(3553, null);
            t.depthBuffer && B(t)
        }
        ,
        this.updateRenderTargetMipmap = function(e) {
            var t = e.texture;
            if (w(t, x(e) || h)) {
                var i = e.isWebGLCubeRenderTarget ? 34067 : 3553
                  , a = r.get(t).__webglTexture;
                n.bindTexture(i, a),
                _(i, t, e.width, e.height),
                n.bindTexture(i, null)
            }
        }
        ,
        this.updateMultisampleRenderTarget = function(t) {
            if (t.isWebGLMultisampleRenderTarget)
                if (h) {
                    var n = r.get(t);
                    e.bindFramebuffer(36008, n.__webglMultisampledFramebuffer),
                    e.bindFramebuffer(36009, n.__webglFramebuffer);
                    var i = t.width
                      , a = t.height
                      , o = 16384;
                    t.depthBuffer && (o |= 256),
                    t.stencilBuffer && (o |= 1024),
                    e.blitFramebuffer(0, 0, i, a, 0, 0, i, a, o, 9728),
                    e.bindFramebuffer(36160, n.__webglMultisampledFramebuffer)
                } else
                    console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")
        }
        ,
        this.safeSetTexture2D = function(e, t) {
            e && e.isWebGLRenderTarget && (!1 === G && (console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),
            G = !0),
            e = e.texture),
            P(e, t)
        }
        ,
        this.safeSetTextureCube = function(e, t) {
            e && e.isWebGLCubeRenderTarget && (!1 === H && (console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),
            H = !0),
            e = e.texture),
            e && e.isCubeTexture || Array.isArray(e.image) && 6 === e.image.length ? C(e, t) : L(e, t)
        }
    }
    function Bs(e, t, n) {
        var r = n.isWebGL2;
        return {
            convert: function(e) {
                var n;
                if (e === Re)
                    return 5121;
                if (e === ze)
                    return 32819;
                if (e === Ge)
                    return 32820;
                if (e === He)
                    return 33635;
                if (e === ke)
                    return 5120;
                if (e === De)
                    return 5122;
                if (e === Ie)
                    return 5123;
                if (e === Oe)
                    return 5124;
                if (e === Fe)
                    return 5125;
                if (e === Ne)
                    return 5126;
                if (e === Be)
                    return r ? 5131 : null !== (n = t.get("OES_texture_half_float")) ? n.HALF_FLOAT_OES : null;
                if (e === je)
                    return 6406;
                if (e === Ue)
                    return 6407;
                if (e === We)
                    return 6408;
                if (e === qe)
                    return 6409;
                if (e === Xe)
                    return 6410;
                if (e === Ze)
                    return 6402;
                if (e === $e)
                    return 34041;
                if (e === Je)
                    return 6403;
                if (e === Ke)
                    return 36244;
                if (e === Qe)
                    return 33319;
                if (e === et)
                    return 33320;
                if (e === tt)
                    return 36248;
                if (e === nt)
                    return 36249;
                if (e === rt || e === it || e === at || e === ot) {
                    if (null === (n = t.get("WEBGL_compressed_texture_s3tc")))
                        return null;
                    if (e === rt)
                        return n.COMPRESSED_RGB_S3TC_DXT1_EXT;
                    if (e === it)
                        return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;
                    if (e === at)
                        return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;
                    if (e === ot)
                        return n.COMPRESSED_RGBA_S3TC_DXT5_EXT
                }
                if (e === st || e === lt || e === ut || e === ct) {
                    if (null === (n = t.get("WEBGL_compressed_texture_pvrtc")))
                        return null;
                    if (e === st)
                        return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
                    if (e === lt)
                        return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
                    if (e === ut)
                        return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
                    if (e === ct)
                        return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG
                }
                if (e === ht)
                    return null !== (n = t.get("WEBGL_compressed_texture_etc1")) ? n.COMPRESSED_RGB_ETC1_WEBGL : null;
                if ((e === pt || e === ft) && null !== (n = t.get("WEBGL_compressed_texture_etc"))) {
                    if (e === pt)
                        return n.COMPRESSED_RGB8_ETC2;
                    if (e === ft)
                        return n.COMPRESSED_RGBA8_ETC2_EAC
                }
                return e === dt || e === mt || e === gt || e === vt || e === yt || e === bt || e === xt || e === wt || e === _t || e === St || e === Et || e === Mt || e === Tt || e === At || e === Ct || e === Lt || e === Rt || e === kt || e === Dt || e === It || e === Ot || e === Ft || e === Nt || e === Bt || e === zt || e === Gt || e === Ht || e === Vt ? null !== (n = t.get("WEBGL_compressed_texture_astc")) ? e : null : e === Pt ? null !== (n = t.get("EXT_texture_compression_bptc")) ? e : null : e === Ve ? r ? 34042 : null !== (n = t.get("WEBGL_depth_texture")) ? n.UNSIGNED_INT_24_8_WEBGL : null : void 0
            }
        }
    }
    function zs(e) {
        Ca.call(this),
        this.cameras = e || []
    }
    function Gs() {
        Lr.call(this),
        this.type = "Group"
    }
    function Hs() {
        this._targetRay = null,
        this._grip = null,
        this._hand = null
    }
    function Vs(e, t) {
        var n = this
          , r = null
          , i = 1
          , a = null
          , o = "local-floor"
          , s = null
          , l = []
          , u = new Map
          , c = new Ca;
        c.layers.enable(1),
        c.viewport = new Kn;
        var h = new Ca;
        h.layers.enable(2),
        h.viewport = new Kn;
        var p = [c, h]
          , f = new zs;
        f.layers.enable(1),
        f.layers.enable(2);
        var d = null
          , m = null;
        function g(e) {
            var t = u.get(e.inputSource);
            t && t.dispatchEvent({
                type: e.type
            })
        }
        function v() {
            u.forEach((function(e, t) {
                e.disconnect(t)
            }
            )),
            u.clear(),
            e.setFramebuffer(null),
            e.setRenderTarget(e.getRenderTarget()),
            E.stop(),
            n.isPresenting = !1,
            n.dispatchEvent({
                type: "sessionend"
            })
        }
        function y(e) {
            a = e,
            E.setContext(r),
            E.start(),
            n.isPresenting = !0,
            n.dispatchEvent({
                type: "sessionstart"
            })
        }
        function b(e) {
            for (var t = r.inputSources, n = 0; n < l.length; n++)
                u.set(t[n], l[n]);
            for (var i = 0; i < e.removed.length; i++) {
                var a = e.removed[i]
                  , o = u.get(a);
                o && (o.dispatchEvent({
                    type: "disconnected",
                    data: a
                }),
                u.delete(a))
            }
            for (var s = 0; s < e.added.length; s++) {
                var c = e.added[s]
                  , h = u.get(c);
                h && h.dispatchEvent({
                    type: "connected",
                    data: c
                })
            }
        }
        this.enabled = !1,
        this.isPresenting = !1,
        this.getController = function(e) {
            var t = l[e];
            return void 0 === t && (t = new Hs,
            l[e] = t),
            t.getTargetRaySpace()
        }
        ,
        this.getControllerGrip = function(e) {
            var t = l[e];
            return void 0 === t && (t = new Hs,
            l[e] = t),
            t.getGripSpace()
        }
        ,
        this.getHand = function(e) {
            var t = l[e];
            return void 0 === t && (t = new Hs,
            l[e] = t),
            t.getHandSpace()
        }
        ,
        this.setFramebufferScaleFactor = function(e) {
            i = e,
            !0 === n.isPresenting && console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")
        }
        ,
        this.setReferenceSpaceType = function(e) {
            o = e,
            !0 === n.isPresenting && console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")
        }
        ,
        this.getReferenceSpace = function() {
            return a
        }
        ,
        this.getSession = function() {
            return r
        }
        ,
        this.setSession = function(e) {
            if (null !== (r = e)) {
                r.addEventListener("select", g),
                r.addEventListener("selectstart", g),
                r.addEventListener("selectend", g),
                r.addEventListener("squeeze", g),
                r.addEventListener("squeezestart", g),
                r.addEventListener("squeezeend", g),
                r.addEventListener("end", v);
                var n = t.getContextAttributes();
                !0 !== n.xrCompatible && t.makeXRCompatible();
                var a = {
                    antialias: n.antialias,
                    alpha: n.alpha,
                    depth: n.depth,
                    stencil: n.stencil,
                    framebufferScaleFactor: i
                }
                  , s = new XRWebGLLayer(r,t,a);
                r.updateRenderState({
                    baseLayer: s
                }),
                r.requestReferenceSpace(o).then(y),
                r.addEventListener("inputsourceschange", b)
            }
        }
        ;
        var x = new ir
          , w = new ir;
        function _(e, t) {
            null === t ? e.matrixWorld.copy(e.matrix) : e.matrixWorld.multiplyMatrices(t.matrixWorld, e.matrix),
            e.matrixWorldInverse.getInverse(e.matrixWorld)
        }
        this.getCamera = function(e) {
            f.near = h.near = c.near = e.near,
            f.far = h.far = c.far = e.far,
            d === f.near && m === f.far || (r.updateRenderState({
                depthNear: f.near,
                depthFar: f.far
            }),
            d = f.near,
            m = f.far);
            var t = e.parent
              , n = f.cameras;
            _(f, t);
            for (var i = 0; i < n.length; i++)
                _(n[i], t);
            e.matrixWorld.copy(f.matrixWorld);
            for (var a = e.children, o = 0, s = a.length; o < s; o++)
                a[o].updateMatrixWorld(!0);
            return 2 === n.length ? function(e, t, n) {
                x.setFromMatrixPosition(t.matrixWorld),
                w.setFromMatrixPosition(n.matrixWorld);
                var r = x.distanceTo(w)
                  , i = t.projectionMatrix.elements
                  , a = n.projectionMatrix.elements
                  , o = i[14] / (i[10] - 1)
                  , s = i[14] / (i[10] + 1)
                  , l = (i[9] + 1) / i[5]
                  , u = (i[9] - 1) / i[5]
                  , c = (i[8] - 1) / i[0]
                  , h = (a[8] + 1) / a[0]
                  , p = o * c
                  , f = o * h
                  , d = r / (-c + h)
                  , m = d * -c;
                t.matrixWorld.decompose(e.position, e.quaternion, e.scale),
                e.translateX(m),
                e.translateZ(d),
                e.matrixWorld.compose(e.position, e.quaternion, e.scale),
                e.matrixWorldInverse.getInverse(e.matrixWorld);
                var g = o + d
                  , v = s + d
                  , y = p - m
                  , b = f + (r - m)
                  , _ = l * s / v * g
                  , S = u * s / v * g;
                e.projectionMatrix.makePerspective(y, b, _, S, g, v)
            }(f, c, h) : f.projectionMatrix.copy(c.projectionMatrix),
            f
        }
        ;
        var S = null;
        var E = new Na;
        E.setAnimationLoop((function(t, n) {
            if (null !== (s = n.getViewerPose(a))) {
                var i = s.views
                  , o = r.renderState.baseLayer;
                e.setFramebuffer(o.framebuffer);
                var u = !1;
                i.length !== f.cameras.length && (f.cameras.length = 0,
                u = !0);
                for (var c = 0; c < i.length; c++) {
                    var h = i[c]
                      , d = o.getViewport(h)
                      , m = p[c];
                    m.matrix.fromArray(h.transform.matrix),
                    m.projectionMatrix.fromArray(h.projectionMatrix),
                    m.viewport.set(d.x, d.y, d.width, d.height),
                    0 === c && f.matrix.copy(m.matrix),
                    !0 === u && f.cameras.push(m)
                }
            }
            for (var g = r.inputSources, v = 0; v < l.length; v++) {
                var y = l[v]
                  , b = g[v];
                y.update(b, n, a)
            }
            S && S(t, n)
        }
        )),
        this.setAnimationLoop = function(e) {
            S = e
        }
        ,
        this.dispose = function() {}
    }
    function js(e) {
        function t(t, n, r) {
            t.opacity.value = n.opacity,
            n.color && t.diffuse.value.copy(n.color),
            n.emissive && t.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity),
            n.map && (t.map.value = n.map),
            n.alphaMap && (t.alphaMap.value = n.alphaMap),
            n.specularMap && (t.specularMap.value = n.specularMap);
            var i, a, o = n.envMap || r;
            if (o) {
                t.envMap.value = o,
                t.flipEnvMap.value = o.isCubeTexture ? -1 : 1,
                t.reflectivity.value = n.reflectivity,
                t.refractionRatio.value = n.refractionRatio;
                var s = e.get(o).__maxMipLevel;
                void 0 !== s && (t.maxMipLevel.value = s)
            }
            n.lightMap && (t.lightMap.value = n.lightMap,
            t.lightMapIntensity.value = n.lightMapIntensity),
            n.aoMap && (t.aoMap.value = n.aoMap,
            t.aoMapIntensity.value = n.aoMapIntensity),
            n.map ? i = n.map : n.specularMap ? i = n.specularMap : n.displacementMap ? i = n.displacementMap : n.normalMap ? i = n.normalMap : n.bumpMap ? i = n.bumpMap : n.roughnessMap ? i = n.roughnessMap : n.metalnessMap ? i = n.metalnessMap : n.alphaMap ? i = n.alphaMap : n.emissiveMap && (i = n.emissiveMap),
            void 0 !== i && (i.isWebGLRenderTarget && (i = i.texture),
            !0 === i.matrixAutoUpdate && i.updateMatrix(),
            t.uvTransform.value.copy(i.matrix)),
            n.aoMap ? a = n.aoMap : n.lightMap && (a = n.lightMap),
            void 0 !== a && (a.isWebGLRenderTarget && (a = a.texture),
            !0 === a.matrixAutoUpdate && a.updateMatrix(),
            t.uv2Transform.value.copy(a.matrix))
        }
        function n(e, t, n) {
            e.roughness.value = t.roughness,
            e.metalness.value = t.metalness,
            t.roughnessMap && (e.roughnessMap.value = t.roughnessMap),
            t.metalnessMap && (e.metalnessMap.value = t.metalnessMap),
            t.emissiveMap && (e.emissiveMap.value = t.emissiveMap),
            t.bumpMap && (e.bumpMap.value = t.bumpMap,
            e.bumpScale.value = t.bumpScale,
            t.side === _ && (e.bumpScale.value *= -1)),
            t.normalMap && (e.normalMap.value = t.normalMap,
            e.normalScale.value.copy(t.normalScale),
            t.side === _ && e.normalScale.value.negate()),
            t.displacementMap && (e.displacementMap.value = t.displacementMap,
            e.displacementScale.value = t.displacementScale,
            e.displacementBias.value = t.displacementBias),
            (t.envMap || n) && (e.envMapIntensity.value = t.envMapIntensity)
        }
        return {
            refreshFogUniforms: function(e, t) {
                e.fogColor.value.copy(t.color),
                t.isFog ? (e.fogNear.value = t.near,
                e.fogFar.value = t.far) : t.isFogExp2 && (e.fogDensity.value = t.density)
            },
            refreshMaterialUniforms: function(e, r, i, a, o) {
                r.isMeshBasicMaterial ? t(e, r) : r.isMeshLambertMaterial ? (t(e, r),
                function(e, t) {
                    t.emissiveMap && (e.emissiveMap.value = t.emissiveMap)
                }(e, r)) : r.isMeshToonMaterial ? (t(e, r),
                function(e, t) {
                    t.gradientMap && (e.gradientMap.value = t.gradientMap);
                    t.emissiveMap && (e.emissiveMap.value = t.emissiveMap);
                    t.bumpMap && (e.bumpMap.value = t.bumpMap,
                    e.bumpScale.value = t.bumpScale,
                    t.side === _ && (e.bumpScale.value *= -1));
                    t.normalMap && (e.normalMap.value = t.normalMap,
                    e.normalScale.value.copy(t.normalScale),
                    t.side === _ && e.normalScale.value.negate());
                    t.displacementMap && (e.displacementMap.value = t.displacementMap,
                    e.displacementScale.value = t.displacementScale,
                    e.displacementBias.value = t.displacementBias)
                }(e, r)) : r.isMeshPhongMaterial ? (t(e, r),
                function(e, t) {
                    e.specular.value.copy(t.specular),
                    e.shininess.value = Math.max(t.shininess, 1e-4),
                    t.emissiveMap && (e.emissiveMap.value = t.emissiveMap);
                    t.bumpMap && (e.bumpMap.value = t.bumpMap,
                    e.bumpScale.value = t.bumpScale,
                    t.side === _ && (e.bumpScale.value *= -1));
                    t.normalMap && (e.normalMap.value = t.normalMap,
                    e.normalScale.value.copy(t.normalScale),
                    t.side === _ && e.normalScale.value.negate());
                    t.displacementMap && (e.displacementMap.value = t.displacementMap,
                    e.displacementScale.value = t.displacementScale,
                    e.displacementBias.value = t.displacementBias)
                }(e, r)) : r.isMeshStandardMaterial ? (t(e, r, i),
                r.isMeshPhysicalMaterial ? function(e, t, r) {
                    n(e, t, r),
                    e.reflectivity.value = t.reflectivity,
                    e.clearcoat.value = t.clearcoat,
                    e.clearcoatRoughness.value = t.clearcoatRoughness,
                    t.sheen && e.sheen.value.copy(t.sheen);
                    t.clearcoatMap && (e.clearcoatMap.value = t.clearcoatMap);
                    t.clearcoatRoughnessMap && (e.clearcoatRoughnessMap.value = t.clearcoatRoughnessMap);
                    t.clearcoatNormalMap && (e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),
                    e.clearcoatNormalMap.value = t.clearcoatNormalMap,
                    t.side === _ && e.clearcoatNormalScale.value.negate());
                    e.transmission.value = t.transmission,
                    t.transmissionMap && (e.transmissionMap.value = t.transmissionMap)
                }(e, r, i) : n(e, r, i)) : r.isMeshMatcapMaterial ? (t(e, r),
                function(e, t) {
                    t.matcap && (e.matcap.value = t.matcap);
                    t.bumpMap && (e.bumpMap.value = t.bumpMap,
                    e.bumpScale.value = t.bumpScale,
                    t.side === _ && (e.bumpScale.value *= -1));
                    t.normalMap && (e.normalMap.value = t.normalMap,
                    e.normalScale.value.copy(t.normalScale),
                    t.side === _ && e.normalScale.value.negate());
                    t.displacementMap && (e.displacementMap.value = t.displacementMap,
                    e.displacementScale.value = t.displacementScale,
                    e.displacementBias.value = t.displacementBias)
                }(e, r)) : r.isMeshDepthMaterial ? (t(e, r),
                function(e, t) {
                    t.displacementMap && (e.displacementMap.value = t.displacementMap,
                    e.displacementScale.value = t.displacementScale,
                    e.displacementBias.value = t.displacementBias)
                }(e, r)) : r.isMeshDistanceMaterial ? (t(e, r),
                function(e, t) {
                    t.displacementMap && (e.displacementMap.value = t.displacementMap,
                    e.displacementScale.value = t.displacementScale,
                    e.displacementBias.value = t.displacementBias);
                    e.referencePosition.value.copy(t.referencePosition),
                    e.nearDistance.value = t.nearDistance,
                    e.farDistance.value = t.farDistance
                }(e, r)) : r.isMeshNormalMaterial ? (t(e, r),
                function(e, t) {
                    t.bumpMap && (e.bumpMap.value = t.bumpMap,
                    e.bumpScale.value = t.bumpScale,
                    t.side === _ && (e.bumpScale.value *= -1));
                    t.normalMap && (e.normalMap.value = t.normalMap,
                    e.normalScale.value.copy(t.normalScale),
                    t.side === _ && e.normalScale.value.negate());
                    t.displacementMap && (e.displacementMap.value = t.displacementMap,
                    e.displacementScale.value = t.displacementScale,
                    e.displacementBias.value = t.displacementBias)
                }(e, r)) : r.isLineBasicMaterial ? (function(e, t) {
                    e.diffuse.value.copy(t.color),
                    e.opacity.value = t.opacity
                }(e, r),
                r.isLineDashedMaterial && function(e, t) {
                    e.dashSize.value = t.dashSize,
                    e.totalSize.value = t.dashSize + t.gapSize,
                    e.scale.value = t.scale
                }(e, r)) : r.isPointsMaterial ? function(e, t, n, r) {
                    e.diffuse.value.copy(t.color),
                    e.opacity.value = t.opacity,
                    e.size.value = t.size * n,
                    e.scale.value = .5 * r,
                    t.map && (e.map.value = t.map);
                    t.alphaMap && (e.alphaMap.value = t.alphaMap);
                    var i;
                    t.map ? i = t.map : t.alphaMap && (i = t.alphaMap);
                    void 0 !== i && (!0 === i.matrixAutoUpdate && i.updateMatrix(),
                    e.uvTransform.value.copy(i.matrix))
                }(e, r, a, o) : r.isSpriteMaterial ? function(e, t) {
                    e.diffuse.value.copy(t.color),
                    e.opacity.value = t.opacity,
                    e.rotation.value = t.rotation,
                    t.map && (e.map.value = t.map);
                    t.alphaMap && (e.alphaMap.value = t.alphaMap);
                    var n;
                    t.map ? n = t.map : t.alphaMap && (n = t.alphaMap);
                    void 0 !== n && (!0 === n.matrixAutoUpdate && n.updateMatrix(),
                    e.uvTransform.value.copy(n.matrix))
                }(e, r) : r.isShadowMaterial ? (e.color.value.copy(r.color),
                e.opacity.value = r.opacity) : r.isShaderMaterial && (r.uniformsNeedUpdate = !1)
            }
        }
    }
    function Us(e) {
        var t = void 0 !== (e = e || {}).canvas ? e.canvas : document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")
          , n = void 0 !== e.context ? e.context : null
          , r = void 0 !== e.alpha && e.alpha
          , i = void 0 === e.depth || e.depth
          , a = void 0 === e.stencil || e.stencil
          , o = void 0 !== e.antialias && e.antialias
          , s = void 0 === e.premultipliedAlpha || e.premultipliedAlpha
          , l = void 0 !== e.preserveDrawingBuffer && e.preserveDrawingBuffer
          , u = void 0 !== e.powerPreference ? e.powerPreference : "default"
          , c = void 0 !== e.failIfMajorPerformanceCaveat && e.failIfMajorPerformanceCaveat
          , h = null
          , p = null;
        this.domElement = t,
        this.debug = {
            checkShaderErrors: !0
        },
        this.autoClear = !0,
        this.autoClearColor = !0,
        this.autoClearDepth = !0,
        this.autoClearStencil = !0,
        this.sortObjects = !0,
        this.clippingPlanes = [],
        this.localClippingEnabled = !1,
        this.gammaFactor = 2,
        this.outputEncoding = rn,
        this.physicallyCorrectLights = !1,
        this.toneMapping = ae,
        this.toneMappingExposure = 1,
        this.maxMorphTargets = 8,
        this.maxMorphNormals = 4;
        var f = this
          , d = !1
          , m = null
          , g = 0
          , v = 0
          , y = null
          , b = null
          , x = -1
          , w = null
          , _ = null
          , S = new Kn
          , E = new Kn
          , M = null
          , T = t.width
          , A = t.height
          , P = 1
          , C = null
          , L = null
          , R = new Kn(0,0,T,A)
          , k = new Kn(0,0,T,A)
          , D = !1
          , I = new Oa
          , O = new Xa
          , F = !1
          , N = !1
          , B = new pr
          , z = new ir
          , G = {
            background: null,
            fog: null,
            environment: null,
            overrideMaterial: null,
            isScene: !0
        };
        function H() {
            return null === y ? P : 1
        }
        var V, j, U, W, q, X, Y, Z, $, J, K, Q, ee, te, ne, re, ie, oe, se, le = n;
        function ue(e, n) {
            for (var r = 0; r < e.length; r++) {
                var i = e[r]
                  , a = t.getContext(i, n);
                if (null !== a)
                    return a
            }
            return null
        }
        try {
            var ce = {
                alpha: r,
                depth: i,
                stencil: a,
                antialias: o,
                premultipliedAlpha: s,
                preserveDrawingBuffer: l,
                powerPreference: u,
                failIfMajorPerformanceCaveat: c
            };
            if (t.addEventListener("webglcontextlost", me, !1),
            t.addEventListener("webglcontextrestored", ge, !1),
            null === le) {
                var he = ["webgl2", "webgl", "experimental-webgl"];
                if (!0 === f.isWebGL1Renderer && he.shift(),
                null === (le = ue(he, ce)))
                    throw ue(he) ? new Error("Error creating WebGL context with your selected attributes.") : new Error("Error creating WebGL context.")
            }
            void 0 === le.getShaderPrecisionFormat && (le.getShaderPrecisionFormat = function() {
                return {
                    rangeMin: 1,
                    rangeMax: 1,
                    precision: 1
                }
            }
            )
        } catch (Te) {
            throw console.error("THREE.WebGLRenderer: " + Te.message),
            Te
        }
        function pe() {
            V = new Ya(le),
            !1 === (j = new qa(le,V,e)).isWebGL2 && (V.get("WEBGL_depth_texture"),
            V.get("OES_texture_float"),
            V.get("OES_texture_half_float"),
            V.get("OES_texture_half_float_linear"),
            V.get("OES_standard_derivatives"),
            V.get("OES_element_index_uint"),
            V.get("OES_vertex_array_object"),
            V.get("ANGLE_instanced_arrays")),
            V.get("OES_texture_float_linear"),
            oe = new Bs(le,V,j),
            (U = new Fs(le,V,j)).scissor(E.copy(k).multiplyScalar(P).floor()),
            U.viewport(S.copy(R).multiplyScalar(P).floor()),
            W = new Ja(le),
            q = new _s,
            X = new Ns(le,V,U,q,j,oe,W),
            Y = new Ba(le,j),
            se = new Ua(le,V,Y,j),
            Z = new Za(le,Y,W,se),
            $ = new to(le,Z,Y,W),
            ne = new eo(le),
            J = new ws(f,V,j,se),
            K = new js(q),
            Q = new Ts(q),
            ee = new ks,
            te = new ja(f,U,$,s),
            re = new Wa(le,V,W,j),
            ie = new $a(le,V,W,j),
            W.programs = J.programs,
            f.capabilities = j,
            f.extensions = V,
            f.properties = q,
            f.renderLists = Q,
            f.state = U,
            f.info = W
        }
        pe();
        var fe = new Vs(f,le);
        this.xr = fe;
        var de = new Os(f,$,j.maxTextureSize);
        function me(e) {
            e.preventDefault(),
            console.log("THREE.WebGLRenderer: Context Lost."),
            d = !0
        }
        function ge() {
            console.log("THREE.WebGLRenderer: Context Restored."),
            d = !1,
            pe()
        }
        function ve(e) {
            var t = e.target;
            t.removeEventListener("dispose", ve),
            function(e) {
                ye(e),
                q.remove(e)
            }(t)
        }
        function ye(e) {
            var t = q.get(e).program;
            void 0 !== t && J.releaseProgram(t)
        }
        this.shadowMap = de,
        this.getContext = function() {
            return le
        }
        ,
        this.getContextAttributes = function() {
            return le.getContextAttributes()
        }
        ,
        this.forceContextLoss = function() {
            var e = V.get("WEBGL_lose_context");
            e && e.loseContext()
        }
        ,
        this.forceContextRestore = function() {
            var e = V.get("WEBGL_lose_context");
            e && e.restoreContext()
        }
        ,
        this.getPixelRatio = function() {
            return P
        }
        ,
        this.setPixelRatio = function(e) {
            void 0 !== e && (P = e,
            this.setSize(T, A, !1))
        }
        ,
        this.getSize = function(e) {
            return void 0 === e && (console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),
            e = new Xn),
            e.set(T, A)
        }
        ,
        this.setSize = function(e, n, r) {
            fe.isPresenting ? console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.") : (T = e,
            A = n,
            t.width = Math.floor(e * P),
            t.height = Math.floor(n * P),
            !1 !== r && (t.style.width = e + "px",
            t.style.height = n + "px"),
            this.setViewport(0, 0, e, n))
        }
        ,
        this.getDrawingBufferSize = function(e) {
            return void 0 === e && (console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),
            e = new Xn),
            e.set(T * P, A * P).floor()
        }
        ,
        this.setDrawingBufferSize = function(e, n, r) {
            T = e,
            A = n,
            P = r,
            t.width = Math.floor(e * r),
            t.height = Math.floor(n * r),
            this.setViewport(0, 0, e, n)
        }
        ,
        this.getCurrentViewport = function(e) {
            return void 0 === e && (console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),
            e = new Kn),
            e.copy(S)
        }
        ,
        this.getViewport = function(e) {
            return e.copy(R)
        }
        ,
        this.setViewport = function(e, t, n, r) {
            e.isVector4 ? R.set(e.x, e.y, e.z, e.w) : R.set(e, t, n, r),
            U.viewport(S.copy(R).multiplyScalar(P).floor())
        }
        ,
        this.getScissor = function(e) {
            return e.copy(k)
        }
        ,
        this.setScissor = function(e, t, n, r) {
            e.isVector4 ? k.set(e.x, e.y, e.z, e.w) : k.set(e, t, n, r),
            U.scissor(E.copy(k).multiplyScalar(P).floor())
        }
        ,
        this.getScissorTest = function() {
            return D
        }
        ,
        this.setScissorTest = function(e) {
            U.setScissorTest(D = e)
        }
        ,
        this.setOpaqueSort = function(e) {
            C = e
        }
        ,
        this.setTransparentSort = function(e) {
            L = e
        }
        ,
        this.getClearColor = function() {
            return te.getClearColor()
        }
        ,
        this.setClearColor = function() {
            te.setClearColor.apply(te, arguments)
        }
        ,
        this.getClearAlpha = function() {
            return te.getClearAlpha()
        }
        ,
        this.setClearAlpha = function() {
            te.setClearAlpha.apply(te, arguments)
        }
        ,
        this.clear = function(e, t, n) {
            var r = 0;
            (void 0 === e || e) && (r |= 16384),
            (void 0 === t || t) && (r |= 256),
            (void 0 === n || n) && (r |= 1024),
            le.clear(r)
        }
        ,
        this.clearColor = function() {
            this.clear(!0, !1, !1)
        }
        ,
        this.clearDepth = function() {
            this.clear(!1, !0, !1)
        }
        ,
        this.clearStencil = function() {
            this.clear(!1, !1, !0)
        }
        ,
        this.dispose = function() {
            t.removeEventListener("webglcontextlost", me, !1),
            t.removeEventListener("webglcontextrestored", ge, !1),
            Q.dispose(),
            ee.dispose(),
            q.dispose(),
            $.dispose(),
            se.dispose(),
            fe.dispose(),
            xe.stop()
        }
        ,
        this.renderBufferImmediate = function(e, t) {
            se.initAttributes();
            var n = q.get(e);
            e.hasPositions && !n.position && (n.position = le.createBuffer()),
            e.hasNormals && !n.normal && (n.normal = le.createBuffer()),
            e.hasUvs && !n.uv && (n.uv = le.createBuffer()),
            e.hasColors && !n.color && (n.color = le.createBuffer());
            var r = t.getAttributes();
            e.hasPositions && (le.bindBuffer(34962, n.position),
            le.bufferData(34962, e.positionArray, 35048),
            se.enableAttribute(r.position),
            le.vertexAttribPointer(r.position, 3, 5126, !1, 0, 0)),
            e.hasNormals && (le.bindBuffer(34962, n.normal),
            le.bufferData(34962, e.normalArray, 35048),
            se.enableAttribute(r.normal),
            le.vertexAttribPointer(r.normal, 3, 5126, !1, 0, 0)),
            e.hasUvs && (le.bindBuffer(34962, n.uv),
            le.bufferData(34962, e.uvArray, 35048),
            se.enableAttribute(r.uv),
            le.vertexAttribPointer(r.uv, 2, 5126, !1, 0, 0)),
            e.hasColors && (le.bindBuffer(34962, n.color),
            le.bufferData(34962, e.colorArray, 35048),
            se.enableAttribute(r.color),
            le.vertexAttribPointer(r.color, 3, 5126, !1, 0, 0)),
            se.disableUnusedAttributes(),
            le.drawArrays(4, 0, e.count),
            e.count = 0
        }
        ,
        this.renderBufferDirect = function(e, t, n, r, i, a) {
            null === t && (t = G);
            var o = i.isMesh && i.matrixWorld.determinant() < 0
              , s = Me(e, t, r, i);
            U.setMaterial(r, o);
            var l = n.index
              , u = n.attributes.position;
            if (null === l) {
                if (void 0 === u || 0 === u.count)
                    return
            } else if (0 === l.count)
                return;
            var c, h = 1;
            !0 === r.wireframe && (l = Z.getWireframeAttribute(n),
            h = 2),
            (r.morphTargets || r.morphNormals) && ne.update(i, n, r, s),
            se.setup(i, r, s, n, l);
            var p = re;
            null !== l && (c = Y.get(l),
            (p = ie).setIndex(c));
            var f = null !== l ? l.count : u.count
              , d = n.drawRange.start * h
              , m = n.drawRange.count * h
              , g = null !== a ? a.start * h : 0
              , v = null !== a ? a.count * h : 1 / 0
              , y = Math.max(d, g)
              , b = Math.min(f, d + m, g + v) - 1
              , x = Math.max(0, b - y + 1);
            if (0 !== x) {
                if (i.isMesh)
                    !0 === r.wireframe ? (U.setLineWidth(r.wireframeLinewidth * H()),
                    p.setMode(1)) : p.setMode(4);
                else if (i.isLine) {
                    var w = r.linewidth;
                    void 0 === w && (w = 1),
                    U.setLineWidth(w * H()),
                    i.isLineSegments ? p.setMode(1) : i.isLineLoop ? p.setMode(2) : p.setMode(3)
                } else
                    i.isPoints ? p.setMode(0) : i.isSprite && p.setMode(4);
                if (i.isInstancedMesh)
                    p.renderInstances(y, x, i.count);
                else if (n.isInstancedBufferGeometry) {
                    var _ = Math.min(n.instanceCount, n._maxInstanceCount);
                    p.renderInstances(y, x, _)
                } else
                    p.render(y, x)
            }
        }
        ,
        this.compile = function(e, t) {
            (p = ee.get(e, t)).init(),
            e.traverse((function(e) {
                e.isLight && (p.pushLight(e),
                e.castShadow && p.pushShadow(e))
            }
            )),
            p.setupLights(t);
            var n = new WeakMap;
            e.traverse((function(t) {
                var r = t.material;
                if (r)
                    if (Array.isArray(r))
                        for (var i = 0; i < r.length; i++) {
                            var a = r[i];
                            !1 === n.has(a) && (Ee(a, e, t),
                            n.set(a))
                        }
                    else
                        !1 === n.has(r) && (Ee(r, e, t),
                        n.set(r))
            }
            ))
        }
        ;
        var be = null;
        var xe = new Na;
        function we(e, t, n, r) {
            if (!1 !== e.visible) {
                if (e.layers.test(t.layers))
                    if (e.isGroup)
                        n = e.renderOrder;
                    else if (e.isLOD)
                        !0 === e.autoUpdate && e.update(t);
                    else if (e.isLight)
                        p.pushLight(e),
                        e.castShadow && p.pushShadow(e);
                    else if (e.isSprite) {
                        if (!e.frustumCulled || I.intersectsSprite(e)) {
                            r && z.setFromMatrixPosition(e.matrixWorld).applyMatrix4(B);
                            var i = $.update(e)
                              , a = e.material;
                            a.visible && h.push(e, i, a, n, z.z, null)
                        }
                    } else if (e.isImmediateRenderObject)
                        r && z.setFromMatrixPosition(e.matrixWorld).applyMatrix4(B),
                        h.push(e, null, e.material, n, z.z, null);
                    else if ((e.isMesh || e.isLine || e.isPoints) && (e.isSkinnedMesh && e.skeleton.frame !== W.render.frame && (e.skeleton.update(),
                    e.skeleton.frame = W.render.frame),
                    !e.frustumCulled || I.intersectsObject(e))) {
                        r && z.setFromMatrixPosition(e.matrixWorld).applyMatrix4(B);
                        var o = $.update(e)
                          , s = e.material;
                        if (Array.isArray(s))
                            for (var l = o.groups, u = 0, c = l.length; u < c; u++) {
                                var f = l[u]
                                  , d = s[f.materialIndex];
                                d && d.visible && h.push(e, o, d, n, z.z, f)
                            }
                        else
                            s.visible && h.push(e, o, s, n, z.z, null)
                    }
                for (var m = e.children, g = 0, v = m.length; g < v; g++)
                    we(m[g], t, n, r)
            }
        }
        function _e(e, t, n) {
            for (var r = !0 === t.isScene ? t.overrideMaterial : null, i = 0, a = e.length; i < a; i++) {
                var o = e[i]
                  , s = o.object
                  , l = o.geometry
                  , u = null === r ? o.material : r
                  , c = o.group;
                if (n.isArrayCamera) {
                    _ = n;
                    for (var h = n.cameras, f = 0, d = h.length; f < d; f++) {
                        var m = h[f];
                        s.layers.test(m.layers) && (U.viewport(S.copy(m.viewport)),
                        p.setupLights(m),
                        Se(s, t, m, l, u, c))
                    }
                } else
                    _ = null,
                    Se(s, t, n, l, u, c)
            }
        }
        function Se(e, t, n, r, i, a) {
            if (e.onBeforeRender(f, t, n, r, i, a),
            p = ee.get(t, _ || n),
            e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse, e.matrixWorld),
            e.normalMatrix.getNormalMatrix(e.modelViewMatrix),
            e.isImmediateRenderObject) {
                var o = Me(n, t, i, e);
                U.setMaterial(i),
                se.reset(),
                function(e, t) {
                    e.render((function(e) {
                        f.renderBufferImmediate(e, t)
                    }
                    ))
                }(e, o)
            } else
                f.renderBufferDirect(n, t, r, i, e, a);
            e.onAfterRender(f, t, n, r, i, a),
            p = ee.get(t, _ || n)
        }
        function Ee(e, t, n) {
            !0 !== t.isScene && (t = G);
            var r = q.get(e)
              , i = p.state.lights
              , a = p.state.shadowsArray
              , o = i.state.version
              , s = J.getParameters(e, i.state, a, t, O.numPlanes, O.numIntersection, n)
              , l = J.getProgramCacheKey(s)
              , u = r.program
              , c = !0;
            if (void 0 === u)
                e.addEventListener("dispose", ve);
            else if (u.cacheKey !== l)
                ye(e);
            else if (r.lightsStateVersion !== o)
                r.lightsStateVersion = o,
                c = !1;
            else {
                if (void 0 !== s.shaderID)
                    return;
                c = !1
            }
            c && (s.uniforms = J.getUniforms(e, s),
            e.onBeforeCompile(s, f),
            u = J.acquireProgram(s, l),
            r.program = u,
            r.uniforms = s.uniforms,
            r.outputEncoding = s.outputEncoding);
            var h = u.getAttributes();
            if (e.morphTargets) {
                e.numSupportedMorphTargets = 0;
                for (var d = 0; d < f.maxMorphTargets; d++)
                    h["morphTarget" + d] >= 0 && e.numSupportedMorphTargets++
            }
            if (e.morphNormals) {
                e.numSupportedMorphNormals = 0;
                for (var m = 0; m < f.maxMorphNormals; m++)
                    h["morphNormal" + m] >= 0 && e.numSupportedMorphNormals++
            }
            var g = r.uniforms;
            (e.isShaderMaterial || e.isRawShaderMaterial) && !0 !== e.clipping || (r.numClippingPlanes = O.numPlanes,
            r.numIntersection = O.numIntersection,
            g.clippingPlanes = O.uniform),
            r.environment = e.isMeshStandardMaterial ? t.environment : null,
            r.fog = t.fog,
            r.needsLights = function(e) {
                return e.isMeshLambertMaterial || e.isMeshToonMaterial || e.isMeshPhongMaterial || e.isMeshStandardMaterial || e.isShadowMaterial || e.isShaderMaterial && !0 === e.lights
            }(e),
            r.lightsStateVersion = o,
            r.needsLights && (g.ambientLightColor.value = i.state.ambient,
            g.lightProbe.value = i.state.probe,
            g.directionalLights.value = i.state.directional,
            g.directionalLightShadows.value = i.state.directionalShadow,
            g.spotLights.value = i.state.spot,
            g.spotLightShadows.value = i.state.spotShadow,
            g.rectAreaLights.value = i.state.rectArea,
            g.pointLights.value = i.state.point,
            g.pointLightShadows.value = i.state.pointShadow,
            g.hemisphereLights.value = i.state.hemi,
            g.directionalShadowMap.value = i.state.directionalShadowMap,
            g.directionalShadowMatrix.value = i.state.directionalShadowMatrix,
            g.spotShadowMap.value = i.state.spotShadowMap,
            g.spotShadowMatrix.value = i.state.spotShadowMatrix,
            g.pointShadowMap.value = i.state.pointShadowMap,
            g.pointShadowMatrix.value = i.state.pointShadowMatrix);
            var v = r.program.getUniforms()
              , y = es.seqWithValue(v.seq, g);
            r.uniformsList = y
        }
        function Me(e, t, n, r) {
            !0 !== t.isScene && (t = G),
            X.resetTextureUnits();
            var i = t.fog
              , a = n.isMeshStandardMaterial ? t.environment : null
              , o = null === y ? f.outputEncoding : y.texture.encoding
              , s = q.get(n)
              , l = p.state.lights;
            if (!0 === F && (!0 === N || e !== w)) {
                var u = e === w && n.id === x;
                O.setState(n.clippingPlanes, n.clipIntersection, n.clipShadows, e, s, u)
            }
            n.version === s.__version ? void 0 === s.program || n.fog && s.fog !== i || s.environment !== a || s.needsLights && s.lightsStateVersion !== l.state.version ? Ee(n, t, r) : void 0 === s.numClippingPlanes || s.numClippingPlanes === O.numPlanes && s.numIntersection === O.numIntersection ? s.outputEncoding !== o && Ee(n, t, r) : Ee(n, t, r) : (Ee(n, t, r),
            s.__version = n.version);
            var c, h, d = !1, m = !1, g = !1, v = s.program, b = v.getUniforms(), _ = s.uniforms;
            if (U.useProgram(v.program) && (d = !0,
            m = !0,
            g = !0),
            n.id !== x && (x = n.id,
            m = !0),
            d || w !== e) {
                if (b.setValue(le, "projectionMatrix", e.projectionMatrix),
                j.logarithmicDepthBuffer && b.setValue(le, "logDepthBufFC", 2 / (Math.log(e.far + 1) / Math.LN2)),
                w !== e && (w = e,
                m = !0,
                g = !0),
                n.isShaderMaterial || n.isMeshPhongMaterial || n.isMeshToonMaterial || n.isMeshStandardMaterial || n.envMap) {
                    var S = b.map.cameraPosition;
                    void 0 !== S && S.setValue(le, z.setFromMatrixPosition(e.matrixWorld))
                }
                (n.isMeshPhongMaterial || n.isMeshToonMaterial || n.isMeshLambertMaterial || n.isMeshBasicMaterial || n.isMeshStandardMaterial || n.isShaderMaterial) && b.setValue(le, "isOrthographic", !0 === e.isOrthographicCamera),
                (n.isMeshPhongMaterial || n.isMeshToonMaterial || n.isMeshLambertMaterial || n.isMeshBasicMaterial || n.isMeshStandardMaterial || n.isShaderMaterial || n.isShadowMaterial || n.skinning) && b.setValue(le, "viewMatrix", e.matrixWorldInverse)
            }
            if (n.skinning) {
                b.setOptional(le, r, "bindMatrix"),
                b.setOptional(le, r, "bindMatrixInverse");
                var E = r.skeleton;
                if (E) {
                    var M = E.bones;
                    if (j.floatVertexTextures) {
                        if (void 0 === E.boneTexture) {
                            var T = Math.sqrt(4 * M.length);
                            T = qn.ceilPowerOfTwo(T),
                            T = Math.max(T, 4);
                            var C = new Float32Array(T * T * 4);
                            C.set(E.boneMatrices);
                            var L = new ka(C,T,T,We,Ne);
                            E.boneMatrices = C,
                            E.boneTexture = L,
                            E.boneTextureSize = T
                        }
                        b.setValue(le, "boneTexture", E.boneTexture, X),
                        b.setValue(le, "boneTextureSize", E.boneTextureSize)
                    } else
                        b.setOptional(le, E, "boneMatrices")
                }
            }
            return (m || s.receiveShadow !== r.receiveShadow) && (s.receiveShadow = r.receiveShadow,
            b.setValue(le, "receiveShadow", r.receiveShadow)),
            m && (b.setValue(le, "toneMappingExposure", f.toneMappingExposure),
            s.needsLights && (h = g,
            (c = _).ambientLightColor.needsUpdate = h,
            c.lightProbe.needsUpdate = h,
            c.directionalLights.needsUpdate = h,
            c.directionalLightShadows.needsUpdate = h,
            c.pointLights.needsUpdate = h,
            c.pointLightShadows.needsUpdate = h,
            c.spotLights.needsUpdate = h,
            c.spotLightShadows.needsUpdate = h,
            c.rectAreaLights.needsUpdate = h,
            c.hemisphereLights.needsUpdate = h),
            i && n.fog && K.refreshFogUniforms(_, i),
            K.refreshMaterialUniforms(_, n, a, P, A),
            void 0 !== _.ltc_1 && (_.ltc_1.value = Fa.LTC_1),
            void 0 !== _.ltc_2 && (_.ltc_2.value = Fa.LTC_2),
            es.upload(le, s.uniformsList, _, X)),
            n.isShaderMaterial && !0 === n.uniformsNeedUpdate && (es.upload(le, s.uniformsList, _, X),
            n.uniformsNeedUpdate = !1),
            n.isSpriteMaterial && b.setValue(le, "center", r.center),
            b.setValue(le, "modelViewMatrix", r.modelViewMatrix),
            b.setValue(le, "normalMatrix", r.normalMatrix),
            b.setValue(le, "modelMatrix", r.matrixWorld),
            v
        }
        xe.setAnimationLoop((function(e) {
            fe.isPresenting || be && be(e)
        }
        )),
        "undefined" !== typeof window && xe.setContext(window),
        this.setAnimationLoop = function(e) {
            be = e,
            fe.setAnimationLoop(e),
            null === e ? xe.stop() : xe.start()
        }
        ,
        this.render = function(e, t) {
            var n, r;
            if (void 0 !== arguments[2] && (console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),
            n = arguments[2]),
            void 0 !== arguments[3] && (console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),
            r = arguments[3]),
            void 0 === t || !0 === t.isCamera) {
                if (!0 !== d) {
                    se.resetDefaultState(),
                    x = -1,
                    w = null,
                    !0 === e.autoUpdate && e.updateMatrixWorld(),
                    null === t.parent && t.updateMatrixWorld(),
                    !0 === fe.enabled && !0 === fe.isPresenting && (t = fe.getCamera(t)),
                    !0 === e.isScene && e.onBeforeRender(f, e, t, n || y),
                    (p = ee.get(e, t)).init(),
                    B.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse),
                    I.setFromProjectionMatrix(B),
                    N = this.localClippingEnabled,
                    F = O.init(this.clippingPlanes, N, t),
                    (h = Q.get(e, t)).init(),
                    we(e, t, 0, f.sortObjects),
                    h.finish(),
                    !0 === f.sortObjects && h.sort(C, L),
                    !0 === F && O.beginShadows();
                    var i = p.state.shadowsArray;
                    de.render(i, e, t),
                    p.setupLights(t),
                    !0 === F && O.endShadows(),
                    !0 === this.info.autoReset && this.info.reset(),
                    void 0 !== n && this.setRenderTarget(n),
                    te.render(h, e, t, r);
                    var a = h.opaque
                      , o = h.transparent;
                    a.length > 0 && _e(a, e, t),
                    o.length > 0 && _e(o, e, t),
                    !0 === e.isScene && e.onAfterRender(f, e, t),
                    null !== y && (X.updateRenderTargetMipmap(y),
                    X.updateMultisampleRenderTarget(y)),
                    U.buffers.depth.setTest(!0),
                    U.buffers.depth.setMask(!0),
                    U.buffers.color.setMask(!0),
                    U.setPolygonOffset(!1),
                    h = null,
                    p = null
                }
            } else
                console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")
        }
        ,
        this.setFramebuffer = function(e) {
            m !== e && null === y && le.bindFramebuffer(36160, e),
            m = e
        }
        ,
        this.getActiveCubeFace = function() {
            return g
        }
        ,
        this.getActiveMipmapLevel = function() {
            return v
        }
        ,
        this.getRenderTarget = function() {
            return y
        }
        ,
        this.setRenderTarget = function(e, t, n) {
            y = e,
            g = t,
            v = n,
            e && void 0 === q.get(e).__webglFramebuffer && X.setupRenderTarget(e);
            var r = m
              , i = !1;
            if (e) {
                var a = q.get(e).__webglFramebuffer;
                e.isWebGLCubeRenderTarget ? (r = a[t || 0],
                i = !0) : r = e.isWebGLMultisampleRenderTarget ? q.get(e).__webglMultisampledFramebuffer : a,
                S.copy(e.viewport),
                E.copy(e.scissor),
                M = e.scissorTest
            } else
                S.copy(R).multiplyScalar(P).floor(),
                E.copy(k).multiplyScalar(P).floor(),
                M = D;
            if (b !== r && (le.bindFramebuffer(36160, r),
            b = r),
            U.viewport(S),
            U.scissor(E),
            U.setScissorTest(M),
            i) {
                var o = q.get(e.texture);
                le.framebufferTexture2D(36160, 36064, 34069 + (t || 0), o.__webglTexture, n || 0)
            }
        }
        ,
        this.readRenderTargetPixels = function(e, t, n, r, i, a, o) {
            if (e && e.isWebGLRenderTarget) {
                var s = q.get(e).__webglFramebuffer;
                if (e.isWebGLCubeRenderTarget && void 0 !== o && (s = s[o]),
                s) {
                    var l = !1;
                    s !== b && (le.bindFramebuffer(36160, s),
                    l = !0);
                    try {
                        var u = e.texture
                          , c = u.format
                          , h = u.type;
                        if (c !== We && oe.convert(c) !== le.getParameter(35739))
                            return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");
                        if (h !== Re && oe.convert(h) !== le.getParameter(35738) && (h !== Ne || !(j.isWebGL2 || V.get("OES_texture_float") || V.get("WEBGL_color_buffer_float"))) && (h !== Be || !(j.isWebGL2 ? V.get("EXT_color_buffer_float") : V.get("EXT_color_buffer_half_float"))))
                            return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");
                        36053 === le.checkFramebufferStatus(36160) ? t >= 0 && t <= e.width - r && n >= 0 && n <= e.height - i && le.readPixels(t, n, r, i, oe.convert(c), oe.convert(h), a) : console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")
                    } finally {
                        l && le.bindFramebuffer(36160, b)
                    }
                }
            } else
                console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")
        }
        ,
        this.copyFramebufferToTexture = function(e, t, n) {
            void 0 === n && (n = 0);
            var r = Math.pow(2, -n)
              , i = Math.floor(t.image.width * r)
              , a = Math.floor(t.image.height * r)
              , o = oe.convert(t.format);
            X.setTexture2D(t, 0),
            le.copyTexImage2D(3553, n, o, e.x, e.y, i, a, 0),
            U.unbindTexture()
        }
        ,
        this.copyTextureToTexture = function(e, t, n, r) {
            void 0 === r && (r = 0);
            var i = t.image.width
              , a = t.image.height
              , o = oe.convert(n.format)
              , s = oe.convert(n.type);
            X.setTexture2D(n, 0),
            le.pixelStorei(37440, n.flipY),
            le.pixelStorei(37441, n.premultiplyAlpha),
            le.pixelStorei(3317, n.unpackAlignment),
            t.isDataTexture ? le.texSubImage2D(3553, r, e.x, e.y, i, a, o, s, t.image.data) : t.isCompressedTexture ? le.compressedTexSubImage2D(3553, r, e.x, e.y, t.mipmaps[0].width, t.mipmaps[0].height, o, t.mipmaps[0].data) : le.texSubImage2D(3553, r, e.x, e.y, o, s, t.image),
            0 === r && n.generateMipmaps && le.generateMipmap(3553),
            U.unbindTexture()
        }
        ,
        this.initTexture = function(e) {
            X.setTexture2D(e, 0),
            U.unbindTexture()
        }
        ,
        "undefined" !== typeof __THREE_DEVTOOLS__ && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{
            detail: this
        }))
    }
    function Ws(e) {
        Us.call(this, e)
    }
    function qs(e, t) {
        this.name = "",
        this.color = new wi(e),
        this.density = void 0 !== t ? t : 25e-5
    }
    function Xs(e, t, n) {
        this.name = "",
        this.color = new wi(e),
        this.near = void 0 !== t ? t : 1,
        this.far = void 0 !== n ? n : 1e3
    }
    function Ys(e, t) {
        this.array = e,
        this.stride = t,
        this.count = void 0 !== e ? e.length / t : 0,
        this.usage = kn,
        this.updateRange = {
            offset: 0,
            count: -1
        },
        this.version = 0,
        this.uuid = qn.generateUUID()
    }
    zs.prototype = Object.assign(Object.create(Ca.prototype), {
        constructor: zs,
        isArrayCamera: !0
    }),
    Gs.prototype = Object.assign(Object.create(Lr.prototype), {
        constructor: Gs,
        isGroup: !0
    }),
    Object.assign(Hs.prototype, {
        constructor: Hs,
        getHandSpace: function() {
            if (null === this._hand && (this._hand = new Gs,
            this._hand.matrixAutoUpdate = !1,
            this._hand.visible = !1,
            this._hand.joints = [],
            this._hand.inputState = {
                pinching: !1
            },
            window.XRHand))
                for (var e = 0; e <= window.XRHand.LITTLE_PHALANX_TIP; e++) {
                    var t = new Gs;
                    t.matrixAutoUpdate = !1,
                    t.visible = !1,
                    this._hand.joints.push(t),
                    this._hand.add(t)
                }
            return this._hand
        },
        getTargetRaySpace: function() {
            return null === this._targetRay && (this._targetRay = new Gs,
            this._targetRay.matrixAutoUpdate = !1,
            this._targetRay.visible = !1),
            this._targetRay
        },
        getGripSpace: function() {
            return null === this._grip && (this._grip = new Gs,
            this._grip.matrixAutoUpdate = !1,
            this._grip.visible = !1),
            this._grip
        },
        dispatchEvent: function(e) {
            return null !== this._targetRay && this._targetRay.dispatchEvent(e),
            null !== this._grip && this._grip.dispatchEvent(e),
            null !== this._hand && this._hand.dispatchEvent(e),
            this
        },
        disconnect: function(e) {
            return this.dispatchEvent({
                type: "disconnected",
                data: e
            }),
            null !== this._targetRay && (this._targetRay.visible = !1),
            null !== this._grip && (this._grip.visible = !1),
            null !== this._hand && (this._hand.visible = !1),
            this
        },
        update: function(e, t, n) {
            var r = null
              , i = null
              , a = null
              , o = this._targetRay
              , s = this._grip
              , l = this._hand;
            if (e)
                if (e.hand) {
                    a = !0;
                    for (var u = 0; u <= window.XRHand.LITTLE_PHALANX_TIP; u++)
                        if (e.hand[u]) {
                            var c = t.getJointPose(e.hand[u], n)
                              , h = l.joints[u];
                            null !== c && (h.matrix.fromArray(c.transform.matrix),
                            h.matrix.decompose(h.position, h.rotation, h.scale),
                            h.jointRadius = c.radius),
                            h.visible = null !== c;
                            var p = l.joints[window.XRHand.INDEX_PHALANX_TIP]
                              , f = l.joints[window.XRHand.THUMB_PHALANX_TIP]
                              , d = p.position.distanceTo(f.position);
                            l.inputState.pinching && d > .025 ? (l.inputState.pinching = !1,
                            this.dispatchEvent({
                                type: "pinchend",
                                handedness: e.handedness,
                                target: this
                            })) : !l.inputState.pinching && d <= .015 && (l.inputState.pinching = !0,
                            this.dispatchEvent({
                                type: "pinchstart",
                                handedness: e.handedness,
                                target: this
                            }))
                        }
                } else
                    null !== o && null !== (r = t.getPose(e.targetRaySpace, n)) && (o.matrix.fromArray(r.transform.matrix),
                    o.matrix.decompose(o.position, o.rotation, o.scale)),
                    null !== s && e.gripSpace && null !== (i = t.getPose(e.gripSpace, n)) && (s.matrix.fromArray(i.transform.matrix),
                    s.matrix.decompose(s.position, s.rotation, s.scale));
            return null !== o && (o.visible = null !== r),
            null !== s && (s.visible = null !== i),
            null !== l && (l.visible = null !== a),
            this
        }
    }),
    Object.assign(Vs.prototype, Hn.prototype),
    Ws.prototype = Object.assign(Object.create(Us.prototype), {
        constructor: Ws,
        isWebGL1Renderer: !0
    }),
    Object.assign(qs.prototype, {
        isFogExp2: !0,
        clone: function() {
            return new qs(this.color,this.density)
        },
        toJSON: function() {
            return {
                type: "FogExp2",
                color: this.color.getHex(),
                density: this.density
            }
        }
    }),
    Object.assign(Xs.prototype, {
        isFog: !0,
        clone: function() {
            return new Xs(this.color,this.near,this.far)
        },
        toJSON: function() {
            return {
                type: "Fog",
                color: this.color.getHex(),
                near: this.near,
                far: this.far
            }
        }
    }),
    Object.defineProperty(Ys.prototype, "needsUpdate", {
        set: function(e) {
            !0 === e && this.version++
        }
    }),
    Object.assign(Ys.prototype, {
        isInterleavedBuffer: !0,
        onUploadCallback: function() {},
        setUsage: function(e) {
            return this.usage = e,
            this
        },
        copy: function(e) {
            return this.array = new e.array.constructor(e.array),
            this.count = e.count,
            this.stride = e.stride,
            this.usage = e.usage,
            this
        },
        copyAt: function(e, t, n) {
            e *= this.stride,
            n *= t.stride;
            for (var r = 0, i = this.stride; r < i; r++)
                this.array[e + r] = t.array[n + r];
            return this
        },
        set: function(e, t) {
            return void 0 === t && (t = 0),
            this.array.set(e, t),
            this
        },
        clone: function(e) {
            void 0 === e.arrayBuffers && (e.arrayBuffers = {}),
            void 0 === this.array.buffer._uuid && (this.array.buffer._uuid = qn.generateUUID()),
            void 0 === e.arrayBuffers[this.array.buffer._uuid] && (e.arrayBuffers[this.array.buffer._uuid] = this.array.slice(0).buffer);
            var t = new Ys(new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),this.stride);
            return t.setUsage(this.usage),
            t
        },
        onUpload: function(e) {
            return this.onUploadCallback = e,
            this
        },
        toJSON: function(e) {
            return void 0 === e.arrayBuffers && (e.arrayBuffers = {}),
            void 0 === this.array.buffer._uuid && (this.array.buffer._uuid = qn.generateUUID()),
            void 0 === e.arrayBuffers[this.array.buffer._uuid] && (e.arrayBuffers[this.array.buffer._uuid] = Array.prototype.slice.call(new Uint32Array(this.array.buffer))),
            {
                uuid: this.uuid,
                buffer: this.array.buffer._uuid,
                type: this.array.constructor.name,
                stride: this.stride
            }
        }
    });
    var Zs, $s = new ir;
    function Js(e, t, n, r) {
        this.name = "",
        this.data = e,
        this.itemSize = t,
        this.offset = n,
        this.normalized = !0 === r
    }
    function Ks(e) {
        Ai.call(this),
        this.type = "SpriteMaterial",
        this.color = new wi(16777215),
        this.map = null,
        this.alphaMap = null,
        this.rotation = 0,
        this.sizeAttenuation = !0,
        this.transparent = !0,
        this.setValues(e)
    }
    Object.defineProperties(Js.prototype, {
        count: {
            get: function() {
                return this.data.count
            }
        },
        array: {
            get: function() {
                return this.data.array
            }
        },
        needsUpdate: {
            set: function(e) {
                this.data.needsUpdate = e
            }
        }
    }),
    Object.assign(Js.prototype, {
        isInterleavedBufferAttribute: !0,
        applyMatrix4: function(e) {
            for (var t = 0, n = this.data.count; t < n; t++)
                $s.x = this.getX(t),
                $s.y = this.getY(t),
                $s.z = this.getZ(t),
                $s.applyMatrix4(e),
                this.setXYZ(t, $s.x, $s.y, $s.z);
            return this
        },
        setX: function(e, t) {
            return this.data.array[e * this.data.stride + this.offset] = t,
            this
        },
        setY: function(e, t) {
            return this.data.array[e * this.data.stride + this.offset + 1] = t,
            this
        },
        setZ: function(e, t) {
            return this.data.array[e * this.data.stride + this.offset + 2] = t,
            this
        },
        setW: function(e, t) {
            return this.data.array[e * this.data.stride + this.offset + 3] = t,
            this
        },
        getX: function(e) {
            return this.data.array[e * this.data.stride + this.offset]
        },
        getY: function(e) {
            return this.data.array[e * this.data.stride + this.offset + 1]
        },
        getZ: function(e) {
            return this.data.array[e * this.data.stride + this.offset + 2]
        },
        getW: function(e) {
            return this.data.array[e * this.data.stride + this.offset + 3]
        },
        setXY: function(e, t, n) {
            return e = e * this.data.stride + this.offset,
            this.data.array[e + 0] = t,
            this.data.array[e + 1] = n,
            this
        },
        setXYZ: function(e, t, n, r) {
            return e = e * this.data.stride + this.offset,
            this.data.array[e + 0] = t,
            this.data.array[e + 1] = n,
            this.data.array[e + 2] = r,
            this
        },
        setXYZW: function(e, t, n, r, i) {
            return e = e * this.data.stride + this.offset,
            this.data.array[e + 0] = t,
            this.data.array[e + 1] = n,
            this.data.array[e + 2] = r,
            this.data.array[e + 3] = i,
            this
        },
        clone: function(e) {
            if (void 0 === e) {
                console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");
                for (var t = [], n = 0; n < this.count; n++)
                    for (var r = n * this.data.stride + this.offset, i = 0; i < this.itemSize; i++)
                        t.push(this.data.array[r + i]);
                return new Ri(new this.array.constructor(t),this.itemSize,this.normalized)
            }
            return void 0 === e.interleavedBuffers && (e.interleavedBuffers = {}),
            void 0 === e.interleavedBuffers[this.data.uuid] && (e.interleavedBuffers[this.data.uuid] = this.data.clone(e)),
            new Js(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)
        },
        toJSON: function(e) {
            if (void 0 === e) {
                console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");
                for (var t = [], n = 0; n < this.count; n++)
                    for (var r = n * this.data.stride + this.offset, i = 0; i < this.itemSize; i++)
                        t.push(this.data.array[r + i]);
                return {
                    itemSize: this.itemSize,
                    type: this.array.constructor.name,
                    array: t,
                    normalized: this.normalized
                }
            }
            return void 0 === e.interleavedBuffers && (e.interleavedBuffers = {}),
            void 0 === e.interleavedBuffers[this.data.uuid] && (e.interleavedBuffers[this.data.uuid] = this.data.toJSON(e)),
            {
                isInterleavedBufferAttribute: !0,
                itemSize: this.itemSize,
                data: this.data.uuid,
                offset: this.offset,
                normalized: this.normalized
            }
        }
    }),
    Ks.prototype = Object.create(Ai.prototype),
    Ks.prototype.constructor = Ks,
    Ks.prototype.isSpriteMaterial = !0,
    Ks.prototype.copy = function(e) {
        return Ai.prototype.copy.call(this, e),
        this.color.copy(e.color),
        this.map = e.map,
        this.alphaMap = e.alphaMap,
        this.rotation = e.rotation,
        this.sizeAttenuation = e.sizeAttenuation,
        this
    }
    ;
    var Qs = new ir
      , el = new ir
      , tl = new ir
      , nl = new Xn
      , rl = new Xn
      , il = new pr
      , al = new ir
      , ol = new ir
      , sl = new ir
      , ll = new Xn
      , ul = new Xn
      , cl = new Xn;
    function hl(e) {
        if (Lr.call(this),
        this.type = "Sprite",
        void 0 === Zs) {
            Zs = new $i;
            var t = new Ys(new Float32Array([-.5, -.5, 0, 0, 0, .5, -.5, 0, 1, 0, .5, .5, 0, 1, 1, -.5, .5, 0, 0, 1]),5);
            Zs.setIndex([0, 1, 2, 0, 2, 3]),
            Zs.setAttribute("position", new Js(t,3,0,!1)),
            Zs.setAttribute("uv", new Js(t,2,3,!1))
        }
        this.geometry = Zs,
        this.material = void 0 !== e ? e : new Ks,
        this.center = new Xn(.5,.5)
    }
    function pl(e, t, n, r, i, a) {
        nl.subVectors(e, n).addScalar(.5).multiply(r),
        void 0 !== i ? (rl.x = a * nl.x - i * nl.y,
        rl.y = i * nl.x + a * nl.y) : rl.copy(nl),
        e.copy(t),
        e.x += rl.x,
        e.y += rl.y,
        e.applyMatrix4(il)
    }
    hl.prototype = Object.assign(Object.create(Lr.prototype), {
        constructor: hl,
        isSprite: !0,
        raycast: function(e, t) {
            null === e.camera && console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),
            el.setFromMatrixScale(this.matrixWorld),
            il.copy(e.camera.matrixWorld),
            this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse, this.matrixWorld),
            tl.setFromMatrixPosition(this.modelViewMatrix),
            e.camera.isPerspectiveCamera && !1 === this.material.sizeAttenuation && el.multiplyScalar(-tl.z);
            var n, r, i = this.material.rotation;
            0 !== i && (r = Math.cos(i),
            n = Math.sin(i));
            var a = this.center;
            pl(al.set(-.5, -.5, 0), tl, a, el, n, r),
            pl(ol.set(.5, -.5, 0), tl, a, el, n, r),
            pl(sl.set(.5, .5, 0), tl, a, el, n, r),
            ll.set(0, 0),
            ul.set(1, 0),
            cl.set(1, 1);
            var o = e.ray.intersectTriangle(al, ol, sl, !1, Qs);
            if (null !== o || (pl(ol.set(-.5, .5, 0), tl, a, el, n, r),
            ul.set(0, 1),
            null !== (o = e.ray.intersectTriangle(al, sl, ol, !1, Qs)))) {
                var s = e.ray.origin.distanceTo(Qs);
                s < e.near || s > e.far || t.push({
                    distance: s,
                    point: Qs.clone(),
                    uv: vi.getUV(Qs, al, ol, sl, ll, ul, cl, new Xn),
                    face: null,
                    object: this
                })
            }
        },
        copy: function(e) {
            return Lr.prototype.copy.call(this, e),
            void 0 !== e.center && this.center.copy(e.center),
            this.material = e.material,
            this
        }
    });
    var fl = new ir
      , dl = new ir;
    function ml() {
        Lr.call(this),
        this._currentLevel = 0,
        this.type = "LOD",
        Object.defineProperties(this, {
            levels: {
                enumerable: !0,
                value: []
            }
        }),
        this.autoUpdate = !0
    }
    function gl(e, t) {
        e && e.isGeometry && console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),
        da.call(this, e, t),
        this.type = "SkinnedMesh",
        this.bindMode = "attached",
        this.bindMatrix = new pr,
        this.bindMatrixInverse = new pr
    }
    ml.prototype = Object.assign(Object.create(Lr.prototype), {
        constructor: ml,
        isLOD: !0,
        copy: function(e) {
            Lr.prototype.copy.call(this, e, !1);
            for (var t = e.levels, n = 0, r = t.length; n < r; n++) {
                var i = t[n];
                this.addLevel(i.object.clone(), i.distance)
            }
            return this.autoUpdate = e.autoUpdate,
            this
        },
        addLevel: function(e, t) {
            void 0 === t && (t = 0),
            t = Math.abs(t);
            var n, r = this.levels;
            for (n = 0; n < r.length && !(t < r[n].distance); n++)
                ;
            return r.splice(n, 0, {
                distance: t,
                object: e
            }),
            this.add(e),
            this
        },
        getCurrentLevel: function() {
            return this._currentLevel
        },
        getObjectForDistance: function(e) {
            var t = this.levels;
            if (t.length > 0) {
                var n, r;
                for (n = 1,
                r = t.length; n < r && !(e < t[n].distance); n++)
                    ;
                return t[n - 1].object
            }
            return null
        },
        raycast: function(e, t) {
            if (this.levels.length > 0) {
                fl.setFromMatrixPosition(this.matrixWorld);
                var n = e.ray.origin.distanceTo(fl);
                this.getObjectForDistance(n).raycast(e, t)
            }
        },
        update: function(e) {
            var t = this.levels;
            if (t.length > 1) {
                fl.setFromMatrixPosition(e.matrixWorld),
                dl.setFromMatrixPosition(this.matrixWorld);
                var n, r, i = fl.distanceTo(dl) / e.zoom;
                for (t[0].object.visible = !0,
                n = 1,
                r = t.length; n < r && i >= t[n].distance; n++)
                    t[n - 1].object.visible = !1,
                    t[n].object.visible = !0;
                for (this._currentLevel = n - 1; n < r; n++)
                    t[n].object.visible = !1
            }
        },
        toJSON: function(e) {
            var t = Lr.prototype.toJSON.call(this, e);
            !1 === this.autoUpdate && (t.object.autoUpdate = !1),
            t.object.levels = [];
            for (var n = this.levels, r = 0, i = n.length; r < i; r++) {
                var a = n[r];
                t.object.levels.push({
                    object: a.object.uuid,
                    distance: a.distance
                })
            }
            return t
        }
    }),
    gl.prototype = Object.assign(Object.create(da.prototype), {
        constructor: gl,
        isSkinnedMesh: !0,
        copy: function(e) {
            return da.prototype.copy.call(this, e),
            this.bindMode = e.bindMode,
            this.bindMatrix.copy(e.bindMatrix),
            this.bindMatrixInverse.copy(e.bindMatrixInverse),
            this.skeleton = e.skeleton,
            this
        },
        bind: function(e, t) {
            this.skeleton = e,
            void 0 === t && (this.updateMatrixWorld(!0),
            this.skeleton.calculateInverses(),
            t = this.matrixWorld),
            this.bindMatrix.copy(t),
            this.bindMatrixInverse.getInverse(t)
        },
        pose: function() {
            this.skeleton.pose()
        },
        normalizeSkinWeights: function() {
            for (var e = new Kn, t = this.geometry.attributes.skinWeight, n = 0, r = t.count; n < r; n++) {
                e.x = t.getX(n),
                e.y = t.getY(n),
                e.z = t.getZ(n),
                e.w = t.getW(n);
                var i = 1 / e.manhattanLength();
                i !== 1 / 0 ? e.multiplyScalar(i) : e.set(1, 0, 0, 0),
                t.setXYZW(n, e.x, e.y, e.z, e.w)
            }
        },
        updateMatrixWorld: function(e) {
            da.prototype.updateMatrixWorld.call(this, e),
            "attached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.matrixWorld) : "detached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.bindMatrix) : console.warn("THREE.SkinnedMesh: Unrecognized bindMode: " + this.bindMode)
        },
        boneTransform: function() {
            var e = new ir
              , t = new Kn
              , n = new Kn
              , r = new ir
              , i = new pr;
            return function(a, o) {
                var s = this.skeleton
                  , l = this.geometry;
                t.fromBufferAttribute(l.attributes.skinIndex, a),
                n.fromBufferAttribute(l.attributes.skinWeight, a),
                e.fromBufferAttribute(l.attributes.position, a).applyMatrix4(this.bindMatrix),
                o.set(0, 0, 0);
                for (var u = 0; u < 4; u++) {
                    var c = n.getComponent(u);
                    if (0 !== c) {
                        var h = t.getComponent(u);
                        i.multiplyMatrices(s.bones[h].matrixWorld, s.boneInverses[h]),
                        o.addScaledVector(r.copy(e).applyMatrix4(i), c)
                    }
                }
                return o.applyMatrix4(this.bindMatrixInverse)
            }
        }()
    });
    var vl = new pr
      , yl = new pr;
    function bl(e, t) {
        if (e = e || [],
        this.bones = e.slice(0),
        this.boneMatrices = new Float32Array(16 * this.bones.length),
        this.frame = -1,
        void 0 === t)
            this.calculateInverses();
        else if (this.bones.length === t.length)
            this.boneInverses = t.slice(0);
        else {
            console.warn("THREE.Skeleton boneInverses is the wrong length."),
            this.boneInverses = [];
            for (var n = 0, r = this.bones.length; n < r; n++)
                this.boneInverses.push(new pr)
        }
    }
    function xl() {
        Lr.call(this),
        this.type = "Bone"
    }
    Object.assign(bl.prototype, {
        calculateInverses: function() {
            this.boneInverses = [];
            for (var e = 0, t = this.bones.length; e < t; e++) {
                var n = new pr;
                this.bones[e] && n.getInverse(this.bones[e].matrixWorld),
                this.boneInverses.push(n)
            }
        },
        pose: function() {
            for (var e = 0, t = this.bones.length; e < t; e++) {
                var n = this.bones[e];
                n && n.matrixWorld.getInverse(this.boneInverses[e])
            }
            for (var r = 0, i = this.bones.length; r < i; r++) {
                var a = this.bones[r];
                a && (a.parent && a.parent.isBone ? (a.matrix.getInverse(a.parent.matrixWorld),
                a.matrix.multiply(a.matrixWorld)) : a.matrix.copy(a.matrixWorld),
                a.matrix.decompose(a.position, a.quaternion, a.scale))
            }
        },
        update: function() {
            for (var e = this.bones, t = this.boneInverses, n = this.boneMatrices, r = this.boneTexture, i = 0, a = e.length; i < a; i++) {
                var o = e[i] ? e[i].matrixWorld : yl;
                vl.multiplyMatrices(o, t[i]),
                vl.toArray(n, 16 * i)
            }
            void 0 !== r && (r.needsUpdate = !0)
        },
        clone: function() {
            return new bl(this.bones,this.boneInverses)
        },
        getBoneByName: function(e) {
            for (var t = 0, n = this.bones.length; t < n; t++) {
                var r = this.bones[t];
                if (r.name === e)
                    return r
            }
        },
        dispose: function() {
            this.boneTexture && (this.boneTexture.dispose(),
            this.boneTexture = void 0)
        }
    }),
    xl.prototype = Object.assign(Object.create(Lr.prototype), {
        constructor: xl,
        isBone: !0
    });
    var wl = new pr
      , _l = new pr
      , Sl = []
      , El = new da;
    function Ml(e, t, n) {
        da.call(this, e, t),
        this.instanceMatrix = new Ri(new Float32Array(16 * n),16),
        this.count = n,
        this.frustumCulled = !1
    }
    function Tl(e) {
        Ai.call(this),
        this.type = "LineBasicMaterial",
        this.color = new wi(16777215),
        this.linewidth = 1,
        this.linecap = "round",
        this.linejoin = "round",
        this.morphTargets = !1,
        this.setValues(e)
    }
    Ml.prototype = Object.assign(Object.create(da.prototype), {
        constructor: Ml,
        isInstancedMesh: !0,
        copy: function(e) {
            return da.prototype.copy.call(this, e),
            this.instanceMatrix.copy(e.instanceMatrix),
            this.count = e.count,
            this
        },
        getMatrixAt: function(e, t) {
            t.fromArray(this.instanceMatrix.array, 16 * e)
        },
        raycast: function(e, t) {
            var n = this.matrixWorld
              , r = this.count;
            if (El.geometry = this.geometry,
            El.material = this.material,
            void 0 !== El.material)
                for (var i = 0; i < r; i++) {
                    this.getMatrixAt(i, wl),
                    _l.multiplyMatrices(n, wl),
                    El.matrixWorld = _l,
                    El.raycast(e, Sl);
                    for (var a = 0, o = Sl.length; a < o; a++) {
                        var s = Sl[a];
                        s.instanceId = i,
                        s.object = this,
                        t.push(s)
                    }
                    Sl.length = 0
                }
        },
        setMatrixAt: function(e, t) {
            t.toArray(this.instanceMatrix.array, 16 * e)
        },
        updateMorphTargets: function() {}
    }),
    Tl.prototype = Object.create(Ai.prototype),
    Tl.prototype.constructor = Tl,
    Tl.prototype.isLineBasicMaterial = !0,
    Tl.prototype.copy = function(e) {
        return Ai.prototype.copy.call(this, e),
        this.color.copy(e.color),
        this.linewidth = e.linewidth,
        this.linecap = e.linecap,
        this.linejoin = e.linejoin,
        this.morphTargets = e.morphTargets,
        this
    }
    ;
    var Al = new ir
      , Pl = new ir
      , Cl = new pr
      , Ll = new ni
      , Rl = new Yr;
    function kl(e, t, n) {
        1 === n && console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."),
        Lr.call(this),
        this.type = "Line",
        this.geometry = void 0 !== e ? e : new $i,
        this.material = void 0 !== t ? t : new Tl,
        this.updateMorphTargets()
    }
    kl.prototype = Object.assign(Object.create(Lr.prototype), {
        constructor: kl,
        isLine: !0,
        copy: function(e) {
            return Lr.prototype.copy.call(this, e),
            this.material = e.material,
            this.geometry = e.geometry,
            this
        },
        computeLineDistances: function() {
            var e = this.geometry;
            if (e.isBufferGeometry)
                if (null === e.index) {
                    for (var t = e.attributes.position, n = [0], r = 1, i = t.count; r < i; r++)
                        Al.fromBufferAttribute(t, r - 1),
                        Pl.fromBufferAttribute(t, r),
                        n[r] = n[r - 1],
                        n[r] += Al.distanceTo(Pl);
                    e.setAttribute("lineDistance", new zi(n,1))
                } else
                    console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
            else if (e.isGeometry) {
                var a = e.vertices
                  , o = e.lineDistances;
                o[0] = 0;
                for (var s = 1, l = a.length; s < l; s++)
                    o[s] = o[s - 1],
                    o[s] += a[s - 1].distanceTo(a[s])
            }
            return this
        },
        raycast: function(e, t) {
            var n = this.geometry
              , r = this.matrixWorld
              , i = e.params.Line.threshold;
            if (null === n.boundingSphere && n.computeBoundingSphere(),
            Rl.copy(n.boundingSphere),
            Rl.applyMatrix4(r),
            Rl.radius += i,
            !1 !== e.ray.intersectsSphere(Rl)) {
                Cl.getInverse(r),
                Ll.copy(e.ray).applyMatrix4(Cl);
                var a = i / ((this.scale.x + this.scale.y + this.scale.z) / 3)
                  , o = a * a
                  , s = new ir
                  , l = new ir
                  , u = new ir
                  , c = new ir
                  , h = this && this.isLineSegments ? 2 : 1;
                if (n.isBufferGeometry) {
                    var p = n.index
                      , f = n.attributes.position.array;
                    if (null !== p)
                        for (var d = p.array, m = 0, g = d.length - 1; m < g; m += h) {
                            var v = d[m]
                              , y = d[m + 1];
                            if (s.fromArray(f, 3 * v),
                            l.fromArray(f, 3 * y),
                            !(Ll.distanceSqToSegment(s, l, c, u) > o)) {
                                c.applyMatrix4(this.matrixWorld);
                                var b = e.ray.origin.distanceTo(c);
                                b < e.near || b > e.far || t.push({
                                    distance: b,
                                    point: u.clone().applyMatrix4(this.matrixWorld),
                                    index: m,
                                    face: null,
                                    faceIndex: null,
                                    object: this
                                })
                            }
                        }
                    else
                        for (var x = 0, w = f.length / 3 - 1; x < w; x += h) {
                            if (s.fromArray(f, 3 * x),
                            l.fromArray(f, 3 * x + 3),
                            !(Ll.distanceSqToSegment(s, l, c, u) > o)) {
                                c.applyMatrix4(this.matrixWorld);
                                var _ = e.ray.origin.distanceTo(c);
                                _ < e.near || _ > e.far || t.push({
                                    distance: _,
                                    point: u.clone().applyMatrix4(this.matrixWorld),
                                    index: x,
                                    face: null,
                                    faceIndex: null,
                                    object: this
                                })
                            }
                        }
                } else if (n.isGeometry)
                    for (var S = n.vertices, E = S.length, M = 0; M < E - 1; M += h) {
                        if (!(Ll.distanceSqToSegment(S[M], S[M + 1], c, u) > o)) {
                            c.applyMatrix4(this.matrixWorld);
                            var T = e.ray.origin.distanceTo(c);
                            T < e.near || T > e.far || t.push({
                                distance: T,
                                point: u.clone().applyMatrix4(this.matrixWorld),
                                index: M,
                                face: null,
                                faceIndex: null,
                                object: this
                            })
                        }
                    }
            }
        },
        updateMorphTargets: function() {
            var e = this.geometry;
            if (e.isBufferGeometry) {
                var t = e.morphAttributes
                  , n = Object.keys(t);
                if (n.length > 0) {
                    var r = t[n[0]];
                    if (void 0 !== r) {
                        this.morphTargetInfluences = [],
                        this.morphTargetDictionary = {};
                        for (var i = 0, a = r.length; i < a; i++) {
                            var o = r[i].name || String(i);
                            this.morphTargetInfluences.push(0),
                            this.morphTargetDictionary[o] = i
                        }
                    }
                }
            } else {
                var s = e.morphTargets;
                void 0 !== s && s.length > 0 && console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")
            }
        }
    });
    var Dl = new ir
      , Il = new ir;
    function Ol(e, t) {
        kl.call(this, e, t),
        this.type = "LineSegments"
    }
    function Fl(e, t) {
        kl.call(this, e, t),
        this.type = "LineLoop"
    }
    function Nl(e) {
        Ai.call(this),
        this.type = "PointsMaterial",
        this.color = new wi(16777215),
        this.map = null,
        this.alphaMap = null,
        this.size = 1,
        this.sizeAttenuation = !0,
        this.morphTargets = !1,
        this.setValues(e)
    }
    Ol.prototype = Object.assign(Object.create(kl.prototype), {
        constructor: Ol,
        isLineSegments: !0,
        computeLineDistances: function() {
            var e = this.geometry;
            if (e.isBufferGeometry)
                if (null === e.index) {
                    for (var t = e.attributes.position, n = [], r = 0, i = t.count; r < i; r += 2)
                        Dl.fromBufferAttribute(t, r),
                        Il.fromBufferAttribute(t, r + 1),
                        n[r] = 0 === r ? 0 : n[r - 1],
                        n[r + 1] = n[r] + Dl.distanceTo(Il);
                    e.setAttribute("lineDistance", new zi(n,1))
                } else
                    console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
            else if (e.isGeometry)
                for (var a = e.vertices, o = e.lineDistances, s = 0, l = a.length; s < l; s += 2)
                    Dl.copy(a[s]),
                    Il.copy(a[s + 1]),
                    o[s] = 0 === s ? 0 : o[s - 1],
                    o[s + 1] = o[s] + Dl.distanceTo(Il);
            return this
        }
    }),
    Fl.prototype = Object.assign(Object.create(kl.prototype), {
        constructor: Fl,
        isLineLoop: !0
    }),
    Nl.prototype = Object.create(Ai.prototype),
    Nl.prototype.constructor = Nl,
    Nl.prototype.isPointsMaterial = !0,
    Nl.prototype.copy = function(e) {
        return Ai.prototype.copy.call(this, e),
        this.color.copy(e.color),
        this.map = e.map,
        this.alphaMap = e.alphaMap,
        this.size = e.size,
        this.sizeAttenuation = e.sizeAttenuation,
        this.morphTargets = e.morphTargets,
        this
    }
    ;
    var Bl = new pr
      , zl = new ni
      , Gl = new Yr
      , Hl = new ir;
    function Vl(e, t) {
        Lr.call(this),
        this.type = "Points",
        this.geometry = void 0 !== e ? e : new $i,
        this.material = void 0 !== t ? t : new Nl,
        this.updateMorphTargets()
    }
    function jl(e, t, n, r, i, a, o) {
        var s = zl.distanceSqToPoint(e);
        if (s < n) {
            var l = new ir;
            zl.closestPointToPoint(e, l),
            l.applyMatrix4(r);
            var u = i.ray.origin.distanceTo(l);
            if (u < i.near || u > i.far)
                return;
            a.push({
                distance: u,
                distanceToRay: Math.sqrt(s),
                point: l,
                index: t,
                face: null,
                object: o
            })
        }
    }
    function Ul(e, t, n, r, i, a, o, s, l) {
        Jn.call(this, e, t, n, r, i, a, o, s, l),
        this.format = void 0 !== o ? o : Ue,
        this.minFilter = void 0 !== a ? a : Te,
        this.magFilter = void 0 !== i ? i : Te,
        this.generateMipmaps = !1;
        var u = this;
        "requestVideoFrameCallback"in e && e.requestVideoFrameCallback((function t() {
            u.needsUpdate = !0,
            e.requestVideoFrameCallback(t)
        }
        ))
    }
    function Wl(e, t, n, r, i, a, o, s, l, u, c, h) {
        Jn.call(this, null, a, o, s, l, u, r, i, c, h),
        this.image = {
            width: t,
            height: n
        },
        this.mipmaps = e,
        this.flipY = !1,
        this.generateMipmaps = !1
    }
    function ql(e, t, n, r, i, a, o, s, l) {
        Jn.call(this, e, t, n, r, i, a, o, s, l),
        this.needsUpdate = !0
    }
    function Xl(e, t, n, r, i, a, o, s, l, u) {
        if ((u = void 0 !== u ? u : Ze) !== Ze && u !== $e)
            throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");
        void 0 === n && u === Ze && (n = Ie),
        void 0 === n && u === $e && (n = Ve),
        Jn.call(this, null, r, i, a, o, s, u, n, l),
        this.image = {
            width: e,
            height: t
        },
        this.magFilter = void 0 !== o ? o : we,
        this.minFilter = void 0 !== s ? s : we,
        this.flipY = !1,
        this.generateMipmaps = !1
    }
    function Yl(e) {
        $i.call(this),
        this.type = "WireframeGeometry";
        var t = []
          , n = [0, 0]
          , r = {}
          , i = ["a", "b", "c"];
        if (e && e.isGeometry) {
            for (var a = e.faces, o = 0, s = a.length; o < s; o++)
                for (var l = a[o], u = 0; u < 3; u++) {
                    var c = l[i[u]]
                      , h = l[i[(u + 1) % 3]];
                    n[0] = Math.min(c, h),
                    n[1] = Math.max(c, h);
                    var p = n[0] + "," + n[1];
                    void 0 === r[p] && (r[p] = {
                        index1: n[0],
                        index2: n[1]
                    })
                }
            for (var f in r) {
                var d = r[f]
                  , m = e.vertices[d.index1];
                t.push(m.x, m.y, m.z),
                m = e.vertices[d.index2],
                t.push(m.x, m.y, m.z)
            }
        } else if (e && e.isBufferGeometry) {
            var g = new ir;
            if (null !== e.index) {
                var v = e.attributes.position
                  , y = e.index
                  , b = e.groups;
                0 === b.length && (b = [{
                    start: 0,
                    count: y.count,
                    materialIndex: 0
                }]);
                for (var x = 0, w = b.length; x < w; ++x)
                    for (var _ = b[x], S = _.start, E = S, M = S + _.count; E < M; E += 3)
                        for (var T = 0; T < 3; T++) {
                            var A = y.getX(E + T)
                              , P = y.getX(E + (T + 1) % 3);
                            n[0] = Math.min(A, P),
                            n[1] = Math.max(A, P);
                            var C = n[0] + "," + n[1];
                            void 0 === r[C] && (r[C] = {
                                index1: n[0],
                                index2: n[1]
                            })
                        }
                for (var L in r) {
                    var R = r[L];
                    g.fromBufferAttribute(v, R.index1),
                    t.push(g.x, g.y, g.z),
                    g.fromBufferAttribute(v, R.index2),
                    t.push(g.x, g.y, g.z)
                }
            } else
                for (var k = e.attributes.position, D = 0, I = k.count / 3; D < I; D++)
                    for (var O = 0; O < 3; O++) {
                        var F = 3 * D + O;
                        g.fromBufferAttribute(k, F),
                        t.push(g.x, g.y, g.z);
                        var N = 3 * D + (O + 1) % 3;
                        g.fromBufferAttribute(k, N),
                        t.push(g.x, g.y, g.z)
                    }
        }
        this.setAttribute("position", new zi(t,3))
    }
    function Zl(e, t, n) {
        wa.call(this),
        this.type = "ParametricGeometry",
        this.parameters = {
            func: e,
            slices: t,
            stacks: n
        },
        this.fromBufferGeometry(new $l(e,t,n)),
        this.mergeVertices()
    }
    function $l(e, t, n) {
        $i.call(this),
        this.type = "ParametricBufferGeometry",
        this.parameters = {
            func: e,
            slices: t,
            stacks: n
        };
        var r = []
          , i = []
          , a = []
          , o = []
          , s = 1e-5
          , l = new ir
          , u = new ir
          , c = new ir
          , h = new ir
          , p = new ir;
        e.length < 3 && console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");
        for (var f = t + 1, d = 0; d <= n; d++)
            for (var m = d / n, g = 0; g <= t; g++) {
                var v = g / t;
                e(v, m, u),
                i.push(u.x, u.y, u.z),
                v - s >= 0 ? (e(v - s, m, c),
                h.subVectors(u, c)) : (e(v + s, m, c),
                h.subVectors(c, u)),
                m - s >= 0 ? (e(v, m - s, c),
                p.subVectors(u, c)) : (e(v, m + s, c),
                p.subVectors(c, u)),
                l.crossVectors(h, p).normalize(),
                a.push(l.x, l.y, l.z),
                o.push(v, m)
            }
        for (var y = 0; y < n; y++)
            for (var b = 0; b < t; b++) {
                var x = y * f + b
                  , w = y * f + b + 1
                  , _ = (y + 1) * f + b + 1
                  , S = (y + 1) * f + b;
                r.push(x, w, S),
                r.push(w, _, S)
            }
        this.setIndex(r),
        this.setAttribute("position", new zi(i,3)),
        this.setAttribute("normal", new zi(a,3)),
        this.setAttribute("uv", new zi(o,2))
    }
    function Jl(e, t, n, r) {
        wa.call(this),
        this.type = "PolyhedronGeometry",
        this.parameters = {
            vertices: e,
            indices: t,
            radius: n,
            detail: r
        },
        this.fromBufferGeometry(new Kl(e,t,n,r)),
        this.mergeVertices()
    }
    function Kl(e, t, n, r) {
        $i.call(this),
        this.type = "PolyhedronBufferGeometry",
        this.parameters = {
            vertices: e,
            indices: t,
            radius: n,
            detail: r
        },
        n = n || 1;
        var i = []
          , a = [];
        function o(e, t, n, r) {
            for (var i = Math.pow(2, r), a = [], o = 0; o <= i; o++) {
                a[o] = [];
                for (var l = e.clone().lerp(n, o / i), u = t.clone().lerp(n, o / i), c = i - o, h = 0; h <= c; h++)
                    a[o][h] = 0 === h && o === i ? l : l.clone().lerp(u, h / c)
            }
            for (var p = 0; p < i; p++)
                for (var f = 0; f < 2 * (i - p) - 1; f++) {
                    var d = Math.floor(f / 2);
                    f % 2 === 0 ? (s(a[p][d + 1]),
                    s(a[p + 1][d]),
                    s(a[p][d])) : (s(a[p][d + 1]),
                    s(a[p + 1][d + 1]),
                    s(a[p + 1][d]))
                }
        }
        function s(e) {
            i.push(e.x, e.y, e.z)
        }
        function l(t, n) {
            var r = 3 * t;
            n.x = e[r + 0],
            n.y = e[r + 1],
            n.z = e[r + 2]
        }
        function u(e, t, n, r) {
            r < 0 && 1 === e.x && (a[t] = e.x - 1),
            0 === n.x && 0 === n.z && (a[t] = r / 2 / Math.PI + .5)
        }
        function c(e) {
            return Math.atan2(e.z, -e.x)
        }
        !function(e) {
            for (var n = new ir, r = new ir, i = new ir, a = 0; a < t.length; a += 3)
                l(t[a + 0], n),
                l(t[a + 1], r),
                l(t[a + 2], i),
                o(n, r, i, e)
        }(r = r || 0),
        function(e) {
            for (var t = new ir, n = 0; n < i.length; n += 3)
                t.x = i[n + 0],
                t.y = i[n + 1],
                t.z = i[n + 2],
                t.normalize().multiplyScalar(e),
                i[n + 0] = t.x,
                i[n + 1] = t.y,
                i[n + 2] = t.z
        }(n),
        function() {
            for (var e = new ir, t = 0; t < i.length; t += 3) {
                e.x = i[t + 0],
                e.y = i[t + 1],
                e.z = i[t + 2];
                var n = c(e) / 2 / Math.PI + .5
                  , r = (o = e,
                Math.atan2(-o.y, Math.sqrt(o.x * o.x + o.z * o.z)) / Math.PI + .5);
                a.push(n, 1 - r)
            }
            var o;
            (function() {
                for (var e = new ir, t = new ir, n = new ir, r = new ir, o = new Xn, s = new Xn, l = new Xn, h = 0, p = 0; h < i.length; h += 9,
                p += 6) {
                    e.set(i[h + 0], i[h + 1], i[h + 2]),
                    t.set(i[h + 3], i[h + 4], i[h + 5]),
                    n.set(i[h + 6], i[h + 7], i[h + 8]),
                    o.set(a[p + 0], a[p + 1]),
                    s.set(a[p + 2], a[p + 3]),
                    l.set(a[p + 4], a[p + 5]),
                    r.copy(e).add(t).add(n).divideScalar(3);
                    var f = c(r);
                    u(o, p + 0, e, f),
                    u(s, p + 2, t, f),
                    u(l, p + 4, n, f)
                }
            }
            )(),
            function() {
                for (var e = 0; e < a.length; e += 6) {
                    var t = a[e + 0]
                      , n = a[e + 2]
                      , r = a[e + 4]
                      , i = Math.max(t, n, r)
                      , o = Math.min(t, n, r);
                    i > .9 && o < .1 && (t < .2 && (a[e + 0] += 1),
                    n < .2 && (a[e + 2] += 1),
                    r < .2 && (a[e + 4] += 1))
                }
            }()
        }(),
        this.setAttribute("position", new zi(i,3)),
        this.setAttribute("normal", new zi(i.slice(),3)),
        this.setAttribute("uv", new zi(a,2)),
        0 === r ? this.computeVertexNormals() : this.normalizeNormals()
    }
    function Ql(e, t) {
        wa.call(this),
        this.type = "TetrahedronGeometry",
        this.parameters = {
            radius: e,
            detail: t
        },
        this.fromBufferGeometry(new eu(e,t)),
        this.mergeVertices()
    }
    function eu(e, t) {
        Kl.call(this, [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1], [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1], e, t),
        this.type = "TetrahedronBufferGeometry",
        this.parameters = {
            radius: e,
            detail: t
        }
    }
    function tu(e, t) {
        wa.call(this),
        this.type = "OctahedronGeometry",
        this.parameters = {
            radius: e,
            detail: t
        },
        this.fromBufferGeometry(new nu(e,t)),
        this.mergeVertices()
    }
    function nu(e, t) {
        Kl.call(this, [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1], [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2], e, t),
        this.type = "OctahedronBufferGeometry",
        this.parameters = {
            radius: e,
            detail: t
        }
    }
    function ru(e, t) {
        wa.call(this),
        this.type = "IcosahedronGeometry",
        this.parameters = {
            radius: e,
            detail: t
        },
        this.fromBufferGeometry(new iu(e,t)),
        this.mergeVertices()
    }
    function iu(e, t) {
        var n = (1 + Math.sqrt(5)) / 2
          , r = [-1, n, 0, 1, n, 0, -1, -n, 0, 1, -n, 0, 0, -1, n, 0, 1, n, 0, -1, -n, 0, 1, -n, n, 0, -1, n, 0, 1, -n, 0, -1, -n, 0, 1];
        Kl.call(this, r, [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1], e, t),
        this.type = "IcosahedronBufferGeometry",
        this.parameters = {
            radius: e,
            detail: t
        }
    }
    function au(e, t) {
        wa.call(this),
        this.type = "DodecahedronGeometry",
        this.parameters = {
            radius: e,
            detail: t
        },
        this.fromBufferGeometry(new ou(e,t)),
        this.mergeVertices()
    }
    function ou(e, t) {
        var n = (1 + Math.sqrt(5)) / 2
          , r = 1 / n
          , i = [-1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 0, -r, -n, 0, -r, n, 0, r, -n, 0, r, n, -r, -n, 0, -r, n, 0, r, -n, 0, r, n, 0, -n, 0, -r, n, 0, -r, -n, 0, r, n, 0, r];
        Kl.call(this, i, [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9], e, t),
        this.type = "DodecahedronBufferGeometry",
        this.parameters = {
            radius: e,
            detail: t
        }
    }
    function su(e, t, n, r, i, a) {
        wa.call(this),
        this.type = "TubeGeometry",
        this.parameters = {
            path: e,
            tubularSegments: t,
            radius: n,
            radialSegments: r,
            closed: i
        },
        void 0 !== a && console.warn("THREE.TubeGeometry: taper has been removed.");
        var o = new lu(e,t,n,r,i);
        this.tangents = o.tangents,
        this.normals = o.normals,
        this.binormals = o.binormals,
        this.fromBufferGeometry(o),
        this.mergeVertices()
    }
    function lu(e, t, n, r, i) {
        $i.call(this),
        this.type = "TubeBufferGeometry",
        this.parameters = {
            path: e,
            tubularSegments: t,
            radius: n,
            radialSegments: r,
            closed: i
        },
        t = t || 64,
        n = n || 1,
        r = r || 8,
        i = i || !1;
        var a = e.computeFrenetFrames(t, i);
        this.tangents = a.tangents,
        this.normals = a.normals,
        this.binormals = a.binormals;
        var o = new ir
          , s = new ir
          , l = new Xn
          , u = new ir
          , c = []
          , h = []
          , p = []
          , f = [];
        function d(i) {
            u = e.getPointAt(i / t, u);
            for (var l = a.normals[i], p = a.binormals[i], f = 0; f <= r; f++) {
                var d = f / r * Math.PI * 2
                  , m = Math.sin(d)
                  , g = -Math.cos(d);
                s.x = g * l.x + m * p.x,
                s.y = g * l.y + m * p.y,
                s.z = g * l.z + m * p.z,
                s.normalize(),
                h.push(s.x, s.y, s.z),
                o.x = u.x + n * s.x,
                o.y = u.y + n * s.y,
                o.z = u.z + n * s.z,
                c.push(o.x, o.y, o.z)
            }
        }
        !function() {
            for (var e = 0; e < t; e++)
                d(e);
            d(!1 === i ? t : 0),
            function() {
                for (var e = 0; e <= t; e++)
                    for (var n = 0; n <= r; n++)
                        l.x = e / t,
                        l.y = n / r,
                        p.push(l.x, l.y)
            }(),
            function() {
                for (var e = 1; e <= t; e++)
                    for (var n = 1; n <= r; n++) {
                        var i = (r + 1) * (e - 1) + (n - 1)
                          , a = (r + 1) * e + (n - 1)
                          , o = (r + 1) * e + n
                          , s = (r + 1) * (e - 1) + n;
                        f.push(i, a, s),
                        f.push(a, o, s)
                    }
            }()
        }(),
        this.setIndex(f),
        this.setAttribute("position", new zi(c,3)),
        this.setAttribute("normal", new zi(h,3)),
        this.setAttribute("uv", new zi(p,2))
    }
    function uu(e, t, n, r, i, a, o) {
        wa.call(this),
        this.type = "TorusKnotGeometry",
        this.parameters = {
            radius: e,
            tube: t,
            tubularSegments: n,
            radialSegments: r,
            p: i,
            q: a
        },
        void 0 !== o && console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),
        this.fromBufferGeometry(new cu(e,t,n,r,i,a)),
        this.mergeVertices()
    }
    function cu(e, t, n, r, i, a) {
        $i.call(this),
        this.type = "TorusKnotBufferGeometry",
        this.parameters = {
            radius: e,
            tube: t,
            tubularSegments: n,
            radialSegments: r,
            p: i,
            q: a
        },
        e = e || 1,
        t = t || .4,
        n = Math.floor(n) || 64,
        r = Math.floor(r) || 8,
        i = i || 2,
        a = a || 3;
        for (var o = [], s = [], l = [], u = [], c = new ir, h = new ir, p = new ir, f = new ir, d = new ir, m = new ir, g = new ir, v = 0; v <= n; ++v) {
            var y = v / n * i * Math.PI * 2;
            C(y, i, a, e, p),
            C(y + .01, i, a, e, f),
            m.subVectors(f, p),
            g.addVectors(f, p),
            d.crossVectors(m, g),
            g.crossVectors(d, m),
            d.normalize(),
            g.normalize();
            for (var b = 0; b <= r; ++b) {
                var x = b / r * Math.PI * 2
                  , w = -t * Math.cos(x)
                  , _ = t * Math.sin(x);
                c.x = p.x + (w * g.x + _ * d.x),
                c.y = p.y + (w * g.y + _ * d.y),
                c.z = p.z + (w * g.z + _ * d.z),
                s.push(c.x, c.y, c.z),
                h.subVectors(c, p).normalize(),
                l.push(h.x, h.y, h.z),
                u.push(v / n),
                u.push(b / r)
            }
        }
        for (var S = 1; S <= n; S++)
            for (var E = 1; E <= r; E++) {
                var M = (r + 1) * (S - 1) + (E - 1)
                  , T = (r + 1) * S + (E - 1)
                  , A = (r + 1) * S + E
                  , P = (r + 1) * (S - 1) + E;
                o.push(M, T, P),
                o.push(T, A, P)
            }
        function C(e, t, n, r, i) {
            var a = Math.cos(e)
              , o = Math.sin(e)
              , s = n / t * e
              , l = Math.cos(s);
            i.x = r * (2 + l) * .5 * a,
            i.y = r * (2 + l) * o * .5,
            i.z = r * Math.sin(s) * .5
        }
        this.setIndex(o),
        this.setAttribute("position", new zi(s,3)),
        this.setAttribute("normal", new zi(l,3)),
        this.setAttribute("uv", new zi(u,2))
    }
    function hu(e, t, n, r, i) {
        wa.call(this),
        this.type = "TorusGeometry",
        this.parameters = {
            radius: e,
            tube: t,
            radialSegments: n,
            tubularSegments: r,
            arc: i
        },
        this.fromBufferGeometry(new pu(e,t,n,r,i)),
        this.mergeVertices()
    }
    function pu(e, t, n, r, i) {
        $i.call(this),
        this.type = "TorusBufferGeometry",
        this.parameters = {
            radius: e,
            tube: t,
            radialSegments: n,
            tubularSegments: r,
            arc: i
        },
        e = e || 1,
        t = t || .4,
        n = Math.floor(n) || 8,
        r = Math.floor(r) || 6,
        i = i || 2 * Math.PI;
        for (var a = [], o = [], s = [], l = [], u = new ir, c = new ir, h = new ir, p = 0; p <= n; p++)
            for (var f = 0; f <= r; f++) {
                var d = f / r * i
                  , m = p / n * Math.PI * 2;
                c.x = (e + t * Math.cos(m)) * Math.cos(d),
                c.y = (e + t * Math.cos(m)) * Math.sin(d),
                c.z = t * Math.sin(m),
                o.push(c.x, c.y, c.z),
                u.x = e * Math.cos(d),
                u.y = e * Math.sin(d),
                h.subVectors(c, u).normalize(),
                s.push(h.x, h.y, h.z),
                l.push(f / r),
                l.push(p / n)
            }
        for (var g = 1; g <= n; g++)
            for (var v = 1; v <= r; v++) {
                var y = (r + 1) * g + v - 1
                  , b = (r + 1) * (g - 1) + v - 1
                  , x = (r + 1) * (g - 1) + v
                  , w = (r + 1) * g + v;
                a.push(y, b, w),
                a.push(b, x, w)
            }
        this.setIndex(a),
        this.setAttribute("position", new zi(o,3)),
        this.setAttribute("normal", new zi(s,3)),
        this.setAttribute("uv", new zi(l,2))
    }
    Vl.prototype = Object.assign(Object.create(Lr.prototype), {
        constructor: Vl,
        isPoints: !0,
        copy: function(e) {
            return Lr.prototype.copy.call(this, e),
            this.material = e.material,
            this.geometry = e.geometry,
            this
        },
        raycast: function(e, t) {
            var n = this.geometry
              , r = this.matrixWorld
              , i = e.params.Points.threshold;
            if (null === n.boundingSphere && n.computeBoundingSphere(),
            Gl.copy(n.boundingSphere),
            Gl.applyMatrix4(r),
            Gl.radius += i,
            !1 !== e.ray.intersectsSphere(Gl)) {
                Bl.getInverse(r),
                zl.copy(e.ray).applyMatrix4(Bl);
                var a = i / ((this.scale.x + this.scale.y + this.scale.z) / 3)
                  , o = a * a;
                if (n.isBufferGeometry) {
                    var s = n.index
                      , l = n.attributes.position.array;
                    if (null !== s)
                        for (var u = s.array, c = 0, h = u.length; c < h; c++) {
                            var p = u[c];
                            Hl.fromArray(l, 3 * p),
                            jl(Hl, p, o, r, e, t, this)
                        }
                    else
                        for (var f = 0, d = l.length / 3; f < d; f++)
                            Hl.fromArray(l, 3 * f),
                            jl(Hl, f, o, r, e, t, this)
                } else
                    for (var m = n.vertices, g = 0, v = m.length; g < v; g++)
                        jl(m[g], g, o, r, e, t, this)
            }
        },
        updateMorphTargets: function() {
            var e = this.geometry;
            if (e.isBufferGeometry) {
                var t = e.morphAttributes
                  , n = Object.keys(t);
                if (n.length > 0) {
                    var r = t[n[0]];
                    if (void 0 !== r) {
                        this.morphTargetInfluences = [],
                        this.morphTargetDictionary = {};
                        for (var i = 0, a = r.length; i < a; i++) {
                            var o = r[i].name || String(i);
                            this.morphTargetInfluences.push(0),
                            this.morphTargetDictionary[o] = i
                        }
                    }
                }
            } else {
                var s = e.morphTargets;
                void 0 !== s && s.length > 0 && console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")
            }
        }
    }),
    Ul.prototype = Object.assign(Object.create(Jn.prototype), {
        constructor: Ul,
        isVideoTexture: !0,
        update: function() {
            var e = this.image;
            !1 === "requestVideoFrameCallback"in e && e.readyState >= e.HAVE_CURRENT_DATA && (this.needsUpdate = !0)
        }
    }),
    Wl.prototype = Object.create(Jn.prototype),
    Wl.prototype.constructor = Wl,
    Wl.prototype.isCompressedTexture = !0,
    ql.prototype = Object.create(Jn.prototype),
    ql.prototype.constructor = ql,
    ql.prototype.isCanvasTexture = !0,
    Xl.prototype = Object.create(Jn.prototype),
    Xl.prototype.constructor = Xl,
    Xl.prototype.isDepthTexture = !0,
    Yl.prototype = Object.create($i.prototype),
    Yl.prototype.constructor = Yl,
    Zl.prototype = Object.create(wa.prototype),
    Zl.prototype.constructor = Zl,
    $l.prototype = Object.create($i.prototype),
    $l.prototype.constructor = $l,
    Jl.prototype = Object.create(wa.prototype),
    Jl.prototype.constructor = Jl,
    Kl.prototype = Object.create($i.prototype),
    Kl.prototype.constructor = Kl,
    Ql.prototype = Object.create(wa.prototype),
    Ql.prototype.constructor = Ql,
    eu.prototype = Object.create(Kl.prototype),
    eu.prototype.constructor = eu,
    tu.prototype = Object.create(wa.prototype),
    tu.prototype.constructor = tu,
    nu.prototype = Object.create(Kl.prototype),
    nu.prototype.constructor = nu,
    ru.prototype = Object.create(wa.prototype),
    ru.prototype.constructor = ru,
    iu.prototype = Object.create(Kl.prototype),
    iu.prototype.constructor = iu,
    au.prototype = Object.create(wa.prototype),
    au.prototype.constructor = au,
    ou.prototype = Object.create(Kl.prototype),
    ou.prototype.constructor = ou,
    su.prototype = Object.create(wa.prototype),
    su.prototype.constructor = su,
    lu.prototype = Object.create($i.prototype),
    lu.prototype.constructor = lu,
    lu.prototype.toJSON = function() {
        var e = $i.prototype.toJSON.call(this);
        return e.path = this.parameters.path.toJSON(),
        e
    }
    ,
    uu.prototype = Object.create(wa.prototype),
    uu.prototype.constructor = uu,
    cu.prototype = Object.create($i.prototype),
    cu.prototype.constructor = cu,
    hu.prototype = Object.create(wa.prototype),
    hu.prototype.constructor = hu,
    pu.prototype = Object.create($i.prototype),
    pu.prototype.constructor = pu;
    var fu = function(e, t, n) {
        n = n || 2;
        var r, i, a, o, s, l, u, c = t && t.length, h = c ? t[0] * n : e.length, p = du(e, 0, h, n, !0), f = [];
        if (!p || p.next === p.prev)
            return f;
        if (c && (p = function(e, t, n, r) {
            var i, a, o, s, l, u = [];
            for (i = 0,
            a = t.length; i < a; i++)
                o = t[i] * r,
                s = i < a - 1 ? t[i + 1] * r : e.length,
                (l = du(e, o, s, r, !1)) === l.next && (l.steiner = !0),
                u.push(Mu(l));
            for (u.sort(wu),
            i = 0; i < u.length; i++)
                _u(u[i], n),
                n = mu(n, n.next);
            return n
        }(e, t, p, n)),
        e.length > 80 * n) {
            r = a = e[0],
            i = o = e[1];
            for (var d = n; d < h; d += n)
                (s = e[d]) < r && (r = s),
                (l = e[d + 1]) < i && (i = l),
                s > a && (a = s),
                l > o && (o = l);
            u = 0 !== (u = Math.max(a - r, o - i)) ? 1 / u : 0
        }
        return gu(p, f, n, r, i, u),
        f
    };
    function du(e, t, n, r, i) {
        var a, o;
        if (i === function(e, t, n, r) {
            for (var i = 0, a = t, o = n - r; a < n; a += r)
                i += (e[o] - e[a]) * (e[a + 1] + e[o + 1]),
                o = a;
            return i
        }(e, t, n, r) > 0)
            for (a = t; a < n; a += r)
                o = Ou(a, e[a], e[a + 1], o);
        else
            for (a = n - r; a >= t; a -= r)
                o = Ou(a, e[a], e[a + 1], o);
        return o && Cu(o, o.next) && (Fu(o),
        o = o.next),
        o
    }
    function mu(e, t) {
        if (!e)
            return e;
        t || (t = e);
        var n, r = e;
        do {
            if (n = !1,
            r.steiner || !Cu(r, r.next) && 0 !== Pu(r.prev, r, r.next))
                r = r.next;
            else {
                if (Fu(r),
                (r = t = r.prev) === r.next)
                    break;
                n = !0
            }
        } while (n || r !== t);
        return t
    }
    function gu(e, t, n, r, i, a, o) {
        if (e) {
            !o && a && function(e, t, n, r) {
                var i = e;
                do {
                    null === i.z && (i.z = Eu(i.x, i.y, t, n, r)),
                    i.prevZ = i.prev,
                    i.nextZ = i.next,
                    i = i.next
                } while (i !== e);
                i.prevZ.nextZ = null,
                i.prevZ = null,
                function(e) {
                    var t, n, r, i, a, o, s, l, u = 1;
                    do {
                        for (n = e,
                        e = null,
                        a = null,
                        o = 0; n; ) {
                            for (o++,
                            r = n,
                            s = 0,
                            t = 0; t < u && (s++,
                            r = r.nextZ); t++)
                                ;
                            for (l = u; s > 0 || l > 0 && r; )
                                0 !== s && (0 === l || !r || n.z <= r.z) ? (i = n,
                                n = n.nextZ,
                                s--) : (i = r,
                                r = r.nextZ,
                                l--),
                                a ? a.nextZ = i : e = i,
                                i.prevZ = a,
                                a = i;
                            n = r
                        }
                        a.nextZ = null,
                        u *= 2
                    } while (o > 1)
                }(i)
            }(e, r, i, a);
            for (var s, l, u = e; e.prev !== e.next; )
                if (s = e.prev,
                l = e.next,
                a ? yu(e, r, i, a) : vu(e))
                    t.push(s.i / n),
                    t.push(e.i / n),
                    t.push(l.i / n),
                    Fu(e),
                    e = l.next,
                    u = l.next;
                else if ((e = l) === u) {
                    o ? 1 === o ? gu(e = bu(mu(e), t, n), t, n, r, i, a, 2) : 2 === o && xu(e, t, n, r, i, a) : gu(mu(e), t, n, r, i, a, 1);
                    break
                }
        }
    }
    function vu(e) {
        var t = e.prev
          , n = e
          , r = e.next;
        if (Pu(t, n, r) >= 0)
            return !1;
        for (var i = e.next.next; i !== e.prev; ) {
            if (Tu(t.x, t.y, n.x, n.y, r.x, r.y, i.x, i.y) && Pu(i.prev, i, i.next) >= 0)
                return !1;
            i = i.next
        }
        return !0
    }
    function yu(e, t, n, r) {
        var i = e.prev
          , a = e
          , o = e.next;
        if (Pu(i, a, o) >= 0)
            return !1;
        for (var s = i.x < a.x ? i.x < o.x ? i.x : o.x : a.x < o.x ? a.x : o.x, l = i.y < a.y ? i.y < o.y ? i.y : o.y : a.y < o.y ? a.y : o.y, u = i.x > a.x ? i.x > o.x ? i.x : o.x : a.x > o.x ? a.x : o.x, c = i.y > a.y ? i.y > o.y ? i.y : o.y : a.y > o.y ? a.y : o.y, h = Eu(s, l, t, n, r), p = Eu(u, c, t, n, r), f = e.prevZ, d = e.nextZ; f && f.z >= h && d && d.z <= p; ) {
            if (f !== e.prev && f !== e.next && Tu(i.x, i.y, a.x, a.y, o.x, o.y, f.x, f.y) && Pu(f.prev, f, f.next) >= 0)
                return !1;
            if (f = f.prevZ,
            d !== e.prev && d !== e.next && Tu(i.x, i.y, a.x, a.y, o.x, o.y, d.x, d.y) && Pu(d.prev, d, d.next) >= 0)
                return !1;
            d = d.nextZ
        }
        for (; f && f.z >= h; ) {
            if (f !== e.prev && f !== e.next && Tu(i.x, i.y, a.x, a.y, o.x, o.y, f.x, f.y) && Pu(f.prev, f, f.next) >= 0)
                return !1;
            f = f.prevZ
        }
        for (; d && d.z <= p; ) {
            if (d !== e.prev && d !== e.next && Tu(i.x, i.y, a.x, a.y, o.x, o.y, d.x, d.y) && Pu(d.prev, d, d.next) >= 0)
                return !1;
            d = d.nextZ
        }
        return !0
    }
    function bu(e, t, n) {
        var r = e;
        do {
            var i = r.prev
              , a = r.next.next;
            !Cu(i, a) && Lu(i, r, r.next, a) && Du(i, a) && Du(a, i) && (t.push(i.i / n),
            t.push(r.i / n),
            t.push(a.i / n),
            Fu(r),
            Fu(r.next),
            r = e = a),
            r = r.next
        } while (r !== e);
        return mu(r)
    }
    function xu(e, t, n, r, i, a) {
        var o = e;
        do {
            for (var s = o.next.next; s !== o.prev; ) {
                if (o.i !== s.i && Au(o, s)) {
                    var l = Iu(o, s);
                    return o = mu(o, o.next),
                    l = mu(l, l.next),
                    gu(o, t, n, r, i, a),
                    void gu(l, t, n, r, i, a)
                }
                s = s.next
            }
            o = o.next
        } while (o !== e)
    }
    function wu(e, t) {
        return e.x - t.x
    }
    function _u(e, t) {
        if (t = function(e, t) {
            var n, r = t, i = e.x, a = e.y, o = -1 / 0;
            do {
                if (a <= r.y && a >= r.next.y && r.next.y !== r.y) {
                    var s = r.x + (a - r.y) * (r.next.x - r.x) / (r.next.y - r.y);
                    if (s <= i && s > o) {
                        if (o = s,
                        s === i) {
                            if (a === r.y)
                                return r;
                            if (a === r.next.y)
                                return r.next
                        }
                        n = r.x < r.next.x ? r : r.next
                    }
                }
                r = r.next
            } while (r !== t);
            if (!n)
                return null;
            if (i === o)
                return n;
            var l, u = n, c = n.x, h = n.y, p = 1 / 0;
            r = n;
            do {
                i >= r.x && r.x >= c && i !== r.x && Tu(a < h ? i : o, a, c, h, a < h ? o : i, a, r.x, r.y) && (l = Math.abs(a - r.y) / (i - r.x),
                Du(r, e) && (l < p || l === p && (r.x > n.x || r.x === n.x && Su(n, r))) && (n = r,
                p = l)),
                r = r.next
            } while (r !== u);
            return n
        }(e, t)) {
            var n = Iu(t, e);
            mu(t, t.next),
            mu(n, n.next)
        }
    }
    function Su(e, t) {
        return Pu(e.prev, e, t.prev) < 0 && Pu(t.next, e, e.next) < 0
    }
    function Eu(e, t, n, r, i) {
        return (e = 1431655765 & ((e = 858993459 & ((e = 252645135 & ((e = 16711935 & ((e = 32767 * (e - n) * i) | e << 8)) | e << 4)) | e << 2)) | e << 1)) | (t = 1431655765 & ((t = 858993459 & ((t = 252645135 & ((t = 16711935 & ((t = 32767 * (t - r) * i) | t << 8)) | t << 4)) | t << 2)) | t << 1)) << 1
    }
    function Mu(e) {
        var t = e
          , n = e;
        do {
            (t.x < n.x || t.x === n.x && t.y < n.y) && (n = t),
            t = t.next
        } while (t !== e);
        return n
    }
    function Tu(e, t, n, r, i, a, o, s) {
        return (i - o) * (t - s) - (e - o) * (a - s) >= 0 && (e - o) * (r - s) - (n - o) * (t - s) >= 0 && (n - o) * (a - s) - (i - o) * (r - s) >= 0
    }
    function Au(e, t) {
        return e.next.i !== t.i && e.prev.i !== t.i && !function(e, t) {
            var n = e;
            do {
                if (n.i !== e.i && n.next.i !== e.i && n.i !== t.i && n.next.i !== t.i && Lu(n, n.next, e, t))
                    return !0;
                n = n.next
            } while (n !== e);
            return !1
        }(e, t) && (Du(e, t) && Du(t, e) && function(e, t) {
            var n = e
              , r = !1
              , i = (e.x + t.x) / 2
              , a = (e.y + t.y) / 2;
            do {
                n.y > a !== n.next.y > a && n.next.y !== n.y && i < (n.next.x - n.x) * (a - n.y) / (n.next.y - n.y) + n.x && (r = !r),
                n = n.next
            } while (n !== e);
            return r
        }(e, t) && (Pu(e.prev, e, t.prev) || Pu(e, t.prev, t)) || Cu(e, t) && Pu(e.prev, e, e.next) > 0 && Pu(t.prev, t, t.next) > 0)
    }
    function Pu(e, t, n) {
        return (t.y - e.y) * (n.x - t.x) - (t.x - e.x) * (n.y - t.y)
    }
    function Cu(e, t) {
        return e.x === t.x && e.y === t.y
    }
    function Lu(e, t, n, r) {
        var i = ku(Pu(e, t, n))
          , a = ku(Pu(e, t, r))
          , o = ku(Pu(n, r, e))
          , s = ku(Pu(n, r, t));
        return i !== a && o !== s || (!(0 !== i || !Ru(e, n, t)) || (!(0 !== a || !Ru(e, r, t)) || (!(0 !== o || !Ru(n, e, r)) || !(0 !== s || !Ru(n, t, r)))))
    }
    function Ru(e, t, n) {
        return t.x <= Math.max(e.x, n.x) && t.x >= Math.min(e.x, n.x) && t.y <= Math.max(e.y, n.y) && t.y >= Math.min(e.y, n.y)
    }
    function ku(e) {
        return e > 0 ? 1 : e < 0 ? -1 : 0
    }
    function Du(e, t) {
        return Pu(e.prev, e, e.next) < 0 ? Pu(e, t, e.next) >= 0 && Pu(e, e.prev, t) >= 0 : Pu(e, t, e.prev) < 0 || Pu(e, e.next, t) < 0
    }
    function Iu(e, t) {
        var n = new Nu(e.i,e.x,e.y)
          , r = new Nu(t.i,t.x,t.y)
          , i = e.next
          , a = t.prev;
        return e.next = t,
        t.prev = e,
        n.next = i,
        i.prev = n,
        r.next = n,
        n.prev = r,
        a.next = r,
        r.prev = a,
        r
    }
    function Ou(e, t, n, r) {
        var i = new Nu(e,t,n);
        return r ? (i.next = r.next,
        i.prev = r,
        r.next.prev = i,
        r.next = i) : (i.prev = i,
        i.next = i),
        i
    }
    function Fu(e) {
        e.next.prev = e.prev,
        e.prev.next = e.next,
        e.prevZ && (e.prevZ.nextZ = e.nextZ),
        e.nextZ && (e.nextZ.prevZ = e.prevZ)
    }
    function Nu(e, t, n) {
        this.i = e,
        this.x = t,
        this.y = n,
        this.prev = null,
        this.next = null,
        this.z = null,
        this.prevZ = null,
        this.nextZ = null,
        this.steiner = !1
    }
    var Bu = {
        area: function(e) {
            for (var t = e.length, n = 0, r = t - 1, i = 0; i < t; r = i++)
                n += e[r].x * e[i].y - e[i].x * e[r].y;
            return .5 * n
        },
        isClockWise: function(e) {
            return Bu.area(e) < 0
        },
        triangulateShape: function(e, t) {
            var n = []
              , r = []
              , i = [];
            zu(e),
            Gu(n, e);
            var a = e.length;
            t.forEach(zu);
            for (var o = 0; o < t.length; o++)
                r.push(a),
                a += t[o].length,
                Gu(n, t[o]);
            for (var s = fu(n, r), l = 0; l < s.length; l += 3)
                i.push(s.slice(l, l + 3));
            return i
        }
    };
    function zu(e) {
        var t = e.length;
        t > 2 && e[t - 1].equals(e[0]) && e.pop()
    }
    function Gu(e, t) {
        for (var n = 0; n < t.length; n++)
            e.push(t[n].x),
            e.push(t[n].y)
    }
    function Hu(e, t) {
        wa.call(this),
        this.type = "ExtrudeGeometry",
        this.parameters = {
            shapes: e,
            options: t
        },
        this.fromBufferGeometry(new Vu(e,t)),
        this.mergeVertices()
    }
    function Vu(e, t) {
        $i.call(this),
        this.type = "ExtrudeBufferGeometry",
        this.parameters = {
            shapes: e,
            options: t
        },
        e = Array.isArray(e) ? e : [e];
        for (var n = this, r = [], i = [], a = 0, o = e.length; a < o; a++) {
            s(e[a])
        }
        function s(e) {
            var a = []
              , o = void 0 !== t.curveSegments ? t.curveSegments : 12
              , s = void 0 !== t.steps ? t.steps : 1
              , l = void 0 !== t.depth ? t.depth : 100
              , u = void 0 === t.bevelEnabled || t.bevelEnabled
              , c = void 0 !== t.bevelThickness ? t.bevelThickness : 6
              , h = void 0 !== t.bevelSize ? t.bevelSize : c - 2
              , p = void 0 !== t.bevelOffset ? t.bevelOffset : 0
              , f = void 0 !== t.bevelSegments ? t.bevelSegments : 3
              , d = t.extrudePath
              , m = void 0 !== t.UVGenerator ? t.UVGenerator : ju;
            void 0 !== t.amount && (console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),
            l = t.amount);
            var g, v, y, b, x, w = !1;
            d && (g = d.getSpacedPoints(s),
            w = !0,
            u = !1,
            v = d.computeFrenetFrames(s, !1),
            y = new ir,
            b = new ir,
            x = new ir),
            u || (f = 0,
            c = 0,
            h = 0,
            p = 0);
            var _ = e.extractPoints(o)
              , S = _.shape
              , E = _.holes;
            if (!Bu.isClockWise(S)) {
                S = S.reverse();
                for (var M = 0, T = E.length; M < T; M++) {
                    var A = E[M];
                    Bu.isClockWise(A) && (E[M] = A.reverse())
                }
            }
            for (var P = Bu.triangulateShape(S, E), C = S, L = 0, R = E.length; L < R; L++) {
                var k = E[L];
                S = S.concat(k)
            }
            function D(e, t, n) {
                return t || console.error("THREE.ExtrudeGeometry: vec does not exist"),
                t.clone().multiplyScalar(n).add(e)
            }
            var I = S.length
              , O = P.length;
            function F(e, t, n) {
                var r, i, a, o = e.x - t.x, s = e.y - t.y, l = n.x - e.x, u = n.y - e.y, c = o * o + s * s, h = o * u - s * l;
                if (Math.abs(h) > Number.EPSILON) {
                    var p = Math.sqrt(c)
                      , f = Math.sqrt(l * l + u * u)
                      , d = t.x - s / p
                      , m = t.y + o / p
                      , g = ((n.x - u / f - d) * u - (n.y + l / f - m) * l) / (o * u - s * l)
                      , v = (r = d + o * g - e.x) * r + (i = m + s * g - e.y) * i;
                    if (v <= 2)
                        return new Xn(r,i);
                    a = Math.sqrt(v / 2)
                } else {
                    var y = !1;
                    o > Number.EPSILON ? l > Number.EPSILON && (y = !0) : o < -Number.EPSILON ? l < -Number.EPSILON && (y = !0) : Math.sign(s) === Math.sign(u) && (y = !0),
                    y ? (r = -s,
                    i = o,
                    a = Math.sqrt(c)) : (r = o,
                    i = s,
                    a = Math.sqrt(c / 2))
                }
                return new Xn(r / a,i / a)
            }
            for (var N = [], B = 0, z = C.length, G = z - 1, H = B + 1; B < z; B++,
            G++,
            H++)
                G === z && (G = 0),
                H === z && (H = 0),
                N[B] = F(C[B], C[G], C[H]);
            for (var V, j = [], U = N.concat(), W = 0, q = E.length; W < q; W++) {
                var X = E[W];
                V = [];
                for (var Y = 0, Z = X.length, $ = Z - 1, J = Y + 1; Y < Z; Y++,
                $++,
                J++)
                    $ === Z && ($ = 0),
                    J === Z && (J = 0),
                    V[Y] = F(X[Y], X[$], X[J]);
                j.push(V),
                U = U.concat(V)
            }
            for (var K = 0; K < f; K++) {
                for (var Q = K / f, ee = c * Math.cos(Q * Math.PI / 2), te = h * Math.sin(Q * Math.PI / 2) + p, ne = 0, re = C.length; ne < re; ne++) {
                    var ie = D(C[ne], N[ne], te);
                    Re(ie.x, ie.y, -ee)
                }
                for (var ae = 0, oe = E.length; ae < oe; ae++) {
                    var se = E[ae];
                    V = j[ae];
                    for (var le = 0, ue = se.length; le < ue; le++) {
                        var ce = D(se[le], V[le], te);
                        Re(ce.x, ce.y, -ee)
                    }
                }
            }
            for (var he = h + p, pe = 0; pe < I; pe++) {
                var fe = u ? D(S[pe], U[pe], he) : S[pe];
                w ? (b.copy(v.normals[0]).multiplyScalar(fe.x),
                y.copy(v.binormals[0]).multiplyScalar(fe.y),
                x.copy(g[0]).add(b).add(y),
                Re(x.x, x.y, x.z)) : Re(fe.x, fe.y, 0)
            }
            for (var de = 1; de <= s; de++)
                for (var me = 0; me < I; me++) {
                    var ge = u ? D(S[me], U[me], he) : S[me];
                    w ? (b.copy(v.normals[de]).multiplyScalar(ge.x),
                    y.copy(v.binormals[de]).multiplyScalar(ge.y),
                    x.copy(g[de]).add(b).add(y),
                    Re(x.x, x.y, x.z)) : Re(ge.x, ge.y, l / s * de)
                }
            for (var ve = f - 1; ve >= 0; ve--) {
                for (var ye = ve / f, be = c * Math.cos(ye * Math.PI / 2), xe = h * Math.sin(ye * Math.PI / 2) + p, we = 0, _e = C.length; we < _e; we++) {
                    var Se = D(C[we], N[we], xe);
                    Re(Se.x, Se.y, l + be)
                }
                for (var Ee = 0, Me = E.length; Ee < Me; Ee++) {
                    var Te = E[Ee];
                    V = j[Ee];
                    for (var Ae = 0, Pe = Te.length; Ae < Pe; Ae++) {
                        var Ce = D(Te[Ae], V[Ae], xe);
                        w ? Re(Ce.x, Ce.y + g[s - 1].y, g[s - 1].x + be) : Re(Ce.x, Ce.y, l + be)
                    }
                }
            }
            function Le(e, t) {
                for (var n = e.length; --n >= 0; ) {
                    var r = n
                      , i = n - 1;
                    i < 0 && (i = e.length - 1);
                    for (var a = 0, o = s + 2 * f; a < o; a++) {
                        var l = I * a
                          , u = I * (a + 1);
                        De(t + r + l, t + i + l, t + i + u, t + r + u)
                    }
                }
            }
            function Re(e, t, n) {
                a.push(e),
                a.push(t),
                a.push(n)
            }
            function ke(e, t, i) {
                Ie(e),
                Ie(t),
                Ie(i);
                var a = r.length / 3
                  , o = m.generateTopUV(n, r, a - 3, a - 2, a - 1);
                Oe(o[0]),
                Oe(o[1]),
                Oe(o[2])
            }
            function De(e, t, i, a) {
                Ie(e),
                Ie(t),
                Ie(a),
                Ie(t),
                Ie(i),
                Ie(a);
                var o = r.length / 3
                  , s = m.generateSideWallUV(n, r, o - 6, o - 3, o - 2, o - 1);
                Oe(s[0]),
                Oe(s[1]),
                Oe(s[3]),
                Oe(s[1]),
                Oe(s[2]),
                Oe(s[3])
            }
            function Ie(e) {
                r.push(a[3 * e + 0]),
                r.push(a[3 * e + 1]),
                r.push(a[3 * e + 2])
            }
            function Oe(e) {
                i.push(e.x),
                i.push(e.y)
            }
            !function() {
                var e = r.length / 3;
                if (u) {
                    for (var t = 0, i = I * t, a = 0; a < O; a++) {
                        var o = P[a];
                        ke(o[2] + i, o[1] + i, o[0] + i)
                    }
                    i = I * (t = s + 2 * f);
                    for (var l = 0; l < O; l++) {
                        var c = P[l];
                        ke(c[0] + i, c[1] + i, c[2] + i)
                    }
                } else {
                    for (var h = 0; h < O; h++) {
                        var p = P[h];
                        ke(p[2], p[1], p[0])
                    }
                    for (var d = 0; d < O; d++) {
                        var m = P[d];
                        ke(m[0] + I * s, m[1] + I * s, m[2] + I * s)
                    }
                }
                n.addGroup(e, r.length / 3 - e, 0)
            }(),
            function() {
                var e = r.length / 3
                  , t = 0;
                Le(C, t),
                t += C.length;
                for (var i = 0, a = E.length; i < a; i++) {
                    var o = E[i];
                    Le(o, t),
                    t += o.length
                }
                n.addGroup(e, r.length / 3 - e, 1)
            }()
        }
        this.setAttribute("position", new zi(r,3)),
        this.setAttribute("uv", new zi(i,2)),
        this.computeVertexNormals()
    }
    Hu.prototype = Object.create(wa.prototype),
    Hu.prototype.constructor = Hu,
    Hu.prototype.toJSON = function() {
        var e = wa.prototype.toJSON.call(this);
        return Uu(this.parameters.shapes, this.parameters.options, e)
    }
    ,
    Vu.prototype = Object.create($i.prototype),
    Vu.prototype.constructor = Vu,
    Vu.prototype.toJSON = function() {
        var e = $i.prototype.toJSON.call(this);
        return Uu(this.parameters.shapes, this.parameters.options, e)
    }
    ;
    var ju = {
        generateTopUV: function(e, t, n, r, i) {
            var a = t[3 * n]
              , o = t[3 * n + 1]
              , s = t[3 * r]
              , l = t[3 * r + 1]
              , u = t[3 * i]
              , c = t[3 * i + 1];
            return [new Xn(a,o), new Xn(s,l), new Xn(u,c)]
        },
        generateSideWallUV: function(e, t, n, r, i, a) {
            var o = t[3 * n]
              , s = t[3 * n + 1]
              , l = t[3 * n + 2]
              , u = t[3 * r]
              , c = t[3 * r + 1]
              , h = t[3 * r + 2]
              , p = t[3 * i]
              , f = t[3 * i + 1]
              , d = t[3 * i + 2]
              , m = t[3 * a]
              , g = t[3 * a + 1]
              , v = t[3 * a + 2];
            return Math.abs(s - c) < .01 ? [new Xn(o,1 - l), new Xn(u,1 - h), new Xn(p,1 - d), new Xn(m,1 - v)] : [new Xn(s,1 - l), new Xn(c,1 - h), new Xn(f,1 - d), new Xn(g,1 - v)]
        }
    };
    function Uu(e, t, n) {
        if (n.shapes = [],
        Array.isArray(e))
            for (var r = 0, i = e.length; r < i; r++) {
                var a = e[r];
                n.shapes.push(a.uuid)
            }
        else
            n.shapes.push(e.uuid);
        return void 0 !== t.extrudePath && (n.options.extrudePath = t.extrudePath.toJSON()),
        n
    }
    function Wu(e, t) {
        wa.call(this),
        this.type = "TextGeometry",
        this.parameters = {
            text: e,
            parameters: t
        },
        this.fromBufferGeometry(new qu(e,t)),
        this.mergeVertices()
    }
    function qu(e, t) {
        var n = (t = t || {}).font;
        if (!n || !n.isFont)
            return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),
            new wa;
        var r = n.generateShapes(e, t.size);
        t.depth = void 0 !== t.height ? t.height : 50,
        void 0 === t.bevelThickness && (t.bevelThickness = 10),
        void 0 === t.bevelSize && (t.bevelSize = 8),
        void 0 === t.bevelEnabled && (t.bevelEnabled = !1),
        Vu.call(this, r, t),
        this.type = "TextBufferGeometry"
    }
    function Xu(e, t, n, r, i, a, o) {
        wa.call(this),
        this.type = "SphereGeometry",
        this.parameters = {
            radius: e,
            widthSegments: t,
            heightSegments: n,
            phiStart: r,
            phiLength: i,
            thetaStart: a,
            thetaLength: o
        },
        this.fromBufferGeometry(new Yu(e,t,n,r,i,a,o)),
        this.mergeVertices()
    }
    function Yu(e, t, n, r, i, a, o) {
        $i.call(this),
        this.type = "SphereBufferGeometry",
        this.parameters = {
            radius: e,
            widthSegments: t,
            heightSegments: n,
            phiStart: r,
            phiLength: i,
            thetaStart: a,
            thetaLength: o
        },
        e = e || 1,
        t = Math.max(3, Math.floor(t) || 8),
        n = Math.max(2, Math.floor(n) || 6),
        r = void 0 !== r ? r : 0,
        i = void 0 !== i ? i : 2 * Math.PI,
        a = void 0 !== a ? a : 0,
        o = void 0 !== o ? o : Math.PI;
        for (var s = Math.min(a + o, Math.PI), l = 0, u = [], c = new ir, h = new ir, p = [], f = [], d = [], m = [], g = 0; g <= n; g++) {
            var v = []
              , y = g / n
              , b = 0;
            0 == g && 0 == a ? b = .5 / t : g == n && s == Math.PI && (b = -.5 / t);
            for (var x = 0; x <= t; x++) {
                var w = x / t;
                c.x = -e * Math.cos(r + w * i) * Math.sin(a + y * o),
                c.y = e * Math.cos(a + y * o),
                c.z = e * Math.sin(r + w * i) * Math.sin(a + y * o),
                f.push(c.x, c.y, c.z),
                h.copy(c).normalize(),
                d.push(h.x, h.y, h.z),
                m.push(w + b, 1 - y),
                v.push(l++)
            }
            u.push(v)
        }
        for (var _ = 0; _ < n; _++)
            for (var S = 0; S < t; S++) {
                var E = u[_][S + 1]
                  , M = u[_][S]
                  , T = u[_ + 1][S]
                  , A = u[_ + 1][S + 1];
                (0 !== _ || a > 0) && p.push(E, M, A),
                (_ !== n - 1 || s < Math.PI) && p.push(M, T, A)
            }
        this.setIndex(p),
        this.setAttribute("position", new zi(f,3)),
        this.setAttribute("normal", new zi(d,3)),
        this.setAttribute("uv", new zi(m,2))
    }
    function Zu(e, t, n, r, i, a) {
        wa.call(this),
        this.type = "RingGeometry",
        this.parameters = {
            innerRadius: e,
            outerRadius: t,
            thetaSegments: n,
            phiSegments: r,
            thetaStart: i,
            thetaLength: a
        },
        this.fromBufferGeometry(new $u(e,t,n,r,i,a)),
        this.mergeVertices()
    }
    function $u(e, t, n, r, i, a) {
        $i.call(this),
        this.type = "RingBufferGeometry",
        this.parameters = {
            innerRadius: e,
            outerRadius: t,
            thetaSegments: n,
            phiSegments: r,
            thetaStart: i,
            thetaLength: a
        },
        e = e || .5,
        t = t || 1,
        i = void 0 !== i ? i : 0,
        a = void 0 !== a ? a : 2 * Math.PI,
        n = void 0 !== n ? Math.max(3, n) : 8;
        for (var o = [], s = [], l = [], u = [], c = e, h = (t - e) / (r = void 0 !== r ? Math.max(1, r) : 1), p = new ir, f = new Xn, d = 0; d <= r; d++) {
            for (var m = 0; m <= n; m++) {
                var g = i + m / n * a;
                p.x = c * Math.cos(g),
                p.y = c * Math.sin(g),
                s.push(p.x, p.y, p.z),
                l.push(0, 0, 1),
                f.x = (p.x / t + 1) / 2,
                f.y = (p.y / t + 1) / 2,
                u.push(f.x, f.y)
            }
            c += h
        }
        for (var v = 0; v < r; v++)
            for (var y = v * (n + 1), b = 0; b < n; b++) {
                var x = b + y
                  , w = x
                  , _ = x + n + 1
                  , S = x + n + 2
                  , E = x + 1;
                o.push(w, _, E),
                o.push(_, S, E)
            }
        this.setIndex(o),
        this.setAttribute("position", new zi(s,3)),
        this.setAttribute("normal", new zi(l,3)),
        this.setAttribute("uv", new zi(u,2))
    }
    function Ju(e, t, n, r) {
        wa.call(this),
        this.type = "LatheGeometry",
        this.parameters = {
            points: e,
            segments: t,
            phiStart: n,
            phiLength: r
        },
        this.fromBufferGeometry(new Ku(e,t,n,r)),
        this.mergeVertices()
    }
    function Ku(e, t, n, r) {
        $i.call(this),
        this.type = "LatheBufferGeometry",
        this.parameters = {
            points: e,
            segments: t,
            phiStart: n,
            phiLength: r
        },
        t = Math.floor(t) || 12,
        n = n || 0,
        r = r || 2 * Math.PI,
        r = qn.clamp(r, 0, 2 * Math.PI);
        for (var i = [], a = [], o = [], s = 1 / t, l = new ir, u = new Xn, c = 0; c <= t; c++)
            for (var h = n + c * s * r, p = Math.sin(h), f = Math.cos(h), d = 0; d <= e.length - 1; d++)
                l.x = e[d].x * p,
                l.y = e[d].y,
                l.z = e[d].x * f,
                a.push(l.x, l.y, l.z),
                u.x = c / t,
                u.y = d / (e.length - 1),
                o.push(u.x, u.y);
        for (var m = 0; m < t; m++)
            for (var g = 0; g < e.length - 1; g++) {
                var v = g + m * e.length
                  , y = v
                  , b = v + e.length
                  , x = v + e.length + 1
                  , w = v + 1;
                i.push(y, b, w),
                i.push(b, x, w)
            }
        if (this.setIndex(i),
        this.setAttribute("position", new zi(a,3)),
        this.setAttribute("uv", new zi(o,2)),
        this.computeVertexNormals(),
        r === 2 * Math.PI)
            for (var _ = this.attributes.normal.array, S = new ir, E = new ir, M = new ir, T = t * e.length * 3, A = 0, P = 0; A < e.length; A++,
            P += 3)
                S.x = _[P + 0],
                S.y = _[P + 1],
                S.z = _[P + 2],
                E.x = _[T + P + 0],
                E.y = _[T + P + 1],
                E.z = _[T + P + 2],
                M.addVectors(S, E).normalize(),
                _[P + 0] = _[T + P + 0] = M.x,
                _[P + 1] = _[T + P + 1] = M.y,
                _[P + 2] = _[T + P + 2] = M.z
    }
    function Qu(e, t) {
        wa.call(this),
        this.type = "ShapeGeometry",
        "object" === typeof t && (console.warn("THREE.ShapeGeometry: Options parameter has been removed."),
        t = t.curveSegments),
        this.parameters = {
            shapes: e,
            curveSegments: t
        },
        this.fromBufferGeometry(new ec(e,t)),
        this.mergeVertices()
    }
    function ec(e, t) {
        $i.call(this),
        this.type = "ShapeBufferGeometry",
        this.parameters = {
            shapes: e,
            curveSegments: t
        },
        t = t || 12;
        var n = []
          , r = []
          , i = []
          , a = []
          , o = 0
          , s = 0;
        if (!1 === Array.isArray(e))
            u(e);
        else
            for (var l = 0; l < e.length; l++)
                u(e[l]),
                this.addGroup(o, s, l),
                o += s,
                s = 0;
        function u(e) {
            var o = r.length / 3
              , l = e.extractPoints(t)
              , u = l.shape
              , c = l.holes;
            !1 === Bu.isClockWise(u) && (u = u.reverse());
            for (var h = 0, p = c.length; h < p; h++) {
                var f = c[h];
                !0 === Bu.isClockWise(f) && (c[h] = f.reverse())
            }
            for (var d = Bu.triangulateShape(u, c), m = 0, g = c.length; m < g; m++) {
                var v = c[m];
                u = u.concat(v)
            }
            for (var y = 0, b = u.length; y < b; y++) {
                var x = u[y];
                r.push(x.x, x.y, 0),
                i.push(0, 0, 1),
                a.push(x.x, x.y)
            }
            for (var w = 0, _ = d.length; w < _; w++) {
                var S = d[w]
                  , E = S[0] + o
                  , M = S[1] + o
                  , T = S[2] + o;
                n.push(E, M, T),
                s += 3
            }
        }
        this.setIndex(n),
        this.setAttribute("position", new zi(r,3)),
        this.setAttribute("normal", new zi(i,3)),
        this.setAttribute("uv", new zi(a,2))
    }
    function tc(e, t) {
        if (t.shapes = [],
        Array.isArray(e))
            for (var n = 0, r = e.length; n < r; n++) {
                var i = e[n];
                t.shapes.push(i.uuid)
            }
        else
            t.shapes.push(e.uuid);
        return t
    }
    function nc(e, t) {
        $i.call(this),
        this.type = "EdgesGeometry",
        this.parameters = {
            thresholdAngle: t
        },
        t = void 0 !== t ? t : 1;
        var n, r, i, a, o = [], s = Math.cos(qn.DEG2RAD * t), l = [0, 0], u = {}, c = ["a", "b", "c"];
        e.isBufferGeometry ? (a = new wa).fromBufferGeometry(e) : a = e.clone(),
        a.mergeVertices(),
        a.computeFaceNormals();
        for (var h = a.vertices, p = a.faces, f = 0, d = p.length; f < d; f++)
            for (var m = p[f], g = 0; g < 3; g++)
                n = m[c[g]],
                r = m[c[(g + 1) % 3]],
                l[0] = Math.min(n, r),
                l[1] = Math.max(n, r),
                void 0 === u[i = l[0] + "," + l[1]] ? u[i] = {
                    index1: l[0],
                    index2: l[1],
                    face1: f,
                    face2: void 0
                } : u[i].face2 = f;
        for (i in u) {
            var v = u[i];
            if (void 0 === v.face2 || p[v.face1].normal.dot(p[v.face2].normal) <= s) {
                var y = h[v.index1];
                o.push(y.x, y.y, y.z),
                y = h[v.index2],
                o.push(y.x, y.y, y.z)
            }
        }
        this.setAttribute("position", new zi(o,3))
    }
    function rc(e, t, n, r, i, a, o, s) {
        wa.call(this),
        this.type = "CylinderGeometry",
        this.parameters = {
            radiusTop: e,
            radiusBottom: t,
            height: n,
            radialSegments: r,
            heightSegments: i,
            openEnded: a,
            thetaStart: o,
            thetaLength: s
        },
        this.fromBufferGeometry(new ic(e,t,n,r,i,a,o,s)),
        this.mergeVertices()
    }
    function ic(e, t, n, r, i, a, o, s) {
        $i.call(this),
        this.type = "CylinderBufferGeometry",
        this.parameters = {
            radiusTop: e,
            radiusBottom: t,
            height: n,
            radialSegments: r,
            heightSegments: i,
            openEnded: a,
            thetaStart: o,
            thetaLength: s
        };
        var l = this;
        e = void 0 !== e ? e : 1,
        t = void 0 !== t ? t : 1,
        n = n || 1,
        r = Math.floor(r) || 8,
        i = Math.floor(i) || 1,
        a = void 0 !== a && a,
        o = void 0 !== o ? o : 0,
        s = void 0 !== s ? s : 2 * Math.PI;
        var u = []
          , c = []
          , h = []
          , p = []
          , f = 0
          , d = []
          , m = n / 2
          , g = 0;
        function v(n) {
            var i, a, d = new Xn, v = new ir, y = 0, b = !0 === n ? e : t, x = !0 === n ? 1 : -1;
            i = f;
            for (var w = 1; w <= r; w++)
                c.push(0, m * x, 0),
                h.push(0, x, 0),
                p.push(.5, .5),
                f++;
            a = f;
            for (var _ = 0; _ <= r; _++) {
                var S = _ / r * s + o
                  , E = Math.cos(S)
                  , M = Math.sin(S);
                v.x = b * M,
                v.y = m * x,
                v.z = b * E,
                c.push(v.x, v.y, v.z),
                h.push(0, x, 0),
                d.x = .5 * E + .5,
                d.y = .5 * M * x + .5,
                p.push(d.x, d.y),
                f++
            }
            for (var T = 0; T < r; T++) {
                var A = i + T
                  , P = a + T;
                !0 === n ? u.push(P, P + 1, A) : u.push(P + 1, P, A),
                y += 3
            }
            l.addGroup(g, y, !0 === n ? 1 : 2),
            g += y
        }
        !function() {
            for (var a = new ir, v = new ir, y = 0, b = (t - e) / n, x = 0; x <= i; x++) {
                for (var w = [], _ = x / i, S = _ * (t - e) + e, E = 0; E <= r; E++) {
                    var M = E / r
                      , T = M * s + o
                      , A = Math.sin(T)
                      , P = Math.cos(T);
                    v.x = S * A,
                    v.y = -_ * n + m,
                    v.z = S * P,
                    c.push(v.x, v.y, v.z),
                    a.set(A, b, P).normalize(),
                    h.push(a.x, a.y, a.z),
                    p.push(M, 1 - _),
                    w.push(f++)
                }
                d.push(w)
            }
            for (var C = 0; C < r; C++)
                for (var L = 0; L < i; L++) {
                    var R = d[L][C]
                      , k = d[L + 1][C]
                      , D = d[L + 1][C + 1]
                      , I = d[L][C + 1];
                    u.push(R, k, I),
                    u.push(k, D, I),
                    y += 6
                }
            l.addGroup(g, y, 0),
            g += y
        }(),
        !1 === a && (e > 0 && v(!0),
        t > 0 && v(!1)),
        this.setIndex(u),
        this.setAttribute("position", new zi(c,3)),
        this.setAttribute("normal", new zi(h,3)),
        this.setAttribute("uv", new zi(p,2))
    }
    function ac(e, t, n, r, i, a, o) {
        rc.call(this, 0, e, t, n, r, i, a, o),
        this.type = "ConeGeometry",
        this.parameters = {
            radius: e,
            height: t,
            radialSegments: n,
            heightSegments: r,
            openEnded: i,
            thetaStart: a,
            thetaLength: o
        }
    }
    function oc(e, t, n, r, i, a, o) {
        ic.call(this, 0, e, t, n, r, i, a, o),
        this.type = "ConeBufferGeometry",
        this.parameters = {
            radius: e,
            height: t,
            radialSegments: n,
            heightSegments: r,
            openEnded: i,
            thetaStart: a,
            thetaLength: o
        }
    }
    function sc(e, t, n, r) {
        wa.call(this),
        this.type = "CircleGeometry",
        this.parameters = {
            radius: e,
            segments: t,
            thetaStart: n,
            thetaLength: r
        },
        this.fromBufferGeometry(new lc(e,t,n,r)),
        this.mergeVertices()
    }
    function lc(e, t, n, r) {
        $i.call(this),
        this.type = "CircleBufferGeometry",
        this.parameters = {
            radius: e,
            segments: t,
            thetaStart: n,
            thetaLength: r
        },
        e = e || 1,
        t = void 0 !== t ? Math.max(3, t) : 8,
        n = void 0 !== n ? n : 0,
        r = void 0 !== r ? r : 2 * Math.PI;
        var i = []
          , a = []
          , o = []
          , s = []
          , l = new ir
          , u = new Xn;
        a.push(0, 0, 0),
        o.push(0, 0, 1),
        s.push(.5, .5);
        for (var c = 0, h = 3; c <= t; c++,
        h += 3) {
            var p = n + c / t * r;
            l.x = e * Math.cos(p),
            l.y = e * Math.sin(p),
            a.push(l.x, l.y, l.z),
            o.push(0, 0, 1),
            u.x = (a[h] / e + 1) / 2,
            u.y = (a[h + 1] / e + 1) / 2,
            s.push(u.x, u.y)
        }
        for (var f = 1; f <= t; f++)
            i.push(f, f + 1, 0);
        this.setIndex(i),
        this.setAttribute("position", new zi(a,3)),
        this.setAttribute("normal", new zi(o,3)),
        this.setAttribute("uv", new zi(s,2))
    }
    Wu.prototype = Object.create(wa.prototype),
    Wu.prototype.constructor = Wu,
    qu.prototype = Object.create(Vu.prototype),
    qu.prototype.constructor = qu,
    Xu.prototype = Object.create(wa.prototype),
    Xu.prototype.constructor = Xu,
    Yu.prototype = Object.create($i.prototype),
    Yu.prototype.constructor = Yu,
    Zu.prototype = Object.create(wa.prototype),
    Zu.prototype.constructor = Zu,
    $u.prototype = Object.create($i.prototype),
    $u.prototype.constructor = $u,
    Ju.prototype = Object.create(wa.prototype),
    Ju.prototype.constructor = Ju,
    Ku.prototype = Object.create($i.prototype),
    Ku.prototype.constructor = Ku,
    Qu.prototype = Object.create(wa.prototype),
    Qu.prototype.constructor = Qu,
    Qu.prototype.toJSON = function() {
        var e = wa.prototype.toJSON.call(this);
        return tc(this.parameters.shapes, e)
    }
    ,
    ec.prototype = Object.create($i.prototype),
    ec.prototype.constructor = ec,
    ec.prototype.toJSON = function() {
        var e = $i.prototype.toJSON.call(this);
        return tc(this.parameters.shapes, e)
    }
    ,
    nc.prototype = Object.create($i.prototype),
    nc.prototype.constructor = nc,
    rc.prototype = Object.create(wa.prototype),
    rc.prototype.constructor = rc,
    ic.prototype = Object.create($i.prototype),
    ic.prototype.constructor = ic,
    ac.prototype = Object.create(rc.prototype),
    ac.prototype.constructor = ac,
    oc.prototype = Object.create(ic.prototype),
    oc.prototype.constructor = oc,
    sc.prototype = Object.create(wa.prototype),
    sc.prototype.constructor = sc,
    lc.prototype = Object.create($i.prototype),
    lc.prototype.constructor = lc;
    var uc = Object.freeze({
        __proto__: null,
        WireframeGeometry: Yl,
        ParametricGeometry: Zl,
        ParametricBufferGeometry: $l,
        TetrahedronGeometry: Ql,
        TetrahedronBufferGeometry: eu,
        OctahedronGeometry: tu,
        OctahedronBufferGeometry: nu,
        IcosahedronGeometry: ru,
        IcosahedronBufferGeometry: iu,
        DodecahedronGeometry: au,
        DodecahedronBufferGeometry: ou,
        PolyhedronGeometry: Jl,
        PolyhedronBufferGeometry: Kl,
        TubeGeometry: su,
        TubeBufferGeometry: lu,
        TorusKnotGeometry: uu,
        TorusKnotBufferGeometry: cu,
        TorusGeometry: hu,
        TorusBufferGeometry: pu,
        TextGeometry: Wu,
        TextBufferGeometry: qu,
        SphereGeometry: Xu,
        SphereBufferGeometry: Yu,
        RingGeometry: Zu,
        RingBufferGeometry: $u,
        PlaneGeometry: za,
        PlaneBufferGeometry: Ga,
        LatheGeometry: Ju,
        LatheBufferGeometry: Ku,
        ShapeGeometry: Qu,
        ShapeBufferGeometry: ec,
        ExtrudeGeometry: Hu,
        ExtrudeBufferGeometry: Vu,
        EdgesGeometry: nc,
        ConeGeometry: ac,
        ConeBufferGeometry: oc,
        CylinderGeometry: rc,
        CylinderBufferGeometry: ic,
        CircleGeometry: sc,
        CircleBufferGeometry: lc,
        BoxGeometry: _a,
        BoxBufferGeometry: Sa
    });
    function cc(e) {
        Ai.call(this),
        this.type = "ShadowMaterial",
        this.color = new wi(0),
        this.transparent = !0,
        this.setValues(e)
    }
    function hc(e) {
        Aa.call(this, e),
        this.type = "RawShaderMaterial"
    }
    function pc(e) {
        Ai.call(this),
        this.defines = {
            STANDARD: ""
        },
        this.type = "MeshStandardMaterial",
        this.color = new wi(16777215),
        this.roughness = 1,
        this.metalness = 0,
        this.map = null,
        this.lightMap = null,
        this.lightMapIntensity = 1,
        this.aoMap = null,
        this.aoMapIntensity = 1,
        this.emissive = new wi(0),
        this.emissiveIntensity = 1,
        this.emissiveMap = null,
        this.bumpMap = null,
        this.bumpScale = 1,
        this.normalMap = null,
        this.normalMapType = dn,
        this.normalScale = new Xn(1,1),
        this.displacementMap = null,
        this.displacementScale = 1,
        this.displacementBias = 0,
        this.roughnessMap = null,
        this.metalnessMap = null,
        this.alphaMap = null,
        this.envMap = null,
        this.envMapIntensity = 1,
        this.refractionRatio = .98,
        this.wireframe = !1,
        this.wireframeLinewidth = 1,
        this.wireframeLinecap = "round",
        this.wireframeLinejoin = "round",
        this.skinning = !1,
        this.morphTargets = !1,
        this.morphNormals = !1,
        this.vertexTangents = !1,
        this.setValues(e)
    }
    function fc(e) {
        pc.call(this),
        this.defines = {
            STANDARD: "",
            PHYSICAL: ""
        },
        this.type = "MeshPhysicalMaterial",
        this.clearcoat = 0,
        this.clearcoatMap = null,
        this.clearcoatRoughness = 0,
        this.clearcoatRoughnessMap = null,
        this.clearcoatNormalScale = new Xn(1,1),
        this.clearcoatNormalMap = null,
        this.reflectivity = .5,
        this.sheen = null,
        this.transmission = 0,
        this.transmissionMap = null,
        this.setValues(e)
    }
    function dc(e) {
        Ai.call(this),
        this.type = "MeshPhongMaterial",
        this.color = new wi(16777215),
        this.specular = new wi(1118481),
        this.shininess = 30,
        this.map = null,
        this.lightMap = null,
        this.lightMapIntensity = 1,
        this.aoMap = null,
        this.aoMapIntensity = 1,
        this.emissive = new wi(0),
        this.emissiveIntensity = 1,
        this.emissiveMap = null,
        this.bumpMap = null,
        this.bumpScale = 1,
        this.normalMap = null,
        this.normalMapType = dn,
        this.normalScale = new Xn(1,1),
        this.displacementMap = null,
        this.displacementScale = 1,
        this.displacementBias = 0,
        this.specularMap = null,
        this.alphaMap = null,
        this.envMap = null,
        this.combine = ne,
        this.reflectivity = 1,
        this.refractionRatio = .98,
        this.wireframe = !1,
        this.wireframeLinewidth = 1,
        this.wireframeLinecap = "round",
        this.wireframeLinejoin = "round",
        this.skinning = !1,
        this.morphTargets = !1,
        this.morphNormals = !1,
        this.setValues(e)
    }
    function mc(e) {
        Ai.call(this),
        this.defines = {
            TOON: ""
        },
        this.type = "MeshToonMaterial",
        this.color = new wi(16777215),
        this.map = null,
        this.gradientMap = null,
        this.lightMap = null,
        this.lightMapIntensity = 1,
        this.aoMap = null,
        this.aoMapIntensity = 1,
        this.emissive = new wi(0),
        this.emissiveIntensity = 1,
        this.emissiveMap = null,
        this.bumpMap = null,
        this.bumpScale = 1,
        this.normalMap = null,
        this.normalMapType = dn,
        this.normalScale = new Xn(1,1),
        this.displacementMap = null,
        this.displacementScale = 1,
        this.displacementBias = 0,
        this.alphaMap = null,
        this.wireframe = !1,
        this.wireframeLinewidth = 1,
        this.wireframeLinecap = "round",
        this.wireframeLinejoin = "round",
        this.skinning = !1,
        this.morphTargets = !1,
        this.morphNormals = !1,
        this.setValues(e)
    }
    function gc(e) {
        Ai.call(this),
        this.type = "MeshNormalMaterial",
        this.bumpMap = null,
        this.bumpScale = 1,
        this.normalMap = null,
        this.normalMapType = dn,
        this.normalScale = new Xn(1,1),
        this.displacementMap = null,
        this.displacementScale = 1,
        this.displacementBias = 0,
        this.wireframe = !1,
        this.wireframeLinewidth = 1,
        this.fog = !1,
        this.skinning = !1,
        this.morphTargets = !1,
        this.morphNormals = !1,
        this.setValues(e)
    }
    function vc(e) {
        Ai.call(this),
        this.type = "MeshLambertMaterial",
        this.color = new wi(16777215),
        this.map = null,
        this.lightMap = null,
        this.lightMapIntensity = 1,
        this.aoMap = null,
        this.aoMapIntensity = 1,
        this.emissive = new wi(0),
        this.emissiveIntensity = 1,
        this.emissiveMap = null,
        this.specularMap = null,
        this.alphaMap = null,
        this.envMap = null,
        this.combine = ne,
        this.reflectivity = 1,
        this.refractionRatio = .98,
        this.wireframe = !1,
        this.wireframeLinewidth = 1,
        this.wireframeLinecap = "round",
        this.wireframeLinejoin = "round",
        this.skinning = !1,
        this.morphTargets = !1,
        this.morphNormals = !1,
        this.setValues(e)
    }
    function yc(e) {
        Ai.call(this),
        this.defines = {
            MATCAP: ""
        },
        this.type = "MeshMatcapMaterial",
        this.color = new wi(16777215),
        this.matcap = null,
        this.map = null,
        this.bumpMap = null,
        this.bumpScale = 1,
        this.normalMap = null,
        this.normalMapType = dn,
        this.normalScale = new Xn(1,1),
        this.displacementMap = null,
        this.displacementScale = 1,
        this.displacementBias = 0,
        this.alphaMap = null,
        this.skinning = !1,
        this.morphTargets = !1,
        this.morphNormals = !1,
        this.setValues(e)
    }
    function bc(e) {
        Tl.call(this),
        this.type = "LineDashedMaterial",
        this.scale = 1,
        this.dashSize = 3,
        this.gapSize = 1,
        this.setValues(e)
    }
    cc.prototype = Object.create(Ai.prototype),
    cc.prototype.constructor = cc,
    cc.prototype.isShadowMaterial = !0,
    cc.prototype.copy = function(e) {
        return Ai.prototype.copy.call(this, e),
        this.color.copy(e.color),
        this
    }
    ,
    hc.prototype = Object.create(Aa.prototype),
    hc.prototype.constructor = hc,
    hc.prototype.isRawShaderMaterial = !0,
    pc.prototype = Object.create(Ai.prototype),
    pc.prototype.constructor = pc,
    pc.prototype.isMeshStandardMaterial = !0,
    pc.prototype.copy = function(e) {
        return Ai.prototype.copy.call(this, e),
        this.defines = {
            STANDARD: ""
        },
        this.color.copy(e.color),
        this.roughness = e.roughness,
        this.metalness = e.metalness,
        this.map = e.map,
        this.lightMap = e.lightMap,
        this.lightMapIntensity = e.lightMapIntensity,
        this.aoMap = e.aoMap,
        this.aoMapIntensity = e.aoMapIntensity,
        this.emissive.copy(e.emissive),
        this.emissiveMap = e.emissiveMap,
        this.emissiveIntensity = e.emissiveIntensity,
        this.bumpMap = e.bumpMap,
        this.bumpScale = e.bumpScale,
        this.normalMap = e.normalMap,
        this.normalMapType = e.normalMapType,
        this.normalScale.copy(e.normalScale),
        this.displacementMap = e.displacementMap,
        this.displacementScale = e.displacementScale,
        this.displacementBias = e.displacementBias,
        this.roughnessMap = e.roughnessMap,
        this.metalnessMap = e.metalnessMap,
        this.alphaMap = e.alphaMap,
        this.envMap = e.envMap,
        this.envMapIntensity = e.envMapIntensity,
        this.refractionRatio = e.refractionRatio,
        this.wireframe = e.wireframe,
        this.wireframeLinewidth = e.wireframeLinewidth,
        this.wireframeLinecap = e.wireframeLinecap,
        this.wireframeLinejoin = e.wireframeLinejoin,
        this.skinning = e.skinning,
        this.morphTargets = e.morphTargets,
        this.morphNormals = e.morphNormals,
        this.vertexTangents = e.vertexTangents,
        this
    }
    ,
    fc.prototype = Object.create(pc.prototype),
    fc.prototype.constructor = fc,
    fc.prototype.isMeshPhysicalMaterial = !0,
    fc.prototype.copy = function(e) {
        return pc.prototype.copy.call(this, e),
        this.defines = {
            STANDARD: "",
            PHYSICAL: ""
        },
        this.clearcoat = e.clearcoat,
        this.clearcoatMap = e.clearcoatMap,
        this.clearcoatRoughness = e.clearcoatRoughness,
        this.clearcoatRoughnessMap = e.clearcoatRoughnessMap,
        this.clearcoatNormalMap = e.clearcoatNormalMap,
        this.clearcoatNormalScale.copy(e.clearcoatNormalScale),
        this.reflectivity = e.reflectivity,
        e.sheen ? this.sheen = (this.sheen || new wi).copy(e.sheen) : this.sheen = null,
        this.transmission = e.transmission,
        this.transmissionMap = e.transmissionMap,
        this
    }
    ,
    dc.prototype = Object.create(Ai.prototype),
    dc.prototype.constructor = dc,
    dc.prototype.isMeshPhongMaterial = !0,
    dc.prototype.copy = function(e) {
        return Ai.prototype.copy.call(this, e),
        this.color.copy(e.color),
        this.specular.copy(e.specular),
        this.shininess = e.shininess,
        this.map = e.map,
        this.lightMap = e.lightMap,
        this.lightMapIntensity = e.lightMapIntensity,
        this.aoMap = e.aoMap,
        this.aoMapIntensity = e.aoMapIntensity,
        this.emissive.copy(e.emissive),
        this.emissiveMap = e.emissiveMap,
        this.emissiveIntensity = e.emissiveIntensity,
        this.bumpMap = e.bumpMap,
        this.bumpScale = e.bumpScale,
        this.normalMap = e.normalMap,
        this.normalMapType = e.normalMapType,
        this.normalScale.copy(e.normalScale),
        this.displacementMap = e.displacementMap,
        this.displacementScale = e.displacementScale,
        this.displacementBias = e.displacementBias,
        this.specularMap = e.specularMap,
        this.alphaMap = e.alphaMap,
        this.envMap = e.envMap,
        this.combine = e.combine,
        this.reflectivity = e.reflectivity,
        this.refractionRatio = e.refractionRatio,
        this.wireframe = e.wireframe,
        this.wireframeLinewidth = e.wireframeLinewidth,
        this.wireframeLinecap = e.wireframeLinecap,
        this.wireframeLinejoin = e.wireframeLinejoin,
        this.skinning = e.skinning,
        this.morphTargets = e.morphTargets,
        this.morphNormals = e.morphNormals,
        this
    }
    ,
    mc.prototype = Object.create(Ai.prototype),
    mc.prototype.constructor = mc,
    mc.prototype.isMeshToonMaterial = !0,
    mc.prototype.copy = function(e) {
        return Ai.prototype.copy.call(this, e),
        this.color.copy(e.color),
        this.map = e.map,
        this.gradientMap = e.gradientMap,
        this.lightMap = e.lightMap,
        this.lightMapIntensity = e.lightMapIntensity,
        this.aoMap = e.aoMap,
        this.aoMapIntensity = e.aoMapIntensity,
        this.emissive.copy(e.emissive),
        this.emissiveMap = e.emissiveMap,
        this.emissiveIntensity = e.emissiveIntensity,
        this.bumpMap = e.bumpMap,
        this.bumpScale = e.bumpScale,
        this.normalMap = e.normalMap,
        this.normalMapType = e.normalMapType,
        this.normalScale.copy(e.normalScale),
        this.displacementMap = e.displacementMap,
        this.displacementScale = e.displacementScale,
        this.displacementBias = e.displacementBias,
        this.alphaMap = e.alphaMap,
        this.wireframe = e.wireframe,
        this.wireframeLinewidth = e.wireframeLinewidth,
        this.wireframeLinecap = e.wireframeLinecap,
        this.wireframeLinejoin = e.wireframeLinejoin,
        this.skinning = e.skinning,
        this.morphTargets = e.morphTargets,
        this.morphNormals = e.morphNormals,
        this
    }
    ,
    gc.prototype = Object.create(Ai.prototype),
    gc.prototype.constructor = gc,
    gc.prototype.isMeshNormalMaterial = !0,
    gc.prototype.copy = function(e) {
        return Ai.prototype.copy.call(this, e),
        this.bumpMap = e.bumpMap,
        this.bumpScale = e.bumpScale,
        this.normalMap = e.normalMap,
        this.normalMapType = e.normalMapType,
        this.normalScale.copy(e.normalScale),
        this.displacementMap = e.displacementMap,
        this.displacementScale = e.displacementScale,
        this.displacementBias = e.displacementBias,
        this.wireframe = e.wireframe,
        this.wireframeLinewidth = e.wireframeLinewidth,
        this.skinning = e.skinning,
        this.morphTargets = e.morphTargets,
        this.morphNormals = e.morphNormals,
        this
    }
    ,
    vc.prototype = Object.create(Ai.prototype),
    vc.prototype.constructor = vc,
    vc.prototype.isMeshLambertMaterial = !0,
    vc.prototype.copy = function(e) {
        return Ai.prototype.copy.call(this, e),
        this.color.copy(e.color),
        this.map = e.map,
        this.lightMap = e.lightMap,
        this.lightMapIntensity = e.lightMapIntensity,
        this.aoMap = e.aoMap,
        this.aoMapIntensity = e.aoMapIntensity,
        this.emissive.copy(e.emissive),
        this.emissiveMap = e.emissiveMap,
        this.emissiveIntensity = e.emissiveIntensity,
        this.specularMap = e.specularMap,
        this.alphaMap = e.alphaMap,
        this.envMap = e.envMap,
        this.combine = e.combine,
        this.reflectivity = e.reflectivity,
        this.refractionRatio = e.refractionRatio,
        this.wireframe = e.wireframe,
        this.wireframeLinewidth = e.wireframeLinewidth,
        this.wireframeLinecap = e.wireframeLinecap,
        this.wireframeLinejoin = e.wireframeLinejoin,
        this.skinning = e.skinning,
        this.morphTargets = e.morphTargets,
        this.morphNormals = e.morphNormals,
        this
    }
    ,
    yc.prototype = Object.create(Ai.prototype),
    yc.prototype.constructor = yc,
    yc.prototype.isMeshMatcapMaterial = !0,
    yc.prototype.copy = function(e) {
        return Ai.prototype.copy.call(this, e),
        this.defines = {
            MATCAP: ""
        },
        this.color.copy(e.color),
        this.matcap = e.matcap,
        this.map = e.map,
        this.bumpMap = e.bumpMap,
        this.bumpScale = e.bumpScale,
        this.normalMap = e.normalMap,
        this.normalMapType = e.normalMapType,
        this.normalScale.copy(e.normalScale),
        this.displacementMap = e.displacementMap,
        this.displacementScale = e.displacementScale,
        this.displacementBias = e.displacementBias,
        this.alphaMap = e.alphaMap,
        this.skinning = e.skinning,
        this.morphTargets = e.morphTargets,
        this.morphNormals = e.morphNormals,
        this
    }
    ,
    bc.prototype = Object.create(Tl.prototype),
    bc.prototype.constructor = bc,
    bc.prototype.isLineDashedMaterial = !0,
    bc.prototype.copy = function(e) {
        return Tl.prototype.copy.call(this, e),
        this.scale = e.scale,
        this.dashSize = e.dashSize,
        this.gapSize = e.gapSize,
        this
    }
    ;
    var xc = Object.freeze({
        __proto__: null,
        ShadowMaterial: cc,
        SpriteMaterial: Ks,
        RawShaderMaterial: hc,
        ShaderMaterial: Aa,
        PointsMaterial: Nl,
        MeshPhysicalMaterial: fc,
        MeshStandardMaterial: pc,
        MeshPhongMaterial: dc,
        MeshToonMaterial: mc,
        MeshNormalMaterial: gc,
        MeshLambertMaterial: vc,
        MeshDepthMaterial: Ds,
        MeshDistanceMaterial: Is,
        MeshBasicMaterial: Pi,
        MeshMatcapMaterial: yc,
        LineDashedMaterial: bc,
        LineBasicMaterial: Tl,
        Material: Ai
    })
      , wc = {
        arraySlice: function(e, t, n) {
            return wc.isTypedArray(e) ? new e.constructor(e.subarray(t, void 0 !== n ? n : e.length)) : e.slice(t, n)
        },
        convertArray: function(e, t, n) {
            return !e || !n && e.constructor === t ? e : "number" === typeof t.BYTES_PER_ELEMENT ? new t(e) : Array.prototype.slice.call(e)
        },
        isTypedArray: function(e) {
            return ArrayBuffer.isView(e) && !(e instanceof DataView)
        },
        getKeyframeOrder: function(e) {
            for (var t = e.length, n = new Array(t), r = 0; r !== t; ++r)
                n[r] = r;
            return n.sort((function(t, n) {
                return e[t] - e[n]
            }
            )),
            n
        },
        sortedArray: function(e, t, n) {
            for (var r = e.length, i = new e.constructor(r), a = 0, o = 0; o !== r; ++a)
                for (var s = n[a] * t, l = 0; l !== t; ++l)
                    i[o++] = e[s + l];
            return i
        },
        flattenJSON: function(e, t, n, r) {
            for (var i = 1, a = e[0]; void 0 !== a && void 0 === a[r]; )
                a = e[i++];
            if (void 0 !== a) {
                var o = a[r];
                if (void 0 !== o)
                    if (Array.isArray(o))
                        do {
                            void 0 !== (o = a[r]) && (t.push(a.time),
                            n.push.apply(n, o)),
                            a = e[i++]
                        } while (void 0 !== a);
                    else if (void 0 !== o.toArray)
                        do {
                            void 0 !== (o = a[r]) && (t.push(a.time),
                            o.toArray(n, n.length)),
                            a = e[i++]
                        } while (void 0 !== a);
                    else
                        do {
                            void 0 !== (o = a[r]) && (t.push(a.time),
                            n.push(o)),
                            a = e[i++]
                        } while (void 0 !== a)
            }
        },
        subclip: function(e, t, n, r, i) {
            i = i || 30;
            var a = e.clone();
            a.name = t;
            for (var o = [], s = 0; s < a.tracks.length; ++s) {
                for (var l = a.tracks[s], u = l.getValueSize(), c = [], h = [], p = 0; p < l.times.length; ++p) {
                    var f = l.times[p] * i;
                    if (!(f < n || f >= r)) {
                        c.push(l.times[p]);
                        for (var d = 0; d < u; ++d)
                            h.push(l.values[p * u + d])
                    }
                }
                0 !== c.length && (l.times = wc.convertArray(c, l.times.constructor),
                l.values = wc.convertArray(h, l.values.constructor),
                o.push(l))
            }
            a.tracks = o;
            for (var m = 1 / 0, g = 0; g < a.tracks.length; ++g)
                m > a.tracks[g].times[0] && (m = a.tracks[g].times[0]);
            for (var v = 0; v < a.tracks.length; ++v)
                a.tracks[v].shift(-1 * m);
            return a.resetDuration(),
            a
        },
        makeClipAdditive: function(e, t, n, r) {
            void 0 === t && (t = 0),
            void 0 === n && (n = e),
            (void 0 === r || r <= 0) && (r = 30);
            for (var i = e.tracks.length, a = t / r, o = function(t) {
                var r = n.tracks[t]
                  , i = r.ValueTypeName;
                if ("bool" === i || "string" === i)
                    return "continue";
                var o = e.tracks.find((function(e) {
                    return e.name === r.name && e.ValueTypeName === i
                }
                ));
                if (void 0 === o)
                    return "continue";
                var s = r.getValueSize()
                  , l = r.times.length - 1
                  , u = void 0;
                if (a <= r.times[0])
                    u = wc.arraySlice(r.values, 0, r.valueSize);
                else if (a >= r.times[l]) {
                    var c = l * s;
                    u = wc.arraySlice(r.values, c)
                } else {
                    var h = r.createInterpolant();
                    h.evaluate(a),
                    u = h.resultBuffer
                }
                "quaternion" === i && new tr(u[0],u[1],u[2],u[3]).normalize().conjugate().toArray(u);
                for (var p = o.times.length, f = 0; f < p; ++f) {
                    var d = f * s;
                    if ("quaternion" === i)
                        tr.multiplyQuaternionsFlat(o.values, d, u, 0, o.values, d);
                    else
                        for (var m = 0; m < s; ++m)
                            o.values[d + m] -= u[m]
                }
            }, s = 0; s < i; ++s)
                o(s);
            return e.blendMode = Qt,
            e
        }
    };
    function _c(e, t, n, r) {
        this.parameterPositions = e,
        this._cachedIndex = 0,
        this.resultBuffer = void 0 !== r ? r : new t.constructor(n),
        this.sampleValues = t,
        this.valueSize = n
    }
    function Sc(e, t, n, r) {
        _c.call(this, e, t, n, r),
        this._weightPrev = -0,
        this._offsetPrev = -0,
        this._weightNext = -0,
        this._offsetNext = -0
    }
    function Ec(e, t, n, r) {
        _c.call(this, e, t, n, r)
    }
    function Mc(e, t, n, r) {
        _c.call(this, e, t, n, r)
    }
    function Tc(e, t, n, r) {
        if (void 0 === e)
            throw new Error("THREE.KeyframeTrack: track name is undefined");
        if (void 0 === t || 0 === t.length)
            throw new Error("THREE.KeyframeTrack: no keyframes in track named " + e);
        this.name = e,
        this.times = wc.convertArray(t, this.TimeBufferType),
        this.values = wc.convertArray(n, this.ValueBufferType),
        this.setInterpolation(r || this.DefaultInterpolation)
    }
    function Ac(e, t, n) {
        Tc.call(this, e, t, n)
    }
    function Pc(e, t, n, r) {
        Tc.call(this, e, t, n, r)
    }
    function Cc(e, t, n, r) {
        Tc.call(this, e, t, n, r)
    }
    function Lc(e, t, n, r) {
        _c.call(this, e, t, n, r)
    }
    function Rc(e, t, n, r) {
        Tc.call(this, e, t, n, r)
    }
    function kc(e, t, n, r) {
        Tc.call(this, e, t, n, r)
    }
    function Dc(e, t, n, r) {
        Tc.call(this, e, t, n, r)
    }
    function Ic(e, t, n, r) {
        this.name = e,
        this.tracks = n,
        this.duration = void 0 !== t ? t : -1,
        this.blendMode = void 0 !== r ? r : Kt,
        this.uuid = qn.generateUUID(),
        this.duration < 0 && this.resetDuration()
    }
    function Oc(e) {
        if (void 0 === e.type)
            throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");
        var t = function(e) {
            switch (e.toLowerCase()) {
            case "scalar":
            case "double":
            case "float":
            case "number":
            case "integer":
                return Cc;
            case "vector":
            case "vector2":
            case "vector3":
            case "vector4":
                return Dc;
            case "color":
                return Pc;
            case "quaternion":
                return Rc;
            case "bool":
            case "boolean":
                return Ac;
            case "string":
                return kc
            }
            throw new Error("THREE.KeyframeTrack: Unsupported typeName: " + e)
        }(e.type);
        if (void 0 === e.times) {
            var n = []
              , r = [];
            wc.flattenJSON(e.keys, n, r, "value"),
            e.times = n,
            e.values = r
        }
        return void 0 !== t.parse ? t.parse(e) : new t(e.name,e.times,e.values,e.interpolation)
    }
    Object.assign(_c.prototype, {
        evaluate: function(e) {
            var t = this.parameterPositions
              , n = this._cachedIndex
              , r = t[n]
              , i = t[n - 1];
            e: {
                t: {
                    var a;
                    n: {
                        r: if (!(e < r)) {
                            for (var o = n + 2; ; ) {
                                if (void 0 === r) {
                                    if (e < i)
                                        break r;
                                    return n = t.length,
                                    this._cachedIndex = n,
                                    this.afterEnd_(n - 1, e, i)
                                }
                                if (n === o)
                                    break;
                                if (i = r,
                                e < (r = t[++n]))
                                    break t
                            }
                            a = t.length;
                            break n
                        }
                        if (e >= i)
                            break e;
                        var s = t[1];
                        e < s && (n = 2,
                        i = s);
                        for (var l = n - 2; ; ) {
                            if (void 0 === i)
                                return this._cachedIndex = 0,
                                this.beforeStart_(0, e, r);
                            if (n === l)
                                break;
                            if (r = i,
                            e >= (i = t[--n - 1]))
                                break t
                        }
                        a = n,
                        n = 0
                    }
                    for (; n < a; ) {
                        var u = n + a >>> 1;
                        e < t[u] ? a = u : n = u + 1
                    }
                    if (r = t[n],
                    void 0 === (i = t[n - 1]))
                        return this._cachedIndex = 0,
                        this.beforeStart_(0, e, r);
                    if (void 0 === r)
                        return n = t.length,
                        this._cachedIndex = n,
                        this.afterEnd_(n - 1, i, e)
                }
                this._cachedIndex = n,
                this.intervalChanged_(n, i, r)
            }
            return this.interpolate_(n, i, e, r)
        },
        settings: null,
        DefaultSettings_: {},
        getSettings_: function() {
            return this.settings || this.DefaultSettings_
        },
        copySampleValue_: function(e) {
            for (var t = this.resultBuffer, n = this.sampleValues, r = this.valueSize, i = e * r, a = 0; a !== r; ++a)
                t[a] = n[i + a];
            return t
        },
        interpolate_: function() {
            throw new Error("call to abstract method")
        },
        intervalChanged_: function() {}
    }),
    Object.assign(_c.prototype, {
        beforeStart_: _c.prototype.copySampleValue_,
        afterEnd_: _c.prototype.copySampleValue_
    }),
    Sc.prototype = Object.assign(Object.create(_c.prototype), {
        constructor: Sc,
        DefaultSettings_: {
            endingStart: Zt,
            endingEnd: Zt
        },
        intervalChanged_: function(e, t, n) {
            var r = this.parameterPositions
              , i = e - 2
              , a = e + 1
              , o = r[i]
              , s = r[a];
            if (void 0 === o)
                switch (this.getSettings_().endingStart) {
                case $t:
                    i = e,
                    o = 2 * t - n;
                    break;
                case Jt:
                    o = t + r[i = r.length - 2] - r[i + 1];
                    break;
                default:
                    i = e,
                    o = n
                }
            if (void 0 === s)
                switch (this.getSettings_().endingEnd) {
                case $t:
                    a = e,
                    s = 2 * n - t;
                    break;
                case Jt:
                    a = 1,
                    s = n + r[1] - r[0];
                    break;
                default:
                    a = e - 1,
                    s = t
                }
            var l = .5 * (n - t)
              , u = this.valueSize;
            this._weightPrev = l / (t - o),
            this._weightNext = l / (s - n),
            this._offsetPrev = i * u,
            this._offsetNext = a * u
        },
        interpolate_: function(e, t, n, r) {
            for (var i = this.resultBuffer, a = this.sampleValues, o = this.valueSize, s = e * o, l = s - o, u = this._offsetPrev, c = this._offsetNext, h = this._weightPrev, p = this._weightNext, f = (n - t) / (r - t), d = f * f, m = d * f, g = -h * m + 2 * h * d - h * f, v = (1 + h) * m + (-1.5 - 2 * h) * d + (-.5 + h) * f + 1, y = (-1 - p) * m + (1.5 + p) * d + .5 * f, b = p * m - p * d, x = 0; x !== o; ++x)
                i[x] = g * a[u + x] + v * a[l + x] + y * a[s + x] + b * a[c + x];
            return i
        }
    }),
    Ec.prototype = Object.assign(Object.create(_c.prototype), {
        constructor: Ec,
        interpolate_: function(e, t, n, r) {
            for (var i = this.resultBuffer, a = this.sampleValues, o = this.valueSize, s = e * o, l = s - o, u = (n - t) / (r - t), c = 1 - u, h = 0; h !== o; ++h)
                i[h] = a[l + h] * c + a[s + h] * u;
            return i
        }
    }),
    Mc.prototype = Object.assign(Object.create(_c.prototype), {
        constructor: Mc,
        interpolate_: function(e) {
            return this.copySampleValue_(e - 1)
        }
    }),
    Object.assign(Tc, {
        toJSON: function(e) {
            var t, n = e.constructor;
            if (void 0 !== n.toJSON)
                t = n.toJSON(e);
            else {
                t = {
                    name: e.name,
                    times: wc.convertArray(e.times, Array),
                    values: wc.convertArray(e.values, Array)
                };
                var r = e.getInterpolation();
                r !== e.DefaultInterpolation && (t.interpolation = r)
            }
            return t.type = e.ValueTypeName,
            t
        }
    }),
    Object.assign(Tc.prototype, {
        constructor: Tc,
        TimeBufferType: Float32Array,
        ValueBufferType: Float32Array,
        DefaultInterpolation: Xt,
        InterpolantFactoryMethodDiscrete: function(e) {
            return new Mc(this.times,this.values,this.getValueSize(),e)
        },
        InterpolantFactoryMethodLinear: function(e) {
            return new Ec(this.times,this.values,this.getValueSize(),e)
        },
        InterpolantFactoryMethodSmooth: function(e) {
            return new Sc(this.times,this.values,this.getValueSize(),e)
        },
        setInterpolation: function(e) {
            var t;
            switch (e) {
            case qt:
                t = this.InterpolantFactoryMethodDiscrete;
                break;
            case Xt:
                t = this.InterpolantFactoryMethodLinear;
                break;
            case Yt:
                t = this.InterpolantFactoryMethodSmooth
            }
            if (void 0 === t) {
                var n = "unsupported interpolation for " + this.ValueTypeName + " keyframe track named " + this.name;
                if (void 0 === this.createInterpolant) {
                    if (e === this.DefaultInterpolation)
                        throw new Error(n);
                    this.setInterpolation(this.DefaultInterpolation)
                }
                return console.warn("THREE.KeyframeTrack:", n),
                this
            }
            return this.createInterpolant = t,
            this
        },
        getInterpolation: function() {
            switch (this.createInterpolant) {
            case this.InterpolantFactoryMethodDiscrete:
                return qt;
            case this.InterpolantFactoryMethodLinear:
                return Xt;
            case this.InterpolantFactoryMethodSmooth:
                return Yt
            }
        },
        getValueSize: function() {
            return this.values.length / this.times.length
        },
        shift: function(e) {
            if (0 !== e)
                for (var t = this.times, n = 0, r = t.length; n !== r; ++n)
                    t[n] += e;
            return this
        },
        scale: function(e) {
            if (1 !== e)
                for (var t = this.times, n = 0, r = t.length; n !== r; ++n)
                    t[n] *= e;
            return this
        },
        trim: function(e, t) {
            for (var n = this.times, r = n.length, i = 0, a = r - 1; i !== r && n[i] < e; )
                ++i;
            for (; -1 !== a && n[a] > t; )
                --a;
            if (++a,
            0 !== i || a !== r) {
                i >= a && (i = (a = Math.max(a, 1)) - 1);
                var o = this.getValueSize();
                this.times = wc.arraySlice(n, i, a),
                this.values = wc.arraySlice(this.values, i * o, a * o)
            }
            return this
        },
        validate: function() {
            var e = !0
              , t = this.getValueSize();
            t - Math.floor(t) !== 0 && (console.error("THREE.KeyframeTrack: Invalid value size in track.", this),
            e = !1);
            var n = this.times
              , r = this.values
              , i = n.length;
            0 === i && (console.error("THREE.KeyframeTrack: Track is empty.", this),
            e = !1);
            for (var a = null, o = 0; o !== i; o++) {
                var s = n[o];
                if ("number" === typeof s && isNaN(s)) {
                    console.error("THREE.KeyframeTrack: Time is not a valid number.", this, o, s),
                    e = !1;
                    break
                }
                if (null !== a && a > s) {
                    console.error("THREE.KeyframeTrack: Out of order keys.", this, o, s, a),
                    e = !1;
                    break
                }
                a = s
            }
            if (void 0 !== r && wc.isTypedArray(r))
                for (var l = 0, u = r.length; l !== u; ++l) {
                    var c = r[l];
                    if (isNaN(c)) {
                        console.error("THREE.KeyframeTrack: Value is not a valid number.", this, l, c),
                        e = !1;
                        break
                    }
                }
            return e
        },
        optimize: function() {
            for (var e = wc.arraySlice(this.times), t = wc.arraySlice(this.values), n = this.getValueSize(), r = this.getInterpolation() === Yt, i = e.length - 1, a = 1, o = 1; o < i; ++o) {
                var s = !1
                  , l = e[o];
                if (l !== e[o + 1] && (1 !== o || l !== l[0]))
                    if (r)
                        s = !0;
                    else
                        for (var u = o * n, c = u - n, h = u + n, p = 0; p !== n; ++p) {
                            var f = t[u + p];
                            if (f !== t[c + p] || f !== t[h + p]) {
                                s = !0;
                                break
                            }
                        }
                if (s) {
                    if (o !== a) {
                        e[a] = e[o];
                        for (var d = o * n, m = a * n, g = 0; g !== n; ++g)
                            t[m + g] = t[d + g]
                    }
                    ++a
                }
            }
            if (i > 0) {
                e[a] = e[i];
                for (var v = i * n, y = a * n, b = 0; b !== n; ++b)
                    t[y + b] = t[v + b];
                ++a
            }
            return a !== e.length ? (this.times = wc.arraySlice(e, 0, a),
            this.values = wc.arraySlice(t, 0, a * n)) : (this.times = e,
            this.values = t),
            this
        },
        clone: function() {
            var e = wc.arraySlice(this.times, 0)
              , t = wc.arraySlice(this.values, 0)
              , n = new (0,
            this.constructor)(this.name,e,t);
            return n.createInterpolant = this.createInterpolant,
            n
        }
    }),
    Ac.prototype = Object.assign(Object.create(Tc.prototype), {
        constructor: Ac,
        ValueTypeName: "bool",
        ValueBufferType: Array,
        DefaultInterpolation: qt,
        InterpolantFactoryMethodLinear: void 0,
        InterpolantFactoryMethodSmooth: void 0
    }),
    Pc.prototype = Object.assign(Object.create(Tc.prototype), {
        constructor: Pc,
        ValueTypeName: "color"
    }),
    Cc.prototype = Object.assign(Object.create(Tc.prototype), {
        constructor: Cc,
        ValueTypeName: "number"
    }),
    Lc.prototype = Object.assign(Object.create(_c.prototype), {
        constructor: Lc,
        interpolate_: function(e, t, n, r) {
            for (var i = this.resultBuffer, a = this.sampleValues, o = this.valueSize, s = (n - t) / (r - t), l = e * o, u = l + o; l !== u; l += 4)
                tr.slerpFlat(i, 0, a, l - o, a, l, s);
            return i
        }
    }),
    Rc.prototype = Object.assign(Object.create(Tc.prototype), {
        constructor: Rc,
        ValueTypeName: "quaternion",
        DefaultInterpolation: Xt,
        InterpolantFactoryMethodLinear: function(e) {
            return new Lc(this.times,this.values,this.getValueSize(),e)
        },
        InterpolantFactoryMethodSmooth: void 0
    }),
    kc.prototype = Object.assign(Object.create(Tc.prototype), {
        constructor: kc,
        ValueTypeName: "string",
        ValueBufferType: Array,
        DefaultInterpolation: qt,
        InterpolantFactoryMethodLinear: void 0,
        InterpolantFactoryMethodSmooth: void 0
    }),
    Dc.prototype = Object.assign(Object.create(Tc.prototype), {
        constructor: Dc,
        ValueTypeName: "vector"
    }),
    Object.assign(Ic, {
        parse: function(e) {
            for (var t = [], n = e.tracks, r = 1 / (e.fps || 1), i = 0, a = n.length; i !== a; ++i)
                t.push(Oc(n[i]).scale(r));
            return new Ic(e.name,e.duration,t,e.blendMode)
        },
        toJSON: function(e) {
            for (var t = [], n = e.tracks, r = {
                name: e.name,
                duration: e.duration,
                tracks: t,
                uuid: e.uuid,
                blendMode: e.blendMode
            }, i = 0, a = n.length; i !== a; ++i)
                t.push(Tc.toJSON(n[i]));
            return r
        },
        CreateFromMorphTargetSequence: function(e, t, n, r) {
            for (var i = t.length, a = [], o = 0; o < i; o++) {
                var s = []
                  , l = [];
                s.push((o + i - 1) % i, o, (o + 1) % i),
                l.push(0, 1, 0);
                var u = wc.getKeyframeOrder(s);
                s = wc.sortedArray(s, 1, u),
                l = wc.sortedArray(l, 1, u),
                r || 0 !== s[0] || (s.push(i),
                l.push(l[0])),
                a.push(new Cc(".morphTargetInfluences[" + t[o].name + "]",s,l).scale(1 / n))
            }
            return new Ic(e,-1,a)
        },
        findByName: function(e, t) {
            var n = e;
            if (!Array.isArray(e)) {
                var r = e;
                n = r.geometry && r.geometry.animations || r.animations
            }
            for (var i = 0; i < n.length; i++)
                if (n[i].name === t)
                    return n[i];
            return null
        },
        CreateClipsFromMorphTargetSequences: function(e, t, n) {
            for (var r = {}, i = /^([\w-]*?)([\d]+)$/, a = 0, o = e.length; a < o; a++) {
                var s = e[a]
                  , l = s.name.match(i);
                if (l && l.length > 1) {
                    var u = l[1]
                      , c = r[u];
                    c || (r[u] = c = []),
                    c.push(s)
                }
            }
            var h = [];
            for (var p in r)
                h.push(Ic.CreateFromMorphTargetSequence(p, r[p], t, n));
            return h
        },
        parseAnimation: function(e, t) {
            if (!e)
                return console.error("THREE.AnimationClip: No animation in JSONLoader data."),
                null;
            for (var n = function(e, t, n, r, i) {
                if (0 !== n.length) {
                    var a = []
                      , o = [];
                    wc.flattenJSON(n, a, o, r),
                    0 !== a.length && i.push(new e(t,a,o))
                }
            }, r = [], i = e.name || "default", a = e.fps || 30, o = e.blendMode, s = e.length || -1, l = e.hierarchy || [], u = 0; u < l.length; u++) {
                var c = l[u].keys;
                if (c && 0 !== c.length)
                    if (c[0].morphTargets) {
                        var h = {}
                          , p = void 0;
                        for (p = 0; p < c.length; p++)
                            if (c[p].morphTargets)
                                for (var f = 0; f < c[p].morphTargets.length; f++)
                                    h[c[p].morphTargets[f]] = -1;
                        for (var d in h) {
                            for (var m = [], g = [], v = 0; v !== c[p].morphTargets.length; ++v) {
                                var y = c[p];
                                m.push(y.time),
                                g.push(y.morphTarget === d ? 1 : 0)
                            }
                            r.push(new Cc(".morphTargetInfluence[" + d + "]",m,g))
                        }
                        s = h.length * (a || 1)
                    } else {
                        var b = ".bones[" + t[u].name + "]";
                        n(Dc, b + ".position", c, "pos", r),
                        n(Rc, b + ".quaternion", c, "rot", r),
                        n(Dc, b + ".scale", c, "scl", r)
                    }
            }
            return 0 === r.length ? null : new Ic(i,s,r,o)
        }
    }),
    Object.assign(Ic.prototype, {
        resetDuration: function() {
            for (var e = 0, t = 0, n = this.tracks.length; t !== n; ++t) {
                var r = this.tracks[t];
                e = Math.max(e, r.times[r.times.length - 1])
            }
            return this.duration = e,
            this
        },
        trim: function() {
            for (var e = 0; e < this.tracks.length; e++)
                this.tracks[e].trim(0, this.duration);
            return this
        },
        validate: function() {
            for (var e = !0, t = 0; t < this.tracks.length; t++)
                e = e && this.tracks[t].validate();
            return e
        },
        optimize: function() {
            for (var e = 0; e < this.tracks.length; e++)
                this.tracks[e].optimize();
            return this
        },
        clone: function() {
            for (var e = [], t = 0; t < this.tracks.length; t++)
                e.push(this.tracks[t].clone());
            return new Ic(this.name,this.duration,e,this.blendMode)
        }
    });
    var Fc = {
        enabled: !1,
        files: {},
        add: function(e, t) {
            !1 !== this.enabled && (this.files[e] = t)
        },
        get: function(e) {
            if (!1 !== this.enabled)
                return this.files[e]
        },
        remove: function(e) {
            delete this.files[e]
        },
        clear: function() {
            this.files = {}
        }
    };
    function Nc(e, t, n) {
        var r = this
          , i = !1
          , a = 0
          , o = 0
          , s = void 0
          , l = [];
        this.onStart = void 0,
        this.onLoad = e,
        this.onProgress = t,
        this.onError = n,
        this.itemStart = function(e) {
            o++,
            !1 === i && void 0 !== r.onStart && r.onStart(e, a, o),
            i = !0
        }
        ,
        this.itemEnd = function(e) {
            a++,
            void 0 !== r.onProgress && r.onProgress(e, a, o),
            a === o && (i = !1,
            void 0 !== r.onLoad && r.onLoad())
        }
        ,
        this.itemError = function(e) {
            void 0 !== r.onError && r.onError(e)
        }
        ,
        this.resolveURL = function(e) {
            return s ? s(e) : e
        }
        ,
        this.setURLModifier = function(e) {
            return s = e,
            this
        }
        ,
        this.addHandler = function(e, t) {
            return l.push(e, t),
            this
        }
        ,
        this.removeHandler = function(e) {
            var t = l.indexOf(e);
            return -1 !== t && l.splice(t, 2),
            this
        }
        ,
        this.getHandler = function(e) {
            for (var t = 0, n = l.length; t < n; t += 2) {
                var r = l[t]
                  , i = l[t + 1];
                if (r.global && (r.lastIndex = 0),
                r.test(e))
                    return i
            }
            return null
        }
    }
    var Bc = new Nc;
    function zc(e) {
        this.manager = void 0 !== e ? e : Bc,
        this.crossOrigin = "anonymous",
        this.path = "",
        this.resourcePath = "",
        this.requestHeader = {}
    }
    Object.assign(zc.prototype, {
        load: function() {},
        loadAsync: function(e, t) {
            var n = this;
            return new Promise((function(r, i) {
                n.load(e, r, t, i)
            }
            ))
        },
        parse: function() {},
        setCrossOrigin: function(e) {
            return this.crossOrigin = e,
            this
        },
        setPath: function(e) {
            return this.path = e,
            this
        },
        setResourcePath: function(e) {
            return this.resourcePath = e,
            this
        },
        setRequestHeader: function(e) {
            return this.requestHeader = e,
            this
        }
    });
    var Gc = {};
    function Hc(e) {
        zc.call(this, e)
    }
    function Vc(e) {
        zc.call(this, e)
    }
    function jc(e) {
        zc.call(this, e)
    }
    function Uc(e) {
        zc.call(this, e)
    }
    function Wc(e) {
        zc.call(this, e)
    }
    function qc(e) {
        zc.call(this, e)
    }
    function Xc(e) {
        zc.call(this, e)
    }
    function Yc() {
        this.type = "Curve",
        this.arcLengthDivisions = 200
    }
    function Zc(e, t, n, r, i, a, o, s) {
        Yc.call(this),
        this.type = "EllipseCurve",
        this.aX = e || 0,
        this.aY = t || 0,
        this.xRadius = n || 1,
        this.yRadius = r || 1,
        this.aStartAngle = i || 0,
        this.aEndAngle = a || 2 * Math.PI,
        this.aClockwise = o || !1,
        this.aRotation = s || 0
    }
    function $c(e, t, n, r, i, a) {
        Zc.call(this, e, t, n, n, r, i, a),
        this.type = "ArcCurve"
    }
    function Jc() {
        var e = 0
          , t = 0
          , n = 0
          , r = 0;
        function i(i, a, o, s) {
            e = i,
            t = o,
            n = -3 * i + 3 * a - 2 * o - s,
            r = 2 * i - 2 * a + o + s
        }
        return {
            initCatmullRom: function(e, t, n, r, a) {
                i(t, n, a * (n - e), a * (r - t))
            },
            initNonuniformCatmullRom: function(e, t, n, r, a, o, s) {
                var l = (t - e) / a - (n - e) / (a + o) + (n - t) / o
                  , u = (n - t) / o - (r - t) / (o + s) + (r - n) / s;
                i(t, n, l *= o, u *= o)
            },
            calc: function(i) {
                var a = i * i;
                return e + t * i + n * a + r * (a * i)
            }
        }
    }
    Hc.prototype = Object.assign(Object.create(zc.prototype), {
        constructor: Hc,
        load: function(e, t, n, r) {
            void 0 === e && (e = ""),
            void 0 !== this.path && (e = this.path + e),
            e = this.manager.resolveURL(e);
            var i = this
              , a = Fc.get(e);
            if (void 0 !== a)
                return i.manager.itemStart(e),
                setTimeout((function() {
                    t && t(a),
                    i.manager.itemEnd(e)
                }
                ), 0),
                a;
            if (void 0 === Gc[e]) {
                var o, s = e.match(/^data:(.*?)(;base64)?,(.*)$/);
                if (s) {
                    var l = s[1]
                      , u = !!s[2]
                      , c = s[3];
                    c = decodeURIComponent(c),
                    u && (c = atob(c));
                    try {
                        var h, p = (this.responseType || "").toLowerCase();
                        switch (p) {
                        case "arraybuffer":
                        case "blob":
                            for (var f = new Uint8Array(c.length), d = 0; d < c.length; d++)
                                f[d] = c.charCodeAt(d);
                            h = "blob" === p ? new Blob([f.buffer],{
                                type: l
                            }) : f.buffer;
                            break;
                        case "document":
                            var m = new DOMParser;
                            h = m.parseFromString(c, l);
                            break;
                        case "json":
                            h = JSON.parse(c);
                            break;
                        default:
                            h = c
                        }
                        setTimeout((function() {
                            t && t(h),
                            i.manager.itemEnd(e)
                        }
                        ), 0)
                    } catch (v) {
                        setTimeout((function() {
                            r && r(v),
                            i.manager.itemError(e),
                            i.manager.itemEnd(e)
                        }
                        ), 0)
                    }
                } else {
                    for (var g in Gc[e] = [],
                    Gc[e].push({
                        onLoad: t,
                        onProgress: n,
                        onError: r
                    }),
                    (o = new XMLHttpRequest).open("GET", e, !0),
                    o.addEventListener("load", (function(t) {
                        var n = this.response
                          , r = Gc[e];
                        if (delete Gc[e],
                        200 === this.status || 0 === this.status) {
                            0 === this.status && console.warn("THREE.FileLoader: HTTP Status 0 received."),
                            Fc.add(e, n);
                            for (var a = 0, o = r.length; a < o; a++) {
                                var s = r[a];
                                s.onLoad && s.onLoad(n)
                            }
                            i.manager.itemEnd(e)
                        } else {
                            for (var l = 0, u = r.length; l < u; l++) {
                                var c = r[l];
                                c.onError && c.onError(t)
                            }
                            i.manager.itemError(e),
                            i.manager.itemEnd(e)
                        }
                    }
                    ), !1),
                    o.addEventListener("progress", (function(t) {
                        for (var n = Gc[e], r = 0, i = n.length; r < i; r++) {
                            var a = n[r];
                            a.onProgress && a.onProgress(t)
                        }
                    }
                    ), !1),
                    o.addEventListener("error", (function(t) {
                        var n = Gc[e];
                        delete Gc[e];
                        for (var r = 0, a = n.length; r < a; r++) {
                            var o = n[r];
                            o.onError && o.onError(t)
                        }
                        i.manager.itemError(e),
                        i.manager.itemEnd(e)
                    }
                    ), !1),
                    o.addEventListener("abort", (function(t) {
                        var n = Gc[e];
                        delete Gc[e];
                        for (var r = 0, a = n.length; r < a; r++) {
                            var o = n[r];
                            o.onError && o.onError(t)
                        }
                        i.manager.itemError(e),
                        i.manager.itemEnd(e)
                    }
                    ), !1),
                    void 0 !== this.responseType && (o.responseType = this.responseType),
                    void 0 !== this.withCredentials && (o.withCredentials = this.withCredentials),
                    o.overrideMimeType && o.overrideMimeType(void 0 !== this.mimeType ? this.mimeType : "text/plain"),
                    this.requestHeader)
                        o.setRequestHeader(g, this.requestHeader[g]);
                    o.send(null)
                }
                return i.manager.itemStart(e),
                o
            }
            Gc[e].push({
                onLoad: t,
                onProgress: n,
                onError: r
            })
        },
        setResponseType: function(e) {
            return this.responseType = e,
            this
        },
        setWithCredentials: function(e) {
            return this.withCredentials = e,
            this
        },
        setMimeType: function(e) {
            return this.mimeType = e,
            this
        }
    }),
    Vc.prototype = Object.assign(Object.create(zc.prototype), {
        constructor: Vc,
        load: function(e, t, n, r) {
            var i = this
              , a = new Hc(i.manager);
            a.setPath(i.path),
            a.setRequestHeader(i.requestHeader),
            a.load(e, (function(n) {
                try {
                    t(i.parse(JSON.parse(n)))
                } catch (a) {
                    r ? r(a) : console.error(a),
                    i.manager.itemError(e)
                }
            }
            ), n, r)
        },
        parse: function(e) {
            for (var t = [], n = 0; n < e.length; n++) {
                var r = Ic.parse(e[n]);
                t.push(r)
            }
            return t
        }
    }),
    jc.prototype = Object.assign(Object.create(zc.prototype), {
        constructor: jc,
        load: function(e, t, n, r) {
            var i = this
              , a = []
              , o = new Wl;
            o.image = a;
            var s = new Hc(this.manager);
            s.setPath(this.path),
            s.setResponseType("arraybuffer"),
            s.setRequestHeader(this.requestHeader);
            var l = 0;
            function u(u) {
                s.load(e[u], (function(e) {
                    var n = i.parse(e, !0);
                    a[u] = {
                        width: n.width,
                        height: n.height,
                        format: n.format,
                        mipmaps: n.mipmaps
                    },
                    6 === (l += 1) && (1 === n.mipmapCount && (o.minFilter = Te),
                    o.format = n.format,
                    o.needsUpdate = !0,
                    t && t(o))
                }
                ), n, r)
            }
            if (Array.isArray(e))
                for (var c = 0, h = e.length; c < h; ++c)
                    u(c);
            else
                s.load(e, (function(e) {
                    var n = i.parse(e, !0);
                    if (n.isCubemap)
                        for (var r = n.mipmaps.length / n.mipmapCount, s = 0; s < r; s++) {
                            a[s] = {
                                mipmaps: []
                            };
                            for (var l = 0; l < n.mipmapCount; l++)
                                a[s].mipmaps.push(n.mipmaps[s * n.mipmapCount + l]),
                                a[s].format = n.format,
                                a[s].width = n.width,
                                a[s].height = n.height
                        }
                    else
                        o.image.width = n.width,
                        o.image.height = n.height,
                        o.mipmaps = n.mipmaps;
                    1 === n.mipmapCount && (o.minFilter = Te),
                    o.format = n.format,
                    o.needsUpdate = !0,
                    t && t(o)
                }
                ), n, r);
            return o
        }
    }),
    Uc.prototype = Object.assign(Object.create(zc.prototype), {
        constructor: Uc,
        load: function(e, t, n, r) {
            var i = this
              , a = new ka
              , o = new Hc(this.manager);
            return o.setResponseType("arraybuffer"),
            o.setRequestHeader(this.requestHeader),
            o.setPath(this.path),
            o.load(e, (function(e) {
                var n = i.parse(e);
                n && (void 0 !== n.image ? a.image = n.image : void 0 !== n.data && (a.image.width = n.width,
                a.image.height = n.height,
                a.image.data = n.data),
                a.wrapS = void 0 !== n.wrapS ? n.wrapS : be,
                a.wrapT = void 0 !== n.wrapT ? n.wrapT : be,
                a.magFilter = void 0 !== n.magFilter ? n.magFilter : Te,
                a.minFilter = void 0 !== n.minFilter ? n.minFilter : Te,
                a.anisotropy = void 0 !== n.anisotropy ? n.anisotropy : 1,
                void 0 !== n.format && (a.format = n.format),
                void 0 !== n.type && (a.type = n.type),
                void 0 !== n.mipmaps && (a.mipmaps = n.mipmaps,
                a.minFilter = Ce),
                1 === n.mipmapCount && (a.minFilter = Te),
                a.needsUpdate = !0,
                t && t(a, n))
            }
            ), n, r),
            a
        }
    }),
    Wc.prototype = Object.assign(Object.create(zc.prototype), {
        constructor: Wc,
        load: function(e, t, n, r) {
            void 0 !== this.path && (e = this.path + e),
            e = this.manager.resolveURL(e);
            var i = this
              , a = Fc.get(e);
            if (void 0 !== a)
                return i.manager.itemStart(e),
                setTimeout((function() {
                    t && t(a),
                    i.manager.itemEnd(e)
                }
                ), 0),
                a;
            var o = document.createElementNS("http://www.w3.org/1999/xhtml", "img");
            function s() {
                o.removeEventListener("load", s, !1),
                o.removeEventListener("error", l, !1),
                Fc.add(e, this),
                t && t(this),
                i.manager.itemEnd(e)
            }
            function l(t) {
                o.removeEventListener("load", s, !1),
                o.removeEventListener("error", l, !1),
                r && r(t),
                i.manager.itemError(e),
                i.manager.itemEnd(e)
            }
            return o.addEventListener("load", s, !1),
            o.addEventListener("error", l, !1),
            "data:" !== e.substr(0, 5) && void 0 !== this.crossOrigin && (o.crossOrigin = this.crossOrigin),
            i.manager.itemStart(e),
            o.src = e,
            o
        }
    }),
    qc.prototype = Object.assign(Object.create(zc.prototype), {
        constructor: qc,
        load: function(e, t, n, r) {
            var i = new no
              , a = new Wc(this.manager);
            a.setCrossOrigin(this.crossOrigin),
            a.setPath(this.path);
            var o = 0;
            function s(n) {
                a.load(e[n], (function(e) {
                    i.images[n] = e,
                    6 === ++o && (i.needsUpdate = !0,
                    t && t(i))
                }
                ), void 0, r)
            }
            for (var l = 0; l < e.length; ++l)
                s(l);
            return i
        }
    }),
    Xc.prototype = Object.assign(Object.create(zc.prototype), {
        constructor: Xc,
        load: function(e, t, n, r) {
            var i = new Jn
              , a = new Wc(this.manager);
            return a.setCrossOrigin(this.crossOrigin),
            a.setPath(this.path),
            a.load(e, (function(n) {
                i.image = n;
                var r = e.search(/\.jpe?g($|\?)/i) > 0 || 0 === e.search(/^data\:image\/jpeg/);
                i.format = r ? Ue : We,
                i.needsUpdate = !0,
                void 0 !== t && t(i)
            }
            ), n, r),
            i
        }
    }),
    Object.assign(Yc.prototype, {
        getPoint: function() {
            return console.warn("THREE.Curve: .getPoint() not implemented."),
            null
        },
        getPointAt: function(e, t) {
            var n = this.getUtoTmapping(e);
            return this.getPoint(n, t)
        },
        getPoints: function(e) {
            void 0 === e && (e = 5);
            for (var t = [], n = 0; n <= e; n++)
                t.push(this.getPoint(n / e));
            return t
        },
        getSpacedPoints: function(e) {
            void 0 === e && (e = 5);
            for (var t = [], n = 0; n <= e; n++)
                t.push(this.getPointAt(n / e));
            return t
        },
        getLength: function() {
            var e = this.getLengths();
            return e[e.length - 1]
        },
        getLengths: function(e) {
            if (void 0 === e && (e = this.arcLengthDivisions),
            this.cacheArcLengths && this.cacheArcLengths.length === e + 1 && !this.needsUpdate)
                return this.cacheArcLengths;
            this.needsUpdate = !1;
            var t, n = [], r = this.getPoint(0), i = 0;
            n.push(0);
            for (var a = 1; a <= e; a++)
                i += (t = this.getPoint(a / e)).distanceTo(r),
                n.push(i),
                r = t;
            return this.cacheArcLengths = n,
            n
        },
        updateArcLengths: function() {
            this.needsUpdate = !0,
            this.getLengths()
        },
        getUtoTmapping: function(e, t) {
            var n, r = this.getLengths(), i = 0, a = r.length;
            n = t || e * r[a - 1];
            for (var o, s = 0, l = a - 1; s <= l; )
                if ((o = r[i = Math.floor(s + (l - s) / 2)] - n) < 0)
                    s = i + 1;
                else {
                    if (!(o > 0)) {
                        l = i;
                        break
                    }
                    l = i - 1
                }
            if (r[i = l] === n)
                return i / (a - 1);
            var u = r[i];
            return (i + (n - u) / (r[i + 1] - u)) / (a - 1)
        },
        getTangent: function(e, t) {
            var n = e - 1e-4
              , r = e + 1e-4;
            n < 0 && (n = 0),
            r > 1 && (r = 1);
            var i = this.getPoint(n)
              , a = this.getPoint(r)
              , o = t || (i.isVector2 ? new Xn : new ir);
            return o.copy(a).sub(i).normalize(),
            o
        },
        getTangentAt: function(e, t) {
            var n = this.getUtoTmapping(e);
            return this.getTangent(n, t)
        },
        computeFrenetFrames: function(e, t) {
            for (var n = new ir, r = [], i = [], a = [], o = new ir, s = new pr, l = 0; l <= e; l++) {
                var u = l / e;
                r[l] = this.getTangentAt(u, new ir),
                r[l].normalize()
            }
            i[0] = new ir,
            a[0] = new ir;
            var c = Number.MAX_VALUE
              , h = Math.abs(r[0].x)
              , p = Math.abs(r[0].y)
              , f = Math.abs(r[0].z);
            h <= c && (c = h,
            n.set(1, 0, 0)),
            p <= c && (c = p,
            n.set(0, 1, 0)),
            f <= c && n.set(0, 0, 1),
            o.crossVectors(r[0], n).normalize(),
            i[0].crossVectors(r[0], o),
            a[0].crossVectors(r[0], i[0]);
            for (var d = 1; d <= e; d++) {
                if (i[d] = i[d - 1].clone(),
                a[d] = a[d - 1].clone(),
                o.crossVectors(r[d - 1], r[d]),
                o.length() > Number.EPSILON) {
                    o.normalize();
                    var m = Math.acos(qn.clamp(r[d - 1].dot(r[d]), -1, 1));
                    i[d].applyMatrix4(s.makeRotationAxis(o, m))
                }
                a[d].crossVectors(r[d], i[d])
            }
            if (!0 === t) {
                var g = Math.acos(qn.clamp(i[0].dot(i[e]), -1, 1));
                g /= e,
                r[0].dot(o.crossVectors(i[0], i[e])) > 0 && (g = -g);
                for (var v = 1; v <= e; v++)
                    i[v].applyMatrix4(s.makeRotationAxis(r[v], g * v)),
                    a[v].crossVectors(r[v], i[v])
            }
            return {
                tangents: r,
                normals: i,
                binormals: a
            }
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(e) {
            return this.arcLengthDivisions = e.arcLengthDivisions,
            this
        },
        toJSON: function() {
            var e = {
                metadata: {
                    version: 4.5,
                    type: "Curve",
                    generator: "Curve.toJSON"
                }
            };
            return e.arcLengthDivisions = this.arcLengthDivisions,
            e.type = this.type,
            e
        },
        fromJSON: function(e) {
            return this.arcLengthDivisions = e.arcLengthDivisions,
            this
        }
    }),
    Zc.prototype = Object.create(Yc.prototype),
    Zc.prototype.constructor = Zc,
    Zc.prototype.isEllipseCurve = !0,
    Zc.prototype.getPoint = function(e, t) {
        for (var n = t || new Xn, r = 2 * Math.PI, i = this.aEndAngle - this.aStartAngle, a = Math.abs(i) < Number.EPSILON; i < 0; )
            i += r;
        for (; i > r; )
            i -= r;
        i < Number.EPSILON && (i = a ? 0 : r),
        !0 !== this.aClockwise || a || (i === r ? i = -r : i -= r);
        var o = this.aStartAngle + e * i
          , s = this.aX + this.xRadius * Math.cos(o)
          , l = this.aY + this.yRadius * Math.sin(o);
        if (0 !== this.aRotation) {
            var u = Math.cos(this.aRotation)
              , c = Math.sin(this.aRotation)
              , h = s - this.aX
              , p = l - this.aY;
            s = h * u - p * c + this.aX,
            l = h * c + p * u + this.aY
        }
        return n.set(s, l)
    }
    ,
    Zc.prototype.copy = function(e) {
        return Yc.prototype.copy.call(this, e),
        this.aX = e.aX,
        this.aY = e.aY,
        this.xRadius = e.xRadius,
        this.yRadius = e.yRadius,
        this.aStartAngle = e.aStartAngle,
        this.aEndAngle = e.aEndAngle,
        this.aClockwise = e.aClockwise,
        this.aRotation = e.aRotation,
        this
    }
    ,
    Zc.prototype.toJSON = function() {
        var e = Yc.prototype.toJSON.call(this);
        return e.aX = this.aX,
        e.aY = this.aY,
        e.xRadius = this.xRadius,
        e.yRadius = this.yRadius,
        e.aStartAngle = this.aStartAngle,
        e.aEndAngle = this.aEndAngle,
        e.aClockwise = this.aClockwise,
        e.aRotation = this.aRotation,
        e
    }
    ,
    Zc.prototype.fromJSON = function(e) {
        return Yc.prototype.fromJSON.call(this, e),
        this.aX = e.aX,
        this.aY = e.aY,
        this.xRadius = e.xRadius,
        this.yRadius = e.yRadius,
        this.aStartAngle = e.aStartAngle,
        this.aEndAngle = e.aEndAngle,
        this.aClockwise = e.aClockwise,
        this.aRotation = e.aRotation,
        this
    }
    ,
    $c.prototype = Object.create(Zc.prototype),
    $c.prototype.constructor = $c,
    $c.prototype.isArcCurve = !0;
    var Kc = new ir
      , Qc = new Jc
      , eh = new Jc
      , th = new Jc;
    function nh(e, t, n, r) {
        Yc.call(this),
        this.type = "CatmullRomCurve3",
        this.points = e || [],
        this.closed = t || !1,
        this.curveType = n || "centripetal",
        this.tension = void 0 !== r ? r : .5
    }
    function rh(e, t, n, r, i) {
        var a = .5 * (r - t)
          , o = .5 * (i - n)
          , s = e * e;
        return (2 * n - 2 * r + a + o) * (e * s) + (-3 * n + 3 * r - 2 * a - o) * s + a * e + n
    }
    function ih(e, t, n, r) {
        return function(e, t) {
            var n = 1 - e;
            return n * n * t
        }(e, t) + function(e, t) {
            return 2 * (1 - e) * e * t
        }(e, n) + function(e, t) {
            return e * e * t
        }(e, r)
    }
    function ah(e, t, n, r, i) {
        return function(e, t) {
            var n = 1 - e;
            return n * n * n * t
        }(e, t) + function(e, t) {
            var n = 1 - e;
            return 3 * n * n * e * t
        }(e, n) + function(e, t) {
            return 3 * (1 - e) * e * e * t
        }(e, r) + function(e, t) {
            return e * e * e * t
        }(e, i)
    }
    function oh(e, t, n, r) {
        Yc.call(this),
        this.type = "CubicBezierCurve",
        this.v0 = e || new Xn,
        this.v1 = t || new Xn,
        this.v2 = n || new Xn,
        this.v3 = r || new Xn
    }
    function sh(e, t, n, r) {
        Yc.call(this),
        this.type = "CubicBezierCurve3",
        this.v0 = e || new ir,
        this.v1 = t || new ir,
        this.v2 = n || new ir,
        this.v3 = r || new ir
    }
    function lh(e, t) {
        Yc.call(this),
        this.type = "LineCurve",
        this.v1 = e || new Xn,
        this.v2 = t || new Xn
    }
    function uh(e, t) {
        Yc.call(this),
        this.type = "LineCurve3",
        this.v1 = e || new ir,
        this.v2 = t || new ir
    }
    function ch(e, t, n) {
        Yc.call(this),
        this.type = "QuadraticBezierCurve",
        this.v0 = e || new Xn,
        this.v1 = t || new Xn,
        this.v2 = n || new Xn
    }
    function hh(e, t, n) {
        Yc.call(this),
        this.type = "QuadraticBezierCurve3",
        this.v0 = e || new ir,
        this.v1 = t || new ir,
        this.v2 = n || new ir
    }
    function ph(e) {
        Yc.call(this),
        this.type = "SplineCurve",
        this.points = e || []
    }
    nh.prototype = Object.create(Yc.prototype),
    nh.prototype.constructor = nh,
    nh.prototype.isCatmullRomCurve3 = !0,
    nh.prototype.getPoint = function(e, t) {
        var n, r, i, a, o = t || new ir, s = this.points, l = s.length, u = (l - (this.closed ? 0 : 1)) * e, c = Math.floor(u), h = u - c;
        if (this.closed ? c += c > 0 ? 0 : (Math.floor(Math.abs(c) / l) + 1) * l : 0 === h && c === l - 1 && (c = l - 2,
        h = 1),
        this.closed || c > 0 ? n = s[(c - 1) % l] : (Kc.subVectors(s[0], s[1]).add(s[0]),
        n = Kc),
        r = s[c % l],
        i = s[(c + 1) % l],
        this.closed || c + 2 < l ? a = s[(c + 2) % l] : (Kc.subVectors(s[l - 1], s[l - 2]).add(s[l - 1]),
        a = Kc),
        "centripetal" === this.curveType || "chordal" === this.curveType) {
            var p = "chordal" === this.curveType ? .5 : .25
              , f = Math.pow(n.distanceToSquared(r), p)
              , d = Math.pow(r.distanceToSquared(i), p)
              , m = Math.pow(i.distanceToSquared(a), p);
            d < 1e-4 && (d = 1),
            f < 1e-4 && (f = d),
            m < 1e-4 && (m = d),
            Qc.initNonuniformCatmullRom(n.x, r.x, i.x, a.x, f, d, m),
            eh.initNonuniformCatmullRom(n.y, r.y, i.y, a.y, f, d, m),
            th.initNonuniformCatmullRom(n.z, r.z, i.z, a.z, f, d, m)
        } else
            "catmullrom" === this.curveType && (Qc.initCatmullRom(n.x, r.x, i.x, a.x, this.tension),
            eh.initCatmullRom(n.y, r.y, i.y, a.y, this.tension),
            th.initCatmullRom(n.z, r.z, i.z, a.z, this.tension));
        return o.set(Qc.calc(h), eh.calc(h), th.calc(h)),
        o
    }
    ,
    nh.prototype.copy = function(e) {
        Yc.prototype.copy.call(this, e),
        this.points = [];
        for (var t = 0, n = e.points.length; t < n; t++) {
            var r = e.points[t];
            this.points.push(r.clone())
        }
        return this.closed = e.closed,
        this.curveType = e.curveType,
        this.tension = e.tension,
        this
    }
    ,
    nh.prototype.toJSON = function() {
        var e = Yc.prototype.toJSON.call(this);
        e.points = [];
        for (var t = 0, n = this.points.length; t < n; t++) {
            var r = this.points[t];
            e.points.push(r.toArray())
        }
        return e.closed = this.closed,
        e.curveType = this.curveType,
        e.tension = this.tension,
        e
    }
    ,
    nh.prototype.fromJSON = function(e) {
        Yc.prototype.fromJSON.call(this, e),
        this.points = [];
        for (var t = 0, n = e.points.length; t < n; t++) {
            var r = e.points[t];
            this.points.push((new ir).fromArray(r))
        }
        return this.closed = e.closed,
        this.curveType = e.curveType,
        this.tension = e.tension,
        this
    }
    ,
    oh.prototype = Object.create(Yc.prototype),
    oh.prototype.constructor = oh,
    oh.prototype.isCubicBezierCurve = !0,
    oh.prototype.getPoint = function(e, t) {
        var n = t || new Xn
          , r = this.v0
          , i = this.v1
          , a = this.v2
          , o = this.v3;
        return n.set(ah(e, r.x, i.x, a.x, o.x), ah(e, r.y, i.y, a.y, o.y)),
        n
    }
    ,
    oh.prototype.copy = function(e) {
        return Yc.prototype.copy.call(this, e),
        this.v0.copy(e.v0),
        this.v1.copy(e.v1),
        this.v2.copy(e.v2),
        this.v3.copy(e.v3),
        this
    }
    ,
    oh.prototype.toJSON = function() {
        var e = Yc.prototype.toJSON.call(this);
        return e.v0 = this.v0.toArray(),
        e.v1 = this.v1.toArray(),
        e.v2 = this.v2.toArray(),
        e.v3 = this.v3.toArray(),
        e
    }
    ,
    oh.prototype.fromJSON = function(e) {
        return Yc.prototype.fromJSON.call(this, e),
        this.v0.fromArray(e.v0),
        this.v1.fromArray(e.v1),
        this.v2.fromArray(e.v2),
        this.v3.fromArray(e.v3),
        this
    }
    ,
    sh.prototype = Object.create(Yc.prototype),
    sh.prototype.constructor = sh,
    sh.prototype.isCubicBezierCurve3 = !0,
    sh.prototype.getPoint = function(e, t) {
        var n = t || new ir
          , r = this.v0
          , i = this.v1
          , a = this.v2
          , o = this.v3;
        return n.set(ah(e, r.x, i.x, a.x, o.x), ah(e, r.y, i.y, a.y, o.y), ah(e, r.z, i.z, a.z, o.z)),
        n
    }
    ,
    sh.prototype.copy = function(e) {
        return Yc.prototype.copy.call(this, e),
        this.v0.copy(e.v0),
        this.v1.copy(e.v1),
        this.v2.copy(e.v2),
        this.v3.copy(e.v3),
        this
    }
    ,
    sh.prototype.toJSON = function() {
        var e = Yc.prototype.toJSON.call(this);
        return e.v0 = this.v0.toArray(),
        e.v1 = this.v1.toArray(),
        e.v2 = this.v2.toArray(),
        e.v3 = this.v3.toArray(),
        e
    }
    ,
    sh.prototype.fromJSON = function(e) {
        return Yc.prototype.fromJSON.call(this, e),
        this.v0.fromArray(e.v0),
        this.v1.fromArray(e.v1),
        this.v2.fromArray(e.v2),
        this.v3.fromArray(e.v3),
        this
    }
    ,
    lh.prototype = Object.create(Yc.prototype),
    lh.prototype.constructor = lh,
    lh.prototype.isLineCurve = !0,
    lh.prototype.getPoint = function(e, t) {
        var n = t || new Xn;
        return 1 === e ? n.copy(this.v2) : (n.copy(this.v2).sub(this.v1),
        n.multiplyScalar(e).add(this.v1)),
        n
    }
    ,
    lh.prototype.getPointAt = function(e, t) {
        return this.getPoint(e, t)
    }
    ,
    lh.prototype.getTangent = function(e, t) {
        var n = t || new Xn;
        return n.copy(this.v2).sub(this.v1).normalize(),
        n
    }
    ,
    lh.prototype.copy = function(e) {
        return Yc.prototype.copy.call(this, e),
        this.v1.copy(e.v1),
        this.v2.copy(e.v2),
        this
    }
    ,
    lh.prototype.toJSON = function() {
        var e = Yc.prototype.toJSON.call(this);
        return e.v1 = this.v1.toArray(),
        e.v2 = this.v2.toArray(),
        e
    }
    ,
    lh.prototype.fromJSON = function(e) {
        return Yc.prototype.fromJSON.call(this, e),
        this.v1.fromArray(e.v1),
        this.v2.fromArray(e.v2),
        this
    }
    ,
    uh.prototype = Object.create(Yc.prototype),
    uh.prototype.constructor = uh,
    uh.prototype.isLineCurve3 = !0,
    uh.prototype.getPoint = function(e, t) {
        var n = t || new ir;
        return 1 === e ? n.copy(this.v2) : (n.copy(this.v2).sub(this.v1),
        n.multiplyScalar(e).add(this.v1)),
        n
    }
    ,
    uh.prototype.getPointAt = function(e, t) {
        return this.getPoint(e, t)
    }
    ,
    uh.prototype.copy = function(e) {
        return Yc.prototype.copy.call(this, e),
        this.v1.copy(e.v1),
        this.v2.copy(e.v2),
        this
    }
    ,
    uh.prototype.toJSON = function() {
        var e = Yc.prototype.toJSON.call(this);
        return e.v1 = this.v1.toArray(),
        e.v2 = this.v2.toArray(),
        e
    }
    ,
    uh.prototype.fromJSON = function(e) {
        return Yc.prototype.fromJSON.call(this, e),
        this.v1.fromArray(e.v1),
        this.v2.fromArray(e.v2),
        this
    }
    ,
    ch.prototype = Object.create(Yc.prototype),
    ch.prototype.constructor = ch,
    ch.prototype.isQuadraticBezierCurve = !0,
    ch.prototype.getPoint = function(e, t) {
        var n = t || new Xn
          , r = this.v0
          , i = this.v1
          , a = this.v2;
        return n.set(ih(e, r.x, i.x, a.x), ih(e, r.y, i.y, a.y)),
        n
    }
    ,
    ch.prototype.copy = function(e) {
        return Yc.prototype.copy.call(this, e),
        this.v0.copy(e.v0),
        this.v1.copy(e.v1),
        this.v2.copy(e.v2),
        this
    }
    ,
    ch.prototype.toJSON = function() {
        var e = Yc.prototype.toJSON.call(this);
        return e.v0 = this.v0.toArray(),
        e.v1 = this.v1.toArray(),
        e.v2 = this.v2.toArray(),
        e
    }
    ,
    ch.prototype.fromJSON = function(e) {
        return Yc.prototype.fromJSON.call(this, e),
        this.v0.fromArray(e.v0),
        this.v1.fromArray(e.v1),
        this.v2.fromArray(e.v2),
        this
    }
    ,
    hh.prototype = Object.create(Yc.prototype),
    hh.prototype.constructor = hh,
    hh.prototype.isQuadraticBezierCurve3 = !0,
    hh.prototype.getPoint = function(e, t) {
        var n = t || new ir
          , r = this.v0
          , i = this.v1
          , a = this.v2;
        return n.set(ih(e, r.x, i.x, a.x), ih(e, r.y, i.y, a.y), ih(e, r.z, i.z, a.z)),
        n
    }
    ,
    hh.prototype.copy = function(e) {
        return Yc.prototype.copy.call(this, e),
        this.v0.copy(e.v0),
        this.v1.copy(e.v1),
        this.v2.copy(e.v2),
        this
    }
    ,
    hh.prototype.toJSON = function() {
        var e = Yc.prototype.toJSON.call(this);
        return e.v0 = this.v0.toArray(),
        e.v1 = this.v1.toArray(),
        e.v2 = this.v2.toArray(),
        e
    }
    ,
    hh.prototype.fromJSON = function(e) {
        return Yc.prototype.fromJSON.call(this, e),
        this.v0.fromArray(e.v0),
        this.v1.fromArray(e.v1),
        this.v2.fromArray(e.v2),
        this
    }
    ,
    ph.prototype = Object.create(Yc.prototype),
    ph.prototype.constructor = ph,
    ph.prototype.isSplineCurve = !0,
    ph.prototype.getPoint = function(e, t) {
        var n = t || new Xn
          , r = this.points
          , i = (r.length - 1) * e
          , a = Math.floor(i)
          , o = i - a
          , s = r[0 === a ? a : a - 1]
          , l = r[a]
          , u = r[a > r.length - 2 ? r.length - 1 : a + 1]
          , c = r[a > r.length - 3 ? r.length - 1 : a + 2];
        return n.set(rh(o, s.x, l.x, u.x, c.x), rh(o, s.y, l.y, u.y, c.y)),
        n
    }
    ,
    ph.prototype.copy = function(e) {
        Yc.prototype.copy.call(this, e),
        this.points = [];
        for (var t = 0, n = e.points.length; t < n; t++) {
            var r = e.points[t];
            this.points.push(r.clone())
        }
        return this
    }
    ,
    ph.prototype.toJSON = function() {
        var e = Yc.prototype.toJSON.call(this);
        e.points = [];
        for (var t = 0, n = this.points.length; t < n; t++) {
            var r = this.points[t];
            e.points.push(r.toArray())
        }
        return e
    }
    ,
    ph.prototype.fromJSON = function(e) {
        Yc.prototype.fromJSON.call(this, e),
        this.points = [];
        for (var t = 0, n = e.points.length; t < n; t++) {
            var r = e.points[t];
            this.points.push((new Xn).fromArray(r))
        }
        return this
    }
    ;
    var fh = Object.freeze({
        __proto__: null,
        ArcCurve: $c,
        CatmullRomCurve3: nh,
        CubicBezierCurve: oh,
        CubicBezierCurve3: sh,
        EllipseCurve: Zc,
        LineCurve: lh,
        LineCurve3: uh,
        QuadraticBezierCurve: ch,
        QuadraticBezierCurve3: hh,
        SplineCurve: ph
    });
    function dh() {
        Yc.call(this),
        this.type = "CurvePath",
        this.curves = [],
        this.autoClose = !1
    }
    function mh(e) {
        dh.call(this),
        this.type = "Path",
        this.currentPoint = new Xn,
        e && this.setFromPoints(e)
    }
    function gh(e) {
        mh.call(this, e),
        this.uuid = qn.generateUUID(),
        this.type = "Shape",
        this.holes = []
    }
    function vh(e, t) {
        Lr.call(this),
        this.type = "Light",
        this.color = new wi(e),
        this.intensity = void 0 !== t ? t : 1,
        this.receiveShadow = void 0
    }
    function yh(e, t, n) {
        vh.call(this, e, n),
        this.type = "HemisphereLight",
        this.castShadow = void 0,
        this.position.copy(Lr.DefaultUp),
        this.updateMatrix(),
        this.groundColor = new wi(t)
    }
    function bh(e) {
        this.camera = e,
        this.bias = 0,
        this.normalBias = 0,
        this.radius = 1,
        this.mapSize = new Xn(512,512),
        this.map = null,
        this.mapPass = null,
        this.matrix = new pr,
        this.autoUpdate = !0,
        this.needsUpdate = !1,
        this._frustum = new Oa,
        this._frameExtents = new Xn(1,1),
        this._viewportCount = 1,
        this._viewports = [new Kn(0,0,1,1)]
    }
    function xh() {
        bh.call(this, new Ca(50,1,.5,500))
    }
    function wh(e, t, n, r, i, a) {
        vh.call(this, e, t),
        this.type = "SpotLight",
        this.position.copy(Lr.DefaultUp),
        this.updateMatrix(),
        this.target = new Lr,
        Object.defineProperty(this, "power", {
            get: function() {
                return this.intensity * Math.PI
            },
            set: function(e) {
                this.intensity = e / Math.PI
            }
        }),
        this.distance = void 0 !== n ? n : 0,
        this.angle = void 0 !== r ? r : Math.PI / 3,
        this.penumbra = void 0 !== i ? i : 0,
        this.decay = void 0 !== a ? a : 1,
        this.shadow = new xh
    }
    function _h() {
        bh.call(this, new Ca(90,1,.5,500)),
        this._frameExtents = new Xn(4,2),
        this._viewportCount = 6,
        this._viewports = [new Kn(2,1,1,1), new Kn(0,1,1,1), new Kn(3,1,1,1), new Kn(1,1,1,1), new Kn(3,0,1,1), new Kn(1,0,1,1)],
        this._cubeDirections = [new ir(1,0,0), new ir(-1,0,0), new ir(0,0,1), new ir(0,0,-1), new ir(0,1,0), new ir(0,-1,0)],
        this._cubeUps = [new ir(0,1,0), new ir(0,1,0), new ir(0,1,0), new ir(0,1,0), new ir(0,0,1), new ir(0,0,-1)]
    }
    function Sh(e, t, n, r) {
        vh.call(this, e, t),
        this.type = "PointLight",
        Object.defineProperty(this, "power", {
            get: function() {
                return 4 * this.intensity * Math.PI
            },
            set: function(e) {
                this.intensity = e / (4 * Math.PI)
            }
        }),
        this.distance = void 0 !== n ? n : 0,
        this.decay = void 0 !== r ? r : 1,
        this.shadow = new _h
    }
    function Eh(e, t, n, r, i, a) {
        Pa.call(this),
        this.type = "OrthographicCamera",
        this.zoom = 1,
        this.view = null,
        this.left = void 0 !== e ? e : -1,
        this.right = void 0 !== t ? t : 1,
        this.top = void 0 !== n ? n : 1,
        this.bottom = void 0 !== r ? r : -1,
        this.near = void 0 !== i ? i : .1,
        this.far = void 0 !== a ? a : 2e3,
        this.updateProjectionMatrix()
    }
    function Mh() {
        bh.call(this, new Eh(-5,5,5,-5,.5,500))
    }
    function Th(e, t) {
        vh.call(this, e, t),
        this.type = "DirectionalLight",
        this.position.copy(Lr.DefaultUp),
        this.updateMatrix(),
        this.target = new Lr,
        this.shadow = new Mh
    }
    function Ah(e, t) {
        vh.call(this, e, t),
        this.type = "AmbientLight",
        this.castShadow = void 0
    }
    function Ph(e, t, n, r) {
        vh.call(this, e, t),
        this.type = "RectAreaLight",
        this.width = void 0 !== n ? n : 10,
        this.height = void 0 !== r ? r : 10
    }
    function Ch() {
        this.coefficients = [];
        for (var e = 0; e < 9; e++)
            this.coefficients.push(new ir)
    }
    function Lh(e, t) {
        vh.call(this, void 0, t),
        this.type = "LightProbe",
        this.sh = void 0 !== e ? e : new Ch
    }
    function Rh(e) {
        zc.call(this, e),
        this.textures = {}
    }
    dh.prototype = Object.assign(Object.create(Yc.prototype), {
        constructor: dh,
        add: function(e) {
            this.curves.push(e)
        },
        closePath: function() {
            var e = this.curves[0].getPoint(0)
              , t = this.curves[this.curves.length - 1].getPoint(1);
            e.equals(t) || this.curves.push(new lh(t,e))
        },
        getPoint: function(e) {
            for (var t = e * this.getLength(), n = this.getCurveLengths(), r = 0; r < n.length; ) {
                if (n[r] >= t) {
                    var i = n[r] - t
                      , a = this.curves[r]
                      , o = a.getLength()
                      , s = 0 === o ? 0 : 1 - i / o;
                    return a.getPointAt(s)
                }
                r++
            }
            return null
        },
        getLength: function() {
            var e = this.getCurveLengths();
            return e[e.length - 1]
        },
        updateArcLengths: function() {
            this.needsUpdate = !0,
            this.cacheLengths = null,
            this.getCurveLengths()
        },
        getCurveLengths: function() {
            if (this.cacheLengths && this.cacheLengths.length === this.curves.length)
                return this.cacheLengths;
            for (var e = [], t = 0, n = 0, r = this.curves.length; n < r; n++)
                t += this.curves[n].getLength(),
                e.push(t);
            return this.cacheLengths = e,
            e
        },
        getSpacedPoints: function(e) {
            void 0 === e && (e = 40);
            for (var t = [], n = 0; n <= e; n++)
                t.push(this.getPoint(n / e));
            return this.autoClose && t.push(t[0]),
            t
        },
        getPoints: function(e) {
            e = e || 12;
            for (var t, n = [], r = 0, i = this.curves; r < i.length; r++)
                for (var a = i[r], o = a && a.isEllipseCurve ? 2 * e : a && (a.isLineCurve || a.isLineCurve3) ? 1 : a && a.isSplineCurve ? e * a.points.length : e, s = a.getPoints(o), l = 0; l < s.length; l++) {
                    var u = s[l];
                    t && t.equals(u) || (n.push(u),
                    t = u)
                }
            return this.autoClose && n.length > 1 && !n[n.length - 1].equals(n[0]) && n.push(n[0]),
            n
        },
        copy: function(e) {
            Yc.prototype.copy.call(this, e),
            this.curves = [];
            for (var t = 0, n = e.curves.length; t < n; t++) {
                var r = e.curves[t];
                this.curves.push(r.clone())
            }
            return this.autoClose = e.autoClose,
            this
        },
        toJSON: function() {
            var e = Yc.prototype.toJSON.call(this);
            e.autoClose = this.autoClose,
            e.curves = [];
            for (var t = 0, n = this.curves.length; t < n; t++) {
                var r = this.curves[t];
                e.curves.push(r.toJSON())
            }
            return e
        },
        fromJSON: function(e) {
            Yc.prototype.fromJSON.call(this, e),
            this.autoClose = e.autoClose,
            this.curves = [];
            for (var t = 0, n = e.curves.length; t < n; t++) {
                var r = e.curves[t];
                this.curves.push((new fh[r.type]).fromJSON(r))
            }
            return this
        }
    }),
    mh.prototype = Object.assign(Object.create(dh.prototype), {
        constructor: mh,
        setFromPoints: function(e) {
            this.moveTo(e[0].x, e[0].y);
            for (var t = 1, n = e.length; t < n; t++)
                this.lineTo(e[t].x, e[t].y);
            return this
        },
        moveTo: function(e, t) {
            return this.currentPoint.set(e, t),
            this
        },
        lineTo: function(e, t) {
            var n = new lh(this.currentPoint.clone(),new Xn(e,t));
            return this.curves.push(n),
            this.currentPoint.set(e, t),
            this
        },
        quadraticCurveTo: function(e, t, n, r) {
            var i = new ch(this.currentPoint.clone(),new Xn(e,t),new Xn(n,r));
            return this.curves.push(i),
            this.currentPoint.set(n, r),
            this
        },
        bezierCurveTo: function(e, t, n, r, i, a) {
            var o = new oh(this.currentPoint.clone(),new Xn(e,t),new Xn(n,r),new Xn(i,a));
            return this.curves.push(o),
            this.currentPoint.set(i, a),
            this
        },
        splineThru: function(e) {
            var t = new ph([this.currentPoint.clone()].concat(e));
            return this.curves.push(t),
            this.currentPoint.copy(e[e.length - 1]),
            this
        },
        arc: function(e, t, n, r, i, a) {
            var o = this.currentPoint.x
              , s = this.currentPoint.y;
            return this.absarc(e + o, t + s, n, r, i, a),
            this
        },
        absarc: function(e, t, n, r, i, a) {
            return this.absellipse(e, t, n, n, r, i, a),
            this
        },
        ellipse: function(e, t, n, r, i, a, o, s) {
            var l = this.currentPoint.x
              , u = this.currentPoint.y;
            return this.absellipse(e + l, t + u, n, r, i, a, o, s),
            this
        },
        absellipse: function(e, t, n, r, i, a, o, s) {
            var l = new Zc(e,t,n,r,i,a,o,s);
            if (this.curves.length > 0) {
                var u = l.getPoint(0);
                u.equals(this.currentPoint) || this.lineTo(u.x, u.y)
            }
            this.curves.push(l);
            var c = l.getPoint(1);
            return this.currentPoint.copy(c),
            this
        },
        copy: function(e) {
            return dh.prototype.copy.call(this, e),
            this.currentPoint.copy(e.currentPoint),
            this
        },
        toJSON: function() {
            var e = dh.prototype.toJSON.call(this);
            return e.currentPoint = this.currentPoint.toArray(),
            e
        },
        fromJSON: function(e) {
            return dh.prototype.fromJSON.call(this, e),
            this.currentPoint.fromArray(e.currentPoint),
            this
        }
    }),
    gh.prototype = Object.assign(Object.create(mh.prototype), {
        constructor: gh,
        getPointsHoles: function(e) {
            for (var t = [], n = 0, r = this.holes.length; n < r; n++)
                t[n] = this.holes[n].getPoints(e);
            return t
        },
        extractPoints: function(e) {
            return {
                shape: this.getPoints(e),
                holes: this.getPointsHoles(e)
            }
        },
        copy: function(e) {
            mh.prototype.copy.call(this, e),
            this.holes = [];
            for (var t = 0, n = e.holes.length; t < n; t++) {
                var r = e.holes[t];
                this.holes.push(r.clone())
            }
            return this
        },
        toJSON: function() {
            var e = mh.prototype.toJSON.call(this);
            e.uuid = this.uuid,
            e.holes = [];
            for (var t = 0, n = this.holes.length; t < n; t++) {
                var r = this.holes[t];
                e.holes.push(r.toJSON())
            }
            return e
        },
        fromJSON: function(e) {
            mh.prototype.fromJSON.call(this, e),
            this.uuid = e.uuid,
            this.holes = [];
            for (var t = 0, n = e.holes.length; t < n; t++) {
                var r = e.holes[t];
                this.holes.push((new mh).fromJSON(r))
            }
            return this
        }
    }),
    vh.prototype = Object.assign(Object.create(Lr.prototype), {
        constructor: vh,
        isLight: !0,
        copy: function(e) {
            return Lr.prototype.copy.call(this, e),
            this.color.copy(e.color),
            this.intensity = e.intensity,
            this
        },
        toJSON: function(e) {
            var t = Lr.prototype.toJSON.call(this, e);
            return t.object.color = this.color.getHex(),
            t.object.intensity = this.intensity,
            void 0 !== this.groundColor && (t.object.groundColor = this.groundColor.getHex()),
            void 0 !== this.distance && (t.object.distance = this.distance),
            void 0 !== this.angle && (t.object.angle = this.angle),
            void 0 !== this.decay && (t.object.decay = this.decay),
            void 0 !== this.penumbra && (t.object.penumbra = this.penumbra),
            void 0 !== this.shadow && (t.object.shadow = this.shadow.toJSON()),
            t
        }
    }),
    yh.prototype = Object.assign(Object.create(vh.prototype), {
        constructor: yh,
        isHemisphereLight: !0,
        copy: function(e) {
            return vh.prototype.copy.call(this, e),
            this.groundColor.copy(e.groundColor),
            this
        }
    }),
    Object.assign(bh.prototype, {
        _projScreenMatrix: new pr,
        _lightPositionWorld: new ir,
        _lookTarget: new ir,
        getViewportCount: function() {
            return this._viewportCount
        },
        getFrustum: function() {
            return this._frustum
        },
        updateMatrices: function(e) {
            var t = this.camera
              , n = this.matrix
              , r = this._projScreenMatrix
              , i = this._lookTarget
              , a = this._lightPositionWorld;
            a.setFromMatrixPosition(e.matrixWorld),
            t.position.copy(a),
            i.setFromMatrixPosition(e.target.matrixWorld),
            t.lookAt(i),
            t.updateMatrixWorld(),
            r.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse),
            this._frustum.setFromProjectionMatrix(r),
            n.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1),
            n.multiply(t.projectionMatrix),
            n.multiply(t.matrixWorldInverse)
        },
        getViewport: function(e) {
            return this._viewports[e]
        },
        getFrameExtents: function() {
            return this._frameExtents
        },
        copy: function(e) {
            return this.camera = e.camera.clone(),
            this.bias = e.bias,
            this.radius = e.radius,
            this.mapSize.copy(e.mapSize),
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        toJSON: function() {
            var e = {};
            return 0 !== this.bias && (e.bias = this.bias),
            0 !== this.normalBias && (e.normalBias = this.normalBias),
            1 !== this.radius && (e.radius = this.radius),
            512 === this.mapSize.x && 512 === this.mapSize.y || (e.mapSize = this.mapSize.toArray()),
            e.camera = this.camera.toJSON(!1).object,
            delete e.camera.matrix,
            e
        }
    }),
    xh.prototype = Object.assign(Object.create(bh.prototype), {
        constructor: xh,
        isSpotLightShadow: !0,
        updateMatrices: function(e) {
            var t = this.camera
              , n = 2 * qn.RAD2DEG * e.angle
              , r = this.mapSize.width / this.mapSize.height
              , i = e.distance || t.far;
            n === t.fov && r === t.aspect && i === t.far || (t.fov = n,
            t.aspect = r,
            t.far = i,
            t.updateProjectionMatrix()),
            bh.prototype.updateMatrices.call(this, e)
        }
    }),
    wh.prototype = Object.assign(Object.create(vh.prototype), {
        constructor: wh,
        isSpotLight: !0,
        copy: function(e) {
            return vh.prototype.copy.call(this, e),
            this.distance = e.distance,
            this.angle = e.angle,
            this.penumbra = e.penumbra,
            this.decay = e.decay,
            this.target = e.target.clone(),
            this.shadow = e.shadow.clone(),
            this
        }
    }),
    _h.prototype = Object.assign(Object.create(bh.prototype), {
        constructor: _h,
        isPointLightShadow: !0,
        updateMatrices: function(e, t) {
            void 0 === t && (t = 0);
            var n = this.camera
              , r = this.matrix
              , i = this._lightPositionWorld
              , a = this._lookTarget
              , o = this._projScreenMatrix;
            i.setFromMatrixPosition(e.matrixWorld),
            n.position.copy(i),
            a.copy(n.position),
            a.add(this._cubeDirections[t]),
            n.up.copy(this._cubeUps[t]),
            n.lookAt(a),
            n.updateMatrixWorld(),
            r.makeTranslation(-i.x, -i.y, -i.z),
            o.multiplyMatrices(n.projectionMatrix, n.matrixWorldInverse),
            this._frustum.setFromProjectionMatrix(o)
        }
    }),
    Sh.prototype = Object.assign(Object.create(vh.prototype), {
        constructor: Sh,
        isPointLight: !0,
        copy: function(e) {
            return vh.prototype.copy.call(this, e),
            this.distance = e.distance,
            this.decay = e.decay,
            this.shadow = e.shadow.clone(),
            this
        }
    }),
    Eh.prototype = Object.assign(Object.create(Pa.prototype), {
        constructor: Eh,
        isOrthographicCamera: !0,
        copy: function(e, t) {
            return Pa.prototype.copy.call(this, e, t),
            this.left = e.left,
            this.right = e.right,
            this.top = e.top,
            this.bottom = e.bottom,
            this.near = e.near,
            this.far = e.far,
            this.zoom = e.zoom,
            this.view = null === e.view ? null : Object.assign({}, e.view),
            this
        },
        setViewOffset: function(e, t, n, r, i, a) {
            null === this.view && (this.view = {
                enabled: !0,
                fullWidth: 1,
                fullHeight: 1,
                offsetX: 0,
                offsetY: 0,
                width: 1,
                height: 1
            }),
            this.view.enabled = !0,
            this.view.fullWidth = e,
            this.view.fullHeight = t,
            this.view.offsetX = n,
            this.view.offsetY = r,
            this.view.width = i,
            this.view.height = a,
            this.updateProjectionMatrix()
        },
        clearViewOffset: function() {
            null !== this.view && (this.view.enabled = !1),
            this.updateProjectionMatrix()
        },
        updateProjectionMatrix: function() {
            var e = (this.right - this.left) / (2 * this.zoom)
              , t = (this.top - this.bottom) / (2 * this.zoom)
              , n = (this.right + this.left) / 2
              , r = (this.top + this.bottom) / 2
              , i = n - e
              , a = n + e
              , o = r + t
              , s = r - t;
            if (null !== this.view && this.view.enabled) {
                var l = (this.right - this.left) / this.view.fullWidth / this.zoom
                  , u = (this.top - this.bottom) / this.view.fullHeight / this.zoom;
                a = (i += l * this.view.offsetX) + l * this.view.width,
                s = (o -= u * this.view.offsetY) - u * this.view.height
            }
            this.projectionMatrix.makeOrthographic(i, a, o, s, this.near, this.far),
            this.projectionMatrixInverse.getInverse(this.projectionMatrix)
        },
        toJSON: function(e) {
            var t = Lr.prototype.toJSON.call(this, e);
            return t.object.zoom = this.zoom,
            t.object.left = this.left,
            t.object.right = this.right,
            t.object.top = this.top,
            t.object.bottom = this.bottom,
            t.object.near = this.near,
            t.object.far = this.far,
            null !== this.view && (t.object.view = Object.assign({}, this.view)),
            t
        }
    }),
    Mh.prototype = Object.assign(Object.create(bh.prototype), {
        constructor: Mh,
        isDirectionalLightShadow: !0,
        updateMatrices: function(e) {
            bh.prototype.updateMatrices.call(this, e)
        }
    }),
    Th.prototype = Object.assign(Object.create(vh.prototype), {
        constructor: Th,
        isDirectionalLight: !0,
        copy: function(e) {
            return vh.prototype.copy.call(this, e),
            this.target = e.target.clone(),
            this.shadow = e.shadow.clone(),
            this
        }
    }),
    Ah.prototype = Object.assign(Object.create(vh.prototype), {
        constructor: Ah,
        isAmbientLight: !0
    }),
    Ph.prototype = Object.assign(Object.create(vh.prototype), {
        constructor: Ph,
        isRectAreaLight: !0,
        copy: function(e) {
            return vh.prototype.copy.call(this, e),
            this.width = e.width,
            this.height = e.height,
            this
        },
        toJSON: function(e) {
            var t = vh.prototype.toJSON.call(this, e);
            return t.object.width = this.width,
            t.object.height = this.height,
            t
        }
    }),
    Object.assign(Ch.prototype, {
        isSphericalHarmonics3: !0,
        set: function(e) {
            for (var t = 0; t < 9; t++)
                this.coefficients[t].copy(e[t]);
            return this
        },
        zero: function() {
            for (var e = 0; e < 9; e++)
                this.coefficients[e].set(0, 0, 0);
            return this
        },
        getAt: function(e, t) {
            var n = e.x
              , r = e.y
              , i = e.z
              , a = this.coefficients;
            return t.copy(a[0]).multiplyScalar(.282095),
            t.addScaledVector(a[1], .488603 * r),
            t.addScaledVector(a[2], .488603 * i),
            t.addScaledVector(a[3], .488603 * n),
            t.addScaledVector(a[4], n * r * 1.092548),
            t.addScaledVector(a[5], r * i * 1.092548),
            t.addScaledVector(a[6], .315392 * (3 * i * i - 1)),
            t.addScaledVector(a[7], n * i * 1.092548),
            t.addScaledVector(a[8], .546274 * (n * n - r * r)),
            t
        },
        getIrradianceAt: function(e, t) {
            var n = e.x
              , r = e.y
              , i = e.z
              , a = this.coefficients;
            return t.copy(a[0]).multiplyScalar(.886227),
            t.addScaledVector(a[1], 1.023328 * r),
            t.addScaledVector(a[2], 1.023328 * i),
            t.addScaledVector(a[3], 1.023328 * n),
            t.addScaledVector(a[4], .858086 * n * r),
            t.addScaledVector(a[5], .858086 * r * i),
            t.addScaledVector(a[6], .743125 * i * i - .247708),
            t.addScaledVector(a[7], .858086 * n * i),
            t.addScaledVector(a[8], .429043 * (n * n - r * r)),
            t
        },
        add: function(e) {
            for (var t = 0; t < 9; t++)
                this.coefficients[t].add(e.coefficients[t]);
            return this
        },
        addScaledSH: function(e, t) {
            for (var n = 0; n < 9; n++)
                this.coefficients[n].addScaledVector(e.coefficients[n], t);
            return this
        },
        scale: function(e) {
            for (var t = 0; t < 9; t++)
                this.coefficients[t].multiplyScalar(e);
            return this
        },
        lerp: function(e, t) {
            for (var n = 0; n < 9; n++)
                this.coefficients[n].lerp(e.coefficients[n], t);
            return this
        },
        equals: function(e) {
            for (var t = 0; t < 9; t++)
                if (!this.coefficients[t].equals(e.coefficients[t]))
                    return !1;
            return !0
        },
        copy: function(e) {
            return this.set(e.coefficients)
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        fromArray: function(e, t) {
            void 0 === t && (t = 0);
            for (var n = this.coefficients, r = 0; r < 9; r++)
                n[r].fromArray(e, t + 3 * r);
            return this
        },
        toArray: function(e, t) {
            void 0 === e && (e = []),
            void 0 === t && (t = 0);
            for (var n = this.coefficients, r = 0; r < 9; r++)
                n[r].toArray(e, t + 3 * r);
            return e
        }
    }),
    Object.assign(Ch, {
        getBasisAt: function(e, t) {
            var n = e.x
              , r = e.y
              , i = e.z;
            t[0] = .282095,
            t[1] = .488603 * r,
            t[2] = .488603 * i,
            t[3] = .488603 * n,
            t[4] = 1.092548 * n * r,
            t[5] = 1.092548 * r * i,
            t[6] = .315392 * (3 * i * i - 1),
            t[7] = 1.092548 * n * i,
            t[8] = .546274 * (n * n - r * r)
        }
    }),
    Lh.prototype = Object.assign(Object.create(vh.prototype), {
        constructor: Lh,
        isLightProbe: !0,
        copy: function(e) {
            return vh.prototype.copy.call(this, e),
            this.sh.copy(e.sh),
            this
        },
        fromJSON: function(e) {
            return this.intensity = e.intensity,
            this.sh.fromArray(e.sh),
            this
        },
        toJSON: function(e) {
            var t = vh.prototype.toJSON.call(this, e);
            return t.object.sh = this.sh.toArray(),
            t
        }
    }),
    Rh.prototype = Object.assign(Object.create(zc.prototype), {
        constructor: Rh,
        load: function(e, t, n, r) {
            var i = this
              , a = new Hc(i.manager);
            a.setPath(i.path),
            a.setRequestHeader(i.requestHeader),
            a.load(e, (function(n) {
                try {
                    t(i.parse(JSON.parse(n)))
                } catch (a) {
                    r ? r(a) : console.error(a),
                    i.manager.itemError(e)
                }
            }
            ), n, r)
        },
        parse: function(e) {
            var t = this.textures;
            function n(e) {
                return void 0 === t[e] && console.warn("THREE.MaterialLoader: Undefined texture", e),
                t[e]
            }
            var r = new xc[e.type];
            if (void 0 !== e.uuid && (r.uuid = e.uuid),
            void 0 !== e.name && (r.name = e.name),
            void 0 !== e.color && r.color.setHex(e.color),
            void 0 !== e.roughness && (r.roughness = e.roughness),
            void 0 !== e.metalness && (r.metalness = e.metalness),
            void 0 !== e.sheen && (r.sheen = (new wi).setHex(e.sheen)),
            void 0 !== e.emissive && r.emissive.setHex(e.emissive),
            void 0 !== e.specular && r.specular.setHex(e.specular),
            void 0 !== e.shininess && (r.shininess = e.shininess),
            void 0 !== e.clearcoat && (r.clearcoat = e.clearcoat),
            void 0 !== e.clearcoatRoughness && (r.clearcoatRoughness = e.clearcoatRoughness),
            void 0 !== e.fog && (r.fog = e.fog),
            void 0 !== e.flatShading && (r.flatShading = e.flatShading),
            void 0 !== e.blending && (r.blending = e.blending),
            void 0 !== e.combine && (r.combine = e.combine),
            void 0 !== e.side && (r.side = e.side),
            void 0 !== e.opacity && (r.opacity = e.opacity),
            void 0 !== e.transparent && (r.transparent = e.transparent),
            void 0 !== e.alphaTest && (r.alphaTest = e.alphaTest),
            void 0 !== e.depthTest && (r.depthTest = e.depthTest),
            void 0 !== e.depthWrite && (r.depthWrite = e.depthWrite),
            void 0 !== e.colorWrite && (r.colorWrite = e.colorWrite),
            void 0 !== e.stencilWrite && (r.stencilWrite = e.stencilWrite),
            void 0 !== e.stencilWriteMask && (r.stencilWriteMask = e.stencilWriteMask),
            void 0 !== e.stencilFunc && (r.stencilFunc = e.stencilFunc),
            void 0 !== e.stencilRef && (r.stencilRef = e.stencilRef),
            void 0 !== e.stencilFuncMask && (r.stencilFuncMask = e.stencilFuncMask),
            void 0 !== e.stencilFail && (r.stencilFail = e.stencilFail),
            void 0 !== e.stencilZFail && (r.stencilZFail = e.stencilZFail),
            void 0 !== e.stencilZPass && (r.stencilZPass = e.stencilZPass),
            void 0 !== e.wireframe && (r.wireframe = e.wireframe),
            void 0 !== e.wireframeLinewidth && (r.wireframeLinewidth = e.wireframeLinewidth),
            void 0 !== e.wireframeLinecap && (r.wireframeLinecap = e.wireframeLinecap),
            void 0 !== e.wireframeLinejoin && (r.wireframeLinejoin = e.wireframeLinejoin),
            void 0 !== e.rotation && (r.rotation = e.rotation),
            1 !== e.linewidth && (r.linewidth = e.linewidth),
            void 0 !== e.dashSize && (r.dashSize = e.dashSize),
            void 0 !== e.gapSize && (r.gapSize = e.gapSize),
            void 0 !== e.scale && (r.scale = e.scale),
            void 0 !== e.polygonOffset && (r.polygonOffset = e.polygonOffset),
            void 0 !== e.polygonOffsetFactor && (r.polygonOffsetFactor = e.polygonOffsetFactor),
            void 0 !== e.polygonOffsetUnits && (r.polygonOffsetUnits = e.polygonOffsetUnits),
            void 0 !== e.skinning && (r.skinning = e.skinning),
            void 0 !== e.morphTargets && (r.morphTargets = e.morphTargets),
            void 0 !== e.morphNormals && (r.morphNormals = e.morphNormals),
            void 0 !== e.dithering && (r.dithering = e.dithering),
            void 0 !== e.vertexTangents && (r.vertexTangents = e.vertexTangents),
            void 0 !== e.visible && (r.visible = e.visible),
            void 0 !== e.toneMapped && (r.toneMapped = e.toneMapped),
            void 0 !== e.userData && (r.userData = e.userData),
            void 0 !== e.vertexColors && ("number" === typeof e.vertexColors ? r.vertexColors = e.vertexColors > 0 : r.vertexColors = e.vertexColors),
            void 0 !== e.uniforms)
                for (var i in e.uniforms) {
                    var a = e.uniforms[i];
                    switch (r.uniforms[i] = {},
                    a.type) {
                    case "t":
                        r.uniforms[i].value = n(a.value);
                        break;
                    case "c":
                        r.uniforms[i].value = (new wi).setHex(a.value);
                        break;
                    case "v2":
                        r.uniforms[i].value = (new Xn).fromArray(a.value);
                        break;
                    case "v3":
                        r.uniforms[i].value = (new ir).fromArray(a.value);
                        break;
                    case "v4":
                        r.uniforms[i].value = (new Kn).fromArray(a.value);
                        break;
                    case "m3":
                        r.uniforms[i].value = (new Yn).fromArray(a.value);
                    case "m4":
                        r.uniforms[i].value = (new pr).fromArray(a.value);
                        break;
                    default:
                        r.uniforms[i].value = a.value
                    }
                }
            if (void 0 !== e.defines && (r.defines = e.defines),
            void 0 !== e.vertexShader && (r.vertexShader = e.vertexShader),
            void 0 !== e.fragmentShader && (r.fragmentShader = e.fragmentShader),
            void 0 !== e.extensions)
                for (var o in e.extensions)
                    r.extensions[o] = e.extensions[o];
            if (void 0 !== e.shading && (r.flatShading = 1 === e.shading),
            void 0 !== e.size && (r.size = e.size),
            void 0 !== e.sizeAttenuation && (r.sizeAttenuation = e.sizeAttenuation),
            void 0 !== e.map && (r.map = n(e.map)),
            void 0 !== e.matcap && (r.matcap = n(e.matcap)),
            void 0 !== e.alphaMap && (r.alphaMap = n(e.alphaMap)),
            void 0 !== e.bumpMap && (r.bumpMap = n(e.bumpMap)),
            void 0 !== e.bumpScale && (r.bumpScale = e.bumpScale),
            void 0 !== e.normalMap && (r.normalMap = n(e.normalMap)),
            void 0 !== e.normalMapType && (r.normalMapType = e.normalMapType),
            void 0 !== e.normalScale) {
                var s = e.normalScale;
                !1 === Array.isArray(s) && (s = [s, s]),
                r.normalScale = (new Xn).fromArray(s)
            }
            return void 0 !== e.displacementMap && (r.displacementMap = n(e.displacementMap)),
            void 0 !== e.displacementScale && (r.displacementScale = e.displacementScale),
            void 0 !== e.displacementBias && (r.displacementBias = e.displacementBias),
            void 0 !== e.roughnessMap && (r.roughnessMap = n(e.roughnessMap)),
            void 0 !== e.metalnessMap && (r.metalnessMap = n(e.metalnessMap)),
            void 0 !== e.emissiveMap && (r.emissiveMap = n(e.emissiveMap)),
            void 0 !== e.emissiveIntensity && (r.emissiveIntensity = e.emissiveIntensity),
            void 0 !== e.specularMap && (r.specularMap = n(e.specularMap)),
            void 0 !== e.envMap && (r.envMap = n(e.envMap)),
            void 0 !== e.envMapIntensity && (r.envMapIntensity = e.envMapIntensity),
            void 0 !== e.reflectivity && (r.reflectivity = e.reflectivity),
            void 0 !== e.refractionRatio && (r.refractionRatio = e.refractionRatio),
            void 0 !== e.lightMap && (r.lightMap = n(e.lightMap)),
            void 0 !== e.lightMapIntensity && (r.lightMapIntensity = e.lightMapIntensity),
            void 0 !== e.aoMap && (r.aoMap = n(e.aoMap)),
            void 0 !== e.aoMapIntensity && (r.aoMapIntensity = e.aoMapIntensity),
            void 0 !== e.gradientMap && (r.gradientMap = n(e.gradientMap)),
            void 0 !== e.clearcoatMap && (r.clearcoatMap = n(e.clearcoatMap)),
            void 0 !== e.clearcoatRoughnessMap && (r.clearcoatRoughnessMap = n(e.clearcoatRoughnessMap)),
            void 0 !== e.clearcoatNormalMap && (r.clearcoatNormalMap = n(e.clearcoatNormalMap)),
            void 0 !== e.clearcoatNormalScale && (r.clearcoatNormalScale = (new Xn).fromArray(e.clearcoatNormalScale)),
            void 0 !== e.transmission && (r.transmission = e.transmission),
            void 0 !== e.transmissionMap && (r.transmissionMap = n(e.transmissionMap)),
            r
        },
        setTextures: function(e) {
            return this.textures = e,
            this
        }
    });
    var kh = {
        decodeText: function(e) {
            if ("undefined" !== typeof TextDecoder)
                return (new TextDecoder).decode(e);
            for (var t = "", n = 0, r = e.length; n < r; n++)
                t += String.fromCharCode(e[n]);
            try {
                return decodeURIComponent(escape(t))
            } catch (i) {
                return t
            }
        },
        extractUrlBase: function(e) {
            var t = e.lastIndexOf("/");
            return -1 === t ? "./" : e.substr(0, t + 1)
        }
    };
    function Dh() {
        $i.call(this),
        this.type = "InstancedBufferGeometry",
        this.instanceCount = 1 / 0
    }
    function Ih(e, t, n, r) {
        "number" === typeof n && (r = n,
        n = !1,
        console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),
        Ri.call(this, e, t, n),
        this.meshPerAttribute = r || 1
    }
    function Oh(e) {
        zc.call(this, e)
    }
    Dh.prototype = Object.assign(Object.create($i.prototype), {
        constructor: Dh,
        isInstancedBufferGeometry: !0,
        copy: function(e) {
            return $i.prototype.copy.call(this, e),
            this.instanceCount = e.instanceCount,
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        toJSON: function() {
            var e = $i.prototype.toJSON.call(this);
            return e.instanceCount = this.instanceCount,
            e.isInstancedBufferGeometry = !0,
            e
        }
    }),
    Ih.prototype = Object.assign(Object.create(Ri.prototype), {
        constructor: Ih,
        isInstancedBufferAttribute: !0,
        copy: function(e) {
            return Ri.prototype.copy.call(this, e),
            this.meshPerAttribute = e.meshPerAttribute,
            this
        },
        toJSON: function() {
            var e = Ri.prototype.toJSON.call(this);
            return e.meshPerAttribute = this.meshPerAttribute,
            e.isInstancedBufferAttribute = !0,
            e
        }
    }),
    Oh.prototype = Object.assign(Object.create(zc.prototype), {
        constructor: Oh,
        load: function(e, t, n, r) {
            var i = this
              , a = new Hc(i.manager);
            a.setPath(i.path),
            a.setRequestHeader(i.requestHeader),
            a.load(e, (function(n) {
                try {
                    t(i.parse(JSON.parse(n)))
                } catch (a) {
                    r ? r(a) : console.error(a),
                    i.manager.itemError(e)
                }
            }
            ), n, r)
        },
        parse: function(e) {
            var t = {}
              , n = {};
            function r(e, r) {
                if (void 0 !== t[r])
                    return t[r];
                var i = e.interleavedBuffers[r]
                  , a = function(e, t) {
                    if (void 0 !== n[t])
                        return n[t];
                    var r = e.arrayBuffers[t]
                      , i = new Uint32Array(r).buffer;
                    return n[t] = i,
                    i
                }(e, i.buffer)
                  , o = new Ys(new Fh[i.type](a),i.stride);
                return o.uuid = i.uuid,
                t[r] = o,
                o
            }
            var i = e.isInstancedBufferGeometry ? new Dh : new $i
              , a = e.data.index;
            if (void 0 !== a) {
                var o = new Fh[a.type](a.array);
                i.setIndex(new Ri(o,1))
            }
            var s = e.data.attributes;
            for (var l in s) {
                var u = s[l]
                  , c = void 0;
                if (u.isInterleavedBufferAttribute) {
                    c = new Js(r(e.data, u.data),u.itemSize,u.offset,u.normalized)
                } else {
                    var h = new Fh[u.type](u.array);
                    c = new (u.isInstancedBufferAttribute ? Ih : Ri)(h,u.itemSize,u.normalized)
                }
                void 0 !== u.name && (c.name = u.name),
                i.setAttribute(l, c)
            }
            var p = e.data.morphAttributes;
            if (p)
                for (var f in p) {
                    for (var d = p[f], m = [], g = 0, v = d.length; g < v; g++) {
                        var y = d[g]
                          , b = void 0;
                        if (y.isInterleavedBufferAttribute)
                            b = new Js(r(e.data, y.data),y.itemSize,y.offset,y.normalized);
                        else
                            b = new Ri(new Fh[y.type](y.array),y.itemSize,y.normalized);
                        void 0 !== y.name && (b.name = y.name),
                        m.push(b)
                    }
                    i.morphAttributes[f] = m
                }
            e.data.morphTargetsRelative && (i.morphTargetsRelative = !0);
            var x = e.data.groups || e.data.drawcalls || e.data.offsets;
            if (void 0 !== x)
                for (var w = 0, _ = x.length; w !== _; ++w) {
                    var S = x[w];
                    i.addGroup(S.start, S.count, S.materialIndex)
                }
            var E = e.data.boundingSphere;
            if (void 0 !== E) {
                var M = new ir;
                void 0 !== E.center && M.fromArray(E.center),
                i.boundingSphere = new Yr(M,E.radius)
            }
            return e.name && (i.name = e.name),
            e.userData && (i.userData = e.userData),
            i
        }
    });
    var Fh = {
        Int8Array: Int8Array,
        Uint8Array: Uint8Array,
        Uint8ClampedArray: "undefined" !== typeof Uint8ClampedArray ? Uint8ClampedArray : Uint8Array,
        Int16Array: Int16Array,
        Uint16Array: Uint16Array,
        Int32Array: Int32Array,
        Uint32Array: Uint32Array,
        Float32Array: Float32Array,
        Float64Array: Float64Array
    };
    function Nh(e) {
        zc.call(this, e)
    }
    Nh.prototype = Object.assign(Object.create(zc.prototype), {
        constructor: Nh,
        load: function(e, t, n, r) {
            var i = this
              , a = "" === this.path ? kh.extractUrlBase(e) : this.path;
            this.resourcePath = this.resourcePath || a;
            var o = new Hc(i.manager);
            o.setPath(this.path),
            o.setRequestHeader(this.requestHeader),
            o.load(e, (function(n) {
                var a = null;
                try {
                    a = JSON.parse(n)
                } catch (s) {
                    return void 0 !== r && r(s),
                    void console.error("THREE:ObjectLoader: Can't parse " + e + ".", s.message)
                }
                var o = a.metadata;
                void 0 !== o && void 0 !== o.type && "geometry" !== o.type.toLowerCase() ? i.parse(a, t) : console.error("THREE.ObjectLoader: Can't load " + e)
            }
            ), n, r)
        },
        parse: function(e, t) {
            var n = this.parseShape(e.shapes)
              , r = this.parseGeometries(e.geometries, n)
              , i = this.parseImages(e.images, (function() {
                void 0 !== t && t(s)
            }
            ))
              , a = this.parseTextures(e.textures, i)
              , o = this.parseMaterials(e.materials, a)
              , s = this.parseObject(e.object, r, o);
            return e.animations && (s.animations = this.parseAnimations(e.animations)),
            void 0 !== e.images && 0 !== e.images.length || void 0 !== t && t(s),
            s
        },
        parseShape: function(e) {
            var t = {};
            if (void 0 !== e)
                for (var n = 0, r = e.length; n < r; n++) {
                    var i = (new gh).fromJSON(e[n]);
                    t[i.uuid] = i
                }
            return t
        },
        parseGeometries: function(e, t) {
            var n, r = {};
            if (void 0 !== e)
                for (var i = new Oh, a = 0, o = e.length; a < o; a++) {
                    var s = void 0
                      , l = e[a];
                    switch (l.type) {
                    case "PlaneGeometry":
                    case "PlaneBufferGeometry":
                        s = new uc[l.type](l.width,l.height,l.widthSegments,l.heightSegments);
                        break;
                    case "BoxGeometry":
                    case "BoxBufferGeometry":
                    case "CubeGeometry":
                        s = new uc[l.type](l.width,l.height,l.depth,l.widthSegments,l.heightSegments,l.depthSegments);
                        break;
                    case "CircleGeometry":
                    case "CircleBufferGeometry":
                        s = new uc[l.type](l.radius,l.segments,l.thetaStart,l.thetaLength);
                        break;
                    case "CylinderGeometry":
                    case "CylinderBufferGeometry":
                        s = new uc[l.type](l.radiusTop,l.radiusBottom,l.height,l.radialSegments,l.heightSegments,l.openEnded,l.thetaStart,l.thetaLength);
                        break;
                    case "ConeGeometry":
                    case "ConeBufferGeometry":
                        s = new uc[l.type](l.radius,l.height,l.radialSegments,l.heightSegments,l.openEnded,l.thetaStart,l.thetaLength);
                        break;
                    case "SphereGeometry":
                    case "SphereBufferGeometry":
                        s = new uc[l.type](l.radius,l.widthSegments,l.heightSegments,l.phiStart,l.phiLength,l.thetaStart,l.thetaLength);
                        break;
                    case "DodecahedronGeometry":
                    case "DodecahedronBufferGeometry":
                    case "IcosahedronGeometry":
                    case "IcosahedronBufferGeometry":
                    case "OctahedronGeometry":
                    case "OctahedronBufferGeometry":
                    case "TetrahedronGeometry":
                    case "TetrahedronBufferGeometry":
                        s = new uc[l.type](l.radius,l.detail);
                        break;
                    case "RingGeometry":
                    case "RingBufferGeometry":
                        s = new uc[l.type](l.innerRadius,l.outerRadius,l.thetaSegments,l.phiSegments,l.thetaStart,l.thetaLength);
                        break;
                    case "TorusGeometry":
                    case "TorusBufferGeometry":
                        s = new uc[l.type](l.radius,l.tube,l.radialSegments,l.tubularSegments,l.arc);
                        break;
                    case "TorusKnotGeometry":
                    case "TorusKnotBufferGeometry":
                        s = new uc[l.type](l.radius,l.tube,l.tubularSegments,l.radialSegments,l.p,l.q);
                        break;
                    case "TubeGeometry":
                    case "TubeBufferGeometry":
                        s = new uc[l.type]((new fh[l.path.type]).fromJSON(l.path),l.tubularSegments,l.radius,l.radialSegments,l.closed);
                        break;
                    case "LatheGeometry":
                    case "LatheBufferGeometry":
                        s = new uc[l.type](l.points,l.segments,l.phiStart,l.phiLength);
                        break;
                    case "PolyhedronGeometry":
                    case "PolyhedronBufferGeometry":
                        s = new uc[l.type](l.vertices,l.indices,l.radius,l.details);
                        break;
                    case "ShapeGeometry":
                    case "ShapeBufferGeometry":
                        n = [];
                        for (var u = 0, c = l.shapes.length; u < c; u++) {
                            var h = t[l.shapes[u]];
                            n.push(h)
                        }
                        s = new uc[l.type](n,l.curveSegments);
                        break;
                    case "ExtrudeGeometry":
                    case "ExtrudeBufferGeometry":
                        n = [];
                        for (var p = 0, f = l.shapes.length; p < f; p++) {
                            var d = t[l.shapes[p]];
                            n.push(d)
                        }
                        var m = l.options.extrudePath;
                        void 0 !== m && (l.options.extrudePath = (new fh[m.type]).fromJSON(m)),
                        s = new uc[l.type](n,l.options);
                        break;
                    case "BufferGeometry":
                    case "InstancedBufferGeometry":
                        s = i.parse(l);
                        break;
                    case "Geometry":
                        console.error('THREE.ObjectLoader: Loading "Geometry" is not supported anymore.');
                        break;
                    default:
                        console.warn('THREE.ObjectLoader: Unsupported geometry type "' + l.type + '"');
                        continue
                    }
                    s.uuid = l.uuid,
                    void 0 !== l.name && (s.name = l.name),
                    !0 === s.isBufferGeometry && void 0 !== l.userData && (s.userData = l.userData),
                    r[l.uuid] = s
                }
            return r
        },
        parseMaterials: function(e, t) {
            var n = {}
              , r = {};
            if (void 0 !== e) {
                var i = new Rh;
                i.setTextures(t);
                for (var a = 0, o = e.length; a < o; a++) {
                    var s = e[a];
                    if ("MultiMaterial" === s.type) {
                        for (var l = [], u = 0; u < s.materials.length; u++) {
                            var c = s.materials[u];
                            void 0 === n[c.uuid] && (n[c.uuid] = i.parse(c)),
                            l.push(n[c.uuid])
                        }
                        r[s.uuid] = l
                    } else
                        void 0 === n[s.uuid] && (n[s.uuid] = i.parse(s)),
                        r[s.uuid] = n[s.uuid]
                }
            }
            return r
        },
        parseAnimations: function(e) {
            for (var t = [], n = 0; n < e.length; n++) {
                var r = e[n]
                  , i = Ic.parse(r);
                void 0 !== r.uuid && (i.uuid = r.uuid),
                t.push(i)
            }
            return t
        },
        parseImages: function(e, t) {
            var n, r = this, i = {};
            function a(e) {
                return r.manager.itemStart(e),
                n.load(e, (function() {
                    r.manager.itemEnd(e)
                }
                ), void 0, (function() {
                    r.manager.itemError(e),
                    r.manager.itemEnd(e)
                }
                ))
            }
            if (void 0 !== e && e.length > 0) {
                var o = new Nc(t);
                (n = new Wc(o)).setCrossOrigin(this.crossOrigin);
                for (var s = 0, l = e.length; s < l; s++) {
                    var u = e[s]
                      , c = u.url;
                    if (Array.isArray(c)) {
                        i[u.uuid] = [];
                        for (var h = 0, p = c.length; h < p; h++) {
                            var f = c[h]
                              , d = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(f) ? f : r.resourcePath + f;
                            i[u.uuid].push(a(d))
                        }
                    } else {
                        var m = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(u.url) ? u.url : r.resourcePath + u.url;
                        i[u.uuid] = a(m)
                    }
                }
            }
            return i
        },
        parseTextures: function(e, t) {
            function n(e, t) {
                return "number" === typeof e ? e : (console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.", e),
                t[e])
            }
            var r = {};
            if (void 0 !== e)
                for (var i = 0, a = e.length; i < a; i++) {
                    var o = e[i];
                    void 0 === o.image && console.warn('THREE.ObjectLoader: No "image" specified for', o.uuid),
                    void 0 === t[o.image] && console.warn("THREE.ObjectLoader: Undefined image", o.image);
                    var s = void 0;
                    (s = Array.isArray(t[o.image]) ? new no(t[o.image]) : new Jn(t[o.image])).needsUpdate = !0,
                    s.uuid = o.uuid,
                    void 0 !== o.name && (s.name = o.name),
                    void 0 !== o.mapping && (s.mapping = n(o.mapping, zh)),
                    void 0 !== o.offset && s.offset.fromArray(o.offset),
                    void 0 !== o.repeat && s.repeat.fromArray(o.repeat),
                    void 0 !== o.center && s.center.fromArray(o.center),
                    void 0 !== o.rotation && (s.rotation = o.rotation),
                    void 0 !== o.wrap && (s.wrapS = n(o.wrap[0], Gh),
                    s.wrapT = n(o.wrap[1], Gh)),
                    void 0 !== o.format && (s.format = o.format),
                    void 0 !== o.type && (s.type = o.type),
                    void 0 !== o.encoding && (s.encoding = o.encoding),
                    void 0 !== o.minFilter && (s.minFilter = n(o.minFilter, Hh)),
                    void 0 !== o.magFilter && (s.magFilter = n(o.magFilter, Hh)),
                    void 0 !== o.anisotropy && (s.anisotropy = o.anisotropy),
                    void 0 !== o.flipY && (s.flipY = o.flipY),
                    void 0 !== o.premultiplyAlpha && (s.premultiplyAlpha = o.premultiplyAlpha),
                    void 0 !== o.unpackAlignment && (s.unpackAlignment = o.unpackAlignment),
                    r[o.uuid] = s
                }
            return r
        },
        parseObject: function(e, t, n) {
            var r, i, a;
            function o(e) {
                return void 0 === t[e] && console.warn("THREE.ObjectLoader: Undefined geometry", e),
                t[e]
            }
            function s(e) {
                if (void 0 !== e) {
                    if (Array.isArray(e)) {
                        for (var t = [], r = 0, i = e.length; r < i; r++) {
                            var a = e[r];
                            void 0 === n[a] && console.warn("THREE.ObjectLoader: Undefined material", a),
                            t.push(n[a])
                        }
                        return t
                    }
                    return void 0 === n[e] && console.warn("THREE.ObjectLoader: Undefined material", e),
                    n[e]
                }
            }
            switch (e.type) {
            case "Scene":
                r = new Rr,
                void 0 !== e.background && Number.isInteger(e.background) && (r.background = new wi(e.background)),
                void 0 !== e.fog && ("Fog" === e.fog.type ? r.fog = new Xs(e.fog.color,e.fog.near,e.fog.far) : "FogExp2" === e.fog.type && (r.fog = new qs(e.fog.color,e.fog.density)));
                break;
            case "PerspectiveCamera":
                r = new Ca(e.fov,e.aspect,e.near,e.far),
                void 0 !== e.focus && (r.focus = e.focus),
                void 0 !== e.zoom && (r.zoom = e.zoom),
                void 0 !== e.filmGauge && (r.filmGauge = e.filmGauge),
                void 0 !== e.filmOffset && (r.filmOffset = e.filmOffset),
                void 0 !== e.view && (r.view = Object.assign({}, e.view));
                break;
            case "OrthographicCamera":
                r = new Eh(e.left,e.right,e.top,e.bottom,e.near,e.far),
                void 0 !== e.zoom && (r.zoom = e.zoom),
                void 0 !== e.view && (r.view = Object.assign({}, e.view));
                break;
            case "AmbientLight":
                r = new Ah(e.color,e.intensity);
                break;
            case "DirectionalLight":
                r = new Th(e.color,e.intensity);
                break;
            case "PointLight":
                r = new Sh(e.color,e.intensity,e.distance,e.decay);
                break;
            case "RectAreaLight":
                r = new Ph(e.color,e.intensity,e.width,e.height);
                break;
            case "SpotLight":
                r = new wh(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);
                break;
            case "HemisphereLight":
                r = new yh(e.color,e.groundColor,e.intensity);
                break;
            case "LightProbe":
                r = (new Lh).fromJSON(e);
                break;
            case "SkinnedMesh":
                console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");
            case "Mesh":
                r = new da(i = o(e.geometry),a = s(e.material));
                break;
            case "InstancedMesh":
                i = o(e.geometry),
                a = s(e.material);
                var l = e.count
                  , u = e.instanceMatrix;
                (r = new Ml(i,a,l)).instanceMatrix = new Ri(new Float32Array(u.array),16);
                break;
            case "LOD":
                r = new ml;
                break;
            case "Line":
                r = new kl(o(e.geometry),s(e.material),e.mode);
                break;
            case "LineLoop":
                r = new Fl(o(e.geometry),s(e.material));
                break;
            case "LineSegments":
                r = new Ol(o(e.geometry),s(e.material));
                break;
            case "PointCloud":
            case "Points":
                r = new Vl(o(e.geometry),s(e.material));
                break;
            case "Sprite":
                r = new hl(s(e.material));
                break;
            case "Group":
                r = new Gs;
                break;
            default:
                r = new Lr
            }
            if (r.uuid = e.uuid,
            void 0 !== e.name && (r.name = e.name),
            void 0 !== e.matrix ? (r.matrix.fromArray(e.matrix),
            void 0 !== e.matrixAutoUpdate && (r.matrixAutoUpdate = e.matrixAutoUpdate),
            r.matrixAutoUpdate && r.matrix.decompose(r.position, r.quaternion, r.scale)) : (void 0 !== e.position && r.position.fromArray(e.position),
            void 0 !== e.rotation && r.rotation.fromArray(e.rotation),
            void 0 !== e.quaternion && r.quaternion.fromArray(e.quaternion),
            void 0 !== e.scale && r.scale.fromArray(e.scale)),
            void 0 !== e.castShadow && (r.castShadow = e.castShadow),
            void 0 !== e.receiveShadow && (r.receiveShadow = e.receiveShadow),
            e.shadow && (void 0 !== e.shadow.bias && (r.shadow.bias = e.shadow.bias),
            void 0 !== e.shadow.normalBias && (r.shadow.normalBias = e.shadow.normalBias),
            void 0 !== e.shadow.radius && (r.shadow.radius = e.shadow.radius),
            void 0 !== e.shadow.mapSize && r.shadow.mapSize.fromArray(e.shadow.mapSize),
            void 0 !== e.shadow.camera && (r.shadow.camera = this.parseObject(e.shadow.camera))),
            void 0 !== e.visible && (r.visible = e.visible),
            void 0 !== e.frustumCulled && (r.frustumCulled = e.frustumCulled),
            void 0 !== e.renderOrder && (r.renderOrder = e.renderOrder),
            void 0 !== e.userData && (r.userData = e.userData),
            void 0 !== e.layers && (r.layers.mask = e.layers),
            void 0 !== e.children)
                for (var c = e.children, h = 0; h < c.length; h++)
                    r.add(this.parseObject(c[h], t, n));
            if ("LOD" === e.type) {
                void 0 !== e.autoUpdate && (r.autoUpdate = e.autoUpdate);
                for (var p = e.levels, f = 0; f < p.length; f++) {
                    var d = p[f]
                      , m = r.getObjectByProperty("uuid", d.object);
                    void 0 !== m && r.addLevel(m, d.distance)
                }
            }
            return r
        }
    });
    var Bh, zh = {
        UVMapping: he,
        CubeReflectionMapping: pe,
        CubeRefractionMapping: fe,
        EquirectangularReflectionMapping: de,
        EquirectangularRefractionMapping: me,
        CubeUVReflectionMapping: ge,
        CubeUVRefractionMapping: ve
    }, Gh = {
        RepeatWrapping: ye,
        ClampToEdgeWrapping: be,
        MirroredRepeatWrapping: xe
    }, Hh = {
        NearestFilter: we,
        NearestMipmapNearestFilter: _e,
        NearestMipmapLinearFilter: Ee,
        LinearFilter: Te,
        LinearMipmapNearestFilter: Ae,
        LinearMipmapLinearFilter: Ce
    };
    function Vh(e) {
        "undefined" === typeof createImageBitmap && console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),
        "undefined" === typeof fetch && console.warn("THREE.ImageBitmapLoader: fetch() not supported."),
        zc.call(this, e),
        this.options = {
            premultiplyAlpha: "none"
        }
    }
    function jh() {
        this.type = "ShapePath",
        this.color = new wi,
        this.subPaths = [],
        this.currentPath = null
    }
    function Uh(e) {
        this.type = "Font",
        this.data = e
    }
    function Wh(e, t, n, r, i) {
        var a = i.glyphs[e] || i.glyphs["?"];
        if (a) {
            var o, s, l, u, c, h, p, f, d = new jh;
            if (a.o)
                for (var m = a._cachedOutline || (a._cachedOutline = a.o.split(" ")), g = 0, v = m.length; g < v; ) {
                    switch (m[g++]) {
                    case "m":
                        o = m[g++] * t + n,
                        s = m[g++] * t + r,
                        d.moveTo(o, s);
                        break;
                    case "l":
                        o = m[g++] * t + n,
                        s = m[g++] * t + r,
                        d.lineTo(o, s);
                        break;
                    case "q":
                        l = m[g++] * t + n,
                        u = m[g++] * t + r,
                        c = m[g++] * t + n,
                        h = m[g++] * t + r,
                        d.quadraticCurveTo(c, h, l, u);
                        break;
                    case "b":
                        l = m[g++] * t + n,
                        u = m[g++] * t + r,
                        c = m[g++] * t + n,
                        h = m[g++] * t + r,
                        p = m[g++] * t + n,
                        f = m[g++] * t + r,
                        d.bezierCurveTo(c, h, p, f, l, u)
                    }
                }
            return {
                offsetX: a.ha * t,
                path: d
            }
        }
        console.error('THREE.Font: character "' + e + '" does not exists in font family ' + i.familyName + ".")
    }
    function qh(e) {
        zc.call(this, e)
    }
    Vh.prototype = Object.assign(Object.create(zc.prototype), {
        constructor: Vh,
        isImageBitmapLoader: !0,
        setOptions: function(e) {
            return this.options = e,
            this
        },
        load: function(e, t, n, r) {
            void 0 === e && (e = ""),
            void 0 !== this.path && (e = this.path + e),
            e = this.manager.resolveURL(e);
            var i = this
              , a = Fc.get(e);
            if (void 0 !== a)
                return i.manager.itemStart(e),
                setTimeout((function() {
                    t && t(a),
                    i.manager.itemEnd(e)
                }
                ), 0),
                a;
            fetch(e).then((function(e) {
                return e.blob()
            }
            )).then((function(e) {
                return createImageBitmap(e, i.options)
            }
            )).then((function(n) {
                Fc.add(e, n),
                t && t(n),
                i.manager.itemEnd(e)
            }
            )).catch((function(t) {
                r && r(t),
                i.manager.itemError(e),
                i.manager.itemEnd(e)
            }
            )),
            i.manager.itemStart(e)
        }
    }),
    Object.assign(jh.prototype, {
        moveTo: function(e, t) {
            return this.currentPath = new mh,
            this.subPaths.push(this.currentPath),
            this.currentPath.moveTo(e, t),
            this
        },
        lineTo: function(e, t) {
            return this.currentPath.lineTo(e, t),
            this
        },
        quadraticCurveTo: function(e, t, n, r) {
            return this.currentPath.quadraticCurveTo(e, t, n, r),
            this
        },
        bezierCurveTo: function(e, t, n, r, i, a) {
            return this.currentPath.bezierCurveTo(e, t, n, r, i, a),
            this
        },
        splineThru: function(e) {
            return this.currentPath.splineThru(e),
            this
        },
        toShapes: function(e, t) {
            function n(e) {
                for (var t = [], n = 0, r = e.length; n < r; n++) {
                    var i = e[n]
                      , a = new gh;
                    a.curves = i.curves,
                    t.push(a)
                }
                return t
            }
            function r(e, t) {
                for (var n = t.length, r = !1, i = n - 1, a = 0; a < n; i = a++) {
                    var o = t[i]
                      , s = t[a]
                      , l = s.x - o.x
                      , u = s.y - o.y;
                    if (Math.abs(u) > Number.EPSILON) {
                        if (u < 0 && (o = t[a],
                        l = -l,
                        s = t[i],
                        u = -u),
                        e.y < o.y || e.y > s.y)
                            continue;
                        if (e.y === o.y) {
                            if (e.x === o.x)
                                return !0
                        } else {
                            var c = u * (e.x - o.x) - l * (e.y - o.y);
                            if (0 === c)
                                return !0;
                            if (c < 0)
                                continue;
                            r = !r
                        }
                    } else {
                        if (e.y !== o.y)
                            continue;
                        if (s.x <= e.x && e.x <= o.x || o.x <= e.x && e.x <= s.x)
                            return !0
                    }
                }
                return r
            }
            var i = Bu.isClockWise
              , a = this.subPaths;
            if (0 === a.length)
                return [];
            if (!0 === t)
                return n(a);
            var o, s, l, u = [];
            if (1 === a.length)
                return s = a[0],
                (l = new gh).curves = s.curves,
                u.push(l),
                u;
            var c = !i(a[0].getPoints());
            c = e ? !c : c;
            var h, p, f = [], d = [], m = [], g = 0;
            d[g] = void 0,
            m[g] = [];
            for (var v = 0, y = a.length; v < y; v++)
                o = i(h = (s = a[v]).getPoints()),
                (o = e ? !o : o) ? (!c && d[g] && g++,
                d[g] = {
                    s: new gh,
                    p: h
                },
                d[g].s.curves = s.curves,
                c && g++,
                m[g] = []) : m[g].push({
                    h: s,
                    p: h[0]
                });
            if (!d[0])
                return n(a);
            if (d.length > 1) {
                for (var b = !1, x = [], w = 0, _ = d.length; w < _; w++)
                    f[w] = [];
                for (var S = 0, E = d.length; S < E; S++)
                    for (var M = m[S], T = 0; T < M.length; T++) {
                        for (var A = M[T], P = !0, C = 0; C < d.length; C++)
                            r(A.p, d[C].p) && (S !== C && x.push({
                                froms: S,
                                tos: C,
                                hole: T
                            }),
                            P ? (P = !1,
                            f[C].push(A)) : b = !0);
                        P && f[S].push(A)
                    }
                x.length > 0 && (b || (m = f))
            }
            for (var L = 0, R = d.length; L < R; L++) {
                l = d[L].s,
                u.push(l);
                for (var k = 0, D = (p = m[L]).length; k < D; k++)
                    l.holes.push(p[k].h)
            }
            return u
        }
    }),
    Object.assign(Uh.prototype, {
        isFont: !0,
        generateShapes: function(e, t) {
            void 0 === t && (t = 100);
            for (var n = [], r = function(e, t, n) {
                for (var r = Array.from ? Array.from(e) : String(e).split(""), i = t / n.resolution, a = (n.boundingBox.yMax - n.boundingBox.yMin + n.underlineThickness) * i, o = [], s = 0, l = 0, u = 0; u < r.length; u++) {
                    var c = r[u];
                    if ("\n" === c)
                        s = 0,
                        l -= a;
                    else {
                        var h = Wh(c, i, s, l, n);
                        s += h.offsetX,
                        o.push(h.path)
                    }
                }
                return o
            }(e, t, this.data), i = 0, a = r.length; i < a; i++)
                Array.prototype.push.apply(n, r[i].toShapes());
            return n
        }
    }),
    qh.prototype = Object.assign(Object.create(zc.prototype), {
        constructor: qh,
        load: function(e, t, n, r) {
            var i = this
              , a = new Hc(this.manager);
            a.setPath(this.path),
            a.setRequestHeader(this.requestHeader),
            a.load(e, (function(e) {
                var n;
                try {
                    n = JSON.parse(e)
                } catch (a) {
                    console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),
                    n = JSON.parse(e.substring(65, e.length - 2))
                }
                var r = i.parse(n);
                t && t(r)
            }
            ), n, r)
        },
        parse: function(e) {
            return new Uh(e)
        }
    });
    var Xh = {
        getContext: function() {
            return void 0 === Bh && (Bh = new (window.AudioContext || window.webkitAudioContext)),
            Bh
        },
        setContext: function(e) {
            Bh = e
        }
    };
    function Yh(e) {
        zc.call(this, e)
    }
    function Zh(e, t, n) {
        Lh.call(this, void 0, n);
        var r = (new wi).set(e)
          , i = (new wi).set(t)
          , a = new ir(r.r,r.g,r.b)
          , o = new ir(i.r,i.g,i.b)
          , s = Math.sqrt(Math.PI)
          , l = s * Math.sqrt(.75);
        this.sh.coefficients[0].copy(a).add(o).multiplyScalar(s),
        this.sh.coefficients[1].copy(a).sub(o).multiplyScalar(l)
    }
    function $h(e, t) {
        Lh.call(this, void 0, t);
        var n = (new wi).set(e);
        this.sh.coefficients[0].set(n.r, n.g, n.b).multiplyScalar(2 * Math.sqrt(Math.PI))
    }
    Yh.prototype = Object.assign(Object.create(zc.prototype), {
        constructor: Yh,
        load: function(e, t, n, r) {
            var i = this
              , a = new Hc(i.manager);
            a.setResponseType("arraybuffer"),
            a.setPath(i.path),
            a.setRequestHeader(i.requestHeader),
            a.load(e, (function(n) {
                try {
                    var a = n.slice(0);
                    Xh.getContext().decodeAudioData(a, (function(e) {
                        t(e)
                    }
                    ))
                } catch (o) {
                    r ? r(o) : console.error(o),
                    i.manager.itemError(e)
                }
            }
            ), n, r)
        }
    }),
    Zh.prototype = Object.assign(Object.create(Lh.prototype), {
        constructor: Zh,
        isHemisphereLightProbe: !0,
        copy: function(e) {
            return Lh.prototype.copy.call(this, e),
            this
        },
        toJSON: function(e) {
            return Lh.prototype.toJSON.call(this, e)
        }
    }),
    $h.prototype = Object.assign(Object.create(Lh.prototype), {
        constructor: $h,
        isAmbientLightProbe: !0,
        copy: function(e) {
            return Lh.prototype.copy.call(this, e),
            this
        },
        toJSON: function(e) {
            return Lh.prototype.toJSON.call(this, e)
        }
    });
    var Jh = new pr
      , Kh = new pr;
    function Qh() {
        this.type = "StereoCamera",
        this.aspect = 1,
        this.eyeSep = .064,
        this.cameraL = new Ca,
        this.cameraL.layers.enable(1),
        this.cameraL.matrixAutoUpdate = !1,
        this.cameraR = new Ca,
        this.cameraR.layers.enable(2),
        this.cameraR.matrixAutoUpdate = !1,
        this._cache = {
            focus: null,
            fov: null,
            aspect: null,
            near: null,
            far: null,
            zoom: null,
            eyeSep: null
        }
    }
    function ep(e) {
        this.autoStart = void 0 === e || e,
        this.startTime = 0,
        this.oldTime = 0,
        this.elapsedTime = 0,
        this.running = !1
    }
    Object.assign(Qh.prototype, {
        update: function(e) {
            var t = this._cache;
            if (t.focus !== e.focus || t.fov !== e.fov || t.aspect !== e.aspect * this.aspect || t.near !== e.near || t.far !== e.far || t.zoom !== e.zoom || t.eyeSep !== this.eyeSep) {
                t.focus = e.focus,
                t.fov = e.fov,
                t.aspect = e.aspect * this.aspect,
                t.near = e.near,
                t.far = e.far,
                t.zoom = e.zoom,
                t.eyeSep = this.eyeSep;
                var n, r, i = e.projectionMatrix.clone(), a = t.eyeSep / 2, o = a * t.near / t.focus, s = t.near * Math.tan(qn.DEG2RAD * t.fov * .5) / t.zoom;
                Kh.elements[12] = -a,
                Jh.elements[12] = a,
                n = -s * t.aspect + o,
                r = s * t.aspect + o,
                i.elements[0] = 2 * t.near / (r - n),
                i.elements[8] = (r + n) / (r - n),
                this.cameraL.projectionMatrix.copy(i),
                n = -s * t.aspect - o,
                r = s * t.aspect - o,
                i.elements[0] = 2 * t.near / (r - n),
                i.elements[8] = (r + n) / (r - n),
                this.cameraR.projectionMatrix.copy(i)
            }
            this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(Kh),
            this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(Jh)
        }
    }),
    Object.assign(ep.prototype, {
        start: function() {
            this.startTime = ("undefined" === typeof performance ? Date : performance).now(),
            this.oldTime = this.startTime,
            this.elapsedTime = 0,
            this.running = !0
        },
        stop: function() {
            this.getElapsedTime(),
            this.running = !1,
            this.autoStart = !1
        },
        getElapsedTime: function() {
            return this.getDelta(),
            this.elapsedTime
        },
        getDelta: function() {
            var e = 0;
            if (this.autoStart && !this.running)
                return this.start(),
                0;
            if (this.running) {
                var t = ("undefined" === typeof performance ? Date : performance).now();
                e = (t - this.oldTime) / 1e3,
                this.oldTime = t,
                this.elapsedTime += e
            }
            return e
        }
    });
    var tp = new ir
      , np = new tr
      , rp = new ir
      , ip = new ir;
    function ap() {
        Lr.call(this),
        this.type = "AudioListener",
        this.context = Xh.getContext(),
        this.gain = this.context.createGain(),
        this.gain.connect(this.context.destination),
        this.filter = null,
        this.timeDelta = 0,
        this._clock = new ep
    }
    function op(e) {
        Lr.call(this),
        this.type = "Audio",
        this.listener = e,
        this.context = e.context,
        this.gain = this.context.createGain(),
        this.gain.connect(e.getInput()),
        this.autoplay = !1,
        this.buffer = null,
        this.detune = 0,
        this.loop = !1,
        this.loopStart = 0,
        this.loopEnd = 0,
        this.offset = 0,
        this.duration = void 0,
        this.playbackRate = 1,
        this.isPlaying = !1,
        this.hasPlaybackControl = !0,
        this.sourceType = "empty",
        this._startedAt = 0,
        this._progress = 0,
        this.filters = []
    }
    ap.prototype = Object.assign(Object.create(Lr.prototype), {
        constructor: ap,
        getInput: function() {
            return this.gain
        },
        removeFilter: function() {
            return null !== this.filter && (this.gain.disconnect(this.filter),
            this.filter.disconnect(this.context.destination),
            this.gain.connect(this.context.destination),
            this.filter = null),
            this
        },
        getFilter: function() {
            return this.filter
        },
        setFilter: function(e) {
            return null !== this.filter ? (this.gain.disconnect(this.filter),
            this.filter.disconnect(this.context.destination)) : this.gain.disconnect(this.context.destination),
            this.filter = e,
            this.gain.connect(this.filter),
            this.filter.connect(this.context.destination),
            this
        },
        getMasterVolume: function() {
            return this.gain.gain.value
        },
        setMasterVolume: function(e) {
            return this.gain.gain.setTargetAtTime(e, this.context.currentTime, .01),
            this
        },
        updateMatrixWorld: function(e) {
            Lr.prototype.updateMatrixWorld.call(this, e);
            var t = this.context.listener
              , n = this.up;
            if (this.timeDelta = this._clock.getDelta(),
            this.matrixWorld.decompose(tp, np, rp),
            ip.set(0, 0, -1).applyQuaternion(np),
            t.positionX) {
                var r = this.context.currentTime + this.timeDelta;
                t.positionX.linearRampToValueAtTime(tp.x, r),
                t.positionY.linearRampToValueAtTime(tp.y, r),
                t.positionZ.linearRampToValueAtTime(tp.z, r),
                t.forwardX.linearRampToValueAtTime(ip.x, r),
                t.forwardY.linearRampToValueAtTime(ip.y, r),
                t.forwardZ.linearRampToValueAtTime(ip.z, r),
                t.upX.linearRampToValueAtTime(n.x, r),
                t.upY.linearRampToValueAtTime(n.y, r),
                t.upZ.linearRampToValueAtTime(n.z, r)
            } else
                t.setPosition(tp.x, tp.y, tp.z),
                t.setOrientation(ip.x, ip.y, ip.z, n.x, n.y, n.z)
        }
    }),
    op.prototype = Object.assign(Object.create(Lr.prototype), {
        constructor: op,
        getOutput: function() {
            return this.gain
        },
        setNodeSource: function(e) {
            return this.hasPlaybackControl = !1,
            this.sourceType = "audioNode",
            this.source = e,
            this.connect(),
            this
        },
        setMediaElementSource: function(e) {
            return this.hasPlaybackControl = !1,
            this.sourceType = "mediaNode",
            this.source = this.context.createMediaElementSource(e),
            this.connect(),
            this
        },
        setMediaStreamSource: function(e) {
            return this.hasPlaybackControl = !1,
            this.sourceType = "mediaStreamNode",
            this.source = this.context.createMediaStreamSource(e),
            this.connect(),
            this
        },
        setBuffer: function(e) {
            return this.buffer = e,
            this.sourceType = "buffer",
            this.autoplay && this.play(),
            this
        },
        play: function(e) {
            if (void 0 === e && (e = 0),
            !0 !== this.isPlaying) {
                if (!1 !== this.hasPlaybackControl) {
                    this._startedAt = this.context.currentTime + e;
                    var t = this.context.createBufferSource();
                    return t.buffer = this.buffer,
                    t.loop = this.loop,
                    t.loopStart = this.loopStart,
                    t.loopEnd = this.loopEnd,
                    t.onended = this.onEnded.bind(this),
                    t.start(this._startedAt, this._progress + this.offset, this.duration),
                    this.isPlaying = !0,
                    this.source = t,
                    this.setDetune(this.detune),
                    this.setPlaybackRate(this.playbackRate),
                    this.connect()
                }
                console.warn("THREE.Audio: this Audio has no playback control.")
            } else
                console.warn("THREE.Audio: Audio is already playing.")
        },
        pause: function() {
            if (!1 !== this.hasPlaybackControl)
                return !0 === this.isPlaying && (this._progress += Math.max(this.context.currentTime - this._startedAt, 0) * this.playbackRate,
                !0 === this.loop && (this._progress = this._progress % (this.duration || this.buffer.duration)),
                this.source.stop(),
                this.source.onended = null,
                this.isPlaying = !1),
                this;
            console.warn("THREE.Audio: this Audio has no playback control.")
        },
        stop: function() {
            if (!1 !== this.hasPlaybackControl)
                return this._progress = 0,
                this.source.stop(),
                this.source.onended = null,
                this.isPlaying = !1,
                this;
            console.warn("THREE.Audio: this Audio has no playback control.")
        },
        connect: function() {
            if (this.filters.length > 0) {
                this.source.connect(this.filters[0]);
                for (var e = 1, t = this.filters.length; e < t; e++)
                    this.filters[e - 1].connect(this.filters[e]);
                this.filters[this.filters.length - 1].connect(this.getOutput())
            } else
                this.source.connect(this.getOutput());
            return this
        },
        disconnect: function() {
            if (this.filters.length > 0) {
                this.source.disconnect(this.filters[0]);
                for (var e = 1, t = this.filters.length; e < t; e++)
                    this.filters[e - 1].disconnect(this.filters[e]);
                this.filters[this.filters.length - 1].disconnect(this.getOutput())
            } else
                this.source.disconnect(this.getOutput());
            return this
        },
        getFilters: function() {
            return this.filters
        },
        setFilters: function(e) {
            return e || (e = []),
            !0 === this.isPlaying ? (this.disconnect(),
            this.filters = e,
            this.connect()) : this.filters = e,
            this
        },
        setDetune: function(e) {
            if (this.detune = e,
            void 0 !== this.source.detune)
                return !0 === this.isPlaying && this.source.detune.setTargetAtTime(this.detune, this.context.currentTime, .01),
                this
        },
        getDetune: function() {
            return this.detune
        },
        getFilter: function() {
            return this.getFilters()[0]
        },
        setFilter: function(e) {
            return this.setFilters(e ? [e] : [])
        },
        setPlaybackRate: function(e) {
            if (!1 !== this.hasPlaybackControl)
                return this.playbackRate = e,
                !0 === this.isPlaying && this.source.playbackRate.setTargetAtTime(this.playbackRate, this.context.currentTime, .01),
                this;
            console.warn("THREE.Audio: this Audio has no playback control.")
        },
        getPlaybackRate: function() {
            return this.playbackRate
        },
        onEnded: function() {
            this.isPlaying = !1
        },
        getLoop: function() {
            return !1 === this.hasPlaybackControl ? (console.warn("THREE.Audio: this Audio has no playback control."),
            !1) : this.loop
        },
        setLoop: function(e) {
            if (!1 !== this.hasPlaybackControl)
                return this.loop = e,
                !0 === this.isPlaying && (this.source.loop = this.loop),
                this;
            console.warn("THREE.Audio: this Audio has no playback control.")
        },
        setLoopStart: function(e) {
            return this.loopStart = e,
            this
        },
        setLoopEnd: function(e) {
            return this.loopEnd = e,
            this
        },
        getVolume: function() {
            return this.gain.gain.value
        },
        setVolume: function(e) {
            return this.gain.gain.setTargetAtTime(e, this.context.currentTime, .01),
            this
        }
    });
    var sp = new ir
      , lp = new tr
      , up = new ir
      , cp = new ir;
    function hp(e) {
        op.call(this, e),
        this.panner = this.context.createPanner(),
        this.panner.panningModel = "HRTF",
        this.panner.connect(this.gain)
    }
    function pp(e, t) {
        this.analyser = e.context.createAnalyser(),
        this.analyser.fftSize = void 0 !== t ? t : 2048,
        this.data = new Uint8Array(this.analyser.frequencyBinCount),
        e.getOutput().connect(this.analyser)
    }
    function fp(e, t, n) {
        var r, i, a;
        switch (this.binding = e,
        this.valueSize = n,
        t) {
        case "quaternion":
            r = this._slerp,
            i = this._slerpAdditive,
            a = this._setAdditiveIdentityQuaternion,
            this.buffer = new Float64Array(6 * n),
            this._workIndex = 5;
            break;
        case "string":
        case "bool":
            r = this._select,
            i = this._select,
            a = this._setAdditiveIdentityOther,
            this.buffer = new Array(5 * n);
            break;
        default:
            r = this._lerp,
            i = this._lerpAdditive,
            a = this._setAdditiveIdentityNumeric,
            this.buffer = new Float64Array(5 * n)
        }
        this._mixBufferRegion = r,
        this._mixBufferRegionAdditive = i,
        this._setIdentity = a,
        this._origIndex = 3,
        this._addIndex = 4,
        this.cumulativeWeight = 0,
        this.cumulativeWeightAdditive = 0,
        this.useCount = 0,
        this.referenceCount = 0
    }
    hp.prototype = Object.assign(Object.create(op.prototype), {
        constructor: hp,
        getOutput: function() {
            return this.panner
        },
        getRefDistance: function() {
            return this.panner.refDistance
        },
        setRefDistance: function(e) {
            return this.panner.refDistance = e,
            this
        },
        getRolloffFactor: function() {
            return this.panner.rolloffFactor
        },
        setRolloffFactor: function(e) {
            return this.panner.rolloffFactor = e,
            this
        },
        getDistanceModel: function() {
            return this.panner.distanceModel
        },
        setDistanceModel: function(e) {
            return this.panner.distanceModel = e,
            this
        },
        getMaxDistance: function() {
            return this.panner.maxDistance
        },
        setMaxDistance: function(e) {
            return this.panner.maxDistance = e,
            this
        },
        setDirectionalCone: function(e, t, n) {
            return this.panner.coneInnerAngle = e,
            this.panner.coneOuterAngle = t,
            this.panner.coneOuterGain = n,
            this
        },
        updateMatrixWorld: function(e) {
            if (Lr.prototype.updateMatrixWorld.call(this, e),
            !0 !== this.hasPlaybackControl || !1 !== this.isPlaying) {
                this.matrixWorld.decompose(sp, lp, up),
                cp.set(0, 0, 1).applyQuaternion(lp);
                var t = this.panner;
                if (t.positionX) {
                    var n = this.context.currentTime + this.listener.timeDelta;
                    t.positionX.linearRampToValueAtTime(sp.x, n),
                    t.positionY.linearRampToValueAtTime(sp.y, n),
                    t.positionZ.linearRampToValueAtTime(sp.z, n),
                    t.orientationX.linearRampToValueAtTime(cp.x, n),
                    t.orientationY.linearRampToValueAtTime(cp.y, n),
                    t.orientationZ.linearRampToValueAtTime(cp.z, n)
                } else
                    t.setPosition(sp.x, sp.y, sp.z),
                    t.setOrientation(cp.x, cp.y, cp.z)
            }
        }
    }),
    Object.assign(pp.prototype, {
        getFrequencyData: function() {
            return this.analyser.getByteFrequencyData(this.data),
            this.data
        },
        getAverageFrequency: function() {
            for (var e = 0, t = this.getFrequencyData(), n = 0; n < t.length; n++)
                e += t[n];
            return e / t.length
        }
    }),
    Object.assign(fp.prototype, {
        accumulate: function(e, t) {
            var n = this.buffer
              , r = this.valueSize
              , i = e * r + r
              , a = this.cumulativeWeight;
            if (0 === a) {
                for (var o = 0; o !== r; ++o)
                    n[i + o] = n[o];
                a = t
            } else {
                var s = t / (a += t);
                this._mixBufferRegion(n, i, 0, s, r)
            }
            this.cumulativeWeight = a
        },
        accumulateAdditive: function(e) {
            var t = this.buffer
              , n = this.valueSize
              , r = n * this._addIndex;
            0 === this.cumulativeWeightAdditive && this._setIdentity(),
            this._mixBufferRegionAdditive(t, r, 0, e, n),
            this.cumulativeWeightAdditive += e
        },
        apply: function(e) {
            var t = this.valueSize
              , n = this.buffer
              , r = e * t + t
              , i = this.cumulativeWeight
              , a = this.cumulativeWeightAdditive
              , o = this.binding;
            if (this.cumulativeWeight = 0,
            this.cumulativeWeightAdditive = 0,
            i < 1) {
                var s = t * this._origIndex;
                this._mixBufferRegion(n, r, s, 1 - i, t)
            }
            a > 0 && this._mixBufferRegionAdditive(n, r, this._addIndex * t, 1, t);
            for (var l = t, u = t + t; l !== u; ++l)
                if (n[l] !== n[l + t]) {
                    o.setValue(n, r);
                    break
                }
        },
        saveOriginalState: function() {
            var e = this.binding
              , t = this.buffer
              , n = this.valueSize
              , r = n * this._origIndex;
            e.getValue(t, r);
            for (var i = n, a = r; i !== a; ++i)
                t[i] = t[r + i % n];
            this._setIdentity(),
            this.cumulativeWeight = 0,
            this.cumulativeWeightAdditive = 0
        },
        restoreOriginalState: function() {
            var e = 3 * this.valueSize;
            this.binding.setValue(this.buffer, e)
        },
        _setAdditiveIdentityNumeric: function() {
            for (var e = this._addIndex * this.valueSize, t = e + this.valueSize, n = e; n < t; n++)
                this.buffer[n] = 0
        },
        _setAdditiveIdentityQuaternion: function() {
            this._setAdditiveIdentityNumeric(),
            this.buffer[4 * this._addIndex + 3] = 1
        },
        _setAdditiveIdentityOther: function() {
            for (var e = this._origIndex * this.valueSize, t = this._addIndex * this.valueSize, n = 0; n < this.valueSize; n++)
                this.buffer[t + n] = this.buffer[e + n]
        },
        _select: function(e, t, n, r, i) {
            if (r >= .5)
                for (var a = 0; a !== i; ++a)
                    e[t + a] = e[n + a]
        },
        _slerp: function(e, t, n, r) {
            tr.slerpFlat(e, t, e, t, e, n, r)
        },
        _slerpAdditive: function(e, t, n, r, i) {
            var a = this._workIndex * i;
            tr.multiplyQuaternionsFlat(e, a, e, t, e, n),
            tr.slerpFlat(e, t, e, t, e, a, r)
        },
        _lerp: function(e, t, n, r, i) {
            for (var a = 1 - r, o = 0; o !== i; ++o) {
                var s = t + o;
                e[s] = e[s] * a + e[n + o] * r
            }
        },
        _lerpAdditive: function(e, t, n, r, i) {
            for (var a = 0; a !== i; ++a) {
                var o = t + a;
                e[o] = e[o] + e[n + a] * r
            }
        }
    });
    var dp = new RegExp("[\\[\\]\\.:\\/]","g")
      , mp = "[^" + "\\[\\]\\.:\\/".replace("\\.", "") + "]"
      , gp = /((?:WC+[\/:])*)/.source.replace("WC", "[^\\[\\]\\.:\\/]")
      , vp = /(WCOD+)?/.source.replace("WCOD", mp)
      , yp = /(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC", "[^\\[\\]\\.:\\/]")
      , bp = /\.(WC+)(?:\[(.+)\])?/.source.replace("WC", "[^\\[\\]\\.:\\/]")
      , xp = new RegExp("^" + gp + vp + yp + bp + "$")
      , wp = ["material", "materials", "bones"];
    function _p(e, t, n) {
        var r = n || Sp.parseTrackName(t);
        this._targetGroup = e,
        this._bindings = e.subscribe_(t, r)
    }
    function Sp(e, t, n) {
        this.path = t,
        this.parsedPath = n || Sp.parseTrackName(t),
        this.node = Sp.findNode(e, this.parsedPath.nodeName) || e,
        this.rootNode = e
    }
    function Ep() {
        this.uuid = qn.generateUUID(),
        this._objects = Array.prototype.slice.call(arguments),
        this.nCachedObjects_ = 0;
        var e = {};
        this._indicesByUUID = e;
        for (var t = 0, n = arguments.length; t !== n; ++t)
            e[arguments[t].uuid] = t;
        this._paths = [],
        this._parsedPaths = [],
        this._bindings = [],
        this._bindingsIndicesByPath = {};
        var r = this;
        this.stats = {
            objects: {
                get total() {
                    return r._objects.length
                },
                get inUse() {
                    return this.total - r.nCachedObjects_
                }
            },
            get bindingsPerObject() {
                return r._bindings.length
            }
        }
    }
    function Mp(e, t, n, r) {
        this._mixer = e,
        this._clip = t,
        this._localRoot = n || null,
        this.blendMode = r || t.blendMode;
        for (var i = t.tracks, a = i.length, o = new Array(a), s = {
            endingStart: Zt,
            endingEnd: Zt
        }, l = 0; l !== a; ++l) {
            var u = i[l].createInterpolant(null);
            o[l] = u,
            u.settings = s
        }
        this._interpolantSettings = s,
        this._interpolants = o,
        this._propertyBindings = new Array(a),
        this._cacheIndex = null,
        this._byClipCacheIndex = null,
        this._timeScaleInterpolant = null,
        this._weightInterpolant = null,
        this.loop = Ut,
        this._loopCount = -1,
        this._startTime = null,
        this.time = 0,
        this.timeScale = 1,
        this._effectiveTimeScale = 1,
        this.weight = 1,
        this._effectiveWeight = 1,
        this.repetitions = 1 / 0,
        this.paused = !1,
        this.enabled = !0,
        this.clampWhenFinished = !1,
        this.zeroSlopeAtStart = !0,
        this.zeroSlopeAtEnd = !0
    }
    function Tp(e) {
        this._root = e,
        this._initMemoryManager(),
        this._accuIndex = 0,
        this.time = 0,
        this.timeScale = 1
    }
    function Ap(e) {
        "string" === typeof e && (console.warn("THREE.Uniform: Type parameter is no longer needed."),
        e = arguments[1]),
        this.value = e
    }
    function Pp(e, t, n) {
        Ys.call(this, e, t),
        this.meshPerAttribute = n || 1
    }
    function Cp(e, t, n, r) {
        this.ray = new ni(e,t),
        this.near = n || 0,
        this.far = r || 1 / 0,
        this.camera = null,
        this.layers = new gr,
        this.params = {
            Mesh: {},
            Line: {
                threshold: 1
            },
            LOD: {},
            Points: {
                threshold: 1
            },
            Sprite: {}
        },
        Object.defineProperties(this.params, {
            PointCloud: {
                get: function() {
                    return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),
                    this.Points
                }
            }
        })
    }
    function Lp(e, t) {
        return e.distance - t.distance
    }
    function Rp(e, t, n, r) {
        if (e.layers.test(t.layers) && e.raycast(t, n),
        !0 === r)
            for (var i = e.children, a = 0, o = i.length; a < o; a++)
                Rp(i[a], t, n, !0)
    }
    Object.assign(_p.prototype, {
        getValue: function(e, t) {
            this.bind();
            var n = this._targetGroup.nCachedObjects_
              , r = this._bindings[n];
            void 0 !== r && r.getValue(e, t)
        },
        setValue: function(e, t) {
            for (var n = this._bindings, r = this._targetGroup.nCachedObjects_, i = n.length; r !== i; ++r)
                n[r].setValue(e, t)
        },
        bind: function() {
            for (var e = this._bindings, t = this._targetGroup.nCachedObjects_, n = e.length; t !== n; ++t)
                e[t].bind()
        },
        unbind: function() {
            for (var e = this._bindings, t = this._targetGroup.nCachedObjects_, n = e.length; t !== n; ++t)
                e[t].unbind()
        }
    }),
    Object.assign(Sp, {
        Composite: _p,
        create: function(e, t, n) {
            return e && e.isAnimationObjectGroup ? new Sp.Composite(e,t,n) : new Sp(e,t,n)
        },
        sanitizeNodeName: function(e) {
            return e.replace(/\s/g, "_").replace(dp, "")
        },
        parseTrackName: function(e) {
            var t = xp.exec(e);
            if (!t)
                throw new Error("PropertyBinding: Cannot parse trackName: " + e);
            var n = {
                nodeName: t[2],
                objectName: t[3],
                objectIndex: t[4],
                propertyName: t[5],
                propertyIndex: t[6]
            }
              , r = n.nodeName && n.nodeName.lastIndexOf(".");
            if (void 0 !== r && -1 !== r) {
                var i = n.nodeName.substring(r + 1);
                -1 !== wp.indexOf(i) && (n.nodeName = n.nodeName.substring(0, r),
                n.objectName = i)
            }
            if (null === n.propertyName || 0 === n.propertyName.length)
                throw new Error("PropertyBinding: can not parse propertyName from trackName: " + e);
            return n
        },
        findNode: function(e, t) {
            if (!t || "" === t || "." === t || -1 === t || t === e.name || t === e.uuid)
                return e;
            if (e.skeleton) {
                var n = e.skeleton.getBoneByName(t);
                if (void 0 !== n)
                    return n
            }
            if (e.children) {
                var r = function e(n) {
                    for (var r = 0; r < n.length; r++) {
                        var i = n[r];
                        if (i.name === t || i.uuid === t)
                            return i;
                        var a = e(i.children);
                        if (a)
                            return a
                    }
                    return null
                }(e.children);
                if (r)
                    return r
            }
            return null
        }
    }),
    Object.assign(Sp.prototype, {
        _getValue_unavailable: function() {},
        _setValue_unavailable: function() {},
        BindingType: {
            Direct: 0,
            EntireArray: 1,
            ArrayElement: 2,
            HasFromToArray: 3
        },
        Versioning: {
            None: 0,
            NeedsUpdate: 1,
            MatrixWorldNeedsUpdate: 2
        },
        GetterByBindingType: [function(e, t) {
            e[t] = this.node[this.propertyName]
        }
        , function(e, t) {
            for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r)
                e[t++] = n[r]
        }
        , function(e, t) {
            e[t] = this.resolvedProperty[this.propertyIndex]
        }
        , function(e, t) {
            this.resolvedProperty.toArray(e, t)
        }
        ],
        SetterByBindingTypeAndVersioning: [[function(e, t) {
            this.targetObject[this.propertyName] = e[t]
        }
        , function(e, t) {
            this.targetObject[this.propertyName] = e[t],
            this.targetObject.needsUpdate = !0
        }
        , function(e, t) {
            this.targetObject[this.propertyName] = e[t],
            this.targetObject.matrixWorldNeedsUpdate = !0
        }
        ], [function(e, t) {
            for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r)
                n[r] = e[t++]
        }
        , function(e, t) {
            for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r)
                n[r] = e[t++];
            this.targetObject.needsUpdate = !0
        }
        , function(e, t) {
            for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r)
                n[r] = e[t++];
            this.targetObject.matrixWorldNeedsUpdate = !0
        }
        ], [function(e, t) {
            this.resolvedProperty[this.propertyIndex] = e[t]
        }
        , function(e, t) {
            this.resolvedProperty[this.propertyIndex] = e[t],
            this.targetObject.needsUpdate = !0
        }
        , function(e, t) {
            this.resolvedProperty[this.propertyIndex] = e[t],
            this.targetObject.matrixWorldNeedsUpdate = !0
        }
        ], [function(e, t) {
            this.resolvedProperty.fromArray(e, t)
        }
        , function(e, t) {
            this.resolvedProperty.fromArray(e, t),
            this.targetObject.needsUpdate = !0
        }
        , function(e, t) {
            this.resolvedProperty.fromArray(e, t),
            this.targetObject.matrixWorldNeedsUpdate = !0
        }
        ]],
        getValue: function(e, t) {
            this.bind(),
            this.getValue(e, t)
        },
        setValue: function(e, t) {
            this.bind(),
            this.setValue(e, t)
        },
        bind: function() {
            var e = this.node
              , t = this.parsedPath
              , n = t.objectName
              , r = t.propertyName
              , i = t.propertyIndex;
            if (e || (e = Sp.findNode(this.rootNode, t.nodeName) || this.rootNode,
            this.node = e),
            this.getValue = this._getValue_unavailable,
            this.setValue = this._setValue_unavailable,
            e) {
                if (n) {
                    var a = t.objectIndex;
                    switch (n) {
                    case "materials":
                        if (!e.material)
                            return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.", this);
                        if (!e.material.materials)
                            return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.", this);
                        e = e.material.materials;
                        break;
                    case "bones":
                        if (!e.skeleton)
                            return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.", this);
                        e = e.skeleton.bones;
                        for (var o = 0; o < e.length; o++)
                            if (e[o].name === a) {
                                a = o;
                                break
                            }
                        break;
                    default:
                        if (void 0 === e[n])
                            return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.", this);
                        e = e[n]
                    }
                    if (void 0 !== a) {
                        if (void 0 === e[a])
                            return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.", this, e);
                        e = e[a]
                    }
                }
                var s = e[r];
                if (void 0 !== s) {
                    var l = this.Versioning.None;
                    this.targetObject = e,
                    void 0 !== e.needsUpdate ? l = this.Versioning.NeedsUpdate : void 0 !== e.matrixWorldNeedsUpdate && (l = this.Versioning.MatrixWorldNeedsUpdate);
                    var u = this.BindingType.Direct;
                    if (void 0 !== i) {
                        if ("morphTargetInfluences" === r) {
                            if (!e.geometry)
                                return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.", this);
                            if (!e.geometry.isBufferGeometry)
                                return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.", this);
                            if (!e.geometry.morphAttributes)
                                return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.", this);
                            void 0 !== e.morphTargetDictionary[i] && (i = e.morphTargetDictionary[i])
                        }
                        u = this.BindingType.ArrayElement,
                        this.resolvedProperty = s,
                        this.propertyIndex = i
                    } else
                        void 0 !== s.fromArray && void 0 !== s.toArray ? (u = this.BindingType.HasFromToArray,
                        this.resolvedProperty = s) : Array.isArray(s) ? (u = this.BindingType.EntireArray,
                        this.resolvedProperty = s) : this.propertyName = r;
                    this.getValue = this.GetterByBindingType[u],
                    this.setValue = this.SetterByBindingTypeAndVersioning[u][l]
                } else {
                    var c = t.nodeName;
                    console.error("THREE.PropertyBinding: Trying to update property for track: " + c + "." + r + " but it wasn't found.", e)
                }
            } else
                console.error("THREE.PropertyBinding: Trying to update node for track: " + this.path + " but it wasn't found.")
        },
        unbind: function() {
            this.node = null,
            this.getValue = this._getValue_unbound,
            this.setValue = this._setValue_unbound
        }
    }),
    Object.assign(Sp.prototype, {
        _getValue_unbound: Sp.prototype.getValue,
        _setValue_unbound: Sp.prototype.setValue
    }),
    Object.assign(Ep.prototype, {
        isAnimationObjectGroup: !0,
        add: function() {
            for (var e = this._objects, t = this._indicesByUUID, n = this._paths, r = this._parsedPaths, i = this._bindings, a = i.length, o = void 0, s = e.length, l = this.nCachedObjects_, u = 0, c = arguments.length; u !== c; ++u) {
                var h = arguments[u]
                  , p = h.uuid
                  , f = t[p];
                if (void 0 === f) {
                    f = s++,
                    t[p] = f,
                    e.push(h);
                    for (var d = 0, m = a; d !== m; ++d)
                        i[d].push(new Sp(h,n[d],r[d]))
                } else if (f < l) {
                    o = e[f];
                    var g = --l
                      , v = e[g];
                    t[v.uuid] = f,
                    e[f] = v,
                    t[p] = g,
                    e[g] = h;
                    for (var y = 0, b = a; y !== b; ++y) {
                        var x = i[y]
                          , w = x[g]
                          , _ = x[f];
                        x[f] = w,
                        void 0 === _ && (_ = new Sp(h,n[y],r[y])),
                        x[g] = _
                    }
                } else
                    e[f] !== o && console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")
            }
            this.nCachedObjects_ = l
        },
        remove: function() {
            for (var e = this._objects, t = this._indicesByUUID, n = this._bindings, r = n.length, i = this.nCachedObjects_, a = 0, o = arguments.length; a !== o; ++a) {
                var s = arguments[a]
                  , l = s.uuid
                  , u = t[l];
                if (void 0 !== u && u >= i) {
                    var c = i++
                      , h = e[c];
                    t[h.uuid] = u,
                    e[u] = h,
                    t[l] = c,
                    e[c] = s;
                    for (var p = 0, f = r; p !== f; ++p) {
                        var d = n[p]
                          , m = d[c]
                          , g = d[u];
                        d[u] = m,
                        d[c] = g
                    }
                }
            }
            this.nCachedObjects_ = i
        },
        uncache: function() {
            for (var e = this._objects, t = this._indicesByUUID, n = this._bindings, r = n.length, i = this.nCachedObjects_, a = e.length, o = 0, s = arguments.length; o !== s; ++o) {
                var l = arguments[o]
                  , u = l.uuid
                  , c = t[u];
                if (void 0 !== c)
                    if (delete t[u],
                    c < i) {
                        var h = --i
                          , p = e[h]
                          , f = --a
                          , d = e[f];
                        t[p.uuid] = c,
                        e[c] = p,
                        t[d.uuid] = h,
                        e[h] = d,
                        e.pop();
                        for (var m = 0, g = r; m !== g; ++m) {
                            var v = n[m]
                              , y = v[h]
                              , b = v[f];
                            v[c] = y,
                            v[h] = b,
                            v.pop()
                        }
                    } else {
                        var x = --a
                          , w = e[x];
                        t[w.uuid] = c,
                        e[c] = w,
                        e.pop();
                        for (var _ = 0, S = r; _ !== S; ++_) {
                            var E = n[_];
                            E[c] = E[x],
                            E.pop()
                        }
                    }
            }
            this.nCachedObjects_ = i
        },
        subscribe_: function(e, t) {
            var n = this._bindingsIndicesByPath
              , r = n[e]
              , i = this._bindings;
            if (void 0 !== r)
                return i[r];
            var a = this._paths
              , o = this._parsedPaths
              , s = this._objects
              , l = s.length
              , u = this.nCachedObjects_
              , c = new Array(l);
            r = i.length,
            n[e] = r,
            a.push(e),
            o.push(t),
            i.push(c);
            for (var h = u, p = s.length; h !== p; ++h) {
                var f = s[h];
                c[h] = new Sp(f,e,t)
            }
            return c
        },
        unsubscribe_: function(e) {
            var t = this._bindingsIndicesByPath
              , n = t[e];
            if (void 0 !== n) {
                var r = this._paths
                  , i = this._parsedPaths
                  , a = this._bindings
                  , o = a.length - 1
                  , s = a[o];
                t[e[o]] = n,
                a[n] = s,
                a.pop(),
                i[n] = i[o],
                i.pop(),
                r[n] = r[o],
                r.pop()
            }
        }
    }),
    Object.assign(Mp.prototype, {
        play: function() {
            return this._mixer._activateAction(this),
            this
        },
        stop: function() {
            return this._mixer._deactivateAction(this),
            this.reset()
        },
        reset: function() {
            return this.paused = !1,
            this.enabled = !0,
            this.time = 0,
            this._loopCount = -1,
            this._startTime = null,
            this.stopFading().stopWarping()
        },
        isRunning: function() {
            return this.enabled && !this.paused && 0 !== this.timeScale && null === this._startTime && this._mixer._isActiveAction(this)
        },
        isScheduled: function() {
            return this._mixer._isActiveAction(this)
        },
        startAt: function(e) {
            return this._startTime = e,
            this
        },
        setLoop: function(e, t) {
            return this.loop = e,
            this.repetitions = t,
            this
        },
        setEffectiveWeight: function(e) {
            return this.weight = e,
            this._effectiveWeight = this.enabled ? e : 0,
            this.stopFading()
        },
        getEffectiveWeight: function() {
            return this._effectiveWeight
        },
        fadeIn: function(e) {
            return this._scheduleFading(e, 0, 1)
        },
        fadeOut: function(e) {
            return this._scheduleFading(e, 1, 0)
        },
        crossFadeFrom: function(e, t, n) {
            if (e.fadeOut(t),
            this.fadeIn(t),
            n) {
                var r = this._clip.duration
                  , i = e._clip.duration
                  , a = i / r
                  , o = r / i;
                e.warp(1, a, t),
                this.warp(o, 1, t)
            }
            return this
        },
        crossFadeTo: function(e, t, n) {
            return e.crossFadeFrom(this, t, n)
        },
        stopFading: function() {
            var e = this._weightInterpolant;
            return null !== e && (this._weightInterpolant = null,
            this._mixer._takeBackControlInterpolant(e)),
            this
        },
        setEffectiveTimeScale: function(e) {
            return this.timeScale = e,
            this._effectiveTimeScale = this.paused ? 0 : e,
            this.stopWarping()
        },
        getEffectiveTimeScale: function() {
            return this._effectiveTimeScale
        },
        setDuration: function(e) {
            return this.timeScale = this._clip.duration / e,
            this.stopWarping()
        },
        syncWith: function(e) {
            return this.time = e.time,
            this.timeScale = e.timeScale,
            this.stopWarping()
        },
        halt: function(e) {
            return this.warp(this._effectiveTimeScale, 0, e)
        },
        warp: function(e, t, n) {
            var r = this._mixer
              , i = r.time
              , a = this.timeScale
              , o = this._timeScaleInterpolant;
            null === o && (o = r._lendControlInterpolant(),
            this._timeScaleInterpolant = o);
            var s = o.parameterPositions
              , l = o.sampleValues;
            return s[0] = i,
            s[1] = i + n,
            l[0] = e / a,
            l[1] = t / a,
            this
        },
        stopWarping: function() {
            var e = this._timeScaleInterpolant;
            return null !== e && (this._timeScaleInterpolant = null,
            this._mixer._takeBackControlInterpolant(e)),
            this
        },
        getMixer: function() {
            return this._mixer
        },
        getClip: function() {
            return this._clip
        },
        getRoot: function() {
            return this._localRoot || this._mixer._root
        },
        _update: function(e, t, n, r) {
            if (this.enabled) {
                var i = this._startTime;
                if (null !== i) {
                    var a = (e - i) * n;
                    if (a < 0 || 0 === n)
                        return;
                    this._startTime = null,
                    t = n * a
                }
                t *= this._updateTimeScale(e);
                var o = this._updateTime(t)
                  , s = this._updateWeight(e);
                if (s > 0) {
                    var l = this._interpolants
                      , u = this._propertyBindings;
                    switch (this.blendMode) {
                    case Qt:
                        for (var c = 0, h = l.length; c !== h; ++c)
                            l[c].evaluate(o),
                            u[c].accumulateAdditive(s);
                        break;
                    case Kt:
                    default:
                        for (var p = 0, f = l.length; p !== f; ++p)
                            l[p].evaluate(o),
                            u[p].accumulate(r, s)
                    }
                }
            } else
                this._updateWeight(e)
        },
        _updateWeight: function(e) {
            var t = 0;
            if (this.enabled) {
                t = this.weight;
                var n = this._weightInterpolant;
                if (null !== n) {
                    var r = n.evaluate(e)[0];
                    t *= r,
                    e > n.parameterPositions[1] && (this.stopFading(),
                    0 === r && (this.enabled = !1))
                }
            }
            return this._effectiveWeight = t,
            t
        },
        _updateTimeScale: function(e) {
            var t = 0;
            if (!this.paused) {
                t = this.timeScale;
                var n = this._timeScaleInterpolant;
                if (null !== n)
                    t *= n.evaluate(e)[0],
                    e > n.parameterPositions[1] && (this.stopWarping(),
                    0 === t ? this.paused = !0 : this.timeScale = t)
            }
            return this._effectiveTimeScale = t,
            t
        },
        _updateTime: function(e) {
            var t = this._clip.duration
              , n = this.loop
              , r = this.time + e
              , i = this._loopCount
              , a = n === Wt;
            if (0 === e)
                return -1 === i ? r : a && 1 === (1 & i) ? t - r : r;
            if (n === jt) {
                -1 === i && (this._loopCount = 0,
                this._setEndings(!0, !0, !1));
                e: {
                    if (r >= t)
                        r = t;
                    else {
                        if (!(r < 0)) {
                            this.time = r;
                            break e
                        }
                        r = 0
                    }
                    this.clampWhenFinished ? this.paused = !0 : this.enabled = !1,
                    this.time = r,
                    this._mixer.dispatchEvent({
                        type: "finished",
                        action: this,
                        direction: e < 0 ? -1 : 1
                    })
                }
            } else {
                if (-1 === i && (e >= 0 ? (i = 0,
                this._setEndings(!0, 0 === this.repetitions, a)) : this._setEndings(0 === this.repetitions, !0, a)),
                r >= t || r < 0) {
                    var o = Math.floor(r / t);
                    r -= t * o,
                    i += Math.abs(o);
                    var s = this.repetitions - i;
                    if (s <= 0)
                        this.clampWhenFinished ? this.paused = !0 : this.enabled = !1,
                        r = e > 0 ? t : 0,
                        this.time = r,
                        this._mixer.dispatchEvent({
                            type: "finished",
                            action: this,
                            direction: e > 0 ? 1 : -1
                        });
                    else {
                        if (1 === s) {
                            var l = e < 0;
                            this._setEndings(l, !l, a)
                        } else
                            this._setEndings(!1, !1, a);
                        this._loopCount = i,
                        this.time = r,
                        this._mixer.dispatchEvent({
                            type: "loop",
                            action: this,
                            loopDelta: o
                        })
                    }
                } else
                    this.time = r;
                if (a && 1 === (1 & i))
                    return t - r
            }
            return r
        },
        _setEndings: function(e, t, n) {
            var r = this._interpolantSettings;
            n ? (r.endingStart = $t,
            r.endingEnd = $t) : (r.endingStart = e ? this.zeroSlopeAtStart ? $t : Zt : Jt,
            r.endingEnd = t ? this.zeroSlopeAtEnd ? $t : Zt : Jt)
        },
        _scheduleFading: function(e, t, n) {
            var r = this._mixer
              , i = r.time
              , a = this._weightInterpolant;
            null === a && (a = r._lendControlInterpolant(),
            this._weightInterpolant = a);
            var o = a.parameterPositions
              , s = a.sampleValues;
            return o[0] = i,
            s[0] = t,
            o[1] = i + e,
            s[1] = n,
            this
        }
    }),
    Tp.prototype = Object.assign(Object.create(Hn.prototype), {
        constructor: Tp,
        _bindAction: function(e, t) {
            var n = e._localRoot || this._root
              , r = e._clip.tracks
              , i = r.length
              , a = e._propertyBindings
              , o = e._interpolants
              , s = n.uuid
              , l = this._bindingsByRootAndName
              , u = l[s];
            void 0 === u && (u = {},
            l[s] = u);
            for (var c = 0; c !== i; ++c) {
                var h = r[c]
                  , p = h.name
                  , f = u[p];
                if (void 0 !== f)
                    a[c] = f;
                else {
                    if (void 0 !== (f = a[c])) {
                        null === f._cacheIndex && (++f.referenceCount,
                        this._addInactiveBinding(f, s, p));
                        continue
                    }
                    var d = t && t._propertyBindings[c].binding.parsedPath;
                    ++(f = new fp(Sp.create(n, p, d),h.ValueTypeName,h.getValueSize())).referenceCount,
                    this._addInactiveBinding(f, s, p),
                    a[c] = f
                }
                o[c].resultBuffer = f.buffer
            }
        },
        _activateAction: function(e) {
            if (!this._isActiveAction(e)) {
                if (null === e._cacheIndex) {
                    var t = (e._localRoot || this._root).uuid
                      , n = e._clip.uuid
                      , r = this._actionsByClip[n];
                    this._bindAction(e, r && r.knownActions[0]),
                    this._addInactiveAction(e, n, t)
                }
                for (var i = e._propertyBindings, a = 0, o = i.length; a !== o; ++a) {
                    var s = i[a];
                    0 === s.useCount++ && (this._lendBinding(s),
                    s.saveOriginalState())
                }
                this._lendAction(e)
            }
        },
        _deactivateAction: function(e) {
            if (this._isActiveAction(e)) {
                for (var t = e._propertyBindings, n = 0, r = t.length; n !== r; ++n) {
                    var i = t[n];
                    0 === --i.useCount && (i.restoreOriginalState(),
                    this._takeBackBinding(i))
                }
                this._takeBackAction(e)
            }
        },
        _initMemoryManager: function() {
            this._actions = [],
            this._nActiveActions = 0,
            this._actionsByClip = {},
            this._bindings = [],
            this._nActiveBindings = 0,
            this._bindingsByRootAndName = {},
            this._controlInterpolants = [],
            this._nActiveControlInterpolants = 0;
            var e = this;
            this.stats = {
                actions: {
                    get total() {
                        return e._actions.length
                    },
                    get inUse() {
                        return e._nActiveActions
                    }
                },
                bindings: {
                    get total() {
                        return e._bindings.length
                    },
                    get inUse() {
                        return e._nActiveBindings
                    }
                },
                controlInterpolants: {
                    get total() {
                        return e._controlInterpolants.length
                    },
                    get inUse() {
                        return e._nActiveControlInterpolants
                    }
                }
            }
        },
        _isActiveAction: function(e) {
            var t = e._cacheIndex;
            return null !== t && t < this._nActiveActions
        },
        _addInactiveAction: function(e, t, n) {
            var r = this._actions
              , i = this._actionsByClip
              , a = i[t];
            if (void 0 === a)
                a = {
                    knownActions: [e],
                    actionByRoot: {}
                },
                e._byClipCacheIndex = 0,
                i[t] = a;
            else {
                var o = a.knownActions;
                e._byClipCacheIndex = o.length,
                o.push(e)
            }
            e._cacheIndex = r.length,
            r.push(e),
            a.actionByRoot[n] = e
        },
        _removeInactiveAction: function(e) {
            var t = this._actions
              , n = t[t.length - 1]
              , r = e._cacheIndex;
            n._cacheIndex = r,
            t[r] = n,
            t.pop(),
            e._cacheIndex = null;
            var i = e._clip.uuid
              , a = this._actionsByClip
              , o = a[i]
              , s = o.knownActions
              , l = s[s.length - 1]
              , u = e._byClipCacheIndex;
            l._byClipCacheIndex = u,
            s[u] = l,
            s.pop(),
            e._byClipCacheIndex = null,
            delete o.actionByRoot[(e._localRoot || this._root).uuid],
            0 === s.length && delete a[i],
            this._removeInactiveBindingsForAction(e)
        },
        _removeInactiveBindingsForAction: function(e) {
            for (var t = e._propertyBindings, n = 0, r = t.length; n !== r; ++n) {
                var i = t[n];
                0 === --i.referenceCount && this._removeInactiveBinding(i)
            }
        },
        _lendAction: function(e) {
            var t = this._actions
              , n = e._cacheIndex
              , r = this._nActiveActions++
              , i = t[r];
            e._cacheIndex = r,
            t[r] = e,
            i._cacheIndex = n,
            t[n] = i
        },
        _takeBackAction: function(e) {
            var t = this._actions
              , n = e._cacheIndex
              , r = --this._nActiveActions
              , i = t[r];
            e._cacheIndex = r,
            t[r] = e,
            i._cacheIndex = n,
            t[n] = i
        },
        _addInactiveBinding: function(e, t, n) {
            var r = this._bindingsByRootAndName
              , i = this._bindings
              , a = r[t];
            void 0 === a && (a = {},
            r[t] = a),
            a[n] = e,
            e._cacheIndex = i.length,
            i.push(e)
        },
        _removeInactiveBinding: function(e) {
            var t = this._bindings
              , n = e.binding
              , r = n.rootNode.uuid
              , i = n.path
              , a = this._bindingsByRootAndName
              , o = a[r]
              , s = t[t.length - 1]
              , l = e._cacheIndex;
            s._cacheIndex = l,
            t[l] = s,
            t.pop(),
            delete o[i],
            0 === Object.keys(o).length && delete a[r]
        },
        _lendBinding: function(e) {
            var t = this._bindings
              , n = e._cacheIndex
              , r = this._nActiveBindings++
              , i = t[r];
            e._cacheIndex = r,
            t[r] = e,
            i._cacheIndex = n,
            t[n] = i
        },
        _takeBackBinding: function(e) {
            var t = this._bindings
              , n = e._cacheIndex
              , r = --this._nActiveBindings
              , i = t[r];
            e._cacheIndex = r,
            t[r] = e,
            i._cacheIndex = n,
            t[n] = i
        },
        _lendControlInterpolant: function() {
            var e = this._controlInterpolants
              , t = this._nActiveControlInterpolants++
              , n = e[t];
            return void 0 === n && ((n = new Ec(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer)).__cacheIndex = t,
            e[t] = n),
            n
        },
        _takeBackControlInterpolant: function(e) {
            var t = this._controlInterpolants
              , n = e.__cacheIndex
              , r = --this._nActiveControlInterpolants
              , i = t[r];
            e.__cacheIndex = r,
            t[r] = e,
            i.__cacheIndex = n,
            t[n] = i
        },
        _controlInterpolantsResultBuffer: new Float32Array(1),
        clipAction: function(e, t, n) {
            var r = t || this._root
              , i = r.uuid
              , a = "string" === typeof e ? Ic.findByName(r, e) : e
              , o = null !== a ? a.uuid : e
              , s = this._actionsByClip[o]
              , l = null;
            if (void 0 === n && (n = null !== a ? a.blendMode : Kt),
            void 0 !== s) {
                var u = s.actionByRoot[i];
                if (void 0 !== u && u.blendMode === n)
                    return u;
                l = s.knownActions[0],
                null === a && (a = l._clip)
            }
            if (null === a)
                return null;
            var c = new Mp(this,a,t,n);
            return this._bindAction(c, l),
            this._addInactiveAction(c, o, i),
            c
        },
        existingAction: function(e, t) {
            var n = t || this._root
              , r = n.uuid
              , i = "string" === typeof e ? Ic.findByName(n, e) : e
              , a = i ? i.uuid : e
              , o = this._actionsByClip[a];
            return void 0 !== o && o.actionByRoot[r] || null
        },
        stopAllAction: function() {
            for (var e = this._actions, t = this._nActiveActions - 1; t >= 0; --t)
                e[t].stop();
            return this
        },
        update: function(e) {
            e *= this.timeScale;
            for (var t = this._actions, n = this._nActiveActions, r = this.time += e, i = Math.sign(e), a = this._accuIndex ^= 1, o = 0; o !== n; ++o) {
                t[o]._update(r, e, i, a)
            }
            for (var s = this._bindings, l = this._nActiveBindings, u = 0; u !== l; ++u)
                s[u].apply(a);
            return this
        },
        setTime: function(e) {
            this.time = 0;
            for (var t = 0; t < this._actions.length; t++)
                this._actions[t].time = 0;
            return this.update(e)
        },
        getRoot: function() {
            return this._root
        },
        uncacheClip: function(e) {
            var t = this._actions
              , n = e.uuid
              , r = this._actionsByClip
              , i = r[n];
            if (void 0 !== i) {
                for (var a = i.knownActions, o = 0, s = a.length; o !== s; ++o) {
                    var l = a[o];
                    this._deactivateAction(l);
                    var u = l._cacheIndex
                      , c = t[t.length - 1];
                    l._cacheIndex = null,
                    l._byClipCacheIndex = null,
                    c._cacheIndex = u,
                    t[u] = c,
                    t.pop(),
                    this._removeInactiveBindingsForAction(l)
                }
                delete r[n]
            }
        },
        uncacheRoot: function(e) {
            var t = e.uuid
              , n = this._actionsByClip;
            for (var r in n) {
                var i = n[r].actionByRoot[t];
                void 0 !== i && (this._deactivateAction(i),
                this._removeInactiveAction(i))
            }
            var a = this._bindingsByRootAndName[t];
            if (void 0 !== a)
                for (var o in a) {
                    var s = a[o];
                    s.restoreOriginalState(),
                    this._removeInactiveBinding(s)
                }
        },
        uncacheAction: function(e, t) {
            var n = this.existingAction(e, t);
            null !== n && (this._deactivateAction(n),
            this._removeInactiveAction(n))
        }
    }),
    Ap.prototype.clone = function() {
        return new Ap(void 0 === this.value.clone ? this.value : this.value.clone())
    }
    ,
    Pp.prototype = Object.assign(Object.create(Ys.prototype), {
        constructor: Pp,
        isInstancedInterleavedBuffer: !0,
        copy: function(e) {
            return Ys.prototype.copy.call(this, e),
            this.meshPerAttribute = e.meshPerAttribute,
            this
        },
        clone: function(e) {
            var t = Ys.prototype.clone.call(this, e);
            return t.meshPerAttribute = this.meshPerAttribute,
            t
        },
        toJSON: function(e) {
            var t = Ys.prototype.toJSON.call(this, e);
            return t.isInstancedInterleavedBuffer = !0,
            t.meshPerAttribute = this.meshPerAttribute,
            t
        }
    }),
    Object.assign(Cp.prototype, {
        set: function(e, t) {
            this.ray.set(e, t)
        },
        setFromCamera: function(e, t) {
            t && t.isPerspectiveCamera ? (this.ray.origin.setFromMatrixPosition(t.matrixWorld),
            this.ray.direction.set(e.x, e.y, .5).unproject(t).sub(this.ray.origin).normalize(),
            this.camera = t) : t && t.isOrthographicCamera ? (this.ray.origin.set(e.x, e.y, (t.near + t.far) / (t.near - t.far)).unproject(t),
            this.ray.direction.set(0, 0, -1).transformDirection(t.matrixWorld),
            this.camera = t) : console.error("THREE.Raycaster: Unsupported camera type.")
        },
        intersectObject: function(e, t, n) {
            var r = n || [];
            return Rp(e, this, r, t),
            r.sort(Lp),
            r
        },
        intersectObjects: function(e, t, n) {
            var r = n || [];
            if (!1 === Array.isArray(e))
                return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),
                r;
            for (var i = 0, a = e.length; i < a; i++)
                Rp(e[i], this, r, t);
            return r.sort(Lp),
            r
        }
    });
    var kp = function() {
        function e() {
            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1
              , n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0
              , r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
            return Object(s.a)(this, e),
            this.radius = t,
            this.phi = n,
            this.theta = r,
            this
        }
        return Object(i.a)(e, [{
            key: "set",
            value: function(e, t, n) {
                return this.radius = e,
                this.phi = t,
                this.theta = n,
                this
            }
        }, {
            key: "clone",
            value: function() {
                return (new this.constructor).copy(this)
            }
        }, {
            key: "copy",
            value: function(e) {
                return this.radius = e.radius,
                this.phi = e.phi,
                this.theta = e.theta,
                this
            }
        }, {
            key: "makeSafe",
            value: function() {
                return this.phi = Math.max(1e-6, Math.min(Math.PI - 1e-6, this.phi)),
                this
            }
        }, {
            key: "setFromVector3",
            value: function(e) {
                return this.setFromCartesianCoords(e.x, e.y, e.z)
            }
        }, {
            key: "setFromCartesianCoords",
            value: function(e, t, n) {
                return this.radius = Math.sqrt(e * e + t * t + n * n),
                0 === this.radius ? (this.theta = 0,
                this.phi = 0) : (this.theta = Math.atan2(e, n),
                this.phi = Math.acos(qn.clamp(t / this.radius, -1, 1))),
                this
            }
        }]),
        e
    }();
    function Dp(e, t, n) {
        return this.radius = void 0 !== e ? e : 1,
        this.theta = void 0 !== t ? t : 0,
        this.y = void 0 !== n ? n : 0,
        this
    }
    Object.assign(Dp.prototype, {
        set: function(e, t, n) {
            return this.radius = e,
            this.theta = t,
            this.y = n,
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(e) {
            return this.radius = e.radius,
            this.theta = e.theta,
            this.y = e.y,
            this
        },
        setFromVector3: function(e) {
            return this.setFromCartesianCoords(e.x, e.y, e.z)
        },
        setFromCartesianCoords: function(e, t, n) {
            return this.radius = Math.sqrt(e * e + n * n),
            this.theta = Math.atan2(e, n),
            this.y = t,
            this
        }
    });
    var Ip = new Xn;
    function Op(e, t) {
        this.min = void 0 !== e ? e : new Xn(1 / 0,1 / 0),
        this.max = void 0 !== t ? t : new Xn(-1 / 0,-1 / 0)
    }
    Object.assign(Op.prototype, {
        set: function(e, t) {
            return this.min.copy(e),
            this.max.copy(t),
            this
        },
        setFromPoints: function(e) {
            this.makeEmpty();
            for (var t = 0, n = e.length; t < n; t++)
                this.expandByPoint(e[t]);
            return this
        },
        setFromCenterAndSize: function(e, t) {
            var n = Ip.copy(t).multiplyScalar(.5);
            return this.min.copy(e).sub(n),
            this.max.copy(e).add(n),
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(e) {
            return this.min.copy(e.min),
            this.max.copy(e.max),
            this
        },
        makeEmpty: function() {
            return this.min.x = this.min.y = 1 / 0,
            this.max.x = this.max.y = -1 / 0,
            this
        },
        isEmpty: function() {
            return this.max.x < this.min.x || this.max.y < this.min.y
        },
        getCenter: function(e) {
            return void 0 === e && (console.warn("THREE.Box2: .getCenter() target is now required"),
            e = new Xn),
            this.isEmpty() ? e.set(0, 0) : e.addVectors(this.min, this.max).multiplyScalar(.5)
        },
        getSize: function(e) {
            return void 0 === e && (console.warn("THREE.Box2: .getSize() target is now required"),
            e = new Xn),
            this.isEmpty() ? e.set(0, 0) : e.subVectors(this.max, this.min)
        },
        expandByPoint: function(e) {
            return this.min.min(e),
            this.max.max(e),
            this
        },
        expandByVector: function(e) {
            return this.min.sub(e),
            this.max.add(e),
            this
        },
        expandByScalar: function(e) {
            return this.min.addScalar(-e),
            this.max.addScalar(e),
            this
        },
        containsPoint: function(e) {
            return !(e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y)
        },
        containsBox: function(e) {
            return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y
        },
        getParameter: function(e, t) {
            return void 0 === t && (console.warn("THREE.Box2: .getParameter() target is now required"),
            t = new Xn),
            t.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y))
        },
        intersectsBox: function(e) {
            return !(e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y)
        },
        clampPoint: function(e, t) {
            return void 0 === t && (console.warn("THREE.Box2: .clampPoint() target is now required"),
            t = new Xn),
            t.copy(e).clamp(this.min, this.max)
        },
        distanceToPoint: function(e) {
            return Ip.copy(e).clamp(this.min, this.max).sub(e).length()
        },
        intersect: function(e) {
            return this.min.max(e.min),
            this.max.min(e.max),
            this
        },
        union: function(e) {
            return this.min.min(e.min),
            this.max.max(e.max),
            this
        },
        translate: function(e) {
            return this.min.add(e),
            this.max.add(e),
            this
        },
        equals: function(e) {
            return e.min.equals(this.min) && e.max.equals(this.max)
        }
    });
    var Fp = new ir
      , Np = new ir;
    function Bp(e, t) {
        this.start = void 0 !== e ? e : new ir,
        this.end = void 0 !== t ? t : new ir
    }
    function zp(e) {
        Lr.call(this),
        this.material = e,
        this.render = function() {}
        ,
        this.hasPositions = !1,
        this.hasNormals = !1,
        this.hasColors = !1,
        this.hasUvs = !1,
        this.positionArray = null,
        this.normalArray = null,
        this.colorArray = null,
        this.uvArray = null,
        this.count = 0
    }
    Object.assign(Bp.prototype, {
        set: function(e, t) {
            return this.start.copy(e),
            this.end.copy(t),
            this
        },
        clone: function() {
            return (new this.constructor).copy(this)
        },
        copy: function(e) {
            return this.start.copy(e.start),
            this.end.copy(e.end),
            this
        },
        getCenter: function(e) {
            return void 0 === e && (console.warn("THREE.Line3: .getCenter() target is now required"),
            e = new ir),
            e.addVectors(this.start, this.end).multiplyScalar(.5)
        },
        delta: function(e) {
            return void 0 === e && (console.warn("THREE.Line3: .delta() target is now required"),
            e = new ir),
            e.subVectors(this.end, this.start)
        },
        distanceSq: function() {
            return this.start.distanceToSquared(this.end)
        },
        distance: function() {
            return this.start.distanceTo(this.end)
        },
        at: function(e, t) {
            return void 0 === t && (console.warn("THREE.Line3: .at() target is now required"),
            t = new ir),
            this.delta(t).multiplyScalar(e).add(this.start)
        },
        closestPointToPointParameter: function(e, t) {
            Fp.subVectors(e, this.start),
            Np.subVectors(this.end, this.start);
            var n = Np.dot(Np)
              , r = Np.dot(Fp) / n;
            return t && (r = qn.clamp(r, 0, 1)),
            r
        },
        closestPointToPoint: function(e, t, n) {
            var r = this.closestPointToPointParameter(e, t);
            return void 0 === n && (console.warn("THREE.Line3: .closestPointToPoint() target is now required"),
            n = new ir),
            this.delta(n).multiplyScalar(r).add(this.start)
        },
        applyMatrix4: function(e) {
            return this.start.applyMatrix4(e),
            this.end.applyMatrix4(e),
            this
        },
        equals: function(e) {
            return e.start.equals(this.start) && e.end.equals(this.end)
        }
    }),
    zp.prototype = Object.create(Lr.prototype),
    zp.prototype.constructor = zp,
    zp.prototype.isImmediateRenderObject = !0;
    var Gp = new ir;
    function Hp(e, t) {
        Lr.call(this),
        this.light = e,
        this.light.updateMatrixWorld(),
        this.matrix = e.matrixWorld,
        this.matrixAutoUpdate = !1,
        this.color = t;
        for (var n = new $i, r = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1], i = 0, a = 1; i < 32; i++,
        a++) {
            var o = i / 32 * Math.PI * 2
              , s = a / 32 * Math.PI * 2;
            r.push(Math.cos(o), Math.sin(o), 1, Math.cos(s), Math.sin(s), 1)
        }
        n.setAttribute("position", new zi(r,3));
        var l = new Tl({
            fog: !1,
            toneMapped: !1
        });
        this.cone = new Ol(n,l),
        this.add(this.cone),
        this.update()
    }
    Hp.prototype = Object.create(Lr.prototype),
    Hp.prototype.constructor = Hp,
    Hp.prototype.dispose = function() {
        this.cone.geometry.dispose(),
        this.cone.material.dispose()
    }
    ,
    Hp.prototype.update = function() {
        this.light.updateMatrixWorld();
        var e = this.light.distance ? this.light.distance : 1e3
          , t = e * Math.tan(this.light.angle);
        this.cone.scale.set(t, t, e),
        Gp.setFromMatrixPosition(this.light.target.matrixWorld),
        this.cone.lookAt(Gp),
        void 0 !== this.color ? this.cone.material.color.set(this.color) : this.cone.material.color.copy(this.light.color)
    }
    ;
    var Vp = new ir
      , jp = new pr
      , Up = new pr;
    function Wp(e) {
        for (var t = function e(t) {
            var n = [];
            t && t.isBone && n.push(t);
            for (var r = 0; r < t.children.length; r++)
                n.push.apply(n, e(t.children[r]));
            return n
        }(e), n = new $i, r = [], i = [], a = new wi(0,0,1), o = new wi(0,1,0), s = 0; s < t.length; s++) {
            var l = t[s];
            l.parent && l.parent.isBone && (r.push(0, 0, 0),
            r.push(0, 0, 0),
            i.push(a.r, a.g, a.b),
            i.push(o.r, o.g, o.b))
        }
        n.setAttribute("position", new zi(r,3)),
        n.setAttribute("color", new zi(i,3));
        var u = new Tl({
            vertexColors: !0,
            depthTest: !1,
            depthWrite: !1,
            toneMapped: !1,
            transparent: !0
        });
        Ol.call(this, n, u),
        this.type = "SkeletonHelper",
        this.root = e,
        this.bones = t,
        this.matrix = e.matrixWorld,
        this.matrixAutoUpdate = !1
    }
    function qp(e, t, n) {
        this.light = e,
        this.light.updateMatrixWorld(),
        this.color = n;
        var r = new Yu(t,4,2)
          , i = new Pi({
            wireframe: !0,
            fog: !1,
            toneMapped: !1
        });
        da.call(this, r, i),
        this.type = "PointLightHelper",
        this.matrix = this.light.matrixWorld,
        this.matrixAutoUpdate = !1,
        this.update()
    }
    Wp.prototype = Object.create(Ol.prototype),
    Wp.prototype.constructor = Wp,
    Wp.prototype.isSkeletonHelper = !0,
    Wp.prototype.updateMatrixWorld = function(e) {
        var t = this.bones
          , n = this.geometry
          , r = n.getAttribute("position");
        Up.getInverse(this.root.matrixWorld);
        for (var i = 0, a = 0; i < t.length; i++) {
            var o = t[i];
            o.parent && o.parent.isBone && (jp.multiplyMatrices(Up, o.matrixWorld),
            Vp.setFromMatrixPosition(jp),
            r.setXYZ(a, Vp.x, Vp.y, Vp.z),
            jp.multiplyMatrices(Up, o.parent.matrixWorld),
            Vp.setFromMatrixPosition(jp),
            r.setXYZ(a + 1, Vp.x, Vp.y, Vp.z),
            a += 2)
        }
        n.getAttribute("position").needsUpdate = !0,
        Lr.prototype.updateMatrixWorld.call(this, e)
    }
    ,
    qp.prototype = Object.create(da.prototype),
    qp.prototype.constructor = qp,
    qp.prototype.dispose = function() {
        this.geometry.dispose(),
        this.material.dispose()
    }
    ,
    qp.prototype.update = function() {
        void 0 !== this.color ? this.material.color.set(this.color) : this.material.color.copy(this.light.color)
    }
    ;
    var Xp = new ir
      , Yp = new wi
      , Zp = new wi;
    function $p(e, t, n) {
        Lr.call(this),
        this.light = e,
        this.light.updateMatrixWorld(),
        this.matrix = e.matrixWorld,
        this.matrixAutoUpdate = !1,
        this.color = n;
        var r = new nu(t);
        r.rotateY(.5 * Math.PI),
        this.material = new Pi({
            wireframe: !0,
            fog: !1,
            toneMapped: !1
        }),
        void 0 === this.color && (this.material.vertexColors = !0);
        var i = r.getAttribute("position")
          , a = new Float32Array(3 * i.count);
        r.setAttribute("color", new Ri(a,3)),
        this.add(new da(r,this.material)),
        this.update()
    }
    function Jp(e, t, n, r) {
        e = e || 10,
        t = t || 10,
        n = new wi(void 0 !== n ? n : 4473924),
        r = new wi(void 0 !== r ? r : 8947848);
        for (var i = t / 2, a = e / t, o = e / 2, s = [], l = [], u = 0, c = 0, h = -o; u <= t; u++,
        h += a) {
            s.push(-o, 0, h, o, 0, h),
            s.push(h, 0, -o, h, 0, o);
            var p = u === i ? n : r;
            p.toArray(l, c),
            c += 3,
            p.toArray(l, c),
            c += 3,
            p.toArray(l, c),
            c += 3,
            p.toArray(l, c),
            c += 3
        }
        var f = new $i;
        f.setAttribute("position", new zi(s,3)),
        f.setAttribute("color", new zi(l,3));
        var d = new Tl({
            vertexColors: !0,
            toneMapped: !1
        });
        Ol.call(this, f, d),
        this.type = "GridHelper"
    }
    function Kp(e, t, n, r, i, a) {
        e = e || 10,
        t = t || 16,
        n = n || 8,
        r = r || 64,
        i = new wi(void 0 !== i ? i : 4473924),
        a = new wi(void 0 !== a ? a : 8947848);
        for (var o = [], s = [], l = 0; l <= t; l++) {
            var u = l / t * (2 * Math.PI)
              , c = Math.sin(u) * e
              , h = Math.cos(u) * e;
            o.push(0, 0, 0),
            o.push(c, 0, h);
            var p = 1 & l ? i : a;
            s.push(p.r, p.g, p.b),
            s.push(p.r, p.g, p.b)
        }
        for (var f = 0; f <= n; f++)
            for (var d = 1 & f ? i : a, m = e - e / n * f, g = 0; g < r; g++) {
                var v = g / r * (2 * Math.PI)
                  , y = Math.sin(v) * m
                  , b = Math.cos(v) * m;
                o.push(y, 0, b),
                s.push(d.r, d.g, d.b),
                v = (g + 1) / r * (2 * Math.PI),
                y = Math.sin(v) * m,
                b = Math.cos(v) * m,
                o.push(y, 0, b),
                s.push(d.r, d.g, d.b)
            }
        var x = new $i;
        x.setAttribute("position", new zi(o,3)),
        x.setAttribute("color", new zi(s,3));
        var w = new Tl({
            vertexColors: !0,
            toneMapped: !1
        });
        Ol.call(this, x, w),
        this.type = "PolarGridHelper"
    }
    $p.prototype = Object.create(Lr.prototype),
    $p.prototype.constructor = $p,
    $p.prototype.dispose = function() {
        this.children[0].geometry.dispose(),
        this.children[0].material.dispose()
    }
    ,
    $p.prototype.update = function() {
        var e = this.children[0];
        if (void 0 !== this.color)
            this.material.color.set(this.color);
        else {
            var t = e.geometry.getAttribute("color");
            Yp.copy(this.light.color),
            Zp.copy(this.light.groundColor);
            for (var n = 0, r = t.count; n < r; n++) {
                var i = n < r / 2 ? Yp : Zp;
                t.setXYZ(n, i.r, i.g, i.b)
            }
            t.needsUpdate = !0
        }
        e.lookAt(Xp.setFromMatrixPosition(this.light.matrixWorld).negate())
    }
    ,
    Jp.prototype = Object.create(Ol.prototype),
    Jp.prototype.constructor = Jp,
    Kp.prototype = Object.create(Ol.prototype),
    Kp.prototype.constructor = Kp;
    var Qp = new ir
      , ef = new ir
      , tf = new ir;
    function nf(e, t, n) {
        Lr.call(this),
        this.light = e,
        this.light.updateMatrixWorld(),
        this.matrix = e.matrixWorld,
        this.matrixAutoUpdate = !1,
        this.color = n,
        void 0 === t && (t = 1);
        var r = new $i;
        r.setAttribute("position", new zi([-t, t, 0, t, t, 0, t, -t, 0, -t, -t, 0, -t, t, 0],3));
        var i = new Tl({
            fog: !1,
            toneMapped: !1
        });
        this.lightPlane = new kl(r,i),
        this.add(this.lightPlane),
        (r = new $i).setAttribute("position", new zi([0, 0, 0, 0, 0, 1],3)),
        this.targetLine = new kl(r,i),
        this.add(this.targetLine),
        this.update()
    }
    nf.prototype = Object.create(Lr.prototype),
    nf.prototype.constructor = nf,
    nf.prototype.dispose = function() {
        this.lightPlane.geometry.dispose(),
        this.lightPlane.material.dispose(),
        this.targetLine.geometry.dispose(),
        this.targetLine.material.dispose()
    }
    ,
    nf.prototype.update = function() {
        Qp.setFromMatrixPosition(this.light.matrixWorld),
        ef.setFromMatrixPosition(this.light.target.matrixWorld),
        tf.subVectors(ef, Qp),
        this.lightPlane.lookAt(ef),
        void 0 !== this.color ? (this.lightPlane.material.color.set(this.color),
        this.targetLine.material.color.set(this.color)) : (this.lightPlane.material.color.copy(this.light.color),
        this.targetLine.material.color.copy(this.light.color)),
        this.targetLine.lookAt(ef),
        this.targetLine.scale.z = tf.length()
    }
    ;
    var rf = new ir
      , af = new Pa;
    function of(e) {
        var t = new $i
          , n = new Tl({
            color: 16777215,
            vertexColors: !0,
            toneMapped: !1
        })
          , r = []
          , i = []
          , a = {}
          , o = new wi(16755200)
          , s = new wi(16711680)
          , l = new wi(43775)
          , u = new wi(16777215)
          , c = new wi(3355443);
        function h(e, t, n) {
            p(e, n),
            p(t, n)
        }
        function p(e, t) {
            r.push(0, 0, 0),
            i.push(t.r, t.g, t.b),
            void 0 === a[e] && (a[e] = []),
            a[e].push(r.length / 3 - 1)
        }
        h("n1", "n2", o),
        h("n2", "n4", o),
        h("n4", "n3", o),
        h("n3", "n1", o),
        h("f1", "f2", o),
        h("f2", "f4", o),
        h("f4", "f3", o),
        h("f3", "f1", o),
        h("n1", "f1", o),
        h("n2", "f2", o),
        h("n3", "f3", o),
        h("n4", "f4", o),
        h("p", "n1", s),
        h("p", "n2", s),
        h("p", "n3", s),
        h("p", "n4", s),
        h("u1", "u2", l),
        h("u2", "u3", l),
        h("u3", "u1", l),
        h("c", "t", u),
        h("p", "c", c),
        h("cn1", "cn2", c),
        h("cn3", "cn4", c),
        h("cf1", "cf2", c),
        h("cf3", "cf4", c),
        t.setAttribute("position", new zi(r,3)),
        t.setAttribute("color", new zi(i,3)),
        Ol.call(this, t, n),
        this.type = "CameraHelper",
        this.camera = e,
        this.camera.updateProjectionMatrix && this.camera.updateProjectionMatrix(),
        this.matrix = e.matrixWorld,
        this.matrixAutoUpdate = !1,
        this.pointMap = a,
        this.update()
    }
    function sf(e, t, n, r, i, a, o) {
        rf.set(i, a, o).unproject(r);
        var s = t[e];
        if (void 0 !== s)
            for (var l = n.getAttribute("position"), u = 0, c = s.length; u < c; u++)
                l.setXYZ(s[u], rf.x, rf.y, rf.z)
    }
    of.prototype = Object.create(Ol.prototype),
    of.prototype.constructor = of,
    of.prototype.update = function() {
        var e = this.geometry
          , t = this.pointMap;
        af.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),
        sf("c", t, e, af, 0, 0, -1),
        sf("t", t, e, af, 0, 0, 1),
        sf("n1", t, e, af, -1, -1, -1),
        sf("n2", t, e, af, 1, -1, -1),
        sf("n3", t, e, af, -1, 1, -1),
        sf("n4", t, e, af, 1, 1, -1),
        sf("f1", t, e, af, -1, -1, 1),
        sf("f2", t, e, af, 1, -1, 1),
        sf("f3", t, e, af, -1, 1, 1),
        sf("f4", t, e, af, 1, 1, 1),
        sf("u1", t, e, af, .7, 1.1, -1),
        sf("u2", t, e, af, -.7, 1.1, -1),
        sf("u3", t, e, af, 0, 2, -1),
        sf("cf1", t, e, af, -1, 0, 1),
        sf("cf2", t, e, af, 1, 0, 1),
        sf("cf3", t, e, af, 0, -1, 1),
        sf("cf4", t, e, af, 0, 1, 1),
        sf("cn1", t, e, af, -1, 0, -1),
        sf("cn2", t, e, af, 1, 0, -1),
        sf("cn3", t, e, af, 0, -1, -1),
        sf("cn4", t, e, af, 0, 1, -1),
        e.getAttribute("position").needsUpdate = !0
    }
    ;
    var lf = new Wr;
    function uf(e, t) {
        this.object = e,
        void 0 === t && (t = 16776960);
        var n = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7])
          , r = new Float32Array(24)
          , i = new $i;
        i.setIndex(new Ri(n,1)),
        i.setAttribute("position", new Ri(r,3)),
        Ol.call(this, i, new Tl({
            color: t,
            toneMapped: !1
        })),
        this.type = "BoxHelper",
        this.matrixAutoUpdate = !1,
        this.update()
    }
    function cf(e, t) {
        this.type = "Box3Helper",
        this.box = e,
        void 0 === t && (t = 16776960);
        var n = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7])
          , r = new $i;
        r.setIndex(new Ri(n,1)),
        r.setAttribute("position", new zi([1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1],3)),
        Ol.call(this, r, new Tl({
            color: t,
            toneMapped: !1
        })),
        this.type = "Box3Helper",
        this.geometry.computeBoundingSphere()
    }
    function hf(e, t, n) {
        this.plane = e,
        this.size = void 0 === t ? 1 : t;
        var r = void 0 !== n ? n : 16776960
          , i = new $i;
        i.setAttribute("position", new zi([1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0],3)),
        i.computeBoundingSphere(),
        kl.call(this, i, new Tl({
            color: r,
            toneMapped: !1
        })),
        this.type = "PlaneHelper";
        var a = new $i;
        a.setAttribute("position", new zi([1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1],3)),
        a.computeBoundingSphere(),
        this.add(new da(a,new Pi({
            color: r,
            opacity: .2,
            transparent: !0,
            depthWrite: !1,
            toneMapped: !1
        })))
    }
    uf.prototype = Object.create(Ol.prototype),
    uf.prototype.constructor = uf,
    uf.prototype.update = function(e) {
        if (void 0 !== e && console.warn("THREE.BoxHelper: .update() has no longer arguments."),
        void 0 !== this.object && lf.setFromObject(this.object),
        !lf.isEmpty()) {
            var t = lf.min
              , n = lf.max
              , r = this.geometry.attributes.position
              , i = r.array;
            i[0] = n.x,
            i[1] = n.y,
            i[2] = n.z,
            i[3] = t.x,
            i[4] = n.y,
            i[5] = n.z,
            i[6] = t.x,
            i[7] = t.y,
            i[8] = n.z,
            i[9] = n.x,
            i[10] = t.y,
            i[11] = n.z,
            i[12] = n.x,
            i[13] = n.y,
            i[14] = t.z,
            i[15] = t.x,
            i[16] = n.y,
            i[17] = t.z,
            i[18] = t.x,
            i[19] = t.y,
            i[20] = t.z,
            i[21] = n.x,
            i[22] = t.y,
            i[23] = t.z,
            r.needsUpdate = !0,
            this.geometry.computeBoundingSphere()
        }
    }
    ,
    uf.prototype.setFromObject = function(e) {
        return this.object = e,
        this.update(),
        this
    }
    ,
    uf.prototype.copy = function(e) {
        return Ol.prototype.copy.call(this, e),
        this.object = e.object,
        this
    }
    ,
    cf.prototype = Object.create(Ol.prototype),
    cf.prototype.constructor = cf,
    cf.prototype.updateMatrixWorld = function(e) {
        var t = this.box;
        t.isEmpty() || (t.getCenter(this.position),
        t.getSize(this.scale),
        this.scale.multiplyScalar(.5),
        Lr.prototype.updateMatrixWorld.call(this, e))
    }
    ,
    hf.prototype = Object.create(kl.prototype),
    hf.prototype.constructor = hf,
    hf.prototype.updateMatrixWorld = function(e) {
        var t = -this.plane.constant;
        Math.abs(t) < 1e-8 && (t = 1e-8),
        this.scale.set(.5 * this.size, .5 * this.size, t),
        this.children[0].material.side = t < 0 ? _ : w,
        this.lookAt(this.plane.normal),
        Lr.prototype.updateMatrixWorld.call(this, e)
    }
    ;
    var pf, ff, df = new ir;
    function mf(e, t, n, r, i, a) {
        Lr.call(this),
        this.type = "ArrowHelper",
        void 0 === e && (e = new ir(0,0,1)),
        void 0 === t && (t = new ir(0,0,0)),
        void 0 === n && (n = 1),
        void 0 === r && (r = 16776960),
        void 0 === i && (i = .2 * n),
        void 0 === a && (a = .2 * i),
        void 0 === pf && ((pf = new $i).setAttribute("position", new zi([0, 0, 0, 0, 1, 0],3)),
        (ff = new ic(0,.5,1,5,1)).translate(0, -.5, 0)),
        this.position.copy(t),
        this.line = new kl(pf,new Tl({
            color: r,
            toneMapped: !1
        })),
        this.line.matrixAutoUpdate = !1,
        this.add(this.line),
        this.cone = new da(ff,new Pi({
            color: r,
            toneMapped: !1
        })),
        this.cone.matrixAutoUpdate = !1,
        this.add(this.cone),
        this.setDirection(e),
        this.setLength(n, i, a)
    }
    function gf(e) {
        var t = [0, 0, 0, e = e || 1, 0, 0, 0, 0, 0, 0, e, 0, 0, 0, 0, 0, 0, e]
          , n = new $i;
        n.setAttribute("position", new zi(t,3)),
        n.setAttribute("color", new zi([1, 0, 0, 1, .6, 0, 0, 1, 0, .6, 1, 0, 0, 0, 1, 0, .6, 1],3));
        var r = new Tl({
            vertexColors: !0,
            toneMapped: !1
        });
        Ol.call(this, n, r),
        this.type = "AxesHelper"
    }
    mf.prototype = Object.create(Lr.prototype),
    mf.prototype.constructor = mf,
    mf.prototype.setDirection = function(e) {
        if (e.y > .99999)
            this.quaternion.set(0, 0, 0, 1);
        else if (e.y < -.99999)
            this.quaternion.set(1, 0, 0, 0);
        else {
            df.set(e.z, 0, -e.x).normalize();
            var t = Math.acos(e.y);
            this.quaternion.setFromAxisAngle(df, t)
        }
    }
    ,
    mf.prototype.setLength = function(e, t, n) {
        void 0 === t && (t = .2 * e),
        void 0 === n && (n = .2 * t),
        this.line.scale.set(1, Math.max(1e-4, e - t), 1),
        this.line.updateMatrix(),
        this.cone.scale.set(n, t, n),
        this.cone.position.y = e,
        this.cone.updateMatrix()
    }
    ,
    mf.prototype.setColor = function(e) {
        this.line.material.color.set(e),
        this.cone.material.color.set(e)
    }
    ,
    mf.prototype.copy = function(e) {
        return Lr.prototype.copy.call(this, e, !1),
        this.line.copy(e.line),
        this.cone.copy(e.cone),
        this
    }
    ,
    gf.prototype = Object.create(Ol.prototype),
    gf.prototype.constructor = gf;
    var vf = Math.pow(2, 8)
      , yf = [.125, .215, .35, .446, .526, .582]
      , bf = 5 + yf.length
      , xf = (r = {},
    Object(a.a)(r, rn, 0),
    Object(a.a)(r, an, 1),
    Object(a.a)(r, sn, 2),
    Object(a.a)(r, un, 3),
    Object(a.a)(r, cn, 4),
    Object(a.a)(r, hn, 5),
    Object(a.a)(r, on, 6),
    r)
      , wf = new Eh
      , _f = function() {
        for (var e = [], t = [], n = [], r = 8, i = 0; i < bf; i++) {
            var a = Math.pow(2, r);
            t.push(a);
            var o = 1 / a;
            i > 4 ? o = yf[i - 8 + 4 - 1] : 0 == i && (o = 0),
            n.push(o);
            for (var s = 1 / (a - 1), l = -s / 2, u = 1 + s / 2, c = [l, l, u, l, u, u, l, l, u, u, l, u], h = new Float32Array(108), p = new Float32Array(72), f = new Float32Array(36), d = 0; d < 6; d++) {
                var m = d % 3 * 2 / 3 - 1
                  , g = d > 2 ? 0 : -1
                  , v = [m, g, 0, m + 2 / 3, g, 0, m + 2 / 3, g + 1, 0, m, g, 0, m + 2 / 3, g + 1, 0, m, g + 1, 0];
                h.set(v, 18 * d),
                p.set(c, 12 * d);
                var y = [d, d, d, d, d, d];
                f.set(y, 6 * d)
            }
            var b = new $i;
            b.setAttribute("position", new Ri(h,3)),
            b.setAttribute("uv", new Ri(p,2)),
            b.setAttribute("faceIndex", new Ri(f,1)),
            e.push(b),
            r > 4 && r--
        }
        return {
            _lodPlanes: e,
            _sizeLods: t,
            _sigmas: n
        }
    }()
      , Sf = _f._lodPlanes
      , Ef = _f._sizeLods
      , Mf = _f._sigmas
      , Tf = null
      , Af = (1 + Math.sqrt(5)) / 2
      , Pf = 1 / Af
      , Cf = [new ir(1,1,1), new ir(-1,1,1), new ir(1,1,-1), new ir(-1,1,-1), new ir(0,Af,Pf), new ir(0,Af,-Pf), new ir(Pf,0,Af), new ir(-Pf,0,Af), new ir(Af,Pf,0), new ir(-Af,Pf,0)];
    function Lf(e) {
        this._renderer = e,
        this._pingPongRenderTarget = null,
        this._blurMaterial = function(e) {
            var t = new Float32Array(e)
              , n = new ir(0,1,0);
            return new hc({
                name: "SphericalGaussianBlur",
                defines: {
                    n: e
                },
                uniforms: {
                    envMap: {
                        value: null
                    },
                    samples: {
                        value: 1
                    },
                    weights: {
                        value: t
                    },
                    latitudinal: {
                        value: !1
                    },
                    dTheta: {
                        value: 0
                    },
                    mipInt: {
                        value: 0
                    },
                    poleAxis: {
                        value: n
                    },
                    inputEncoding: {
                        value: xf[rn]
                    },
                    outputEncoding: {
                        value: xf[rn]
                    }
                },
                vertexShader: "\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",
                fragmentShader: "\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t".concat("\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t", "\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t"),
                blending: T,
                depthTest: !1,
                depthWrite: !1
            })
        }(20),
        this._equirectShader = null,
        this._cubemapShader = null,
        this._compileMaterial(this._blurMaterial)
    }
    function Rf(e) {
        return void 0 !== e && e.type === Re && (e.encoding === rn || e.encoding === an || e.encoding === on)
    }
    function kf(e) {
        var t = new Qn(3 * vf,3 * vf,e);
        return t.texture.mapping = ge,
        t.texture.name = "PMREM.cubeUv",
        t.scissorTest = !0,
        t
    }
    function Df(e, t, n, r, i) {
        e.viewport.set(t, n, r, i),
        e.scissor.set(t, n, r, i)
    }
    function If() {
        return new hc({
            name: "EquirectangularToCubeUV",
            uniforms: {
                envMap: {
                    value: null
                },
                texelSize: {
                    value: new Xn(1,1)
                },
                inputEncoding: {
                    value: xf[rn]
                },
                outputEncoding: {
                    value: xf[rn]
                }
            },
            vertexShader: "\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",
            fragmentShader: "\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t".concat("\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t", "\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t"),
            blending: T,
            depthTest: !1,
            depthWrite: !1
        })
    }
    function Of() {
        return new hc({
            name: "CubemapToCubeUV",
            uniforms: {
                envMap: {
                    value: null
                },
                inputEncoding: {
                    value: xf[rn]
                },
                outputEncoding: {
                    value: xf[rn]
                }
            },
            vertexShader: "\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",
            fragmentShader: "\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\t".concat("\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t", "\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t"),
            blending: T,
            depthTest: !1,
            depthWrite: !1
        })
    }
    function Ff(e, t, n, r, i, a, o) {
        return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),
        new Mi(e,t,n,i,a,o)
    }
    Lf.prototype = {
        constructor: Lf,
        fromScene: function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0
              , n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : .1
              , r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 100;
            Tf = this._renderer.getRenderTarget();
            var i = this._allocateTargets();
            return this._sceneToCubeUV(e, n, r, i),
            t > 0 && this._blur(i, 0, 0, t),
            this._applyPMREM(i),
            this._cleanup(i),
            i
        },
        fromEquirectangular: function(e) {
            return this._fromTexture(e)
        },
        fromCubemap: function(e) {
            return this._fromTexture(e)
        },
        compileCubemapShader: function() {
            null === this._cubemapShader && (this._cubemapShader = Of(),
            this._compileMaterial(this._cubemapShader))
        },
        compileEquirectangularShader: function() {
            null === this._equirectShader && (this._equirectShader = If(),
            this._compileMaterial(this._equirectShader))
        },
        dispose: function() {
            this._blurMaterial.dispose(),
            null !== this._cubemapShader && this._cubemapShader.dispose(),
            null !== this._equirectShader && this._equirectShader.dispose();
            for (var e = 0; e < Sf.length; e++)
                Sf[e].dispose()
        },
        _cleanup: function(e) {
            this._pingPongRenderTarget.dispose(),
            this._renderer.setRenderTarget(Tf),
            e.scissorTest = !1,
            Df(e, 0, 0, e.width, e.height)
        },
        _fromTexture: function(e) {
            Tf = this._renderer.getRenderTarget();
            var t = this._allocateTargets(e);
            return this._textureToCubeUV(e, t),
            this._applyPMREM(t),
            this._cleanup(t),
            t
        },
        _allocateTargets: function(e) {
            var t = {
                magFilter: we,
                minFilter: we,
                generateMipmaps: !1,
                type: Re,
                format: Ye,
                encoding: Rf(e) ? e.encoding : sn,
                depthBuffer: !1,
                stencilBuffer: !1
            }
              , n = kf(t);
            return n.depthBuffer = !e,
            this._pingPongRenderTarget = kf(t),
            n
        },
        _compileMaterial: function(e) {
            var t = new da(Sf[0],e);
            this._renderer.compile(t, wf)
        },
        _sceneToCubeUV: function(e, t, n, r) {
            var i = new Ca(90,1,t,n)
              , a = [1, -1, 1, 1, 1, 1]
              , o = [1, 1, 1, -1, -1, -1]
              , s = this._renderer
              , l = s.outputEncoding
              , u = s.toneMapping
              , c = s.getClearColor()
              , h = s.getClearAlpha();
            s.toneMapping = ae,
            s.outputEncoding = rn;
            var p = e.background;
            if (p && p.isColor) {
                p.convertSRGBToLinear();
                var f = Math.max(p.r, p.g, p.b)
                  , d = Math.min(Math.max(Math.ceil(Math.log2(f)), -128), 127);
                p = p.multiplyScalar(Math.pow(2, -d));
                var m = (d + 128) / 255;
                s.setClearColor(p, m),
                e.background = null
            }
            for (var g = 0; g < 6; g++) {
                var v = g % 3;
                0 == v ? (i.up.set(0, a[g], 0),
                i.lookAt(o[g], 0, 0)) : 1 == v ? (i.up.set(0, 0, a[g]),
                i.lookAt(0, o[g], 0)) : (i.up.set(0, a[g], 0),
                i.lookAt(0, 0, o[g])),
                Df(r, v * vf, g > 2 ? vf : 0, vf, vf),
                s.setRenderTarget(r),
                s.render(e, i)
            }
            s.toneMapping = u,
            s.outputEncoding = l,
            s.setClearColor(c, h)
        },
        _textureToCubeUV: function(e, t) {
            var n = this._renderer;
            e.isCubeTexture ? null == this._cubemapShader && (this._cubemapShader = Of()) : null == this._equirectShader && (this._equirectShader = If());
            var r = e.isCubeTexture ? this._cubemapShader : this._equirectShader
              , i = new da(Sf[0],r)
              , a = r.uniforms;
            a.envMap.value = e,
            e.isCubeTexture || a.texelSize.value.set(1 / e.image.width, 1 / e.image.height),
            a.inputEncoding.value = xf[e.encoding],
            a.outputEncoding.value = xf[t.texture.encoding],
            Df(t, 0, 0, 3 * vf, 2 * vf),
            n.setRenderTarget(t),
            n.render(i, wf)
        },
        _applyPMREM: function(e) {
            var t = this._renderer
              , n = t.autoClear;
            t.autoClear = !1;
            for (var r = 1; r < bf; r++) {
                var i = Math.sqrt(Mf[r] * Mf[r] - Mf[r - 1] * Mf[r - 1])
                  , a = Cf[(r - 1) % Cf.length];
                this._blur(e, r - 1, r, i, a)
            }
            t.autoClear = n
        },
        _blur: function(e, t, n, r, i) {
            var a = this._pingPongRenderTarget;
            this._halfBlur(e, a, t, n, r, "latitudinal", i),
            this._halfBlur(a, e, n, n, r, "longitudinal", i)
        },
        _halfBlur: function(e, t, n, r, i, a, o) {
            var s = this._renderer
              , l = this._blurMaterial;
            "latitudinal" !== a && "longitudinal" !== a && console.error("blur direction must be either latitudinal or longitudinal!");
            var u = new da(Sf[r],l)
              , c = l.uniforms
              , h = Ef[n] - 1
              , p = isFinite(i) ? Math.PI / (2 * h) : 2 * Math.PI / 39
              , f = i / p
              , d = isFinite(i) ? 1 + Math.floor(3 * f) : 20;
            d > 20 && console.warn("sigmaRadians, ".concat(i, ", is too large and will clip, as it requested ").concat(d, " samples when the maximum is set to ").concat(20));
            for (var m = [], g = 0, v = 0; v < 20; ++v) {
                var y = v / f
                  , b = Math.exp(-y * y / 2);
                m.push(b),
                0 == v ? g += b : v < d && (g += 2 * b)
            }
            for (var x = 0; x < m.length; x++)
                m[x] = m[x] / g;
            c.envMap.value = e.texture,
            c.samples.value = d,
            c.weights.value = m,
            c.latitudinal.value = "latitudinal" === a,
            o && (c.poleAxis.value = o),
            c.dTheta.value = p,
            c.mipInt.value = 8 - n,
            c.inputEncoding.value = xf[e.texture.encoding],
            c.outputEncoding.value = xf[e.texture.encoding];
            var w = Ef[r];
            Df(t, 3 * Math.max(0, vf - 2 * w), (0 === r ? 0 : 2 * vf) + 2 * w * (r > 4 ? r - 8 + 4 : 0), 3 * w, 2 * w),
            s.setRenderTarget(t),
            s.render(u, wf)
        }
    };
    var Nf = 0
      , Bf = 1
      , zf = 0
      , Gf = 1
      , Hf = 2;
    function Vf(e) {
        return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),
        e
    }
    function jf(e) {
        return void 0 === e && (e = []),
        console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),
        e.isMultiMaterial = !0,
        e.materials = e,
        e.clone = function() {
            return e.slice()
        }
        ,
        e
    }
    function Uf(e, t) {
        return console.warn("THREE.PointCloud has been renamed to THREE.Points."),
        new Vl(e,t)
    }
    function Wf(e) {
        return console.warn("THREE.Particle has been renamed to THREE.Sprite."),
        new hl(e)
    }
    function qf(e, t) {
        return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),
        new Vl(e,t)
    }
    function Xf(e) {
        return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),
        new Nl(e)
    }
    function Yf(e) {
        return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),
        new Nl(e)
    }
    function Zf(e) {
        return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),
        new Nl(e)
    }
    function $f(e, t, n) {
        return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),
        new ir(e,t,n)
    }
    function Jf(e, t) {
        return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),
        new Ri(e,t).setUsage(Dn)
    }
    function Kf(e, t) {
        return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),
        new ki(e,t)
    }
    function Qf(e, t) {
        return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),
        new Di(e,t)
    }
    function ed(e, t) {
        return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),
        new Ii(e,t)
    }
    function td(e, t) {
        return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),
        new Oi(e,t)
    }
    function nd(e, t) {
        return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),
        new Fi(e,t)
    }
    function rd(e, t) {
        return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),
        new Ni(e,t)
    }
    function id(e, t) {
        return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),
        new Bi(e,t)
    }
    function ad(e, t) {
        return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),
        new zi(e,t)
    }
    function od(e, t) {
        return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),
        new Gi(e,t)
    }
    function sd(e) {
        console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),
        nh.call(this, e),
        this.type = "catmullrom",
        this.closed = !0
    }
    function ld(e) {
        console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),
        nh.call(this, e),
        this.type = "catmullrom"
    }
    function ud(e) {
        console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),
        nh.call(this, e),
        this.type = "catmullrom"
    }
    function cd(e) {
        return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),
        new gf(e)
    }
    function hd(e, t) {
        return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),
        new uf(e,t)
    }
    function pd(e, t) {
        return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),
        new Ol(new nc(e.geometry),new Tl({
            color: void 0 !== t ? t : 16777215
        }))
    }
    function fd(e, t) {
        return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),
        new Ol(new Yl(e.geometry),new Tl({
            color: void 0 !== t ? t : 16777215
        }))
    }
    function dd(e) {
        return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),
        new Hc(e)
    }
    function md(e) {
        return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),
        new Uc(e)
    }
    function gd(e, t, n) {
        return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),
        new Ra(e,n)
    }
    Yc.create = function(e, t) {
        return console.log("THREE.Curve.create() has been deprecated"),
        e.prototype = Object.create(Yc.prototype),
        e.prototype.constructor = e,
        e.prototype.getPoint = t,
        e
    }
    ,
    Object.assign(dh.prototype, {
        createPointsGeometry: function(e) {
            console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
            var t = this.getPoints(e);
            return this.createGeometry(t)
        },
        createSpacedPointsGeometry: function(e) {
            console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
            var t = this.getSpacedPoints(e);
            return this.createGeometry(t)
        },
        createGeometry: function(e) {
            console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
            for (var t = new wa, n = 0, r = e.length; n < r; n++) {
                var i = e[n];
                t.vertices.push(new ir(i.x,i.y,i.z || 0))
            }
            return t
        }
    }),
    Object.assign(mh.prototype, {
        fromPoints: function(e) {
            return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),
            this.setFromPoints(e)
        }
    }),
    sd.prototype = Object.create(nh.prototype),
    ld.prototype = Object.create(nh.prototype),
    ud.prototype = Object.create(nh.prototype),
    Object.assign(ud.prototype, {
        initFromArray: function() {
            console.error("THREE.Spline: .initFromArray() has been removed.")
        },
        getControlPointsArray: function() {
            console.error("THREE.Spline: .getControlPointsArray() has been removed.")
        },
        reparametrizeByArcLength: function() {
            console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")
        }
    }),
    Jp.prototype.setColors = function() {
        console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")
    }
    ,
    Wp.prototype.update = function() {
        console.error("THREE.SkeletonHelper: update() no longer needs to be called.")
    }
    ,
    Object.assign(zc.prototype, {
        extractUrlBase: function(e) {
            return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),
            kh.extractUrlBase(e)
        }
    }),
    zc.Handlers = {
        add: function() {
            console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")
        },
        get: function() {
            console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")
        }
    },
    Object.assign(Nh.prototype, {
        setTexturePath: function(e) {
            return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),
            this.setResourcePath(e)
        }
    }),
    Object.assign(Op.prototype, {
        center: function(e) {
            return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),
            this.getCenter(e)
        },
        empty: function() {
            return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),
            this.isEmpty()
        },
        isIntersectionBox: function(e) {
            return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),
            this.intersectsBox(e)
        },
        size: function(e) {
            return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),
            this.getSize(e)
        }
    }),
    Object.assign(Wr.prototype, {
        center: function(e) {
            return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),
            this.getCenter(e)
        },
        empty: function() {
            return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),
            this.isEmpty()
        },
        isIntersectionBox: function(e) {
            return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),
            this.intersectsBox(e)
        },
        isIntersectionSphere: function(e) {
            return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),
            this.intersectsSphere(e)
        },
        size: function(e) {
            return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),
            this.getSize(e)
        }
    }),
    Object.assign(Yr.prototype, {
        empty: function() {
            return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),
            this.isEmpty()
        }
    }),
    Oa.prototype.setFromMatrix = function(e) {
        return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),
        this.setFromProjectionMatrix(e)
    }
    ,
    Bp.prototype.center = function(e) {
        return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),
        this.getCenter(e)
    }
    ,
    Object.assign(qn, {
        random16: function() {
            return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),
            Math.random()
        },
        nearestPowerOfTwo: function(e) {
            return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),
            qn.floorPowerOfTwo(e)
        },
        nextPowerOfTwo: function(e) {
            return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),
            qn.ceilPowerOfTwo(e)
        }
    }),
    Object.assign(Yn.prototype, {
        flattenToArrayOffset: function(e, t) {
            return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),
            this.toArray(e, t)
        },
        multiplyVector3: function(e) {
            return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),
            e.applyMatrix3(this)
        },
        multiplyVector3Array: function() {
            console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")
        },
        applyToBufferAttribute: function(e) {
            return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),
            e.applyMatrix3(this)
        },
        applyToVector3Array: function() {
            console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")
        }
    }),
    Object.assign(pr.prototype, {
        extractPosition: function(e) {
            return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),
            this.copyPosition(e)
        },
        flattenToArrayOffset: function(e, t) {
            return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),
            this.toArray(e, t)
        },
        getPosition: function() {
            return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),
            (new ir).setFromMatrixColumn(this, 3)
        },
        setRotationFromQuaternion: function(e) {
            return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),
            this.makeRotationFromQuaternion(e)
        },
        multiplyToArray: function() {
            console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")
        },
        multiplyVector3: function(e) {
            return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),
            e.applyMatrix4(this)
        },
        multiplyVector4: function(e) {
            return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),
            e.applyMatrix4(this)
        },
        multiplyVector3Array: function() {
            console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")
        },
        rotateAxis: function(e) {
            console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),
            e.transformDirection(this)
        },
        crossVector: function(e) {
            return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),
            e.applyMatrix4(this)
        },
        translate: function() {
            console.error("THREE.Matrix4: .translate() has been removed.")
        },
        rotateX: function() {
            console.error("THREE.Matrix4: .rotateX() has been removed.")
        },
        rotateY: function() {
            console.error("THREE.Matrix4: .rotateY() has been removed.")
        },
        rotateZ: function() {
            console.error("THREE.Matrix4: .rotateZ() has been removed.")
        },
        rotateByAxis: function() {
            console.error("THREE.Matrix4: .rotateByAxis() has been removed.")
        },
        applyToBufferAttribute: function(e) {
            return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),
            e.applyMatrix4(this)
        },
        applyToVector3Array: function() {
            console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")
        },
        makeFrustum: function(e, t, n, r, i, a) {
            return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),
            this.makePerspective(e, t, r, n, i, a)
        }
    }),
    oi.prototype.isIntersectionLine = function(e) {
        return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),
        this.intersectsLine(e)
    }
    ,
    tr.prototype.multiplyVector3 = function(e) {
        return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),
        e.applyQuaternion(this)
    }
    ,
    Object.assign(ni.prototype, {
        isIntersectionBox: function(e) {
            return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),
            this.intersectsBox(e)
        },
        isIntersectionPlane: function(e) {
            return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),
            this.intersectsPlane(e)
        },
        isIntersectionSphere: function(e) {
            return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),
            this.intersectsSphere(e)
        }
    }),
    Object.assign(vi.prototype, {
        area: function() {
            return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),
            this.getArea()
        },
        barycoordFromPoint: function(e, t) {
            return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),
            this.getBarycoord(e, t)
        },
        midpoint: function(e) {
            return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),
            this.getMidpoint(e)
        },
        normal: function(e) {
            return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),
            this.getNormal(e)
        },
        plane: function(e) {
            return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),
            this.getPlane(e)
        }
    }),
    Object.assign(vi, {
        barycoordFromPoint: function(e, t, n, r, i) {
            return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),
            vi.getBarycoord(e, t, n, r, i)
        },
        normal: function(e, t, n, r) {
            return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),
            vi.getNormal(e, t, n, r)
        }
    }),
    Object.assign(gh.prototype, {
        extractAllPoints: function(e) {
            return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),
            this.extractPoints(e)
        },
        extrude: function(e) {
            return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),
            new Hu(this,e)
        },
        makeGeometry: function(e) {
            return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),
            new Qu(this,e)
        }
    }),
    Object.assign(Xn.prototype, {
        fromAttribute: function(e, t, n) {
            return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),
            this.fromBufferAttribute(e, t, n)
        },
        distanceToManhattan: function(e) {
            return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),
            this.manhattanDistanceTo(e)
        },
        lengthManhattan: function() {
            return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),
            this.manhattanLength()
        }
    }),
    Object.assign(ir.prototype, {
        setEulerFromRotationMatrix: function() {
            console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")
        },
        setEulerFromQuaternion: function() {
            console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")
        },
        getPositionFromMatrix: function(e) {
            return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),
            this.setFromMatrixPosition(e)
        },
        getScaleFromMatrix: function(e) {
            return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),
            this.setFromMatrixScale(e)
        },
        getColumnFromMatrix: function(e, t) {
            return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),
            this.setFromMatrixColumn(t, e)
        },
        applyProjection: function(e) {
            return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),
            this.applyMatrix4(e)
        },
        fromAttribute: function(e, t, n) {
            return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),
            this.fromBufferAttribute(e, t, n)
        },
        distanceToManhattan: function(e) {
            return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),
            this.manhattanDistanceTo(e)
        },
        lengthManhattan: function() {
            return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),
            this.manhattanLength()
        }
    }),
    Object.assign(Kn.prototype, {
        fromAttribute: function(e, t, n) {
            return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),
            this.fromBufferAttribute(e, t, n)
        },
        lengthManhattan: function() {
            return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),
            this.manhattanLength()
        }
    }),
    Object.assign(wa.prototype, {
        computeTangents: function() {
            console.error("THREE.Geometry: .computeTangents() has been removed.")
        },
        computeLineDistances: function() {
            console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")
        },
        applyMatrix: function(e) {
            return console.warn("THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4()."),
            this.applyMatrix4(e)
        }
    }),
    Object.assign(Lr.prototype, {
        getChildByName: function(e) {
            return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),
            this.getObjectByName(e)
        },
        renderDepth: function() {
            console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")
        },
        translate: function(e, t) {
            return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),
            this.translateOnAxis(t, e)
        },
        getWorldRotation: function() {
            console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")
        },
        applyMatrix: function(e) {
            return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),
            this.applyMatrix4(e)
        }
    }),
    Object.defineProperties(Lr.prototype, {
        eulerOrder: {
            get: function() {
                return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),
                this.rotation.order
            },
            set: function(e) {
                console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),
                this.rotation.order = e
            }
        },
        useQuaternion: {
            get: function() {
                console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")
            },
            set: function() {
                console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")
            }
        }
    }),
    Object.assign(da.prototype, {
        setDrawMode: function() {
            console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")
        }
    }),
    Object.defineProperties(da.prototype, {
        drawMode: {
            get: function() {
                return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),
                en
            },
            set: function() {
                console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")
            }
        }
    }),
    Object.defineProperties(ml.prototype, {
        objects: {
            get: function() {
                return console.warn("THREE.LOD: .objects has been renamed to .levels."),
                this.levels
            }
        }
    }),
    Object.defineProperty(bl.prototype, "useVertexTexture", {
        get: function() {
            console.warn("THREE.Skeleton: useVertexTexture has been removed.")
        },
        set: function() {
            console.warn("THREE.Skeleton: useVertexTexture has been removed.")
        }
    }),
    gl.prototype.initBones = function() {
        console.error("THREE.SkinnedMesh: initBones() has been removed.")
    }
    ,
    Object.defineProperty(Yc.prototype, "__arcLengthDivisions", {
        get: function() {
            return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),
            this.arcLengthDivisions
        },
        set: function(e) {
            console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),
            this.arcLengthDivisions = e
        }
    }),
    Ca.prototype.setLens = function(e, t) {
        console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),
        void 0 !== t && (this.filmGauge = t),
        this.setFocalLength(e)
    }
    ,
    Object.defineProperties(vh.prototype, {
        onlyShadow: {
            set: function() {
                console.warn("THREE.Light: .onlyShadow has been removed.")
            }
        },
        shadowCameraFov: {
            set: function(e) {
                console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),
                this.shadow.camera.fov = e
            }
        },
        shadowCameraLeft: {
            set: function(e) {
                console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),
                this.shadow.camera.left = e
            }
        },
        shadowCameraRight: {
            set: function(e) {
                console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),
                this.shadow.camera.right = e
            }
        },
        shadowCameraTop: {
            set: function(e) {
                console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),
                this.shadow.camera.top = e
            }
        },
        shadowCameraBottom: {
            set: function(e) {
                console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),
                this.shadow.camera.bottom = e
            }
        },
        shadowCameraNear: {
            set: function(e) {
                console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),
                this.shadow.camera.near = e
            }
        },
        shadowCameraFar: {
            set: function(e) {
                console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),
                this.shadow.camera.far = e
            }
        },
        shadowCameraVisible: {
            set: function() {
                console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")
            }
        },
        shadowBias: {
            set: function(e) {
                console.warn("THREE.Light: .shadowBias is now .shadow.bias."),
                this.shadow.bias = e
            }
        },
        shadowDarkness: {
            set: function() {
                console.warn("THREE.Light: .shadowDarkness has been removed.")
            }
        },
        shadowMapWidth: {
            set: function(e) {
                console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),
                this.shadow.mapSize.width = e
            }
        },
        shadowMapHeight: {
            set: function(e) {
                console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),
                this.shadow.mapSize.height = e
            }
        }
    }),
    Object.defineProperties(Ri.prototype, {
        length: {
            get: function() {
                return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),
                this.array.length
            }
        },
        dynamic: {
            get: function() {
                return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),
                this.usage === Dn
            },
            set: function() {
                console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),
                this.setUsage(Dn)
            }
        }
    }),
    Object.assign(Ri.prototype, {
        setDynamic: function(e) {
            return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),
            this.setUsage(!0 === e ? Dn : kn),
            this
        },
        copyIndicesArray: function() {
            console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")
        },
        setArray: function() {
            console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")
        }
    }),
    Object.assign($i.prototype, {
        addIndex: function(e) {
            console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),
            this.setIndex(e)
        },
        addAttribute: function(e, t) {
            return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),
            t && t.isBufferAttribute || t && t.isInterleavedBufferAttribute ? "index" === e ? (console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),
            this.setIndex(t),
            this) : this.setAttribute(e, t) : (console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),
            this.setAttribute(e, new Ri(arguments[1],arguments[2])))
        },
        addDrawCall: function(e, t, n) {
            void 0 !== n && console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),
            console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),
            this.addGroup(e, t)
        },
        clearDrawCalls: function() {
            console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),
            this.clearGroups()
        },
        computeTangents: function() {
            console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")
        },
        computeOffsets: function() {
            console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")
        },
        removeAttribute: function(e) {
            return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),
            this.deleteAttribute(e)
        },
        applyMatrix: function(e) {
            return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),
            this.applyMatrix4(e)
        }
    }),
    Object.defineProperties($i.prototype, {
        drawcalls: {
            get: function() {
                return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),
                this.groups
            }
        },
        offsets: {
            get: function() {
                return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),
                this.groups
            }
        }
    }),
    Object.defineProperties(Dh.prototype, {
        maxInstancedCount: {
            get: function() {
                return console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),
                this.instanceCount
            },
            set: function(e) {
                console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),
                this.instanceCount = e
            }
        }
    }),
    Object.defineProperties(Cp.prototype, {
        linePrecision: {
            get: function() {
                return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),
                this.params.Line.threshold
            },
            set: function(e) {
                console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),
                this.params.Line.threshold = e
            }
        }
    }),
    Object.defineProperties(Ys.prototype, {
        dynamic: {
            get: function() {
                return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),
                this.usage === Dn
            },
            set: function(e) {
                console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),
                this.setUsage(e)
            }
        }
    }),
    Object.assign(Ys.prototype, {
        setDynamic: function(e) {
            return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),
            this.setUsage(!0 === e ? Dn : kn),
            this
        },
        setArray: function() {
            console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")
        }
    }),
    Object.assign(Vu.prototype, {
        getArrays: function() {
            console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.")
        },
        addShapeList: function() {
            console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.")
        },
        addShape: function() {
            console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.")
        }
    }),
    Object.defineProperties(Ap.prototype, {
        dynamic: {
            set: function() {
                console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")
            }
        },
        onUpdate: {
            value: function() {
                return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),
                this
            }
        }
    }),
    Object.defineProperties(Ai.prototype, {
        wrapAround: {
            get: function() {
                console.warn("THREE.Material: .wrapAround has been removed.")
            },
            set: function() {
                console.warn("THREE.Material: .wrapAround has been removed.")
            }
        },
        overdraw: {
            get: function() {
                console.warn("THREE.Material: .overdraw has been removed.")
            },
            set: function() {
                console.warn("THREE.Material: .overdraw has been removed.")
            }
        },
        wrapRGB: {
            get: function() {
                return console.warn("THREE.Material: .wrapRGB has been removed."),
                new wi
            }
        },
        shading: {
            get: function() {
                console.error("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead.")
            },
            set: function(e) {
                console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."),
                this.flatShading = e === E
            }
        },
        stencilMask: {
            get: function() {
                return console.warn("THREE." + this.type + ": .stencilMask has been removed. Use .stencilFuncMask instead."),
                this.stencilFuncMask
            },
            set: function(e) {
                console.warn("THREE." + this.type + ": .stencilMask has been removed. Use .stencilFuncMask instead."),
                this.stencilFuncMask = e
            }
        }
    }),
    Object.defineProperties(dc.prototype, {
        metal: {
            get: function() {
                return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),
                !1
            },
            set: function() {
                console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")
            }
        }
    }),
    Object.defineProperties(fc.prototype, {
        transparency: {
            get: function() {
                return console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),
                this.transmission
            },
            set: function(e) {
                console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),
                this.transmission = e
            }
        }
    }),
    Object.defineProperties(Aa.prototype, {
        derivatives: {
            get: function() {
                return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),
                this.extensions.derivatives
            },
            set: function(e) {
                console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),
                this.extensions.derivatives = e
            }
        }
    }),
    Object.assign(Us.prototype, {
        clearTarget: function(e, t, n, r) {
            console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),
            this.setRenderTarget(e),
            this.clear(t, n, r)
        },
        animate: function(e) {
            console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),
            this.setAnimationLoop(e)
        },
        getCurrentRenderTarget: function() {
            return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),
            this.getRenderTarget()
        },
        getMaxAnisotropy: function() {
            return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),
            this.capabilities.getMaxAnisotropy()
        },
        getPrecision: function() {
            return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),
            this.capabilities.precision
        },
        resetGLState: function() {
            return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),
            this.state.reset()
        },
        supportsFloatTextures: function() {
            return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),
            this.extensions.get("OES_texture_float")
        },
        supportsHalfFloatTextures: function() {
            return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),
            this.extensions.get("OES_texture_half_float")
        },
        supportsStandardDerivatives: function() {
            return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),
            this.extensions.get("OES_standard_derivatives")
        },
        supportsCompressedTextureS3TC: function() {
            return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),
            this.extensions.get("WEBGL_compressed_texture_s3tc")
        },
        supportsCompressedTexturePVRTC: function() {
            return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),
            this.extensions.get("WEBGL_compressed_texture_pvrtc")
        },
        supportsBlendMinMax: function() {
            return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),
            this.extensions.get("EXT_blend_minmax")
        },
        supportsVertexTextures: function() {
            return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),
            this.capabilities.vertexTextures
        },
        supportsInstancedArrays: function() {
            return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),
            this.extensions.get("ANGLE_instanced_arrays")
        },
        enableScissorTest: function(e) {
            console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),
            this.setScissorTest(e)
        },
        initMaterial: function() {
            console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")
        },
        addPrePlugin: function() {
            console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")
        },
        addPostPlugin: function() {
            console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")
        },
        updateShadowMap: function() {
            console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")
        },
        setFaceCulling: function() {
            console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")
        },
        allocTextureUnit: function() {
            console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")
        },
        setTexture: function() {
            console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")
        },
        setTexture2D: function() {
            console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")
        },
        setTextureCube: function() {
            console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")
        },
        getActiveMipMapLevel: function() {
            return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),
            this.getActiveMipmapLevel()
        }
    }),
    Object.defineProperties(Us.prototype, {
        shadowMapEnabled: {
            get: function() {
                return this.shadowMap.enabled
            },
            set: function(e) {
                console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),
                this.shadowMap.enabled = e
            }
        },
        shadowMapType: {
            get: function() {
                return this.shadowMap.type
            },
            set: function(e) {
                console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),
                this.shadowMap.type = e
            }
        },
        shadowMapCullFace: {
            get: function() {
                console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")
            },
            set: function() {
                console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")
            }
        },
        context: {
            get: function() {
                return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),
                this.getContext()
            }
        },
        vr: {
            get: function() {
                return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),
                this.xr
            }
        },
        gammaInput: {
            get: function() {
                return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),
                !1
            },
            set: function() {
                console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")
            }
        },
        gammaOutput: {
            get: function() {
                return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),
                !1
            },
            set: function(e) {
                console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),
                this.outputEncoding = !0 === e ? an : rn
            }
        },
        toneMappingWhitePoint: {
            get: function() {
                return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),
                1
            },
            set: function() {
                console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")
            }
        }
    }),
    Object.defineProperties(Os.prototype, {
        cullFace: {
            get: function() {
                console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")
            },
            set: function() {
                console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")
            }
        },
        renderReverseSided: {
            get: function() {
                console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")
            },
            set: function() {
                console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")
            }
        },
        renderSingleSided: {
            get: function() {
                console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")
            },
            set: function() {
                console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")
            }
        }
    }),
    Object.defineProperties(Qn.prototype, {
        wrapS: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),
                this.texture.wrapS
            },
            set: function(e) {
                console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),
                this.texture.wrapS = e
            }
        },
        wrapT: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),
                this.texture.wrapT
            },
            set: function(e) {
                console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),
                this.texture.wrapT = e
            }
        },
        magFilter: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),
                this.texture.magFilter
            },
            set: function(e) {
                console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),
                this.texture.magFilter = e
            }
        },
        minFilter: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),
                this.texture.minFilter
            },
            set: function(e) {
                console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),
                this.texture.minFilter = e
            }
        },
        anisotropy: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),
                this.texture.anisotropy
            },
            set: function(e) {
                console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),
                this.texture.anisotropy = e
            }
        },
        offset: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),
                this.texture.offset
            },
            set: function(e) {
                console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),
                this.texture.offset = e
            }
        },
        repeat: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),
                this.texture.repeat
            },
            set: function(e) {
                console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),
                this.texture.repeat = e
            }
        },
        format: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),
                this.texture.format
            },
            set: function(e) {
                console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),
                this.texture.format = e
            }
        },
        type: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),
                this.texture.type
            },
            set: function(e) {
                console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),
                this.texture.type = e
            }
        },
        generateMipmaps: {
            get: function() {
                return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),
                this.texture.generateMipmaps
            },
            set: function(e) {
                console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),
                this.texture.generateMipmaps = e
            }
        }
    }),
    Object.defineProperties(op.prototype, {
        load: {
            value: function(e) {
                console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");
                var t = this;
                return (new Yh).load(e, (function(e) {
                    t.setBuffer(e)
                }
                )),
                this
            }
        },
        startTime: {
            set: function() {
                console.warn("THREE.Audio: .startTime is now .play( delay ).")
            }
        }
    }),
    pp.prototype.getData = function() {
        return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),
        this.getFrequencyData()
    }
    ,
    La.prototype.updateCubeMap = function(e, t) {
        return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),
        this.update(e, t)
    }
    ;
    var vd = {
        merge: function(e, t, n) {
            var r;
            console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead."),
            t.isMesh && (t.matrixAutoUpdate && t.updateMatrix(),
            r = t.matrix,
            t = t.geometry),
            e.merge(t, r, n)
        },
        center: function(e) {
            return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),
            e.center()
        }
    };
    function yd() {
        console.error("THREE.CanvasRenderer has been removed")
    }
    function bd() {
        console.error("THREE.JSONLoader has been removed.")
    }
    Zn.crossOrigin = void 0,
    Zn.loadTexture = function(e, t, n, r) {
        console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");
        var i = new Xc;
        i.setCrossOrigin(this.crossOrigin);
        var a = i.load(e, n, void 0, r);
        return t && (a.mapping = t),
        a
    }
    ,
    Zn.loadTextureCube = function(e, t, n, r) {
        console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");
        var i = new qc;
        i.setCrossOrigin(this.crossOrigin);
        var a = i.load(e, n, void 0, r);
        return t && (a.mapping = t),
        a
    }
    ,
    Zn.loadCompressedTexture = function() {
        console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")
    }
    ,
    Zn.loadCompressedTextureCube = function() {
        console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")
    }
    ;
    var xd = {
        createMultiMaterialObject: function() {
            console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")
        },
        detach: function() {
            console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")
        },
        attach: function() {
            console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")
        }
    };
    function wd() {
        console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")
    }
    "undefined" !== typeof __THREE_DEVTOOLS__ && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{
        detail: {
            revision: c
        }
    }))
}
, function(e, t, n) {
    "use strict";
    function r() {
        return (r = Object.assign || function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n)
                    Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r])
            }
            return e
        }
        ).apply(this, arguments)
    }
    n.d(t, "a", (function() {
        return r
    }
    ))
}
, function(e, t, n) {
    "use strict";
    function r(e, t) {
        if (!(e instanceof t))
            throw new TypeError("Cannot call a class as a function")
    }
    n.d(t, "a", (function() {
        return r
    }
    ))
}
, function(e, t, n) {
    "use strict";
    function r(e, t) {
        for (var n = 0; n < t.length; n++) {
            var r = t[n];
            r.enumerable = r.enumerable || !1,
            r.configurable = !0,
            "value"in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r)
        }
    }
    function i(e, t, n) {
        return t && r(e.prototype, t),
        n && r(e, n),
        e
    }
    n.d(t, "a", (function() {
        return i
    }
    ))
}
, function(e, t, n) {
    "use strict";
    function r(e, t, n) {
        return t in e ? Object.defineProperty(e, t, {
            value: n,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : e[t] = n,
        e
    }
    n.d(t, "a", (function() {
        return r
    }
    ))
}
, function(e, t, n) {
    "use strict";
    function r(e) {
        return (r = Object.setPrototypeOf ? Object.getPrototypeOf : function(e) {
            return e.__proto__ || Object.getPrototypeOf(e)
        }
        )(e)
    }
    function i() {
        if ("undefined" === typeof Reflect || !Reflect.construct)
            return !1;
        if (Reflect.construct.sham)
            return !1;
        if ("function" === typeof Proxy)
            return !0;
        try {
            return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}
            ))),
            !0
        } catch (e) {
            return !1
        }
    }
    function a(e) {
        return (a = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(e) {
            return typeof e
        }
        : function(e) {
            return e && "function" === typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
        }
        )(e)
    }
    n.d(t, "a", (function() {
        return l
    }
    ));
    var o = n(17);
    function s(e, t) {
        return !t || "object" !== a(t) && "function" !== typeof t ? Object(o.a)(e) : t
    }
    function l(e) {
        return function() {
            var t, n = r(e);
            if (i()) {
                var a = r(this).constructor;
                t = Reflect.construct(n, arguments, a)
            } else
                t = n.apply(this, arguments);
            return s(this, t)
        }
    }
}
, function(e, t, n) {
    "use strict";
    function r(e, t) {
        return (r = Object.setPrototypeOf || function(e, t) {
            return e.__proto__ = t,
            e
        }
        )(e, t)
    }
    function i(e, t) {
        if ("function" !== typeof t && null !== t)
            throw new TypeError("Super expression must either be null or a function");
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: !0,
                configurable: !0
            }
        }),
        t && r(e, t)
    }
    n.d(t, "a", (function() {
        return i
    }
    ))
}
, function(e, t, n) {
    "use strict";
    n.d(t, "a", (function() {
        return a
    }
    ));
    var r = n(5);
    function i(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var r = Object.getOwnPropertySymbols(e);
            t && (r = r.filter((function(t) {
                return Object.getOwnPropertyDescriptor(e, t).enumerable
            }
            ))),
            n.push.apply(n, r)
        }
        return n
    }
    function a(e) {
        for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {};
            t % 2 ? i(Object(n), !0).forEach((function(t) {
                Object(r.a)(e, t, n[t])
            }
            )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : i(Object(n)).forEach((function(t) {
                Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
            }
            ))
        }
        return e
    }
}
, function(e, t, n) {
    "use strict";
    function r(e, t) {
        if (null == e)
            return {};
        var n, r, i = {}, a = Object.keys(e);
        for (r = 0; r < a.length; r++)
            n = a[r],
            t.indexOf(n) >= 0 || (i[n] = e[n]);
        return i
    }
    n.d(t, "a", (function() {
        return r
    }
    ))
}
, function(e, t, n) {
    "use strict";
    function r(e, t) {
        return (r = Object.setPrototypeOf || function(e, t) {
            return e.__proto__ = t,
            e
        }
        )(e, t)
    }
    function i(e, t) {
        e.prototype = Object.create(t.prototype),
        e.prototype.constructor = e,
        r(e, t)
    }
    n.d(t, "a", (function() {
        return i
    }
    ))
}
, function(e, t, n) {
    e.exports = n(55)()
}
, , function(e, t, n) {
    "use strict";
    t.a = function(e, t) {}
}
, function(e, t, n) {
    e.exports = n(54)
}
, function(e, t, n) {
    "use strict";
    var r = n(57)
      , i = {
        childContextTypes: !0,
        contextType: !0,
        contextTypes: !0,
        defaultProps: !0,
        displayName: !0,
        getDefaultProps: !0,
        getDerivedStateFromError: !0,
        getDerivedStateFromProps: !0,
        mixins: !0,
        propTypes: !0,
        type: !0
    }
      , a = {
        name: !0,
        length: !0,
        prototype: !0,
        caller: !0,
        callee: !0,
        arguments: !0,
        arity: !0
    }
      , o = {
        $$typeof: !0,
        compare: !0,
        defaultProps: !0,
        displayName: !0,
        propTypes: !0,
        type: !0
    }
      , s = {};
    function l(e) {
        return r.isMemo(e) ? o : s[e.$$typeof] || i
    }
    s[r.ForwardRef] = {
        $$typeof: !0,
        render: !0,
        defaultProps: !0,
        displayName: !0,
        propTypes: !0
    },
    s[r.Memo] = o;
    var u = Object.defineProperty
      , c = Object.getOwnPropertyNames
      , h = Object.getOwnPropertySymbols
      , p = Object.getOwnPropertyDescriptor
      , f = Object.getPrototypeOf
      , d = Object.prototype;
    e.exports = function e(t, n, r) {
        if ("string" !== typeof n) {
            if (d) {
                var i = f(n);
                i && i !== d && e(t, i, r)
            }
            var o = c(n);
            h && (o = o.concat(h(n)));
            for (var s = l(t), m = l(n), g = 0; g < o.length; ++g) {
                var v = o[g];
                if (!a[v] && (!r || !r[v]) && (!m || !m[v]) && (!s || !s[v])) {
                    var y = p(n, v);
                    try {
                        u(t, v, y)
                    } catch (b) {}
                }
            }
        }
        return t
    }
}
, function(e, t, n) {
    "use strict";
    function r(e, t, n) {
        return t in e ? Object.defineProperty(e, t, {
            value: n,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : e[t] = n,
        e
    }
    n.d(t, "a", (function() {
        return r
    }
    ))
}
, function(e, t, n) {
    "use strict";
    function r(e) {
        if (void 0 === e)
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return e
    }
    n.d(t, "a", (function() {
        return r
    }
    ))
}
, , , function(e, t, n) {
    "use strict";
    function r(e, t, n, r, i, a, o) {
        try {
            var s = e[a](o)
              , l = s.value
        } catch (u) {
            return void n(u)
        }
        s.done ? t(l) : Promise.resolve(l).then(r, i)
    }
    function i(e) {
        return function() {
            var t = this
              , n = arguments;
            return new Promise((function(i, a) {
                var o = e.apply(t, n);
                function s(e) {
                    r(o, i, a, s, l, "next", e)
                }
                function l(e) {
                    r(o, i, a, s, l, "throw", e)
                }
                s(void 0)
            }
            ))
        }
    }
    n.d(t, "a", (function() {
        return i
    }
    ))
}
, function(e, t, n) {
    "use strict";
    !function e() {
        if ("undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE) {
            0;
            try {
                __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)
            } catch (t) {
                console.error(t)
            }
        }
    }(),
    e.exports = n(49)
}
, function(e, t, n) {
    var r;
    !function(t, n) {
        "use strict";
        "object" === typeof e.exports ? e.exports = t.document ? n(t, !0) : function(e) {
            if (!e.document)
                throw new Error("jQuery requires a window with a document");
            return n(e)
        }
        : n(t)
    }("undefined" !== typeof window ? window : this, (function(n, i) {
        "use strict";
        var a = []
          , o = Object.getPrototypeOf
          , s = a.slice
          , l = a.flat ? function(e) {
            return a.flat.call(e)
        }
        : function(e) {
            return a.concat.apply([], e)
        }
          , u = a.push
          , c = a.indexOf
          , h = {}
          , p = h.toString
          , f = h.hasOwnProperty
          , d = f.toString
          , m = d.call(Object)
          , g = {}
          , v = function(e) {
            return "function" === typeof e && "number" !== typeof e.nodeType && "function" !== typeof e.item
        }
          , y = function(e) {
            return null != e && e === e.window
        }
          , b = n.document
          , x = {
            type: !0,
            src: !0,
            nonce: !0,
            noModule: !0
        };
        function w(e, t, n) {
            var r, i, a = (n = n || b).createElement("script");
            if (a.text = e,
            t)
                for (r in x)
                    (i = t[r] || t.getAttribute && t.getAttribute(r)) && a.setAttribute(r, i);
            n.head.appendChild(a).parentNode.removeChild(a)
        }
        function _(e) {
            return null == e ? e + "" : "object" === typeof e || "function" === typeof e ? h[p.call(e)] || "object" : typeof e
        }
        var S = function e(t, n) {
            return new e.fn.init(t,n)
        };
        function E(e) {
            var t = !!e && "length"in e && e.length
              , n = _(e);
            return !v(e) && !y(e) && ("array" === n || 0 === t || "number" === typeof t && t > 0 && t - 1 in e)
        }
        S.fn = S.prototype = {
            jquery: "3.6.0",
            constructor: S,
            length: 0,
            toArray: function() {
                return s.call(this)
            },
            get: function(e) {
                return null == e ? s.call(this) : e < 0 ? this[e + this.length] : this[e]
            },
            pushStack: function(e) {
                var t = S.merge(this.constructor(), e);
                return t.prevObject = this,
                t
            },
            each: function(e) {
                return S.each(this, e)
            },
            map: function(e) {
                return this.pushStack(S.map(this, (function(t, n) {
                    return e.call(t, n, t)
                }
                )))
            },
            slice: function() {
                return this.pushStack(s.apply(this, arguments))
            },
            first: function() {
                return this.eq(0)
            },
            last: function() {
                return this.eq(-1)
            },
            even: function() {
                return this.pushStack(S.grep(this, (function(e, t) {
                    return (t + 1) % 2
                }
                )))
            },
            odd: function() {
                return this.pushStack(S.grep(this, (function(e, t) {
                    return t % 2
                }
                )))
            },
            eq: function(e) {
                var t = this.length
                  , n = +e + (e < 0 ? t : 0);
                return this.pushStack(n >= 0 && n < t ? [this[n]] : [])
            },
            end: function() {
                return this.prevObject || this.constructor()
            },
            push: u,
            sort: a.sort,
            splice: a.splice
        },
        S.extend = S.fn.extend = function() {
            var e, t, n, r, i, a, o = arguments[0] || {}, s = 1, l = arguments.length, u = !1;
            for ("boolean" === typeof o && (u = o,
            o = arguments[s] || {},
            s++),
            "object" === typeof o || v(o) || (o = {}),
            s === l && (o = this,
            s--); s < l; s++)
                if (null != (e = arguments[s]))
                    for (t in e)
                        r = e[t],
                        "__proto__" !== t && o !== r && (u && r && (S.isPlainObject(r) || (i = Array.isArray(r))) ? (n = o[t],
                        a = i && !Array.isArray(n) ? [] : i || S.isPlainObject(n) ? n : {},
                        i = !1,
                        o[t] = S.extend(u, a, r)) : void 0 !== r && (o[t] = r));
            return o
        }
        ,
        S.extend({
            expando: "jQuery" + ("3.6.0" + Math.random()).replace(/\D/g, ""),
            isReady: !0,
            error: function(e) {
                throw new Error(e)
            },
            noop: function() {},
            isPlainObject: function(e) {
                var t, n;
                return !(!e || "[object Object]" !== p.call(e)) && (!(t = o(e)) || "function" === typeof (n = f.call(t, "constructor") && t.constructor) && d.call(n) === m)
            },
            isEmptyObject: function(e) {
                var t;
                for (t in e)
                    return !1;
                return !0
            },
            globalEval: function(e, t, n) {
                w(e, {
                    nonce: t && t.nonce
                }, n)
            },
            each: function(e, t) {
                var n, r = 0;
                if (E(e))
                    for (n = e.length; r < n && !1 !== t.call(e[r], r, e[r]); r++)
                        ;
                else
                    for (r in e)
                        if (!1 === t.call(e[r], r, e[r]))
                            break;
                return e
            },
            makeArray: function(e, t) {
                var n = t || [];
                return null != e && (E(Object(e)) ? S.merge(n, "string" === typeof e ? [e] : e) : u.call(n, e)),
                n
            },
            inArray: function(e, t, n) {
                return null == t ? -1 : c.call(t, e, n)
            },
            merge: function(e, t) {
                for (var n = +t.length, r = 0, i = e.length; r < n; r++)
                    e[i++] = t[r];
                return e.length = i,
                e
            },
            grep: function(e, t, n) {
                for (var r = [], i = 0, a = e.length, o = !n; i < a; i++)
                    !t(e[i], i) !== o && r.push(e[i]);
                return r
            },
            map: function(e, t, n) {
                var r, i, a = 0, o = [];
                if (E(e))
                    for (r = e.length; a < r; a++)
                        null != (i = t(e[a], a, n)) && o.push(i);
                else
                    for (a in e)
                        null != (i = t(e[a], a, n)) && o.push(i);
                return l(o)
            },
            guid: 1,
            support: g
        }),
        "function" === typeof Symbol && (S.fn[Symbol.iterator] = a[Symbol.iterator]),
        S.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), (function(e, t) {
            h["[object " + t + "]"] = t.toLowerCase()
        }
        ));
        var M = function(e) {
            var t, n, r, i, a, o, s, l, u, c, h, p, f, d, m, g, v, y, b, x = "sizzle" + 1 * new Date, w = e.document, _ = 0, S = 0, E = le(), M = le(), T = le(), A = le(), P = function(e, t) {
                return e === t && (h = !0),
                0
            }, C = {}.hasOwnProperty, L = [], R = L.pop, k = L.push, D = L.push, I = L.slice, O = function(e, t) {
                for (var n = 0, r = e.length; n < r; n++)
                    if (e[n] === t)
                        return n;
                return -1
            }, F = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped", N = "[\\x20\\t\\r\\n\\f]", B = "(?:\\\\[\\da-fA-F]{1,6}" + N + "?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+", z = "\\[" + N + "*(" + B + ")(?:" + N + "*([*^$|!~]?=)" + N + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + B + "))|)" + N + "*\\]", G = ":(" + B + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + z + ")*)|.*)\\)|)", H = new RegExp(N + "+","g"), V = new RegExp("^" + N + "+|((?:^|[^\\\\])(?:\\\\.)*)" + N + "+$","g"), j = new RegExp("^" + N + "*," + N + "*"), U = new RegExp("^" + N + "*([>+~]|" + N + ")" + N + "*"), W = new RegExp(N + "|>"), q = new RegExp(G), X = new RegExp("^" + B + "$"), Y = {
                ID: new RegExp("^#(" + B + ")"),
                CLASS: new RegExp("^\\.(" + B + ")"),
                TAG: new RegExp("^(" + B + "|[*])"),
                ATTR: new RegExp("^" + z),
                PSEUDO: new RegExp("^" + G),
                CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + N + "*(even|odd|(([+-]|)(\\d*)n|)" + N + "*(?:([+-]|)" + N + "*(\\d+)|))" + N + "*\\)|)","i"),
                bool: new RegExp("^(?:" + F + ")$","i"),
                needsContext: new RegExp("^" + N + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + N + "*((?:-\\d)?\\d*)" + N + "*\\)|)(?=[^-]|$)","i")
            }, Z = /HTML$/i, $ = /^(?:input|select|textarea|button)$/i, J = /^h\d$/i, K = /^[^{]+\{\s*\[native \w/, Q = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, ee = /[+~]/, te = new RegExp("\\\\[\\da-fA-F]{1,6}" + N + "?|\\\\([^\\r\\n\\f])","g"), ne = function(e, t) {
                var n = "0x" + e.slice(1) - 65536;
                return t || (n < 0 ? String.fromCharCode(n + 65536) : String.fromCharCode(n >> 10 | 55296, 1023 & n | 56320))
            }, re = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g, ie = function(e, t) {
                return t ? "\0" === e ? "\ufffd" : e.slice(0, -1) + "\\" + e.charCodeAt(e.length - 1).toString(16) + " " : "\\" + e
            }, ae = function() {
                p()
            }, oe = xe((function(e) {
                return !0 === e.disabled && "fieldset" === e.nodeName.toLowerCase()
            }
            ), {
                dir: "parentNode",
                next: "legend"
            });
            try {
                D.apply(L = I.call(w.childNodes), w.childNodes),
                L[w.childNodes.length].nodeType
            } catch (Me) {
                D = {
                    apply: L.length ? function(e, t) {
                        k.apply(e, I.call(t))
                    }
                    : function(e, t) {
                        for (var n = e.length, r = 0; e[n++] = t[r++]; )
                            ;
                        e.length = n - 1
                    }
                }
            }
            function se(e, t, r, i) {
                var a, s, u, c, h, d, v, y = t && t.ownerDocument, w = t ? t.nodeType : 9;
                if (r = r || [],
                "string" !== typeof e || !e || 1 !== w && 9 !== w && 11 !== w)
                    return r;
                if (!i && (p(t),
                t = t || f,
                m)) {
                    if (11 !== w && (h = Q.exec(e)))
                        if (a = h[1]) {
                            if (9 === w) {
                                if (!(u = t.getElementById(a)))
                                    return r;
                                if (u.id === a)
                                    return r.push(u),
                                    r
                            } else if (y && (u = y.getElementById(a)) && b(t, u) && u.id === a)
                                return r.push(u),
                                r
                        } else {
                            if (h[2])
                                return D.apply(r, t.getElementsByTagName(e)),
                                r;
                            if ((a = h[3]) && n.getElementsByClassName && t.getElementsByClassName)
                                return D.apply(r, t.getElementsByClassName(a)),
                                r
                        }
                    if (n.qsa && !A[e + " "] && (!g || !g.test(e)) && (1 !== w || "object" !== t.nodeName.toLowerCase())) {
                        if (v = e,
                        y = t,
                        1 === w && (W.test(e) || U.test(e))) {
                            for ((y = ee.test(e) && ve(t.parentNode) || t) === t && n.scope || ((c = t.getAttribute("id")) ? c = c.replace(re, ie) : t.setAttribute("id", c = x)),
                            s = (d = o(e)).length; s--; )
                                d[s] = (c ? "#" + c : ":scope") + " " + be(d[s]);
                            v = d.join(",")
                        }
                        try {
                            return D.apply(r, y.querySelectorAll(v)),
                            r
                        } catch (_) {
                            A(e, !0)
                        } finally {
                            c === x && t.removeAttribute("id")
                        }
                    }
                }
                return l(e.replace(V, "$1"), t, r, i)
            }
            function le() {
                var e = [];
                return function t(n, i) {
                    return e.push(n + " ") > r.cacheLength && delete t[e.shift()],
                    t[n + " "] = i
                }
            }
            function ue(e) {
                return e[x] = !0,
                e
            }
            function ce(e) {
                var t = f.createElement("fieldset");
                try {
                    return !!e(t)
                } catch (Me) {
                    return !1
                } finally {
                    t.parentNode && t.parentNode.removeChild(t),
                    t = null
                }
            }
            function he(e, t) {
                for (var n = e.split("|"), i = n.length; i--; )
                    r.attrHandle[n[i]] = t
            }
            function pe(e, t) {
                var n = t && e
                  , r = n && 1 === e.nodeType && 1 === t.nodeType && e.sourceIndex - t.sourceIndex;
                if (r)
                    return r;
                if (n)
                    for (; n = n.nextSibling; )
                        if (n === t)
                            return -1;
                return e ? 1 : -1
            }
            function fe(e) {
                return function(t) {
                    return "input" === t.nodeName.toLowerCase() && t.type === e
                }
            }
            function de(e) {
                return function(t) {
                    var n = t.nodeName.toLowerCase();
                    return ("input" === n || "button" === n) && t.type === e
                }
            }
            function me(e) {
                return function(t) {
                    return "form"in t ? t.parentNode && !1 === t.disabled ? "label"in t ? "label"in t.parentNode ? t.parentNode.disabled === e : t.disabled === e : t.isDisabled === e || t.isDisabled !== !e && oe(t) === e : t.disabled === e : "label"in t && t.disabled === e
                }
            }
            function ge(e) {
                return ue((function(t) {
                    return t = +t,
                    ue((function(n, r) {
                        for (var i, a = e([], n.length, t), o = a.length; o--; )
                            n[i = a[o]] && (n[i] = !(r[i] = n[i]))
                    }
                    ))
                }
                ))
            }
            function ve(e) {
                return e && "undefined" !== typeof e.getElementsByTagName && e
            }
            for (t in n = se.support = {},
            a = se.isXML = function(e) {
                var t = e && e.namespaceURI
                  , n = e && (e.ownerDocument || e).documentElement;
                return !Z.test(t || n && n.nodeName || "HTML")
            }
            ,
            p = se.setDocument = function(e) {
                var t, i, o = e ? e.ownerDocument || e : w;
                return o != f && 9 === o.nodeType && o.documentElement ? (d = (f = o).documentElement,
                m = !a(f),
                w != f && (i = f.defaultView) && i.top !== i && (i.addEventListener ? i.addEventListener("unload", ae, !1) : i.attachEvent && i.attachEvent("onunload", ae)),
                n.scope = ce((function(e) {
                    return d.appendChild(e).appendChild(f.createElement("div")),
                    "undefined" !== typeof e.querySelectorAll && !e.querySelectorAll(":scope fieldset div").length
                }
                )),
                n.attributes = ce((function(e) {
                    return e.className = "i",
                    !e.getAttribute("className")
                }
                )),
                n.getElementsByTagName = ce((function(e) {
                    return e.appendChild(f.createComment("")),
                    !e.getElementsByTagName("*").length
                }
                )),
                n.getElementsByClassName = K.test(f.getElementsByClassName),
                n.getById = ce((function(e) {
                    return d.appendChild(e).id = x,
                    !f.getElementsByName || !f.getElementsByName(x).length
                }
                )),
                n.getById ? (r.filter.ID = function(e) {
                    var t = e.replace(te, ne);
                    return function(e) {
                        return e.getAttribute("id") === t
                    }
                }
                ,
                r.find.ID = function(e, t) {
                    if ("undefined" !== typeof t.getElementById && m) {
                        var n = t.getElementById(e);
                        return n ? [n] : []
                    }
                }
                ) : (r.filter.ID = function(e) {
                    var t = e.replace(te, ne);
                    return function(e) {
                        var n = "undefined" !== typeof e.getAttributeNode && e.getAttributeNode("id");
                        return n && n.value === t
                    }
                }
                ,
                r.find.ID = function(e, t) {
                    if ("undefined" !== typeof t.getElementById && m) {
                        var n, r, i, a = t.getElementById(e);
                        if (a) {
                            if ((n = a.getAttributeNode("id")) && n.value === e)
                                return [a];
                            for (i = t.getElementsByName(e),
                            r = 0; a = i[r++]; )
                                if ((n = a.getAttributeNode("id")) && n.value === e)
                                    return [a]
                        }
                        return []
                    }
                }
                ),
                r.find.TAG = n.getElementsByTagName ? function(e, t) {
                    return "undefined" !== typeof t.getElementsByTagName ? t.getElementsByTagName(e) : n.qsa ? t.querySelectorAll(e) : void 0
                }
                : function(e, t) {
                    var n, r = [], i = 0, a = t.getElementsByTagName(e);
                    if ("*" === e) {
                        for (; n = a[i++]; )
                            1 === n.nodeType && r.push(n);
                        return r
                    }
                    return a
                }
                ,
                r.find.CLASS = n.getElementsByClassName && function(e, t) {
                    if ("undefined" !== typeof t.getElementsByClassName && m)
                        return t.getElementsByClassName(e)
                }
                ,
                v = [],
                g = [],
                (n.qsa = K.test(f.querySelectorAll)) && (ce((function(e) {
                    var t;
                    d.appendChild(e).innerHTML = "<a id='" + x + "'></a><select id='" + x + "-\r\\' msallowcapture=''><option selected=''></option></select>",
                    e.querySelectorAll("[msallowcapture^='']").length && g.push("[*^$]=" + N + "*(?:''|\"\")"),
                    e.querySelectorAll("[selected]").length || g.push("\\[" + N + "*(?:value|" + F + ")"),
                    e.querySelectorAll("[id~=" + x + "-]").length || g.push("~="),
                    (t = f.createElement("input")).setAttribute("name", ""),
                    e.appendChild(t),
                    e.querySelectorAll("[name='']").length || g.push("\\[" + N + "*name" + N + "*=" + N + "*(?:''|\"\")"),
                    e.querySelectorAll(":checked").length || g.push(":checked"),
                    e.querySelectorAll("a#" + x + "+*").length || g.push(".#.+[+~]"),
                    e.querySelectorAll("\\\f"),
                    g.push("[\\r\\n\\f]")
                }
                )),
                ce((function(e) {
                    e.innerHTML = "<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";
                    var t = f.createElement("input");
                    t.setAttribute("type", "hidden"),
                    e.appendChild(t).setAttribute("name", "D"),
                    e.querySelectorAll("[name=d]").length && g.push("name" + N + "*[*^$|!~]?="),
                    2 !== e.querySelectorAll(":enabled").length && g.push(":enabled", ":disabled"),
                    d.appendChild(e).disabled = !0,
                    2 !== e.querySelectorAll(":disabled").length && g.push(":enabled", ":disabled"),
                    e.querySelectorAll("*,:x"),
                    g.push(",.*:")
                }
                ))),
                (n.matchesSelector = K.test(y = d.matches || d.webkitMatchesSelector || d.mozMatchesSelector || d.oMatchesSelector || d.msMatchesSelector)) && ce((function(e) {
                    n.disconnectedMatch = y.call(e, "*"),
                    y.call(e, "[s!='']:x"),
                    v.push("!=", G)
                }
                )),
                g = g.length && new RegExp(g.join("|")),
                v = v.length && new RegExp(v.join("|")),
                t = K.test(d.compareDocumentPosition),
                b = t || K.test(d.contains) ? function(e, t) {
                    var n = 9 === e.nodeType ? e.documentElement : e
                      , r = t && t.parentNode;
                    return e === r || !(!r || 1 !== r.nodeType || !(n.contains ? n.contains(r) : e.compareDocumentPosition && 16 & e.compareDocumentPosition(r)))
                }
                : function(e, t) {
                    if (t)
                        for (; t = t.parentNode; )
                            if (t === e)
                                return !0;
                    return !1
                }
                ,
                P = t ? function(e, t) {
                    if (e === t)
                        return h = !0,
                        0;
                    var r = !e.compareDocumentPosition - !t.compareDocumentPosition;
                    return r || (1 & (r = (e.ownerDocument || e) == (t.ownerDocument || t) ? e.compareDocumentPosition(t) : 1) || !n.sortDetached && t.compareDocumentPosition(e) === r ? e == f || e.ownerDocument == w && b(w, e) ? -1 : t == f || t.ownerDocument == w && b(w, t) ? 1 : c ? O(c, e) - O(c, t) : 0 : 4 & r ? -1 : 1)
                }
                : function(e, t) {
                    if (e === t)
                        return h = !0,
                        0;
                    var n, r = 0, i = e.parentNode, a = t.parentNode, o = [e], s = [t];
                    if (!i || !a)
                        return e == f ? -1 : t == f ? 1 : i ? -1 : a ? 1 : c ? O(c, e) - O(c, t) : 0;
                    if (i === a)
                        return pe(e, t);
                    for (n = e; n = n.parentNode; )
                        o.unshift(n);
                    for (n = t; n = n.parentNode; )
                        s.unshift(n);
                    for (; o[r] === s[r]; )
                        r++;
                    return r ? pe(o[r], s[r]) : o[r] == w ? -1 : s[r] == w ? 1 : 0
                }
                ,
                f) : f
            }
            ,
            se.matches = function(e, t) {
                return se(e, null, null, t)
            }
            ,
            se.matchesSelector = function(e, t) {
                if (p(e),
                n.matchesSelector && m && !A[t + " "] && (!v || !v.test(t)) && (!g || !g.test(t)))
                    try {
                        var r = y.call(e, t);
                        if (r || n.disconnectedMatch || e.document && 11 !== e.document.nodeType)
                            return r
                    } catch (Me) {
                        A(t, !0)
                    }
                return se(t, f, null, [e]).length > 0
            }
            ,
            se.contains = function(e, t) {
                return (e.ownerDocument || e) != f && p(e),
                b(e, t)
            }
            ,
            se.attr = function(e, t) {
                (e.ownerDocument || e) != f && p(e);
                var i = r.attrHandle[t.toLowerCase()]
                  , a = i && C.call(r.attrHandle, t.toLowerCase()) ? i(e, t, !m) : void 0;
                return void 0 !== a ? a : n.attributes || !m ? e.getAttribute(t) : (a = e.getAttributeNode(t)) && a.specified ? a.value : null
            }
            ,
            se.escape = function(e) {
                return (e + "").replace(re, ie)
            }
            ,
            se.error = function(e) {
                throw new Error("Syntax error, unrecognized expression: " + e)
            }
            ,
            se.uniqueSort = function(e) {
                var t, r = [], i = 0, a = 0;
                if (h = !n.detectDuplicates,
                c = !n.sortStable && e.slice(0),
                e.sort(P),
                h) {
                    for (; t = e[a++]; )
                        t === e[a] && (i = r.push(a));
                    for (; i--; )
                        e.splice(r[i], 1)
                }
                return c = null,
                e
            }
            ,
            i = se.getText = function(e) {
                var t, n = "", r = 0, a = e.nodeType;
                if (a) {
                    if (1 === a || 9 === a || 11 === a) {
                        if ("string" === typeof e.textContent)
                            return e.textContent;
                        for (e = e.firstChild; e; e = e.nextSibling)
                            n += i(e)
                    } else if (3 === a || 4 === a)
                        return e.nodeValue
                } else
                    for (; t = e[r++]; )
                        n += i(t);
                return n
            }
            ,
            (r = se.selectors = {
                cacheLength: 50,
                createPseudo: ue,
                match: Y,
                attrHandle: {},
                find: {},
                relative: {
                    ">": {
                        dir: "parentNode",
                        first: !0
                    },
                    " ": {
                        dir: "parentNode"
                    },
                    "+": {
                        dir: "previousSibling",
                        first: !0
                    },
                    "~": {
                        dir: "previousSibling"
                    }
                },
                preFilter: {
                    ATTR: function(e) {
                        return e[1] = e[1].replace(te, ne),
                        e[3] = (e[3] || e[4] || e[5] || "").replace(te, ne),
                        "~=" === e[2] && (e[3] = " " + e[3] + " "),
                        e.slice(0, 4)
                    },
                    CHILD: function(e) {
                        return e[1] = e[1].toLowerCase(),
                        "nth" === e[1].slice(0, 3) ? (e[3] || se.error(e[0]),
                        e[4] = +(e[4] ? e[5] + (e[6] || 1) : 2 * ("even" === e[3] || "odd" === e[3])),
                        e[5] = +(e[7] + e[8] || "odd" === e[3])) : e[3] && se.error(e[0]),
                        e
                    },
                    PSEUDO: function(e) {
                        var t, n = !e[6] && e[2];
                        return Y.CHILD.test(e[0]) ? null : (e[3] ? e[2] = e[4] || e[5] || "" : n && q.test(n) && (t = o(n, !0)) && (t = n.indexOf(")", n.length - t) - n.length) && (e[0] = e[0].slice(0, t),
                        e[2] = n.slice(0, t)),
                        e.slice(0, 3))
                    }
                },
                filter: {
                    TAG: function(e) {
                        var t = e.replace(te, ne).toLowerCase();
                        return "*" === e ? function() {
                            return !0
                        }
                        : function(e) {
                            return e.nodeName && e.nodeName.toLowerCase() === t
                        }
                    },
                    CLASS: function(e) {
                        var t = E[e + " "];
                        return t || (t = new RegExp("(^|" + N + ")" + e + "(" + N + "|$)")) && E(e, (function(e) {
                            return t.test("string" === typeof e.className && e.className || "undefined" !== typeof e.getAttribute && e.getAttribute("class") || "")
                        }
                        ))
                    },
                    ATTR: function(e, t, n) {
                        return function(r) {
                            var i = se.attr(r, e);
                            return null == i ? "!=" === t : !t || (i += "",
                            "=" === t ? i === n : "!=" === t ? i !== n : "^=" === t ? n && 0 === i.indexOf(n) : "*=" === t ? n && i.indexOf(n) > -1 : "$=" === t ? n && i.slice(-n.length) === n : "~=" === t ? (" " + i.replace(H, " ") + " ").indexOf(n) > -1 : "|=" === t && (i === n || i.slice(0, n.length + 1) === n + "-"))
                        }
                    },
                    CHILD: function(e, t, n, r, i) {
                        var a = "nth" !== e.slice(0, 3)
                          , o = "last" !== e.slice(-4)
                          , s = "of-type" === t;
                        return 1 === r && 0 === i ? function(e) {
                            return !!e.parentNode
                        }
                        : function(t, n, l) {
                            var u, c, h, p, f, d, m = a !== o ? "nextSibling" : "previousSibling", g = t.parentNode, v = s && t.nodeName.toLowerCase(), y = !l && !s, b = !1;
                            if (g) {
                                if (a) {
                                    for (; m; ) {
                                        for (p = t; p = p[m]; )
                                            if (s ? p.nodeName.toLowerCase() === v : 1 === p.nodeType)
                                                return !1;
                                        d = m = "only" === e && !d && "nextSibling"
                                    }
                                    return !0
                                }
                                if (d = [o ? g.firstChild : g.lastChild],
                                o && y) {
                                    for (b = (f = (u = (c = (h = (p = g)[x] || (p[x] = {}))[p.uniqueID] || (h[p.uniqueID] = {}))[e] || [])[0] === _ && u[1]) && u[2],
                                    p = f && g.childNodes[f]; p = ++f && p && p[m] || (b = f = 0) || d.pop(); )
                                        if (1 === p.nodeType && ++b && p === t) {
                                            c[e] = [_, f, b];
                                            break
                                        }
                                } else if (y && (b = f = (u = (c = (h = (p = t)[x] || (p[x] = {}))[p.uniqueID] || (h[p.uniqueID] = {}))[e] || [])[0] === _ && u[1]),
                                !1 === b)
                                    for (; (p = ++f && p && p[m] || (b = f = 0) || d.pop()) && ((s ? p.nodeName.toLowerCase() !== v : 1 !== p.nodeType) || !++b || (y && ((c = (h = p[x] || (p[x] = {}))[p.uniqueID] || (h[p.uniqueID] = {}))[e] = [_, b]),
                                    p !== t)); )
                                        ;
                                return (b -= i) === r || b % r === 0 && b / r >= 0
                            }
                        }
                    },
                    PSEUDO: function(e, t) {
                        var n, i = r.pseudos[e] || r.setFilters[e.toLowerCase()] || se.error("unsupported pseudo: " + e);
                        return i[x] ? i(t) : i.length > 1 ? (n = [e, e, "", t],
                        r.setFilters.hasOwnProperty(e.toLowerCase()) ? ue((function(e, n) {
                            for (var r, a = i(e, t), o = a.length; o--; )
                                e[r = O(e, a[o])] = !(n[r] = a[o])
                        }
                        )) : function(e) {
                            return i(e, 0, n)
                        }
                        ) : i
                    }
                },
                pseudos: {
                    not: ue((function(e) {
                        var t = []
                          , n = []
                          , r = s(e.replace(V, "$1"));
                        return r[x] ? ue((function(e, t, n, i) {
                            for (var a, o = r(e, null, i, []), s = e.length; s--; )
                                (a = o[s]) && (e[s] = !(t[s] = a))
                        }
                        )) : function(e, i, a) {
                            return t[0] = e,
                            r(t, null, a, n),
                            t[0] = null,
                            !n.pop()
                        }
                    }
                    )),
                    has: ue((function(e) {
                        return function(t) {
                            return se(e, t).length > 0
                        }
                    }
                    )),
                    contains: ue((function(e) {
                        return e = e.replace(te, ne),
                        function(t) {
                            return (t.textContent || i(t)).indexOf(e) > -1
                        }
                    }
                    )),
                    lang: ue((function(e) {
                        return X.test(e || "") || se.error("unsupported lang: " + e),
                        e = e.replace(te, ne).toLowerCase(),
                        function(t) {
                            var n;
                            do {
                                if (n = m ? t.lang : t.getAttribute("xml:lang") || t.getAttribute("lang"))
                                    return (n = n.toLowerCase()) === e || 0 === n.indexOf(e + "-")
                            } while ((t = t.parentNode) && 1 === t.nodeType);
                            return !1
                        }
                    }
                    )),
                    target: function(t) {
                        var n = e.location && e.location.hash;
                        return n && n.slice(1) === t.id
                    },
                    root: function(e) {
                        return e === d
                    },
                    focus: function(e) {
                        return e === f.activeElement && (!f.hasFocus || f.hasFocus()) && !!(e.type || e.href || ~e.tabIndex)
                    },
                    enabled: me(!1),
                    disabled: me(!0),
                    checked: function(e) {
                        var t = e.nodeName.toLowerCase();
                        return "input" === t && !!e.checked || "option" === t && !!e.selected
                    },
                    selected: function(e) {
                        return e.parentNode && e.parentNode.selectedIndex,
                        !0 === e.selected
                    },
                    empty: function(e) {
                        for (e = e.firstChild; e; e = e.nextSibling)
                            if (e.nodeType < 6)
                                return !1;
                        return !0
                    },
                    parent: function(e) {
                        return !r.pseudos.empty(e)
                    },
                    header: function(e) {
                        return J.test(e.nodeName)
                    },
                    input: function(e) {
                        return $.test(e.nodeName)
                    },
                    button: function(e) {
                        var t = e.nodeName.toLowerCase();
                        return "input" === t && "button" === e.type || "button" === t
                    },
                    text: function(e) {
                        var t;
                        return "input" === e.nodeName.toLowerCase() && "text" === e.type && (null == (t = e.getAttribute("type")) || "text" === t.toLowerCase())
                    },
                    first: ge((function() {
                        return [0]
                    }
                    )),
                    last: ge((function(e, t) {
                        return [t - 1]
                    }
                    )),
                    eq: ge((function(e, t, n) {
                        return [n < 0 ? n + t : n]
                    }
                    )),
                    even: ge((function(e, t) {
                        for (var n = 0; n < t; n += 2)
                            e.push(n);
                        return e
                    }
                    )),
                    odd: ge((function(e, t) {
                        for (var n = 1; n < t; n += 2)
                            e.push(n);
                        return e
                    }
                    )),
                    lt: ge((function(e, t, n) {
                        for (var r = n < 0 ? n + t : n > t ? t : n; --r >= 0; )
                            e.push(r);
                        return e
                    }
                    )),
                    gt: ge((function(e, t, n) {
                        for (var r = n < 0 ? n + t : n; ++r < t; )
                            e.push(r);
                        return e
                    }
                    ))
                }
            }).pseudos.nth = r.pseudos.eq,
            {
                radio: !0,
                checkbox: !0,
                file: !0,
                password: !0,
                image: !0
            })
                r.pseudos[t] = fe(t);
            for (t in {
                submit: !0,
                reset: !0
            })
                r.pseudos[t] = de(t);
            function ye() {}
            function be(e) {
                for (var t = 0, n = e.length, r = ""; t < n; t++)
                    r += e[t].value;
                return r
            }
            function xe(e, t, n) {
                var r = t.dir
                  , i = t.next
                  , a = i || r
                  , o = n && "parentNode" === a
                  , s = S++;
                return t.first ? function(t, n, i) {
                    for (; t = t[r]; )
                        if (1 === t.nodeType || o)
                            return e(t, n, i);
                    return !1
                }
                : function(t, n, l) {
                    var u, c, h, p = [_, s];
                    if (l) {
                        for (; t = t[r]; )
                            if ((1 === t.nodeType || o) && e(t, n, l))
                                return !0
                    } else
                        for (; t = t[r]; )
                            if (1 === t.nodeType || o)
                                if (c = (h = t[x] || (t[x] = {}))[t.uniqueID] || (h[t.uniqueID] = {}),
                                i && i === t.nodeName.toLowerCase())
                                    t = t[r] || t;
                                else {
                                    if ((u = c[a]) && u[0] === _ && u[1] === s)
                                        return p[2] = u[2];
                                    if (c[a] = p,
                                    p[2] = e(t, n, l))
                                        return !0
                                }
                    return !1
                }
            }
            function we(e) {
                return e.length > 1 ? function(t, n, r) {
                    for (var i = e.length; i--; )
                        if (!e[i](t, n, r))
                            return !1;
                    return !0
                }
                : e[0]
            }
            function _e(e, t, n, r, i) {
                for (var a, o = [], s = 0, l = e.length, u = null != t; s < l; s++)
                    (a = e[s]) && (n && !n(a, r, i) || (o.push(a),
                    u && t.push(s)));
                return o
            }
            function Se(e, t, n, r, i, a) {
                return r && !r[x] && (r = Se(r)),
                i && !i[x] && (i = Se(i, a)),
                ue((function(a, o, s, l) {
                    var u, c, h, p = [], f = [], d = o.length, m = a || function(e, t, n) {
                        for (var r = 0, i = t.length; r < i; r++)
                            se(e, t[r], n);
                        return n
                    }(t || "*", s.nodeType ? [s] : s, []), g = !e || !a && t ? m : _e(m, p, e, s, l), v = n ? i || (a ? e : d || r) ? [] : o : g;
                    if (n && n(g, v, s, l),
                    r)
                        for (u = _e(v, f),
                        r(u, [], s, l),
                        c = u.length; c--; )
                            (h = u[c]) && (v[f[c]] = !(g[f[c]] = h));
                    if (a) {
                        if (i || e) {
                            if (i) {
                                for (u = [],
                                c = v.length; c--; )
                                    (h = v[c]) && u.push(g[c] = h);
                                i(null, v = [], u, l)
                            }
                            for (c = v.length; c--; )
                                (h = v[c]) && (u = i ? O(a, h) : p[c]) > -1 && (a[u] = !(o[u] = h))
                        }
                    } else
                        v = _e(v === o ? v.splice(d, v.length) : v),
                        i ? i(null, o, v, l) : D.apply(o, v)
                }
                ))
            }
            function Ee(e) {
                for (var t, n, i, a = e.length, o = r.relative[e[0].type], s = o || r.relative[" "], l = o ? 1 : 0, c = xe((function(e) {
                    return e === t
                }
                ), s, !0), h = xe((function(e) {
                    return O(t, e) > -1
                }
                ), s, !0), p = [function(e, n, r) {
                    var i = !o && (r || n !== u) || ((t = n).nodeType ? c(e, n, r) : h(e, n, r));
                    return t = null,
                    i
                }
                ]; l < a; l++)
                    if (n = r.relative[e[l].type])
                        p = [xe(we(p), n)];
                    else {
                        if ((n = r.filter[e[l].type].apply(null, e[l].matches))[x]) {
                            for (i = ++l; i < a && !r.relative[e[i].type]; i++)
                                ;
                            return Se(l > 1 && we(p), l > 1 && be(e.slice(0, l - 1).concat({
                                value: " " === e[l - 2].type ? "*" : ""
                            })).replace(V, "$1"), n, l < i && Ee(e.slice(l, i)), i < a && Ee(e = e.slice(i)), i < a && be(e))
                        }
                        p.push(n)
                    }
                return we(p)
            }
            return ye.prototype = r.filters = r.pseudos,
            r.setFilters = new ye,
            o = se.tokenize = function(e, t) {
                var n, i, a, o, s, l, u, c = M[e + " "];
                if (c)
                    return t ? 0 : c.slice(0);
                for (s = e,
                l = [],
                u = r.preFilter; s; ) {
                    for (o in n && !(i = j.exec(s)) || (i && (s = s.slice(i[0].length) || s),
                    l.push(a = [])),
                    n = !1,
                    (i = U.exec(s)) && (n = i.shift(),
                    a.push({
                        value: n,
                        type: i[0].replace(V, " ")
                    }),
                    s = s.slice(n.length)),
                    r.filter)
                        !(i = Y[o].exec(s)) || u[o] && !(i = u[o](i)) || (n = i.shift(),
                        a.push({
                            value: n,
                            type: o,
                            matches: i
                        }),
                        s = s.slice(n.length));
                    if (!n)
                        break
                }
                return t ? s.length : s ? se.error(e) : M(e, l).slice(0)
            }
            ,
            s = se.compile = function(e, t) {
                var n, i = [], a = [], s = T[e + " "];
                if (!s) {
                    for (t || (t = o(e)),
                    n = t.length; n--; )
                        (s = Ee(t[n]))[x] ? i.push(s) : a.push(s);
                    (s = T(e, function(e, t) {
                        var n = t.length > 0
                          , i = e.length > 0
                          , a = function(a, o, s, l, c) {
                            var h, d, g, v = 0, y = "0", b = a && [], x = [], w = u, S = a || i && r.find.TAG("*", c), E = _ += null == w ? 1 : Math.random() || .1, M = S.length;
                            for (c && (u = o == f || o || c); y !== M && null != (h = S[y]); y++) {
                                if (i && h) {
                                    for (d = 0,
                                    o || h.ownerDocument == f || (p(h),
                                    s = !m); g = e[d++]; )
                                        if (g(h, o || f, s)) {
                                            l.push(h);
                                            break
                                        }
                                    c && (_ = E)
                                }
                                n && ((h = !g && h) && v--,
                                a && b.push(h))
                            }
                            if (v += y,
                            n && y !== v) {
                                for (d = 0; g = t[d++]; )
                                    g(b, x, o, s);
                                if (a) {
                                    if (v > 0)
                                        for (; y--; )
                                            b[y] || x[y] || (x[y] = R.call(l));
                                    x = _e(x)
                                }
                                D.apply(l, x),
                                c && !a && x.length > 0 && v + t.length > 1 && se.uniqueSort(l)
                            }
                            return c && (_ = E,
                            u = w),
                            b
                        };
                        return n ? ue(a) : a
                    }(a, i))).selector = e
                }
                return s
            }
            ,
            l = se.select = function(e, t, n, i) {
                var a, l, u, c, h, p = "function" === typeof e && e, f = !i && o(e = p.selector || e);
                if (n = n || [],
                1 === f.length) {
                    if ((l = f[0] = f[0].slice(0)).length > 2 && "ID" === (u = l[0]).type && 9 === t.nodeType && m && r.relative[l[1].type]) {
                        if (!(t = (r.find.ID(u.matches[0].replace(te, ne), t) || [])[0]))
                            return n;
                        p && (t = t.parentNode),
                        e = e.slice(l.shift().value.length)
                    }
                    for (a = Y.needsContext.test(e) ? 0 : l.length; a-- && (u = l[a],
                    !r.relative[c = u.type]); )
                        if ((h = r.find[c]) && (i = h(u.matches[0].replace(te, ne), ee.test(l[0].type) && ve(t.parentNode) || t))) {
                            if (l.splice(a, 1),
                            !(e = i.length && be(l)))
                                return D.apply(n, i),
                                n;
                            break
                        }
                }
                return (p || s(e, f))(i, t, !m, n, !t || ee.test(e) && ve(t.parentNode) || t),
                n
            }
            ,
            n.sortStable = x.split("").sort(P).join("") === x,
            n.detectDuplicates = !!h,
            p(),
            n.sortDetached = ce((function(e) {
                return 1 & e.compareDocumentPosition(f.createElement("fieldset"))
            }
            )),
            ce((function(e) {
                return e.innerHTML = "<a href='#'></a>",
                "#" === e.firstChild.getAttribute("href")
            }
            )) || he("type|href|height|width", (function(e, t, n) {
                if (!n)
                    return e.getAttribute(t, "type" === t.toLowerCase() ? 1 : 2)
            }
            )),
            n.attributes && ce((function(e) {
                return e.innerHTML = "<input/>",
                e.firstChild.setAttribute("value", ""),
                "" === e.firstChild.getAttribute("value")
            }
            )) || he("value", (function(e, t, n) {
                if (!n && "input" === e.nodeName.toLowerCase())
                    return e.defaultValue
            }
            )),
            ce((function(e) {
                return null == e.getAttribute("disabled")
            }
            )) || he(F, (function(e, t, n) {
                var r;
                if (!n)
                    return !0 === e[t] ? t.toLowerCase() : (r = e.getAttributeNode(t)) && r.specified ? r.value : null
            }
            )),
            se
        }(n);
        S.find = M,
        (S.expr = M.selectors)[":"] = S.expr.pseudos,
        S.uniqueSort = S.unique = M.uniqueSort,
        S.text = M.getText,
        S.isXMLDoc = M.isXML,
        S.contains = M.contains,
        S.escapeSelector = M.escape;
        var T = function(e, t, n) {
            for (var r = [], i = void 0 !== n; (e = e[t]) && 9 !== e.nodeType; )
                if (1 === e.nodeType) {
                    if (i && S(e).is(n))
                        break;
                    r.push(e)
                }
            return r
        }
          , A = function(e, t) {
            for (var n = []; e; e = e.nextSibling)
                1 === e.nodeType && e !== t && n.push(e);
            return n
        }
          , P = S.expr.match.needsContext;
        function C(e, t) {
            return e.nodeName && e.nodeName.toLowerCase() === t.toLowerCase()
        }
        var L = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;
        function R(e, t, n) {
            return v(t) ? S.grep(e, (function(e, r) {
                return !!t.call(e, r, e) !== n
            }
            )) : t.nodeType ? S.grep(e, (function(e) {
                return e === t !== n
            }
            )) : "string" !== typeof t ? S.grep(e, (function(e) {
                return c.call(t, e) > -1 !== n
            }
            )) : S.filter(t, e, n)
        }
        S.filter = function(e, t, n) {
            var r = t[0];
            return n && (e = ":not(" + e + ")"),
            1 === t.length && 1 === r.nodeType ? S.find.matchesSelector(r, e) ? [r] : [] : S.find.matches(e, S.grep(t, (function(e) {
                return 1 === e.nodeType
            }
            )))
        }
        ,
        S.fn.extend({
            find: function(e) {
                var t, n, r = this.length, i = this;
                if ("string" !== typeof e)
                    return this.pushStack(S(e).filter((function() {
                        for (t = 0; t < r; t++)
                            if (S.contains(i[t], this))
                                return !0
                    }
                    )));
                for (n = this.pushStack([]),
                t = 0; t < r; t++)
                    S.find(e, i[t], n);
                return r > 1 ? S.uniqueSort(n) : n
            },
            filter: function(e) {
                return this.pushStack(R(this, e || [], !1))
            },
            not: function(e) {
                return this.pushStack(R(this, e || [], !0))
            },
            is: function(e) {
                return !!R(this, "string" === typeof e && P.test(e) ? S(e) : e || [], !1).length
            }
        });
        var k, D = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;
        (S.fn.init = function(e, t, n) {
            var r, i;
            if (!e)
                return this;
            if (n = n || k,
            "string" === typeof e) {
                if (!(r = "<" === e[0] && ">" === e[e.length - 1] && e.length >= 3 ? [null, e, null] : D.exec(e)) || !r[1] && t)
                    return !t || t.jquery ? (t || n).find(e) : this.constructor(t).find(e);
                if (r[1]) {
                    if (t = t instanceof S ? t[0] : t,
                    S.merge(this, S.parseHTML(r[1], t && t.nodeType ? t.ownerDocument || t : b, !0)),
                    L.test(r[1]) && S.isPlainObject(t))
                        for (r in t)
                            v(this[r]) ? this[r](t[r]) : this.attr(r, t[r]);
                    return this
                }
                return (i = b.getElementById(r[2])) && (this[0] = i,
                this.length = 1),
                this
            }
            return e.nodeType ? (this[0] = e,
            this.length = 1,
            this) : v(e) ? void 0 !== n.ready ? n.ready(e) : e(S) : S.makeArray(e, this)
        }
        ).prototype = S.fn,
        k = S(b);
        var I = /^(?:parents|prev(?:Until|All))/
          , O = {
            children: !0,
            contents: !0,
            next: !0,
            prev: !0
        };
        function F(e, t) {
            for (; (e = e[t]) && 1 !== e.nodeType; )
                ;
            return e
        }
        S.fn.extend({
            has: function(e) {
                var t = S(e, this)
                  , n = t.length;
                return this.filter((function() {
                    for (var e = 0; e < n; e++)
                        if (S.contains(this, t[e]))
                            return !0
                }
                ))
            },
            closest: function(e, t) {
                var n, r = 0, i = this.length, a = [], o = "string" !== typeof e && S(e);
                if (!P.test(e))
                    for (; r < i; r++)
                        for (n = this[r]; n && n !== t; n = n.parentNode)
                            if (n.nodeType < 11 && (o ? o.index(n) > -1 : 1 === n.nodeType && S.find.matchesSelector(n, e))) {
                                a.push(n);
                                break
                            }
                return this.pushStack(a.length > 1 ? S.uniqueSort(a) : a)
            },
            index: function(e) {
                return e ? "string" === typeof e ? c.call(S(e), this[0]) : c.call(this, e.jquery ? e[0] : e) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1
            },
            add: function(e, t) {
                return this.pushStack(S.uniqueSort(S.merge(this.get(), S(e, t))))
            },
            addBack: function(e) {
                return this.add(null == e ? this.prevObject : this.prevObject.filter(e))
            }
        }),
        S.each({
            parent: function(e) {
                var t = e.parentNode;
                return t && 11 !== t.nodeType ? t : null
            },
            parents: function(e) {
                return T(e, "parentNode")
            },
            parentsUntil: function(e, t, n) {
                return T(e, "parentNode", n)
            },
            next: function(e) {
                return F(e, "nextSibling")
            },
            prev: function(e) {
                return F(e, "previousSibling")
            },
            nextAll: function(e) {
                return T(e, "nextSibling")
            },
            prevAll: function(e) {
                return T(e, "previousSibling")
            },
            nextUntil: function(e, t, n) {
                return T(e, "nextSibling", n)
            },
            prevUntil: function(e, t, n) {
                return T(e, "previousSibling", n)
            },
            siblings: function(e) {
                return A((e.parentNode || {}).firstChild, e)
            },
            children: function(e) {
                return A(e.firstChild)
            },
            contents: function(e) {
                return null != e.contentDocument && o(e.contentDocument) ? e.contentDocument : (C(e, "template") && (e = e.content || e),
                S.merge([], e.childNodes))
            }
        }, (function(e, t) {
            S.fn[e] = function(n, r) {
                var i = S.map(this, t, n);
                return "Until" !== e.slice(-5) && (r = n),
                r && "string" === typeof r && (i = S.filter(r, i)),
                this.length > 1 && (O[e] || S.uniqueSort(i),
                I.test(e) && i.reverse()),
                this.pushStack(i)
            }
        }
        ));
        var N = /[^\x20\t\r\n\f]+/g;
        function B(e) {
            return e
        }
        function z(e) {
            throw e
        }
        function G(e, t, n, r) {
            var i;
            try {
                e && v(i = e.promise) ? i.call(e).done(t).fail(n) : e && v(i = e.then) ? i.call(e, t, n) : t.apply(void 0, [e].slice(r))
            } catch (e) {
                n.apply(void 0, [e])
            }
        }
        S.Callbacks = function(e) {
            e = "string" === typeof e ? function(e) {
                var t = {};
                return S.each(e.match(N) || [], (function(e, n) {
                    t[n] = !0
                }
                )),
                t
            }(e) : S.extend({}, e);
            var t, n, r, i, a = [], o = [], s = -1, l = function() {
                for (i = i || e.once,
                r = t = !0; o.length; s = -1)
                    for (n = o.shift(); ++s < a.length; )
                        !1 === a[s].apply(n[0], n[1]) && e.stopOnFalse && (s = a.length,
                        n = !1);
                e.memory || (n = !1),
                t = !1,
                i && (a = n ? [] : "")
            }, u = {
                add: function() {
                    return a && (n && !t && (s = a.length - 1,
                    o.push(n)),
                    function t(n) {
                        S.each(n, (function(n, r) {
                            v(r) ? e.unique && u.has(r) || a.push(r) : r && r.length && "string" !== _(r) && t(r)
                        }
                        ))
                    }(arguments),
                    n && !t && l()),
                    this
                },
                remove: function() {
                    return S.each(arguments, (function(e, t) {
                        for (var n; (n = S.inArray(t, a, n)) > -1; )
                            a.splice(n, 1),
                            n <= s && s--
                    }
                    )),
                    this
                },
                has: function(e) {
                    return e ? S.inArray(e, a) > -1 : a.length > 0
                },
                empty: function() {
                    return a && (a = []),
                    this
                },
                disable: function() {
                    return i = o = [],
                    a = n = "",
                    this
                },
                disabled: function() {
                    return !a
                },
                lock: function() {
                    return i = o = [],
                    n || t || (a = n = ""),
                    this
                },
                locked: function() {
                    return !!i
                },
                fireWith: function(e, n) {
                    return i || (n = [e, (n = n || []).slice ? n.slice() : n],
                    o.push(n),
                    t || l()),
                    this
                },
                fire: function() {
                    return u.fireWith(this, arguments),
                    this
                },
                fired: function() {
                    return !!r
                }
            };
            return u
        }
        ,
        S.extend({
            Deferred: function(e) {
                var t = [["notify", "progress", S.Callbacks("memory"), S.Callbacks("memory"), 2], ["resolve", "done", S.Callbacks("once memory"), S.Callbacks("once memory"), 0, "resolved"], ["reject", "fail", S.Callbacks("once memory"), S.Callbacks("once memory"), 1, "rejected"]]
                  , r = "pending"
                  , i = {
                    state: function() {
                        return r
                    },
                    always: function() {
                        return a.done(arguments).fail(arguments),
                        this
                    },
                    catch: function(e) {
                        return i.then(null, e)
                    },
                    pipe: function() {
                        var e = arguments;
                        return S.Deferred((function(n) {
                            S.each(t, (function(t, r) {
                                var i = v(e[r[4]]) && e[r[4]];
                                a[r[1]]((function() {
                                    var e = i && i.apply(this, arguments);
                                    e && v(e.promise) ? e.promise().progress(n.notify).done(n.resolve).fail(n.reject) : n[r[0] + "With"](this, i ? [e] : arguments)
                                }
                                ))
                            }
                            )),
                            e = null
                        }
                        )).promise()
                    },
                    then: function(e, r, i) {
                        var a = 0;
                        function o(e, t, r, i) {
                            return function() {
                                var s = this
                                  , l = arguments
                                  , u = function() {
                                    var n, u;
                                    if (!(e < a)) {
                                        if ((n = r.apply(s, l)) === t.promise())
                                            throw new TypeError("Thenable self-resolution");
                                        u = n && ("object" === typeof n || "function" === typeof n) && n.then,
                                        v(u) ? i ? u.call(n, o(a, t, B, i), o(a, t, z, i)) : (a++,
                                        u.call(n, o(a, t, B, i), o(a, t, z, i), o(a, t, B, t.notifyWith))) : (r !== B && (s = void 0,
                                        l = [n]),
                                        (i || t.resolveWith)(s, l))
                                    }
                                }
                                  , c = i ? u : function() {
                                    try {
                                        u()
                                    } catch (n) {
                                        S.Deferred.exceptionHook && S.Deferred.exceptionHook(n, c.stackTrace),
                                        e + 1 >= a && (r !== z && (s = void 0,
                                        l = [n]),
                                        t.rejectWith(s, l))
                                    }
                                }
                                ;
                                e ? c() : (S.Deferred.getStackHook && (c.stackTrace = S.Deferred.getStackHook()),
                                n.setTimeout(c))
                            }
                        }
                        return S.Deferred((function(n) {
                            t[0][3].add(o(0, n, v(i) ? i : B, n.notifyWith)),
                            t[1][3].add(o(0, n, v(e) ? e : B)),
                            t[2][3].add(o(0, n, v(r) ? r : z))
                        }
                        )).promise()
                    },
                    promise: function(e) {
                        return null != e ? S.extend(e, i) : i
                    }
                }
                  , a = {};
                return S.each(t, (function(e, n) {
                    var o = n[2]
                      , s = n[5];
                    i[n[1]] = o.add,
                    s && o.add((function() {
                        r = s
                    }
                    ), t[3 - e][2].disable, t[3 - e][3].disable, t[0][2].lock, t[0][3].lock),
                    o.add(n[3].fire),
                    a[n[0]] = function() {
                        return a[n[0] + "With"](this === a ? void 0 : this, arguments),
                        this
                    }
                    ,
                    a[n[0] + "With"] = o.fireWith
                }
                )),
                i.promise(a),
                e && e.call(a, a),
                a
            },
            when: function(e) {
                var t = arguments.length
                  , n = t
                  , r = Array(n)
                  , i = s.call(arguments)
                  , a = S.Deferred()
                  , o = function(e) {
                    return function(n) {
                        r[e] = this,
                        i[e] = arguments.length > 1 ? s.call(arguments) : n,
                        --t || a.resolveWith(r, i)
                    }
                };
                if (t <= 1 && (G(e, a.done(o(n)).resolve, a.reject, !t),
                "pending" === a.state() || v(i[n] && i[n].then)))
                    return a.then();
                for (; n--; )
                    G(i[n], o(n), a.reject);
                return a.promise()
            }
        });
        var H = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
        S.Deferred.exceptionHook = function(e, t) {
            n.console && n.console.warn && e && H.test(e.name) && n.console.warn("jQuery.Deferred exception: " + e.message, e.stack, t)
        }
        ,
        S.readyException = function(e) {
            n.setTimeout((function() {
                throw e
            }
            ))
        }
        ;
        var V = S.Deferred();
        function j() {
            b.removeEventListener("DOMContentLoaded", j),
            n.removeEventListener("load", j),
            S.ready()
        }
        S.fn.ready = function(e) {
            return V.then(e).catch((function(e) {
                S.readyException(e)
            }
            )),
            this
        }
        ,
        S.extend({
            isReady: !1,
            readyWait: 1,
            ready: function(e) {
                (!0 === e ? --S.readyWait : S.isReady) || (S.isReady = !0,
                !0 !== e && --S.readyWait > 0 || V.resolveWith(b, [S]))
            }
        }),
        S.ready.then = V.then,
        "complete" === b.readyState || "loading" !== b.readyState && !b.documentElement.doScroll ? n.setTimeout(S.ready) : (b.addEventListener("DOMContentLoaded", j),
        n.addEventListener("load", j));
        var U = function e(t, n, r, i, a, o, s) {
            var l = 0
              , u = t.length
              , c = null == r;
            if ("object" === _(r))
                for (l in a = !0,
                r)
                    e(t, n, l, r[l], !0, o, s);
            else if (void 0 !== i && (a = !0,
            v(i) || (s = !0),
            c && (s ? (n.call(t, i),
            n = null) : (c = n,
            n = function(e, t, n) {
                return c.call(S(e), n)
            }
            )),
            n))
                for (; l < u; l++)
                    n(t[l], r, s ? i : i.call(t[l], l, n(t[l], r)));
            return a ? t : c ? n.call(t) : u ? n(t[0], r) : o
        }
          , W = /^-ms-/
          , q = /-([a-z])/g;
        function X(e, t) {
            return t.toUpperCase()
        }
        function Y(e) {
            return e.replace(W, "ms-").replace(q, X)
        }
        var Z = function(e) {
            return 1 === e.nodeType || 9 === e.nodeType || !+e.nodeType
        };
        function $() {
            this.expando = S.expando + $.uid++
        }
        $.uid = 1,
        $.prototype = {
            cache: function(e) {
                var t = e[this.expando];
                return t || (t = {},
                Z(e) && (e.nodeType ? e[this.expando] = t : Object.defineProperty(e, this.expando, {
                    value: t,
                    configurable: !0
                }))),
                t
            },
            set: function(e, t, n) {
                var r, i = this.cache(e);
                if ("string" === typeof t)
                    i[Y(t)] = n;
                else
                    for (r in t)
                        i[Y(r)] = t[r];
                return i
            },
            get: function(e, t) {
                return void 0 === t ? this.cache(e) : e[this.expando] && e[this.expando][Y(t)]
            },
            access: function(e, t, n) {
                return void 0 === t || t && "string" === typeof t && void 0 === n ? this.get(e, t) : (this.set(e, t, n),
                void 0 !== n ? n : t)
            },
            remove: function(e, t) {
                var n, r = e[this.expando];
                if (void 0 !== r) {
                    if (void 0 !== t) {
                        n = (t = Array.isArray(t) ? t.map(Y) : (t = Y(t))in r ? [t] : t.match(N) || []).length;
                        for (; n--; )
                            delete r[t[n]]
                    }
                    (void 0 === t || S.isEmptyObject(r)) && (e.nodeType ? e[this.expando] = void 0 : delete e[this.expando])
                }
            },
            hasData: function(e) {
                var t = e[this.expando];
                return void 0 !== t && !S.isEmptyObject(t)
            }
        };
        var J = new $
          , K = new $
          , Q = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/
          , ee = /[A-Z]/g;
        function te(e, t, n) {
            var r;
            if (void 0 === n && 1 === e.nodeType)
                if (r = "data-" + t.replace(ee, "-$&").toLowerCase(),
                "string" === typeof (n = e.getAttribute(r))) {
                    try {
                        n = function(e) {
                            return "true" === e || "false" !== e && ("null" === e ? null : e === +e + "" ? +e : Q.test(e) ? JSON.parse(e) : e)
                        }(n)
                    } catch (i) {}
                    K.set(e, t, n)
                } else
                    n = void 0;
            return n
        }
        S.extend({
            hasData: function(e) {
                return K.hasData(e) || J.hasData(e)
            },
            data: function(e, t, n) {
                return K.access(e, t, n)
            },
            removeData: function(e, t) {
                K.remove(e, t)
            },
            _data: function(e, t, n) {
                return J.access(e, t, n)
            },
            _removeData: function(e, t) {
                J.remove(e, t)
            }
        }),
        S.fn.extend({
            data: function(e, t) {
                var n, r, i, a = this[0], o = a && a.attributes;
                if (void 0 === e) {
                    if (this.length && (i = K.get(a),
                    1 === a.nodeType && !J.get(a, "hasDataAttrs"))) {
                        for (n = o.length; n--; )
                            o[n] && 0 === (r = o[n].name).indexOf("data-") && (r = Y(r.slice(5)),
                            te(a, r, i[r]));
                        J.set(a, "hasDataAttrs", !0)
                    }
                    return i
                }
                return "object" === typeof e ? this.each((function() {
                    K.set(this, e)
                }
                )) : U(this, (function(t) {
                    var n;
                    if (a && void 0 === t)
                        return void 0 !== (n = K.get(a, e)) || void 0 !== (n = te(a, e)) ? n : void 0;
                    this.each((function() {
                        K.set(this, e, t)
                    }
                    ))
                }
                ), null, t, arguments.length > 1, null, !0)
            },
            removeData: function(e) {
                return this.each((function() {
                    K.remove(this, e)
                }
                ))
            }
        }),
        S.extend({
            queue: function(e, t, n) {
                var r;
                if (e)
                    return t = (t || "fx") + "queue",
                    r = J.get(e, t),
                    n && (!r || Array.isArray(n) ? r = J.access(e, t, S.makeArray(n)) : r.push(n)),
                    r || []
            },
            dequeue: function(e, t) {
                var n = S.queue(e, t = t || "fx")
                  , r = n.length
                  , i = n.shift()
                  , a = S._queueHooks(e, t);
                "inprogress" === i && (i = n.shift(),
                r--),
                i && ("fx" === t && n.unshift("inprogress"),
                delete a.stop,
                i.call(e, (function() {
                    S.dequeue(e, t)
                }
                ), a)),
                !r && a && a.empty.fire()
            },
            _queueHooks: function(e, t) {
                var n = t + "queueHooks";
                return J.get(e, n) || J.access(e, n, {
                    empty: S.Callbacks("once memory").add((function() {
                        J.remove(e, [t + "queue", n])
                    }
                    ))
                })
            }
        }),
        S.fn.extend({
            queue: function(e, t) {
                var n = 2;
                return "string" !== typeof e && (t = e,
                e = "fx",
                n--),
                arguments.length < n ? S.queue(this[0], e) : void 0 === t ? this : this.each((function() {
                    var n = S.queue(this, e, t);
                    S._queueHooks(this, e),
                    "fx" === e && "inprogress" !== n[0] && S.dequeue(this, e)
                }
                ))
            },
            dequeue: function(e) {
                return this.each((function() {
                    S.dequeue(this, e)
                }
                ))
            },
            clearQueue: function(e) {
                return this.queue(e || "fx", [])
            },
            promise: function(e, t) {
                var n, r = 1, i = S.Deferred(), a = this, o = this.length, s = function() {
                    --r || i.resolveWith(a, [a])
                };
                for ("string" !== typeof e && (t = e,
                e = void 0),
                e = e || "fx"; o--; )
                    (n = J.get(a[o], e + "queueHooks")) && n.empty && (r++,
                    n.empty.add(s));
                return s(),
                i.promise(t)
            }
        });
        var ne = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source
          , re = new RegExp("^(?:([+-])=|)(" + ne + ")([a-z%]*)$","i")
          , ie = ["Top", "Right", "Bottom", "Left"]
          , ae = b.documentElement
          , oe = function(e) {
            return S.contains(e.ownerDocument, e)
        }
          , se = {
            composed: !0
        };
        ae.getRootNode && (oe = function(e) {
            return S.contains(e.ownerDocument, e) || e.getRootNode(se) === e.ownerDocument
        }
        );
        var le = function(e, t) {
            return "none" === (e = t || e).style.display || "" === e.style.display && oe(e) && "none" === S.css(e, "display")
        };
        function ue(e, t, n, r) {
            var i, a, o = 20, s = r ? function() {
                return r.cur()
            }
            : function() {
                return S.css(e, t, "")
            }
            , l = s(), u = n && n[3] || (S.cssNumber[t] ? "" : "px"), c = e.nodeType && (S.cssNumber[t] || "px" !== u && +l) && re.exec(S.css(e, t));
            if (c && c[3] !== u) {
                for (l /= 2,
                u = u || c[3],
                c = +l || 1; o--; )
                    S.style(e, t, c + u),
                    (1 - a) * (1 - (a = s() / l || .5)) <= 0 && (o = 0),
                    c /= a;
                S.style(e, t, (c *= 2) + u),
                n = n || []
            }
            return n && (c = +c || +l || 0,
            i = n[1] ? c + (n[1] + 1) * n[2] : +n[2],
            r && (r.unit = u,
            r.start = c,
            r.end = i)),
            i
        }
        var ce = {};
        function he(e) {
            var t, n = e.ownerDocument, r = e.nodeName, i = ce[r];
            return i || (t = n.body.appendChild(n.createElement(r)),
            i = S.css(t, "display"),
            t.parentNode.removeChild(t),
            "none" === i && (i = "block"),
            ce[r] = i,
            i)
        }
        function pe(e, t) {
            for (var n, r, i = [], a = 0, o = e.length; a < o; a++)
                (r = e[a]).style && (n = r.style.display,
                t ? ("none" === n && (i[a] = J.get(r, "display") || null,
                i[a] || (r.style.display = "")),
                "" === r.style.display && le(r) && (i[a] = he(r))) : "none" !== n && (i[a] = "none",
                J.set(r, "display", n)));
            for (a = 0; a < o; a++)
                null != i[a] && (e[a].style.display = i[a]);
            return e
        }
        S.fn.extend({
            show: function() {
                return pe(this, !0)
            },
            hide: function() {
                return pe(this)
            },
            toggle: function(e) {
                return "boolean" === typeof e ? e ? this.show() : this.hide() : this.each((function() {
                    le(this) ? S(this).show() : S(this).hide()
                }
                ))
            }
        });
        var fe = /^(?:checkbox|radio)$/i
          , de = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i
          , me = /^$|^module$|\/(?:java|ecma)script/i;
        !function() {
            var e = b.createDocumentFragment().appendChild(b.createElement("div"))
              , t = b.createElement("input");
            t.setAttribute("type", "radio"),
            t.setAttribute("checked", "checked"),
            t.setAttribute("name", "t"),
            e.appendChild(t),
            g.checkClone = e.cloneNode(!0).cloneNode(!0).lastChild.checked,
            e.innerHTML = "<textarea>x</textarea>",
            g.noCloneChecked = !!e.cloneNode(!0).lastChild.defaultValue,
            e.innerHTML = "<option></option>",
            g.option = !!e.lastChild
        }();
        var ge = {
            thead: [1, "<table>", "</table>"],
            col: [2, "<table><colgroup>", "</colgroup></table>"],
            tr: [2, "<table><tbody>", "</tbody></table>"],
            td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
            _default: [0, "", ""]
        };
        function ve(e, t) {
            var n;
            return n = "undefined" !== typeof e.getElementsByTagName ? e.getElementsByTagName(t || "*") : "undefined" !== typeof e.querySelectorAll ? e.querySelectorAll(t || "*") : [],
            void 0 === t || t && C(e, t) ? S.merge([e], n) : n
        }
        function ye(e, t) {
            for (var n = 0, r = e.length; n < r; n++)
                J.set(e[n], "globalEval", !t || J.get(t[n], "globalEval"))
        }
        ge.tbody = ge.tfoot = ge.colgroup = ge.caption = ge.thead,
        ge.th = ge.td,
        g.option || (ge.optgroup = ge.option = [1, "<select multiple='multiple'>", "</select>"]);
        var be = /<|&#?\w+;/;
        function xe(e, t, n, r, i) {
            for (var a, o, s, l, u, c, h = t.createDocumentFragment(), p = [], f = 0, d = e.length; f < d; f++)
                if ((a = e[f]) || 0 === a)
                    if ("object" === _(a))
                        S.merge(p, a.nodeType ? [a] : a);
                    else if (be.test(a)) {
                        for (o = o || h.appendChild(t.createElement("div")),
                        s = (de.exec(a) || ["", ""])[1].toLowerCase(),
                        l = ge[s] || ge._default,
                        o.innerHTML = l[1] + S.htmlPrefilter(a) + l[2],
                        c = l[0]; c--; )
                            o = o.lastChild;
                        S.merge(p, o.childNodes),
                        (o = h.firstChild).textContent = ""
                    } else
                        p.push(t.createTextNode(a));
            for (h.textContent = "",
            f = 0; a = p[f++]; )
                if (r && S.inArray(a, r) > -1)
                    i && i.push(a);
                else if (u = oe(a),
                o = ve(h.appendChild(a), "script"),
                u && ye(o),
                n)
                    for (c = 0; a = o[c++]; )
                        me.test(a.type || "") && n.push(a);
            return h
        }
        var we = /^([^.]*)(?:\.(.+)|)/;
        function _e() {
            return !0
        }
        function Se() {
            return !1
        }
        function Ee(e, t) {
            return e === function() {
                try {
                    return b.activeElement
                } catch (e) {}
            }() === ("focus" === t)
        }
        function Me(e, t, n, r, i, a) {
            var o, s;
            if ("object" === typeof t) {
                for (s in "string" !== typeof n && (r = r || n,
                n = void 0),
                t)
                    Me(e, s, n, r, t[s], a);
                return e
            }
            if (null == r && null == i ? (i = n,
            r = n = void 0) : null == i && ("string" === typeof n ? (i = r,
            r = void 0) : (i = r,
            r = n,
            n = void 0)),
            !1 === i)
                i = Se;
            else if (!i)
                return e;
            return 1 === a && (o = i,
            (i = function(e) {
                return S().off(e),
                o.apply(this, arguments)
            }
            ).guid = o.guid || (o.guid = S.guid++)),
            e.each((function() {
                S.event.add(this, t, i, r, n)
            }
            ))
        }
        function Te(e, t, n) {
            n ? (J.set(e, t, !1),
            S.event.add(e, t, {
                namespace: !1,
                handler: function(e) {
                    var r, i, a = J.get(this, t);
                    if (1 & e.isTrigger && this[t]) {
                        if (a.length)
                            (S.event.special[t] || {}).delegateType && e.stopPropagation();
                        else if (a = s.call(arguments),
                        J.set(this, t, a),
                        r = n(this, t),
                        this[t](),
                        a !== (i = J.get(this, t)) || r ? J.set(this, t, !1) : i = {},
                        a !== i)
                            return e.stopImmediatePropagation(),
                            e.preventDefault(),
                            i && i.value
                    } else
                        a.length && (J.set(this, t, {
                            value: S.event.trigger(S.extend(a[0], S.Event.prototype), a.slice(1), this)
                        }),
                        e.stopImmediatePropagation())
                }
            })) : void 0 === J.get(e, t) && S.event.add(e, t, _e)
        }
        S.event = {
            global: {},
            add: function(e, t, n, r, i) {
                var a, o, s, l, u, c, h, p, f, d, m, g = J.get(e);
                if (Z(e))
                    for (n.handler && (n = (a = n).handler,
                    i = a.selector),
                    i && S.find.matchesSelector(ae, i),
                    n.guid || (n.guid = S.guid++),
                    (l = g.events) || (l = g.events = Object.create(null)),
                    (o = g.handle) || (o = g.handle = function(t) {
                        return S.event.triggered !== t.type ? S.event.dispatch.apply(e, arguments) : void 0
                    }
                    ),
                    u = (t = (t || "").match(N) || [""]).length; u--; )
                        f = m = (s = we.exec(t[u]) || [])[1],
                        d = (s[2] || "").split(".").sort(),
                        f && (h = S.event.special[f] || {},
                        f = (i ? h.delegateType : h.bindType) || f,
                        h = S.event.special[f] || {},
                        c = S.extend({
                            type: f,
                            origType: m,
                            data: r,
                            handler: n,
                            guid: n.guid,
                            selector: i,
                            needsContext: i && S.expr.match.needsContext.test(i),
                            namespace: d.join(".")
                        }, a),
                        (p = l[f]) || ((p = l[f] = []).delegateCount = 0,
                        h.setup && !1 !== h.setup.call(e, r, d, o) || e.addEventListener && e.addEventListener(f, o)),
                        h.add && (h.add.call(e, c),
                        c.handler.guid || (c.handler.guid = n.guid)),
                        i ? p.splice(p.delegateCount++, 0, c) : p.push(c),
                        S.event.global[f] = !0)
            },
            remove: function(e, t, n, r, i) {
                var a, o, s, l, u, c, h, p, f, d, m, g = J.hasData(e) && J.get(e);
                if (g && (l = g.events)) {
                    for (u = (t = (t || "").match(N) || [""]).length; u--; )
                        if (f = m = (s = we.exec(t[u]) || [])[1],
                        d = (s[2] || "").split(".").sort(),
                        f) {
                            for (h = S.event.special[f] || {},
                            p = l[f = (r ? h.delegateType : h.bindType) || f] || [],
                            s = s[2] && new RegExp("(^|\\.)" + d.join("\\.(?:.*\\.|)") + "(\\.|$)"),
                            o = a = p.length; a--; )
                                c = p[a],
                                !i && m !== c.origType || n && n.guid !== c.guid || s && !s.test(c.namespace) || r && r !== c.selector && ("**" !== r || !c.selector) || (p.splice(a, 1),
                                c.selector && p.delegateCount--,
                                h.remove && h.remove.call(e, c));
                            o && !p.length && (h.teardown && !1 !== h.teardown.call(e, d, g.handle) || S.removeEvent(e, f, g.handle),
                            delete l[f])
                        } else
                            for (f in l)
                                S.event.remove(e, f + t[u], n, r, !0);
                    S.isEmptyObject(l) && J.remove(e, "handle events")
                }
            },
            dispatch: function(e) {
                var t, n, r, i, a, o, s = new Array(arguments.length), l = S.event.fix(e), u = (J.get(this, "events") || Object.create(null))[l.type] || [], c = S.event.special[l.type] || {};
                for (s[0] = l,
                t = 1; t < arguments.length; t++)
                    s[t] = arguments[t];
                if (l.delegateTarget = this,
                !c.preDispatch || !1 !== c.preDispatch.call(this, l)) {
                    for (o = S.event.handlers.call(this, l, u),
                    t = 0; (i = o[t++]) && !l.isPropagationStopped(); )
                        for (l.currentTarget = i.elem,
                        n = 0; (a = i.handlers[n++]) && !l.isImmediatePropagationStopped(); )
                            l.rnamespace && !1 !== a.namespace && !l.rnamespace.test(a.namespace) || (l.handleObj = a,
                            l.data = a.data,
                            void 0 !== (r = ((S.event.special[a.origType] || {}).handle || a.handler).apply(i.elem, s)) && !1 === (l.result = r) && (l.preventDefault(),
                            l.stopPropagation()));
                    return c.postDispatch && c.postDispatch.call(this, l),
                    l.result
                }
            },
            handlers: function(e, t) {
                var n, r, i, a, o, s = [], l = t.delegateCount, u = e.target;
                if (l && u.nodeType && !("click" === e.type && e.button >= 1))
                    for (; u !== this; u = u.parentNode || this)
                        if (1 === u.nodeType && ("click" !== e.type || !0 !== u.disabled)) {
                            for (a = [],
                            o = {},
                            n = 0; n < l; n++)
                                void 0 === o[i = (r = t[n]).selector + " "] && (o[i] = r.needsContext ? S(i, this).index(u) > -1 : S.find(i, this, null, [u]).length),
                                o[i] && a.push(r);
                            a.length && s.push({
                                elem: u,
                                handlers: a
                            })
                        }
                return u = this,
                l < t.length && s.push({
                    elem: u,
                    handlers: t.slice(l)
                }),
                s
            },
            addProp: function(e, t) {
                Object.defineProperty(S.Event.prototype, e, {
                    enumerable: !0,
                    configurable: !0,
                    get: v(t) ? function() {
                        if (this.originalEvent)
                            return t(this.originalEvent)
                    }
                    : function() {
                        if (this.originalEvent)
                            return this.originalEvent[e]
                    }
                    ,
                    set: function(t) {
                        Object.defineProperty(this, e, {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: t
                        })
                    }
                })
            },
            fix: function(e) {
                return e[S.expando] ? e : new S.Event(e)
            },
            special: {
                load: {
                    noBubble: !0
                },
                click: {
                    setup: function(e) {
                        var t = this || e;
                        return fe.test(t.type) && t.click && C(t, "input") && Te(t, "click", _e),
                        !1
                    },
                    trigger: function(e) {
                        var t = this || e;
                        return fe.test(t.type) && t.click && C(t, "input") && Te(t, "click"),
                        !0
                    },
                    _default: function(e) {
                        var t = e.target;
                        return fe.test(t.type) && t.click && C(t, "input") && J.get(t, "click") || C(t, "a")
                    }
                },
                beforeunload: {
                    postDispatch: function(e) {
                        void 0 !== e.result && e.originalEvent && (e.originalEvent.returnValue = e.result)
                    }
                }
            }
        },
        S.removeEvent = function(e, t, n) {
            e.removeEventListener && e.removeEventListener(t, n)
        }
        ,
        (S.Event = function(e, t) {
            if (!(this instanceof S.Event))
                return new S.Event(e,t);
            e && e.type ? (this.originalEvent = e,
            this.type = e.type,
            this.isDefaultPrevented = e.defaultPrevented || void 0 === e.defaultPrevented && !1 === e.returnValue ? _e : Se,
            this.target = e.target && 3 === e.target.nodeType ? e.target.parentNode : e.target,
            this.currentTarget = e.currentTarget,
            this.relatedTarget = e.relatedTarget) : this.type = e,
            t && S.extend(this, t),
            this.timeStamp = e && e.timeStamp || Date.now(),
            this[S.expando] = !0
        }
        ).prototype = {
            constructor: S.Event,
            isDefaultPrevented: Se,
            isPropagationStopped: Se,
            isImmediatePropagationStopped: Se,
            isSimulated: !1,
            preventDefault: function() {
                var e = this.originalEvent;
                this.isDefaultPrevented = _e,
                e && !this.isSimulated && e.preventDefault()
            },
            stopPropagation: function() {
                var e = this.originalEvent;
                this.isPropagationStopped = _e,
                e && !this.isSimulated && e.stopPropagation()
            },
            stopImmediatePropagation: function() {
                var e = this.originalEvent;
                this.isImmediatePropagationStopped = _e,
                e && !this.isSimulated && e.stopImmediatePropagation(),
                this.stopPropagation()
            }
        },
        S.each({
            altKey: !0,
            bubbles: !0,
            cancelable: !0,
            changedTouches: !0,
            ctrlKey: !0,
            detail: !0,
            eventPhase: !0,
            metaKey: !0,
            pageX: !0,
            pageY: !0,
            shiftKey: !0,
            view: !0,
            char: !0,
            code: !0,
            charCode: !0,
            key: !0,
            keyCode: !0,
            button: !0,
            buttons: !0,
            clientX: !0,
            clientY: !0,
            offsetX: !0,
            offsetY: !0,
            pointerId: !0,
            pointerType: !0,
            screenX: !0,
            screenY: !0,
            targetTouches: !0,
            toElement: !0,
            touches: !0,
            which: !0
        }, S.event.addProp),
        S.each({
            focus: "focusin",
            blur: "focusout"
        }, (function(e, t) {
            S.event.special[e] = {
                setup: function() {
                    return Te(this, e, Ee),
                    !1
                },
                trigger: function() {
                    return Te(this, e),
                    !0
                },
                _default: function() {
                    return !0
                },
                delegateType: t
            }
        }
        )),
        S.each({
            mouseenter: "mouseover",
            mouseleave: "mouseout",
            pointerenter: "pointerover",
            pointerleave: "pointerout"
        }, (function(e, t) {
            S.event.special[e] = {
                delegateType: t,
                bindType: t,
                handle: function(e) {
                    var n, r = this, i = e.relatedTarget, a = e.handleObj;
                    return i && (i === r || S.contains(r, i)) || (e.type = a.origType,
                    n = a.handler.apply(this, arguments),
                    e.type = t),
                    n
                }
            }
        }
        )),
        S.fn.extend({
            on: function(e, t, n, r) {
                return Me(this, e, t, n, r)
            },
            one: function(e, t, n, r) {
                return Me(this, e, t, n, r, 1)
            },
            off: function(e, t, n) {
                var r, i;
                if (e && e.preventDefault && e.handleObj)
                    return r = e.handleObj,
                    S(e.delegateTarget).off(r.namespace ? r.origType + "." + r.namespace : r.origType, r.selector, r.handler),
                    this;
                if ("object" === typeof e) {
                    for (i in e)
                        this.off(i, t, e[i]);
                    return this
                }
                return !1 !== t && "function" !== typeof t || (n = t,
                t = void 0),
                !1 === n && (n = Se),
                this.each((function() {
                    S.event.remove(this, e, n, t)
                }
                ))
            }
        });
        var Ae = /<script|<style|<link/i
          , Pe = /checked\s*(?:[^=]|=\s*.checked.)/i
          , Ce = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;
        function Le(e, t) {
            return C(e, "table") && C(11 !== t.nodeType ? t : t.firstChild, "tr") && S(e).children("tbody")[0] || e
        }
        function Re(e) {
            return e.type = (null !== e.getAttribute("type")) + "/" + e.type,
            e
        }
        function ke(e) {
            return "true/" === (e.type || "").slice(0, 5) ? e.type = e.type.slice(5) : e.removeAttribute("type"),
            e
        }
        function De(e, t) {
            var n, r, i, a, o, s;
            if (1 === t.nodeType) {
                if (J.hasData(e) && (s = J.get(e).events))
                    for (i in J.remove(t, "handle events"),
                    s)
                        for (n = 0,
                        r = s[i].length; n < r; n++)
                            S.event.add(t, i, s[i][n]);
                K.hasData(e) && (a = K.access(e),
                o = S.extend({}, a),
                K.set(t, o))
            }
        }
        function Ie(e, t) {
            var n = t.nodeName.toLowerCase();
            "input" === n && fe.test(e.type) ? t.checked = e.checked : "input" !== n && "textarea" !== n || (t.defaultValue = e.defaultValue)
        }
        function Oe(e, t, n, r) {
            t = l(t);
            var i, a, o, s, u, c, h = 0, p = e.length, f = p - 1, d = t[0], m = v(d);
            if (m || p > 1 && "string" === typeof d && !g.checkClone && Pe.test(d))
                return e.each((function(i) {
                    var a = e.eq(i);
                    m && (t[0] = d.call(this, i, a.html())),
                    Oe(a, t, n, r)
                }
                ));
            if (p && (a = (i = xe(t, e[0].ownerDocument, !1, e, r)).firstChild,
            1 === i.childNodes.length && (i = a),
            a || r)) {
                for (s = (o = S.map(ve(i, "script"), Re)).length; h < p; h++)
                    u = i,
                    h !== f && (u = S.clone(u, !0, !0),
                    s && S.merge(o, ve(u, "script"))),
                    n.call(e[h], u, h);
                if (s)
                    for (c = o[o.length - 1].ownerDocument,
                    S.map(o, ke),
                    h = 0; h < s; h++)
                        u = o[h],
                        me.test(u.type || "") && !J.access(u, "globalEval") && S.contains(c, u) && (u.src && "module" !== (u.type || "").toLowerCase() ? S._evalUrl && !u.noModule && S._evalUrl(u.src, {
                            nonce: u.nonce || u.getAttribute("nonce")
                        }, c) : w(u.textContent.replace(Ce, ""), u, c))
            }
            return e
        }
        function Fe(e, t, n) {
            for (var r, i = t ? S.filter(t, e) : e, a = 0; null != (r = i[a]); a++)
                n || 1 !== r.nodeType || S.cleanData(ve(r)),
                r.parentNode && (n && oe(r) && ye(ve(r, "script")),
                r.parentNode.removeChild(r));
            return e
        }
        S.extend({
            htmlPrefilter: function(e) {
                return e
            },
            clone: function(e, t, n) {
                var r, i, a, o, s = e.cloneNode(!0), l = oe(e);
                if (!g.noCloneChecked && (1 === e.nodeType || 11 === e.nodeType) && !S.isXMLDoc(e))
                    for (o = ve(s),
                    r = 0,
                    i = (a = ve(e)).length; r < i; r++)
                        Ie(a[r], o[r]);
                if (t)
                    if (n)
                        for (a = a || ve(e),
                        o = o || ve(s),
                        r = 0,
                        i = a.length; r < i; r++)
                            De(a[r], o[r]);
                    else
                        De(e, s);
                return (o = ve(s, "script")).length > 0 && ye(o, !l && ve(e, "script")),
                s
            },
            cleanData: function(e) {
                for (var t, n, r, i = S.event.special, a = 0; void 0 !== (n = e[a]); a++)
                    if (Z(n)) {
                        if (t = n[J.expando]) {
                            if (t.events)
                                for (r in t.events)
                                    i[r] ? S.event.remove(n, r) : S.removeEvent(n, r, t.handle);
                            n[J.expando] = void 0
                        }
                        n[K.expando] && (n[K.expando] = void 0)
                    }
            }
        }),
        S.fn.extend({
            detach: function(e) {
                return Fe(this, e, !0)
            },
            remove: function(e) {
                return Fe(this, e)
            },
            text: function(e) {
                return U(this, (function(e) {
                    return void 0 === e ? S.text(this) : this.empty().each((function() {
                        1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || (this.textContent = e)
                    }
                    ))
                }
                ), null, e, arguments.length)
            },
            append: function() {
                return Oe(this, arguments, (function(e) {
                    1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || Le(this, e).appendChild(e)
                }
                ))
            },
            prepend: function() {
                return Oe(this, arguments, (function(e) {
                    if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                        var t = Le(this, e);
                        t.insertBefore(e, t.firstChild)
                    }
                }
                ))
            },
            before: function() {
                return Oe(this, arguments, (function(e) {
                    this.parentNode && this.parentNode.insertBefore(e, this)
                }
                ))
            },
            after: function() {
                return Oe(this, arguments, (function(e) {
                    this.parentNode && this.parentNode.insertBefore(e, this.nextSibling)
                }
                ))
            },
            empty: function() {
                for (var e, t = 0; null != (e = this[t]); t++)
                    1 === e.nodeType && (S.cleanData(ve(e, !1)),
                    e.textContent = "");
                return this
            },
            clone: function(e, t) {
                return e = null != e && e,
                t = null == t ? e : t,
                this.map((function() {
                    return S.clone(this, e, t)
                }
                ))
            },
            html: function(e) {
                return U(this, (function(e) {
                    var t = this[0] || {}
                      , n = 0
                      , r = this.length;
                    if (void 0 === e && 1 === t.nodeType)
                        return t.innerHTML;
                    if ("string" === typeof e && !Ae.test(e) && !ge[(de.exec(e) || ["", ""])[1].toLowerCase()]) {
                        e = S.htmlPrefilter(e);
                        try {
                            for (; n < r; n++)
                                1 === (t = this[n] || {}).nodeType && (S.cleanData(ve(t, !1)),
                                t.innerHTML = e);
                            t = 0
                        } catch (i) {}
                    }
                    t && this.empty().append(e)
                }
                ), null, e, arguments.length)
            },
            replaceWith: function() {
                var e = [];
                return Oe(this, arguments, (function(t) {
                    var n = this.parentNode;
                    S.inArray(this, e) < 0 && (S.cleanData(ve(this)),
                    n && n.replaceChild(t, this))
                }
                ), e)
            }
        }),
        S.each({
            appendTo: "append",
            prependTo: "prepend",
            insertBefore: "before",
            insertAfter: "after",
            replaceAll: "replaceWith"
        }, (function(e, t) {
            S.fn[e] = function(e) {
                for (var n, r = [], i = S(e), a = i.length - 1, o = 0; o <= a; o++)
                    n = o === a ? this : this.clone(!0),
                    S(i[o])[t](n),
                    u.apply(r, n.get());
                return this.pushStack(r)
            }
        }
        ));
        var Ne = new RegExp("^(" + ne + ")(?!px)[a-z%]+$","i")
          , Be = function(e) {
            var t = e.ownerDocument.defaultView;
            return t && t.opener || (t = n),
            t.getComputedStyle(e)
        }
          , ze = function(e, t, n) {
            var r, i, a = {};
            for (i in t)
                a[i] = e.style[i],
                e.style[i] = t[i];
            for (i in r = n.call(e),
            t)
                e.style[i] = a[i];
            return r
        }
          , Ge = new RegExp(ie.join("|"),"i");
        function He(e, t, n) {
            var r, i, a, o, s = e.style;
            return (n = n || Be(e)) && ("" !== (o = n.getPropertyValue(t) || n[t]) || oe(e) || (o = S.style(e, t)),
            !g.pixelBoxStyles() && Ne.test(o) && Ge.test(t) && (r = s.width,
            i = s.minWidth,
            a = s.maxWidth,
            s.minWidth = s.maxWidth = s.width = o,
            o = n.width,
            s.width = r,
            s.minWidth = i,
            s.maxWidth = a)),
            void 0 !== o ? o + "" : o
        }
        function Ve(e, t) {
            return {
                get: function() {
                    if (!e())
                        return (this.get = t).apply(this, arguments);
                    delete this.get
                }
            }
        }
        !function() {
            function e() {
                if (c) {
                    u.style.cssText = "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",
                    c.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",
                    ae.appendChild(u).appendChild(c);
                    var e = n.getComputedStyle(c);
                    r = "1%" !== e.top,
                    l = 12 === t(e.marginLeft),
                    c.style.right = "60%",
                    o = 36 === t(e.right),
                    i = 36 === t(e.width),
                    c.style.position = "absolute",
                    a = 12 === t(c.offsetWidth / 3),
                    ae.removeChild(u),
                    c = null
                }
            }
            function t(e) {
                return Math.round(parseFloat(e))
            }
            var r, i, a, o, s, l, u = b.createElement("div"), c = b.createElement("div");
            c.style && (c.style.backgroundClip = "content-box",
            c.cloneNode(!0).style.backgroundClip = "",
            g.clearCloneStyle = "content-box" === c.style.backgroundClip,
            S.extend(g, {
                boxSizingReliable: function() {
                    return e(),
                    i
                },
                pixelBoxStyles: function() {
                    return e(),
                    o
                },
                pixelPosition: function() {
                    return e(),
                    r
                },
                reliableMarginLeft: function() {
                    return e(),
                    l
                },
                scrollboxSize: function() {
                    return e(),
                    a
                },
                reliableTrDimensions: function() {
                    var e, t, r, i;
                    return null == s && (e = b.createElement("table"),
                    t = b.createElement("tr"),
                    r = b.createElement("div"),
                    e.style.cssText = "position:absolute;left:-11111px;border-collapse:separate",
                    t.style.cssText = "border:1px solid",
                    t.style.height = "1px",
                    r.style.height = "9px",
                    r.style.display = "block",
                    ae.appendChild(e).appendChild(t).appendChild(r),
                    i = n.getComputedStyle(t),
                    s = parseInt(i.height, 10) + parseInt(i.borderTopWidth, 10) + parseInt(i.borderBottomWidth, 10) === t.offsetHeight,
                    ae.removeChild(e)),
                    s
                }
            }))
        }();
        var je = ["Webkit", "Moz", "ms"]
          , Ue = b.createElement("div").style
          , We = {};
        function qe(e) {
            var t = S.cssProps[e] || We[e];
            return t || (e in Ue ? e : We[e] = function(e) {
                for (var t = e[0].toUpperCase() + e.slice(1), n = je.length; n--; )
                    if ((e = je[n] + t)in Ue)
                        return e
            }(e) || e)
        }
        var Xe = /^(none|table(?!-c[ea]).+)/
          , Ye = /^--/
          , Ze = {
            position: "absolute",
            visibility: "hidden",
            display: "block"
        }
          , $e = {
            letterSpacing: "0",
            fontWeight: "400"
        };
        function Je(e, t, n) {
            var r = re.exec(t);
            return r ? Math.max(0, r[2] - (n || 0)) + (r[3] || "px") : t
        }
        function Ke(e, t, n, r, i, a) {
            var o = "width" === t ? 1 : 0
              , s = 0
              , l = 0;
            if (n === (r ? "border" : "content"))
                return 0;
            for (; o < 4; o += 2)
                "margin" === n && (l += S.css(e, n + ie[o], !0, i)),
                r ? ("content" === n && (l -= S.css(e, "padding" + ie[o], !0, i)),
                "margin" !== n && (l -= S.css(e, "border" + ie[o] + "Width", !0, i))) : (l += S.css(e, "padding" + ie[o], !0, i),
                "padding" !== n ? l += S.css(e, "border" + ie[o] + "Width", !0, i) : s += S.css(e, "border" + ie[o] + "Width", !0, i));
            return !r && a >= 0 && (l += Math.max(0, Math.ceil(e["offset" + t[0].toUpperCase() + t.slice(1)] - a - l - s - .5)) || 0),
            l
        }
        function Qe(e, t, n) {
            var r = Be(e)
              , i = (!g.boxSizingReliable() || n) && "border-box" === S.css(e, "boxSizing", !1, r)
              , a = i
              , o = He(e, t, r)
              , s = "offset" + t[0].toUpperCase() + t.slice(1);
            if (Ne.test(o)) {
                if (!n)
                    return o;
                o = "auto"
            }
            return (!g.boxSizingReliable() && i || !g.reliableTrDimensions() && C(e, "tr") || "auto" === o || !parseFloat(o) && "inline" === S.css(e, "display", !1, r)) && e.getClientRects().length && (i = "border-box" === S.css(e, "boxSizing", !1, r),
            (a = s in e) && (o = e[s])),
            (o = parseFloat(o) || 0) + Ke(e, t, n || (i ? "border" : "content"), a, r, o) + "px"
        }
        function et(e, t, n, r, i) {
            return new et.prototype.init(e,t,n,r,i)
        }
        S.extend({
            cssHooks: {
                opacity: {
                    get: function(e, t) {
                        if (t) {
                            var n = He(e, "opacity");
                            return "" === n ? "1" : n
                        }
                    }
                }
            },
            cssNumber: {
                animationIterationCount: !0,
                columnCount: !0,
                fillOpacity: !0,
                flexGrow: !0,
                flexShrink: !0,
                fontWeight: !0,
                gridArea: !0,
                gridColumn: !0,
                gridColumnEnd: !0,
                gridColumnStart: !0,
                gridRow: !0,
                gridRowEnd: !0,
                gridRowStart: !0,
                lineHeight: !0,
                opacity: !0,
                order: !0,
                orphans: !0,
                widows: !0,
                zIndex: !0,
                zoom: !0
            },
            cssProps: {},
            style: function(e, t, n, r) {
                if (e && 3 !== e.nodeType && 8 !== e.nodeType && e.style) {
                    var i, a, o, s = Y(t), l = Ye.test(t), u = e.style;
                    if (l || (t = qe(s)),
                    o = S.cssHooks[t] || S.cssHooks[s],
                    void 0 === n)
                        return o && "get"in o && void 0 !== (i = o.get(e, !1, r)) ? i : u[t];
                    "string" === (a = typeof n) && (i = re.exec(n)) && i[1] && (n = ue(e, t, i),
                    a = "number"),
                    null != n && n === n && ("number" !== a || l || (n += i && i[3] || (S.cssNumber[s] ? "" : "px")),
                    g.clearCloneStyle || "" !== n || 0 !== t.indexOf("background") || (u[t] = "inherit"),
                    o && "set"in o && void 0 === (n = o.set(e, n, r)) || (l ? u.setProperty(t, n) : u[t] = n))
                }
            },
            css: function(e, t, n, r) {
                var i, a, o, s = Y(t);
                return Ye.test(t) || (t = qe(s)),
                (o = S.cssHooks[t] || S.cssHooks[s]) && "get"in o && (i = o.get(e, !0, n)),
                void 0 === i && (i = He(e, t, r)),
                "normal" === i && t in $e && (i = $e[t]),
                "" === n || n ? (a = parseFloat(i),
                !0 === n || isFinite(a) ? a || 0 : i) : i
            }
        }),
        S.each(["height", "width"], (function(e, t) {
            S.cssHooks[t] = {
                get: function(e, n, r) {
                    if (n)
                        return !Xe.test(S.css(e, "display")) || e.getClientRects().length && e.getBoundingClientRect().width ? Qe(e, t, r) : ze(e, Ze, (function() {
                            return Qe(e, t, r)
                        }
                        ))
                },
                set: function(e, n, r) {
                    var i, a = Be(e), o = !g.scrollboxSize() && "absolute" === a.position, s = (o || r) && "border-box" === S.css(e, "boxSizing", !1, a), l = r ? Ke(e, t, r, s, a) : 0;
                    return s && o && (l -= Math.ceil(e["offset" + t[0].toUpperCase() + t.slice(1)] - parseFloat(a[t]) - Ke(e, t, "border", !1, a) - .5)),
                    l && (i = re.exec(n)) && "px" !== (i[3] || "px") && (e.style[t] = n,
                    n = S.css(e, t)),
                    Je(0, n, l)
                }
            }
        }
        )),
        S.cssHooks.marginLeft = Ve(g.reliableMarginLeft, (function(e, t) {
            if (t)
                return (parseFloat(He(e, "marginLeft")) || e.getBoundingClientRect().left - ze(e, {
                    marginLeft: 0
                }, (function() {
                    return e.getBoundingClientRect().left
                }
                ))) + "px"
        }
        )),
        S.each({
            margin: "",
            padding: "",
            border: "Width"
        }, (function(e, t) {
            S.cssHooks[e + t] = {
                expand: function(n) {
                    for (var r = 0, i = {}, a = "string" === typeof n ? n.split(" ") : [n]; r < 4; r++)
                        i[e + ie[r] + t] = a[r] || a[r - 2] || a[0];
                    return i
                }
            },
            "margin" !== e && (S.cssHooks[e + t].set = Je)
        }
        )),
        S.fn.extend({
            css: function(e, t) {
                return U(this, (function(e, t, n) {
                    var r, i, a = {}, o = 0;
                    if (Array.isArray(t)) {
                        for (r = Be(e),
                        i = t.length; o < i; o++)
                            a[t[o]] = S.css(e, t[o], !1, r);
                        return a
                    }
                    return void 0 !== n ? S.style(e, t, n) : S.css(e, t)
                }
                ), e, t, arguments.length > 1)
            }
        }),
        S.Tween = et,
        et.prototype = {
            constructor: et,
            init: function(e, t, n, r, i, a) {
                this.elem = e,
                this.prop = n,
                this.easing = i || S.easing._default,
                this.options = t,
                this.start = this.now = this.cur(),
                this.end = r,
                this.unit = a || (S.cssNumber[n] ? "" : "px")
            },
            cur: function() {
                var e = et.propHooks[this.prop];
                return e && e.get ? e.get(this) : et.propHooks._default.get(this)
            },
            run: function(e) {
                var t, n = et.propHooks[this.prop];
                return this.options.duration ? this.pos = t = S.easing[this.easing](e, this.options.duration * e, 0, 1, this.options.duration) : this.pos = t = e,
                this.now = (this.end - this.start) * t + this.start,
                this.options.step && this.options.step.call(this.elem, this.now, this),
                n && n.set ? n.set(this) : et.propHooks._default.set(this),
                this
            }
        },
        et.prototype.init.prototype = et.prototype,
        et.propHooks = {
            _default: {
                get: function(e) {
                    var t;
                    return 1 !== e.elem.nodeType || null != e.elem[e.prop] && null == e.elem.style[e.prop] ? e.elem[e.prop] : (t = S.css(e.elem, e.prop, "")) && "auto" !== t ? t : 0
                },
                set: function(e) {
                    S.fx.step[e.prop] ? S.fx.step[e.prop](e) : 1 !== e.elem.nodeType || !S.cssHooks[e.prop] && null == e.elem.style[qe(e.prop)] ? e.elem[e.prop] = e.now : S.style(e.elem, e.prop, e.now + e.unit)
                }
            }
        },
        et.propHooks.scrollTop = et.propHooks.scrollLeft = {
            set: function(e) {
                e.elem.nodeType && e.elem.parentNode && (e.elem[e.prop] = e.now)
            }
        },
        S.easing = {
            linear: function(e) {
                return e
            },
            swing: function(e) {
                return .5 - Math.cos(e * Math.PI) / 2
            },
            _default: "swing"
        },
        (S.fx = et.prototype.init).step = {};
        var tt, nt, rt = /^(?:toggle|show|hide)$/, it = /queueHooks$/;
        function at() {
            nt && (!1 === b.hidden && n.requestAnimationFrame ? n.requestAnimationFrame(at) : n.setTimeout(at, S.fx.interval),
            S.fx.tick())
        }
        function ot() {
            return n.setTimeout((function() {
                tt = void 0
            }
            )),
            tt = Date.now()
        }
        function st(e, t) {
            var n, r = 0, i = {
                height: e
            };
            for (t = t ? 1 : 0; r < 4; r += 2 - t)
                i["margin" + (n = ie[r])] = i["padding" + n] = e;
            return t && (i.opacity = i.width = e),
            i
        }
        function lt(e, t, n) {
            for (var r, i = (ut.tweeners[t] || []).concat(ut.tweeners["*"]), a = 0, o = i.length; a < o; a++)
                if (r = i[a].call(n, t, e))
                    return r
        }
        function ut(e, t, n) {
            var r, i, a = 0, o = ut.prefilters.length, s = S.Deferred().always((function() {
                delete l.elem
            }
            )), l = function() {
                if (i)
                    return !1;
                for (var t = tt || ot(), n = Math.max(0, u.startTime + u.duration - t), r = 1 - (n / u.duration || 0), a = 0, o = u.tweens.length; a < o; a++)
                    u.tweens[a].run(r);
                return s.notifyWith(e, [u, r, n]),
                r < 1 && o ? n : (o || s.notifyWith(e, [u, 1, 0]),
                s.resolveWith(e, [u]),
                !1)
            }, u = s.promise({
                elem: e,
                props: S.extend({}, t),
                opts: S.extend(!0, {
                    specialEasing: {},
                    easing: S.easing._default
                }, n),
                originalProperties: t,
                originalOptions: n,
                startTime: tt || ot(),
                duration: n.duration,
                tweens: [],
                createTween: function(t, n) {
                    var r = S.Tween(e, u.opts, t, n, u.opts.specialEasing[t] || u.opts.easing);
                    return u.tweens.push(r),
                    r
                },
                stop: function(t) {
                    var n = 0
                      , r = t ? u.tweens.length : 0;
                    if (i)
                        return this;
                    for (i = !0; n < r; n++)
                        u.tweens[n].run(1);
                    return t ? (s.notifyWith(e, [u, 1, 0]),
                    s.resolveWith(e, [u, t])) : s.rejectWith(e, [u, t]),
                    this
                }
            }), c = u.props;
            for (!function(e, t) {
                var n, r, i, a, o;
                for (n in e)
                    if (i = t[r = Y(n)],
                    a = e[n],
                    Array.isArray(a) && (i = a[1],
                    a = e[n] = a[0]),
                    n !== r && (e[r] = a,
                    delete e[n]),
                    (o = S.cssHooks[r]) && "expand"in o)
                        for (n in a = o.expand(a),
                        delete e[r],
                        a)
                            n in e || (e[n] = a[n],
                            t[n] = i);
                    else
                        t[r] = i
            }(c, u.opts.specialEasing); a < o; a++)
                if (r = ut.prefilters[a].call(u, e, c, u.opts))
                    return v(r.stop) && (S._queueHooks(u.elem, u.opts.queue).stop = r.stop.bind(r)),
                    r;
            return S.map(c, lt, u),
            v(u.opts.start) && u.opts.start.call(e, u),
            u.progress(u.opts.progress).done(u.opts.done, u.opts.complete).fail(u.opts.fail).always(u.opts.always),
            S.fx.timer(S.extend(l, {
                elem: e,
                anim: u,
                queue: u.opts.queue
            })),
            u
        }
        S.Animation = S.extend(ut, {
            tweeners: {
                "*": [function(e, t) {
                    var n = this.createTween(e, t);
                    return ue(n.elem, e, re.exec(t), n),
                    n
                }
                ]
            },
            tweener: function(e, t) {
                v(e) ? (t = e,
                e = ["*"]) : e = e.match(N);
                for (var n, r = 0, i = e.length; r < i; r++)
                    n = e[r],
                    ut.tweeners[n] = ut.tweeners[n] || [],
                    ut.tweeners[n].unshift(t)
            },
            prefilters: [function(e, t, n) {
                var r, i, a, o, s, l, u, c, h = "width"in t || "height"in t, p = this, f = {}, d = e.style, m = e.nodeType && le(e), g = J.get(e, "fxshow");
                for (r in n.queue || (null == (o = S._queueHooks(e, "fx")).unqueued && (o.unqueued = 0,
                s = o.empty.fire,
                o.empty.fire = function() {
                    o.unqueued || s()
                }
                ),
                o.unqueued++,
                p.always((function() {
                    p.always((function() {
                        o.unqueued--,
                        S.queue(e, "fx").length || o.empty.fire()
                    }
                    ))
                }
                ))),
                t)
                    if (i = t[r],
                    rt.test(i)) {
                        if (delete t[r],
                        a = a || "toggle" === i,
                        i === (m ? "hide" : "show")) {
                            if ("show" !== i || !g || void 0 === g[r])
                                continue;
                            m = !0
                        }
                        f[r] = g && g[r] || S.style(e, r)
                    }
                if ((l = !S.isEmptyObject(t)) || !S.isEmptyObject(f))
                    for (r in h && 1 === e.nodeType && (n.overflow = [d.overflow, d.overflowX, d.overflowY],
                    null == (u = g && g.display) && (u = J.get(e, "display")),
                    "none" === (c = S.css(e, "display")) && (u ? c = u : (pe([e], !0),
                    u = e.style.display || u,
                    c = S.css(e, "display"),
                    pe([e]))),
                    ("inline" === c || "inline-block" === c && null != u) && "none" === S.css(e, "float") && (l || (p.done((function() {
                        d.display = u
                    }
                    )),
                    null == u && (c = d.display,
                    u = "none" === c ? "" : c)),
                    d.display = "inline-block")),
                    n.overflow && (d.overflow = "hidden",
                    p.always((function() {
                        d.overflow = n.overflow[0],
                        d.overflowX = n.overflow[1],
                        d.overflowY = n.overflow[2]
                    }
                    ))),
                    l = !1,
                    f)
                        l || (g ? "hidden"in g && (m = g.hidden) : g = J.access(e, "fxshow", {
                            display: u
                        }),
                        a && (g.hidden = !m),
                        m && pe([e], !0),
                        p.done((function() {
                            for (r in m || pe([e]),
                            J.remove(e, "fxshow"),
                            f)
                                S.style(e, r, f[r])
                        }
                        ))),
                        l = lt(m ? g[r] : 0, r, p),
                        r in g || (g[r] = l.start,
                        m && (l.end = l.start,
                        l.start = 0))
            }
            ],
            prefilter: function(e, t) {
                t ? ut.prefilters.unshift(e) : ut.prefilters.push(e)
            }
        }),
        S.speed = function(e, t, n) {
            var r = e && "object" === typeof e ? S.extend({}, e) : {
                complete: n || !n && t || v(e) && e,
                duration: e,
                easing: n && t || t && !v(t) && t
            };
            return S.fx.off ? r.duration = 0 : "number" !== typeof r.duration && (r.duration in S.fx.speeds ? r.duration = S.fx.speeds[r.duration] : r.duration = S.fx.speeds._default),
            null != r.queue && !0 !== r.queue || (r.queue = "fx"),
            r.old = r.complete,
            r.complete = function() {
                v(r.old) && r.old.call(this),
                r.queue && S.dequeue(this, r.queue)
            }
            ,
            r
        }
        ,
        S.fn.extend({
            fadeTo: function(e, t, n, r) {
                return this.filter(le).css("opacity", 0).show().end().animate({
                    opacity: t
                }, e, n, r)
            },
            animate: function(e, t, n, r) {
                var i = S.isEmptyObject(e)
                  , a = S.speed(t, n, r)
                  , o = function() {
                    var t = ut(this, S.extend({}, e), a);
                    (i || J.get(this, "finish")) && t.stop(!0)
                };
                return o.finish = o,
                i || !1 === a.queue ? this.each(o) : this.queue(a.queue, o)
            },
            stop: function(e, t, n) {
                var r = function(e) {
                    var t = e.stop;
                    delete e.stop,
                    t(n)
                };
                return "string" !== typeof e && (n = t,
                t = e,
                e = void 0),
                t && this.queue(e || "fx", []),
                this.each((function() {
                    var t = !0
                      , i = null != e && e + "queueHooks"
                      , a = S.timers
                      , o = J.get(this);
                    if (i)
                        o[i] && o[i].stop && r(o[i]);
                    else
                        for (i in o)
                            o[i] && o[i].stop && it.test(i) && r(o[i]);
                    for (i = a.length; i--; )
                        a[i].elem !== this || null != e && a[i].queue !== e || (a[i].anim.stop(n),
                        t = !1,
                        a.splice(i, 1));
                    !t && n || S.dequeue(this, e)
                }
                ))
            },
            finish: function(e) {
                return !1 !== e && (e = e || "fx"),
                this.each((function() {
                    var t, n = J.get(this), r = n[e + "queue"], i = n[e + "queueHooks"], a = S.timers, o = r ? r.length : 0;
                    for (n.finish = !0,
                    S.queue(this, e, []),
                    i && i.stop && i.stop.call(this, !0),
                    t = a.length; t--; )
                        a[t].elem === this && a[t].queue === e && (a[t].anim.stop(!0),
                        a.splice(t, 1));
                    for (t = 0; t < o; t++)
                        r[t] && r[t].finish && r[t].finish.call(this);
                    delete n.finish
                }
                ))
            }
        }),
        S.each(["toggle", "show", "hide"], (function(e, t) {
            var n = S.fn[t];
            S.fn[t] = function(e, r, i) {
                return null == e || "boolean" === typeof e ? n.apply(this, arguments) : this.animate(st(t, !0), e, r, i)
            }
        }
        )),
        S.each({
            slideDown: st("show"),
            slideUp: st("hide"),
            slideToggle: st("toggle"),
            fadeIn: {
                opacity: "show"
            },
            fadeOut: {
                opacity: "hide"
            },
            fadeToggle: {
                opacity: "toggle"
            }
        }, (function(e, t) {
            S.fn[e] = function(e, n, r) {
                return this.animate(t, e, n, r)
            }
        }
        )),
        S.timers = [],
        S.fx.tick = function() {
            var e, t = 0, n = S.timers;
            for (tt = Date.now(); t < n.length; t++)
                (e = n[t])() || n[t] !== e || n.splice(t--, 1);
            n.length || S.fx.stop(),
            tt = void 0
        }
        ,
        S.fx.timer = function(e) {
            S.timers.push(e),
            S.fx.start()
        }
        ,
        S.fx.interval = 13,
        S.fx.start = function() {
            nt || (nt = !0,
            at())
        }
        ,
        S.fx.stop = function() {
            nt = null
        }
        ,
        S.fx.speeds = {
            slow: 600,
            fast: 200,
            _default: 400
        },
        S.fn.delay = function(e, t) {
            return e = S.fx && S.fx.speeds[e] || e,
            t = t || "fx",
            this.queue(t, (function(t, r) {
                var i = n.setTimeout(t, e);
                r.stop = function() {
                    n.clearTimeout(i)
                }
            }
            ))
        }
        ,
        function() {
            var e = b.createElement("input")
              , t = b.createElement("select").appendChild(b.createElement("option"));
            e.type = "checkbox",
            g.checkOn = "" !== e.value,
            g.optSelected = t.selected,
            (e = b.createElement("input")).value = "t",
            e.type = "radio",
            g.radioValue = "t" === e.value
        }();
        var ct, ht = S.expr.attrHandle;
        S.fn.extend({
            attr: function(e, t) {
                return U(this, S.attr, e, t, arguments.length > 1)
            },
            removeAttr: function(e) {
                return this.each((function() {
                    S.removeAttr(this, e)
                }
                ))
            }
        }),
        S.extend({
            attr: function(e, t, n) {
                var r, i, a = e.nodeType;
                if (3 !== a && 8 !== a && 2 !== a)
                    return "undefined" === typeof e.getAttribute ? S.prop(e, t, n) : (1 === a && S.isXMLDoc(e) || (i = S.attrHooks[t.toLowerCase()] || (S.expr.match.bool.test(t) ? ct : void 0)),
                    void 0 !== n ? null === n ? void S.removeAttr(e, t) : i && "set"in i && void 0 !== (r = i.set(e, n, t)) ? r : (e.setAttribute(t, n + ""),
                    n) : i && "get"in i && null !== (r = i.get(e, t)) ? r : null == (r = S.find.attr(e, t)) ? void 0 : r)
            },
            attrHooks: {
                type: {
                    set: function(e, t) {
                        if (!g.radioValue && "radio" === t && C(e, "input")) {
                            var n = e.value;
                            return e.setAttribute("type", t),
                            n && (e.value = n),
                            t
                        }
                    }
                }
            },
            removeAttr: function(e, t) {
                var n, r = 0, i = t && t.match(N);
                if (i && 1 === e.nodeType)
                    for (; n = i[r++]; )
                        e.removeAttribute(n)
            }
        }),
        ct = {
            set: function(e, t, n) {
                return !1 === t ? S.removeAttr(e, n) : e.setAttribute(n, n),
                n
            }
        },
        S.each(S.expr.match.bool.source.match(/\w+/g), (function(e, t) {
            var n = ht[t] || S.find.attr;
            ht[t] = function(e, t, r) {
                var i, a, o = t.toLowerCase();
                return r || (a = ht[o],
                ht[o] = i,
                i = null != n(e, t, r) ? o : null,
                ht[o] = a),
                i
            }
        }
        ));
        var pt = /^(?:input|select|textarea|button)$/i
          , ft = /^(?:a|area)$/i;
        function dt(e) {
            return (e.match(N) || []).join(" ")
        }
        function mt(e) {
            return e.getAttribute && e.getAttribute("class") || ""
        }
        function gt(e) {
            return Array.isArray(e) ? e : "string" === typeof e && e.match(N) || []
        }
        S.fn.extend({
            prop: function(e, t) {
                return U(this, S.prop, e, t, arguments.length > 1)
            },
            removeProp: function(e) {
                return this.each((function() {
                    delete this[S.propFix[e] || e]
                }
                ))
            }
        }),
        S.extend({
            prop: function(e, t, n) {
                var r, i, a = e.nodeType;
                if (3 !== a && 8 !== a && 2 !== a)
                    return 1 === a && S.isXMLDoc(e) || (t = S.propFix[t] || t,
                    i = S.propHooks[t]),
                    void 0 !== n ? i && "set"in i && void 0 !== (r = i.set(e, n, t)) ? r : e[t] = n : i && "get"in i && null !== (r = i.get(e, t)) ? r : e[t]
            },
            propHooks: {
                tabIndex: {
                    get: function(e) {
                        var t = S.find.attr(e, "tabindex");
                        return t ? parseInt(t, 10) : pt.test(e.nodeName) || ft.test(e.nodeName) && e.href ? 0 : -1
                    }
                }
            },
            propFix: {
                for: "htmlFor",
                class: "className"
            }
        }),
        g.optSelected || (S.propHooks.selected = {
            get: function(e) {
                var t = e.parentNode;
                return t && t.parentNode && t.parentNode.selectedIndex,
                null
            },
            set: function(e) {
                var t = e.parentNode;
                t && (t.selectedIndex,
                t.parentNode && t.parentNode.selectedIndex)
            }
        }),
        S.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], (function() {
            S.propFix[this.toLowerCase()] = this
        }
        )),
        S.fn.extend({
            addClass: function(e) {
                var t, n, r, i, a, o, s, l = 0;
                if (v(e))
                    return this.each((function(t) {
                        S(this).addClass(e.call(this, t, mt(this)))
                    }
                    ));
                if ((t = gt(e)).length)
                    for (; n = this[l++]; )
                        if (i = mt(n),
                        r = 1 === n.nodeType && " " + dt(i) + " ") {
                            for (o = 0; a = t[o++]; )
                                r.indexOf(" " + a + " ") < 0 && (r += a + " ");
                            i !== (s = dt(r)) && n.setAttribute("class", s)
                        }
                return this
            },
            removeClass: function(e) {
                var t, n, r, i, a, o, s, l = 0;
                if (v(e))
                    return this.each((function(t) {
                        S(this).removeClass(e.call(this, t, mt(this)))
                    }
                    ));
                if (!arguments.length)
                    return this.attr("class", "");
                if ((t = gt(e)).length)
                    for (; n = this[l++]; )
                        if (i = mt(n),
                        r = 1 === n.nodeType && " " + dt(i) + " ") {
                            for (o = 0; a = t[o++]; )
                                for (; r.indexOf(" " + a + " ") > -1; )
                                    r = r.replace(" " + a + " ", " ");
                            i !== (s = dt(r)) && n.setAttribute("class", s)
                        }
                return this
            },
            toggleClass: function(e, t) {
                var n = typeof e
                  , r = "string" === n || Array.isArray(e);
                return "boolean" === typeof t && r ? t ? this.addClass(e) : this.removeClass(e) : v(e) ? this.each((function(n) {
                    S(this).toggleClass(e.call(this, n, mt(this), t), t)
                }
                )) : this.each((function() {
                    var t, i, a, o;
                    if (r)
                        for (i = 0,
                        a = S(this),
                        o = gt(e); t = o[i++]; )
                            a.hasClass(t) ? a.removeClass(t) : a.addClass(t);
                    else
                        void 0 !== e && "boolean" !== n || ((t = mt(this)) && J.set(this, "__className__", t),
                        this.setAttribute && this.setAttribute("class", t || !1 === e ? "" : J.get(this, "__className__") || ""))
                }
                ))
            },
            hasClass: function(e) {
                var t, n, r = 0;
                for (t = " " + e + " "; n = this[r++]; )
                    if (1 === n.nodeType && (" " + dt(mt(n)) + " ").indexOf(t) > -1)
                        return !0;
                return !1
            }
        });
        var vt = /\r/g;
        S.fn.extend({
            val: function(e) {
                var t, n, r, i = this[0];
                return arguments.length ? (r = v(e),
                this.each((function(n) {
                    var i;
                    1 === this.nodeType && (null == (i = r ? e.call(this, n, S(this).val()) : e) ? i = "" : "number" === typeof i ? i += "" : Array.isArray(i) && (i = S.map(i, (function(e) {
                        return null == e ? "" : e + ""
                    }
                    ))),
                    (t = S.valHooks[this.type] || S.valHooks[this.nodeName.toLowerCase()]) && "set"in t && void 0 !== t.set(this, i, "value") || (this.value = i))
                }
                ))) : i ? (t = S.valHooks[i.type] || S.valHooks[i.nodeName.toLowerCase()]) && "get"in t && void 0 !== (n = t.get(i, "value")) ? n : "string" === typeof (n = i.value) ? n.replace(vt, "") : null == n ? "" : n : void 0
            }
        }),
        S.extend({
            valHooks: {
                option: {
                    get: function(e) {
                        var t = S.find.attr(e, "value");
                        return null != t ? t : dt(S.text(e))
                    }
                },
                select: {
                    get: function(e) {
                        var t, n, r, i = e.options, a = e.selectedIndex, o = "select-one" === e.type, s = o ? null : [], l = o ? a + 1 : i.length;
                        for (r = a < 0 ? l : o ? a : 0; r < l; r++)
                            if (((n = i[r]).selected || r === a) && !n.disabled && (!n.parentNode.disabled || !C(n.parentNode, "optgroup"))) {
                                if (t = S(n).val(),
                                o)
                                    return t;
                                s.push(t)
                            }
                        return s
                    },
                    set: function(e, t) {
                        for (var n, r, i = e.options, a = S.makeArray(t), o = i.length; o--; )
                            ((r = i[o]).selected = S.inArray(S.valHooks.option.get(r), a) > -1) && (n = !0);
                        return n || (e.selectedIndex = -1),
                        a
                    }
                }
            }
        }),
        S.each(["radio", "checkbox"], (function() {
            S.valHooks[this] = {
                set: function(e, t) {
                    if (Array.isArray(t))
                        return e.checked = S.inArray(S(e).val(), t) > -1
                }
            },
            g.checkOn || (S.valHooks[this].get = function(e) {
                return null === e.getAttribute("value") ? "on" : e.value
            }
            )
        }
        )),
        g.focusin = "onfocusin"in n;
        var yt = /^(?:focusinfocus|focusoutblur)$/
          , bt = function(e) {
            e.stopPropagation()
        };
        S.extend(S.event, {
            trigger: function(e, t, r, i) {
                var a, o, s, l, u, c, h, p, d = [r || b], m = f.call(e, "type") ? e.type : e, g = f.call(e, "namespace") ? e.namespace.split(".") : [];
                if (o = p = s = r = r || b,
                3 !== r.nodeType && 8 !== r.nodeType && !yt.test(m + S.event.triggered) && (m.indexOf(".") > -1 && (g = m.split("."),
                m = g.shift(),
                g.sort()),
                u = m.indexOf(":") < 0 && "on" + m,
                (e = e[S.expando] ? e : new S.Event(m,"object" === typeof e && e)).isTrigger = i ? 2 : 3,
                e.namespace = g.join("."),
                e.rnamespace = e.namespace ? new RegExp("(^|\\.)" + g.join("\\.(?:.*\\.|)") + "(\\.|$)") : null,
                e.result = void 0,
                e.target || (e.target = r),
                t = null == t ? [e] : S.makeArray(t, [e]),
                h = S.event.special[m] || {},
                i || !h.trigger || !1 !== h.trigger.apply(r, t))) {
                    if (!i && !h.noBubble && !y(r)) {
                        for (l = h.delegateType || m,
                        yt.test(l + m) || (o = o.parentNode); o; o = o.parentNode)
                            d.push(o),
                            s = o;
                        s === (r.ownerDocument || b) && d.push(s.defaultView || s.parentWindow || n)
                    }
                    for (a = 0; (o = d[a++]) && !e.isPropagationStopped(); )
                        p = o,
                        e.type = a > 1 ? l : h.bindType || m,
                        (c = (J.get(o, "events") || Object.create(null))[e.type] && J.get(o, "handle")) && c.apply(o, t),
                        (c = u && o[u]) && c.apply && Z(o) && (e.result = c.apply(o, t),
                        !1 === e.result && e.preventDefault());
                    return e.type = m,
                    i || e.isDefaultPrevented() || h._default && !1 !== h._default.apply(d.pop(), t) || !Z(r) || u && v(r[m]) && !y(r) && ((s = r[u]) && (r[u] = null),
                    S.event.triggered = m,
                    e.isPropagationStopped() && p.addEventListener(m, bt),
                    r[m](),
                    e.isPropagationStopped() && p.removeEventListener(m, bt),
                    S.event.triggered = void 0,
                    s && (r[u] = s)),
                    e.result
                }
            },
            simulate: function(e, t, n) {
                var r = S.extend(new S.Event, n, {
                    type: e,
                    isSimulated: !0
                });
                S.event.trigger(r, null, t)
            }
        }),
        S.fn.extend({
            trigger: function(e, t) {
                return this.each((function() {
                    S.event.trigger(e, t, this)
                }
                ))
            },
            triggerHandler: function(e, t) {
                var n = this[0];
                if (n)
                    return S.event.trigger(e, t, n, !0)
            }
        }),
        g.focusin || S.each({
            focus: "focusin",
            blur: "focusout"
        }, (function(e, t) {
            var n = function(e) {
                S.event.simulate(t, e.target, S.event.fix(e))
            };
            S.event.special[t] = {
                setup: function() {
                    var r = this.ownerDocument || this.document || this
                      , i = J.access(r, t);
                    i || r.addEventListener(e, n, !0),
                    J.access(r, t, (i || 0) + 1)
                },
                teardown: function() {
                    var r = this.ownerDocument || this.document || this
                      , i = J.access(r, t) - 1;
                    i ? J.access(r, t, i) : (r.removeEventListener(e, n, !0),
                    J.remove(r, t))
                }
            }
        }
        ));
        var xt = n.location
          , wt = {
            guid: Date.now()
        }
          , _t = /\?/;
        S.parseXML = function(e) {
            var t, r;
            if (!e || "string" !== typeof e)
                return null;
            try {
                t = (new n.DOMParser).parseFromString(e, "text/xml")
            } catch (i) {}
            return r = t && t.getElementsByTagName("parsererror")[0],
            t && !r || S.error("Invalid XML: " + (r ? S.map(r.childNodes, (function(e) {
                return e.textContent
            }
            )).join("\n") : e)),
            t
        }
        ;
        var St = /\[\]$/
          , Et = /\r?\n/g
          , Mt = /^(?:submit|button|image|reset|file)$/i
          , Tt = /^(?:input|select|textarea|keygen)/i;
        function At(e, t, n, r) {
            var i;
            if (Array.isArray(t))
                S.each(t, (function(t, i) {
                    n || St.test(e) ? r(e, i) : At(e + "[" + ("object" === typeof i && null != i ? t : "") + "]", i, n, r)
                }
                ));
            else if (n || "object" !== _(t))
                r(e, t);
            else
                for (i in t)
                    At(e + "[" + i + "]", t[i], n, r)
        }
        S.param = function(e, t) {
            var n, r = [], i = function(e, t) {
                var n = v(t) ? t() : t;
                r[r.length] = encodeURIComponent(e) + "=" + encodeURIComponent(null == n ? "" : n)
            };
            if (null == e)
                return "";
            if (Array.isArray(e) || e.jquery && !S.isPlainObject(e))
                S.each(e, (function() {
                    i(this.name, this.value)
                }
                ));
            else
                for (n in e)
                    At(n, e[n], t, i);
            return r.join("&")
        }
        ,
        S.fn.extend({
            serialize: function() {
                return S.param(this.serializeArray())
            },
            serializeArray: function() {
                return this.map((function() {
                    var e = S.prop(this, "elements");
                    return e ? S.makeArray(e) : this
                }
                )).filter((function() {
                    var e = this.type;
                    return this.name && !S(this).is(":disabled") && Tt.test(this.nodeName) && !Mt.test(e) && (this.checked || !fe.test(e))
                }
                )).map((function(e, t) {
                    var n = S(this).val();
                    return null == n ? null : Array.isArray(n) ? S.map(n, (function(e) {
                        return {
                            name: t.name,
                            value: e.replace(Et, "\r\n")
                        }
                    }
                    )) : {
                        name: t.name,
                        value: n.replace(Et, "\r\n")
                    }
                }
                )).get()
            }
        });
        var Pt = /%20/g
          , Ct = /#.*$/
          , Lt = /([?&])_=[^&]*/
          , Rt = /^(.*?):[ \t]*([^\r\n]*)$/gm
          , kt = /^(?:GET|HEAD)$/
          , Dt = /^\/\//
          , It = {}
          , Ot = {}
          , Ft = "*/".concat("*")
          , Nt = b.createElement("a");
        function Bt(e) {
            return function(t, n) {
                "string" !== typeof t && (n = t,
                t = "*");
                var r, i = 0, a = t.toLowerCase().match(N) || [];
                if (v(n))
                    for (; r = a[i++]; )
                        "+" === r[0] ? (r = r.slice(1) || "*",
                        (e[r] = e[r] || []).unshift(n)) : (e[r] = e[r] || []).push(n)
            }
        }
        function zt(e, t, n, r) {
            var i = {}
              , a = e === Ot;
            function o(s) {
                var l;
                return i[s] = !0,
                S.each(e[s] || [], (function(e, s) {
                    var u = s(t, n, r);
                    return "string" !== typeof u || a || i[u] ? a ? !(l = u) : void 0 : (t.dataTypes.unshift(u),
                    o(u),
                    !1)
                }
                )),
                l
            }
            return o(t.dataTypes[0]) || !i["*"] && o("*")
        }
        function Gt(e, t) {
            var n, r, i = S.ajaxSettings.flatOptions || {};
            for (n in t)
                void 0 !== t[n] && ((i[n] ? e : r || (r = {}))[n] = t[n]);
            return r && S.extend(!0, e, r),
            e
        }
        Nt.href = xt.href,
        S.extend({
            active: 0,
            lastModified: {},
            etag: {},
            ajaxSettings: {
                url: xt.href,
                type: "GET",
                isLocal: /^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(xt.protocol),
                global: !0,
                processData: !0,
                async: !0,
                contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                accepts: {
                    "*": Ft,
                    text: "text/plain",
                    html: "text/html",
                    xml: "application/xml, text/xml",
                    json: "application/json, text/javascript"
                },
                contents: {
                    xml: /\bxml\b/,
                    html: /\bhtml/,
                    json: /\bjson\b/
                },
                responseFields: {
                    xml: "responseXML",
                    text: "responseText",
                    json: "responseJSON"
                },
                converters: {
                    "* text": String,
                    "text html": !0,
                    "text json": JSON.parse,
                    "text xml": S.parseXML
                },
                flatOptions: {
                    url: !0,
                    context: !0
                }
            },
            ajaxSetup: function(e, t) {
                return t ? Gt(Gt(e, S.ajaxSettings), t) : Gt(S.ajaxSettings, e)
            },
            ajaxPrefilter: Bt(It),
            ajaxTransport: Bt(Ot),
            ajax: function(e, t) {
                "object" === typeof e && (t = e,
                e = void 0);
                var r, i, a, o, s, l, u, c, h, p, f = S.ajaxSetup({}, t = t || {}), d = f.context || f, m = f.context && (d.nodeType || d.jquery) ? S(d) : S.event, g = S.Deferred(), v = S.Callbacks("once memory"), y = f.statusCode || {}, x = {}, w = {}, _ = "canceled", E = {
                    readyState: 0,
                    getResponseHeader: function(e) {
                        var t;
                        if (u) {
                            if (!o)
                                for (o = {}; t = Rt.exec(a); )
                                    o[t[1].toLowerCase() + " "] = (o[t[1].toLowerCase() + " "] || []).concat(t[2]);
                            t = o[e.toLowerCase() + " "]
                        }
                        return null == t ? null : t.join(", ")
                    },
                    getAllResponseHeaders: function() {
                        return u ? a : null
                    },
                    setRequestHeader: function(e, t) {
                        return null == u && (e = w[e.toLowerCase()] = w[e.toLowerCase()] || e,
                        x[e] = t),
                        this
                    },
                    overrideMimeType: function(e) {
                        return null == u && (f.mimeType = e),
                        this
                    },
                    statusCode: function(e) {
                        var t;
                        if (e)
                            if (u)
                                E.always(e[E.status]);
                            else
                                for (t in e)
                                    y[t] = [y[t], e[t]];
                        return this
                    },
                    abort: function(e) {
                        var t = e || _;
                        return r && r.abort(t),
                        M(0, t),
                        this
                    }
                };
                if (g.promise(E),
                f.url = ((e || f.url || xt.href) + "").replace(Dt, xt.protocol + "//"),
                f.type = t.method || t.type || f.method || f.type,
                f.dataTypes = (f.dataType || "*").toLowerCase().match(N) || [""],
                null == f.crossDomain) {
                    l = b.createElement("a");
                    try {
                        l.href = f.url,
                        l.href = l.href,
                        f.crossDomain = Nt.protocol + "//" + Nt.host !== l.protocol + "//" + l.host
                    } catch (T) {
                        f.crossDomain = !0
                    }
                }
                if (f.data && f.processData && "string" !== typeof f.data && (f.data = S.param(f.data, f.traditional)),
                zt(It, f, t, E),
                u)
                    return E;
                for (h in (c = S.event && f.global) && 0 === S.active++ && S.event.trigger("ajaxStart"),
                f.type = f.type.toUpperCase(),
                f.hasContent = !kt.test(f.type),
                i = f.url.replace(Ct, ""),
                f.hasContent ? f.data && f.processData && 0 === (f.contentType || "").indexOf("application/x-www-form-urlencoded") && (f.data = f.data.replace(Pt, "+")) : (p = f.url.slice(i.length),
                f.data && (f.processData || "string" === typeof f.data) && (i += (_t.test(i) ? "&" : "?") + f.data,
                delete f.data),
                !1 === f.cache && (i = i.replace(Lt, "$1"),
                p = (_t.test(i) ? "&" : "?") + "_=" + wt.guid++ + p),
                f.url = i + p),
                f.ifModified && (S.lastModified[i] && E.setRequestHeader("If-Modified-Since", S.lastModified[i]),
                S.etag[i] && E.setRequestHeader("If-None-Match", S.etag[i])),
                (f.data && f.hasContent && !1 !== f.contentType || t.contentType) && E.setRequestHeader("Content-Type", f.contentType),
                E.setRequestHeader("Accept", f.dataTypes[0] && f.accepts[f.dataTypes[0]] ? f.accepts[f.dataTypes[0]] + ("*" !== f.dataTypes[0] ? ", " + Ft + "; q=0.01" : "") : f.accepts["*"]),
                f.headers)
                    E.setRequestHeader(h, f.headers[h]);
                if (f.beforeSend && (!1 === f.beforeSend.call(d, E, f) || u))
                    return E.abort();
                if (_ = "abort",
                v.add(f.complete),
                E.done(f.success),
                E.fail(f.error),
                r = zt(Ot, f, t, E)) {
                    if (E.readyState = 1,
                    c && m.trigger("ajaxSend", [E, f]),
                    u)
                        return E;
                    f.async && f.timeout > 0 && (s = n.setTimeout((function() {
                        E.abort("timeout")
                    }
                    ), f.timeout));
                    try {
                        u = !1,
                        r.send(x, M)
                    } catch (T) {
                        if (u)
                            throw T;
                        M(-1, T)
                    }
                } else
                    M(-1, "No Transport");
                function M(e, t, o, l) {
                    var h, p, b, x, w, _ = t;
                    u || (u = !0,
                    s && n.clearTimeout(s),
                    r = void 0,
                    a = l || "",
                    E.readyState = e > 0 ? 4 : 0,
                    h = e >= 200 && e < 300 || 304 === e,
                    o && (x = function(e, t, n) {
                        for (var r, i, a, o, s = e.contents, l = e.dataTypes; "*" === l[0]; )
                            l.shift(),
                            void 0 === r && (r = e.mimeType || t.getResponseHeader("Content-Type"));
                        if (r)
                            for (i in s)
                                if (s[i] && s[i].test(r)) {
                                    l.unshift(i);
                                    break
                                }
                        if (l[0]in n)
                            a = l[0];
                        else {
                            for (i in n) {
                                if (!l[0] || e.converters[i + " " + l[0]]) {
                                    a = i;
                                    break
                                }
                                o || (o = i)
                            }
                            a = a || o
                        }
                        if (a)
                            return a !== l[0] && l.unshift(a),
                            n[a]
                    }(f, E, o)),
                    !h && S.inArray("script", f.dataTypes) > -1 && S.inArray("json", f.dataTypes) < 0 && (f.converters["text script"] = function() {}
                    ),
                    x = function(e, t, n, r) {
                        var i, a, o, s, l, u = {}, c = e.dataTypes.slice();
                        if (c[1])
                            for (o in e.converters)
                                u[o.toLowerCase()] = e.converters[o];
                        for (a = c.shift(); a; )
                            if (e.responseFields[a] && (n[e.responseFields[a]] = t),
                            !l && r && e.dataFilter && (t = e.dataFilter(t, e.dataType)),
                            l = a,
                            a = c.shift())
                                if ("*" === a)
                                    a = l;
                                else if ("*" !== l && l !== a) {
                                    if (!(o = u[l + " " + a] || u["* " + a]))
                                        for (i in u)
                                            if ((s = i.split(" "))[1] === a && (o = u[l + " " + s[0]] || u["* " + s[0]])) {
                                                !0 === o ? o = u[i] : !0 !== u[i] && (a = s[0],
                                                c.unshift(s[1]));
                                                break
                                            }
                                    if (!0 !== o)
                                        if (o && e.throws)
                                            t = o(t);
                                        else
                                            try {
                                                t = o(t)
                                            } catch (T) {
                                                return {
                                                    state: "parsererror",
                                                    error: o ? T : "No conversion from " + l + " to " + a
                                                }
                                            }
                                }
                        return {
                            state: "success",
                            data: t
                        }
                    }(f, x, E, h),
                    h ? (f.ifModified && ((w = E.getResponseHeader("Last-Modified")) && (S.lastModified[i] = w),
                    (w = E.getResponseHeader("etag")) && (S.etag[i] = w)),
                    204 === e || "HEAD" === f.type ? _ = "nocontent" : 304 === e ? _ = "notmodified" : (_ = x.state,
                    p = x.data,
                    h = !(b = x.error))) : (b = _,
                    !e && _ || (_ = "error",
                    e < 0 && (e = 0))),
                    E.status = e,
                    E.statusText = (t || _) + "",
                    h ? g.resolveWith(d, [p, _, E]) : g.rejectWith(d, [E, _, b]),
                    E.statusCode(y),
                    y = void 0,
                    c && m.trigger(h ? "ajaxSuccess" : "ajaxError", [E, f, h ? p : b]),
                    v.fireWith(d, [E, _]),
                    c && (m.trigger("ajaxComplete", [E, f]),
                    --S.active || S.event.trigger("ajaxStop")))
                }
                return E
            },
            getJSON: function(e, t, n) {
                return S.get(e, t, n, "json")
            },
            getScript: function(e, t) {
                return S.get(e, void 0, t, "script")
            }
        }),
        S.each(["get", "post"], (function(e, t) {
            S[t] = function(e, n, r, i) {
                return v(n) && (i = i || r,
                r = n,
                n = void 0),
                S.ajax(S.extend({
                    url: e,
                    type: t,
                    dataType: i,
                    data: n,
                    success: r
                }, S.isPlainObject(e) && e))
            }
        }
        )),
        S.ajaxPrefilter((function(e) {
            var t;
            for (t in e.headers)
                "content-type" === t.toLowerCase() && (e.contentType = e.headers[t] || "")
        }
        )),
        S._evalUrl = function(e, t, n) {
            return S.ajax({
                url: e,
                type: "GET",
                dataType: "script",
                cache: !0,
                async: !1,
                global: !1,
                converters: {
                    "text script": function() {}
                },
                dataFilter: function(e) {
                    S.globalEval(e, t, n)
                }
            })
        }
        ,
        S.fn.extend({
            wrapAll: function(e) {
                var t;
                return this[0] && (v(e) && (e = e.call(this[0])),
                t = S(e, this[0].ownerDocument).eq(0).clone(!0),
                this[0].parentNode && t.insertBefore(this[0]),
                t.map((function() {
                    for (var e = this; e.firstElementChild; )
                        e = e.firstElementChild;
                    return e
                }
                )).append(this)),
                this
            },
            wrapInner: function(e) {
                return v(e) ? this.each((function(t) {
                    S(this).wrapInner(e.call(this, t))
                }
                )) : this.each((function() {
                    var t = S(this)
                      , n = t.contents();
                    n.length ? n.wrapAll(e) : t.append(e)
                }
                ))
            },
            wrap: function(e) {
                var t = v(e);
                return this.each((function(n) {
                    S(this).wrapAll(t ? e.call(this, n) : e)
                }
                ))
            },
            unwrap: function(e) {
                return this.parent(e).not("body").each((function() {
                    S(this).replaceWith(this.childNodes)
                }
                )),
                this
            }
        }),
        S.expr.pseudos.hidden = function(e) {
            return !S.expr.pseudos.visible(e)
        }
        ,
        S.expr.pseudos.visible = function(e) {
            return !!(e.offsetWidth || e.offsetHeight || e.getClientRects().length)
        }
        ,
        S.ajaxSettings.xhr = function() {
            try {
                return new n.XMLHttpRequest
            } catch (e) {}
        }
        ;
        var Ht = {
            0: 200,
            1223: 204
        }
          , Vt = S.ajaxSettings.xhr();
        g.cors = !!Vt && "withCredentials"in Vt,
        g.ajax = Vt = !!Vt,
        S.ajaxTransport((function(e) {
            var t, r;
            if (g.cors || Vt && !e.crossDomain)
                return {
                    send: function(i, a) {
                        var o, s = e.xhr();
                        if (s.open(e.type, e.url, e.async, e.username, e.password),
                        e.xhrFields)
                            for (o in e.xhrFields)
                                s[o] = e.xhrFields[o];
                        for (o in e.mimeType && s.overrideMimeType && s.overrideMimeType(e.mimeType),
                        e.crossDomain || i["X-Requested-With"] || (i["X-Requested-With"] = "XMLHttpRequest"),
                        i)
                            s.setRequestHeader(o, i[o]);
                        t = function(e) {
                            return function() {
                                t && (t = r = s.onload = s.onerror = s.onabort = s.ontimeout = s.onreadystatechange = null,
                                "abort" === e ? s.abort() : "error" === e ? "number" !== typeof s.status ? a(0, "error") : a(s.status, s.statusText) : a(Ht[s.status] || s.status, s.statusText, "text" !== (s.responseType || "text") || "string" !== typeof s.responseText ? {
                                    binary: s.response
                                } : {
                                    text: s.responseText
                                }, s.getAllResponseHeaders()))
                            }
                        }
                        ,
                        s.onload = t(),
                        r = s.onerror = s.ontimeout = t("error"),
                        void 0 !== s.onabort ? s.onabort = r : s.onreadystatechange = function() {
                            4 === s.readyState && n.setTimeout((function() {
                                t && r()
                            }
                            ))
                        }
                        ,
                        t = t("abort");
                        try {
                            s.send(e.hasContent && e.data || null)
                        } catch (l) {
                            if (t)
                                throw l
                        }
                    },
                    abort: function() {
                        t && t()
                    }
                }
        }
        )),
        S.ajaxPrefilter((function(e) {
            e.crossDomain && (e.contents.script = !1)
        }
        )),
        S.ajaxSetup({
            accepts: {
                script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
            },
            contents: {
                script: /\b(?:java|ecma)script\b/
            },
            converters: {
                "text script": function(e) {
                    return S.globalEval(e),
                    e
                }
            }
        }),
        S.ajaxPrefilter("script", (function(e) {
            void 0 === e.cache && (e.cache = !1),
            e.crossDomain && (e.type = "GET")
        }
        )),
        S.ajaxTransport("script", (function(e) {
            var t, n;
            if (e.crossDomain || e.scriptAttrs)
                return {
                    send: function(r, i) {
                        t = S("<script>").attr(e.scriptAttrs || {}).prop({
                            charset: e.scriptCharset,
                            src: e.url
                        }).on("load error", n = function(e) {
                            t.remove(),
                            n = null,
                            e && i("error" === e.type ? 404 : 200, e.type)
                        }
                        ),
                        b.head.appendChild(t[0])
                    },
                    abort: function() {
                        n && n()
                    }
                }
        }
        ));
        var jt = []
          , Ut = /(=)\?(?=&|$)|\?\?/;
        S.ajaxSetup({
            jsonp: "callback",
            jsonpCallback: function() {
                var e = jt.pop() || S.expando + "_" + wt.guid++;
                return this[e] = !0,
                e
            }
        }),
        S.ajaxPrefilter("json jsonp", (function(e, t, r) {
            var i, a, o, s = !1 !== e.jsonp && (Ut.test(e.url) ? "url" : "string" === typeof e.data && 0 === (e.contentType || "").indexOf("application/x-www-form-urlencoded") && Ut.test(e.data) && "data");
            if (s || "jsonp" === e.dataTypes[0])
                return i = e.jsonpCallback = v(e.jsonpCallback) ? e.jsonpCallback() : e.jsonpCallback,
                s ? e[s] = e[s].replace(Ut, "$1" + i) : !1 !== e.jsonp && (e.url += (_t.test(e.url) ? "&" : "?") + e.jsonp + "=" + i),
                e.converters["script json"] = function() {
                    return o || S.error(i + " was not called"),
                    o[0]
                }
                ,
                e.dataTypes[0] = "json",
                a = n[i],
                n[i] = function() {
                    o = arguments
                }
                ,
                r.always((function() {
                    void 0 === a ? S(n).removeProp(i) : n[i] = a,
                    e[i] && (e.jsonpCallback = t.jsonpCallback,
                    jt.push(i)),
                    o && v(a) && a(o[0]),
                    o = a = void 0
                }
                )),
                "script"
        }
        )),
        g.createHTMLDocument = function() {
            var e = b.implementation.createHTMLDocument("").body;
            return e.innerHTML = "<form></form><form></form>",
            2 === e.childNodes.length
        }(),
        S.parseHTML = function(e, t, n) {
            return "string" !== typeof e ? [] : ("boolean" === typeof t && (n = t,
            t = !1),
            t || (g.createHTMLDocument ? ((r = (t = b.implementation.createHTMLDocument("")).createElement("base")).href = b.location.href,
            t.head.appendChild(r)) : t = b),
            a = !n && [],
            (i = L.exec(e)) ? [t.createElement(i[1])] : (i = xe([e], t, a),
            a && a.length && S(a).remove(),
            S.merge([], i.childNodes)));
            var r, i, a
        }
        ,
        S.fn.load = function(e, t, n) {
            var r, i, a, o = this, s = e.indexOf(" ");
            return s > -1 && (r = dt(e.slice(s)),
            e = e.slice(0, s)),
            v(t) ? (n = t,
            t = void 0) : t && "object" === typeof t && (i = "POST"),
            o.length > 0 && S.ajax({
                url: e,
                type: i || "GET",
                dataType: "html",
                data: t
            }).done((function(e) {
                a = arguments,
                o.html(r ? S("<div>").append(S.parseHTML(e)).find(r) : e)
            }
            )).always(n && function(e, t) {
                o.each((function() {
                    n.apply(this, a || [e.responseText, t, e])
                }
                ))
            }
            ),
            this
        }
        ,
        S.expr.pseudos.animated = function(e) {
            return S.grep(S.timers, (function(t) {
                return e === t.elem
            }
            )).length
        }
        ,
        S.offset = {
            setOffset: function(e, t, n) {
                var r, i, a, o, s, l, u = S.css(e, "position"), c = S(e), h = {};
                "static" === u && (e.style.position = "relative"),
                s = c.offset(),
                a = S.css(e, "top"),
                l = S.css(e, "left"),
                ("absolute" === u || "fixed" === u) && (a + l).indexOf("auto") > -1 ? (o = (r = c.position()).top,
                i = r.left) : (o = parseFloat(a) || 0,
                i = parseFloat(l) || 0),
                v(t) && (t = t.call(e, n, S.extend({}, s))),
                null != t.top && (h.top = t.top - s.top + o),
                null != t.left && (h.left = t.left - s.left + i),
                "using"in t ? t.using.call(e, h) : c.css(h)
            }
        },
        S.fn.extend({
            offset: function(e) {
                if (arguments.length)
                    return void 0 === e ? this : this.each((function(t) {
                        S.offset.setOffset(this, e, t)
                    }
                    ));
                var t, n, r = this[0];
                return r ? r.getClientRects().length ? (t = r.getBoundingClientRect(),
                n = r.ownerDocument.defaultView,
                {
                    top: t.top + n.pageYOffset,
                    left: t.left + n.pageXOffset
                }) : {
                    top: 0,
                    left: 0
                } : void 0
            },
            position: function() {
                if (this[0]) {
                    var e, t, n, r = this[0], i = {
                        top: 0,
                        left: 0
                    };
                    if ("fixed" === S.css(r, "position"))
                        t = r.getBoundingClientRect();
                    else {
                        for (t = this.offset(),
                        n = r.ownerDocument,
                        e = r.offsetParent || n.documentElement; e && (e === n.body || e === n.documentElement) && "static" === S.css(e, "position"); )
                            e = e.parentNode;
                        e && e !== r && 1 === e.nodeType && ((i = S(e).offset()).top += S.css(e, "borderTopWidth", !0),
                        i.left += S.css(e, "borderLeftWidth", !0))
                    }
                    return {
                        top: t.top - i.top - S.css(r, "marginTop", !0),
                        left: t.left - i.left - S.css(r, "marginLeft", !0)
                    }
                }
            },
            offsetParent: function() {
                return this.map((function() {
                    for (var e = this.offsetParent; e && "static" === S.css(e, "position"); )
                        e = e.offsetParent;
                    return e || ae
                }
                ))
            }
        }),
        S.each({
            scrollLeft: "pageXOffset",
            scrollTop: "pageYOffset"
        }, (function(e, t) {
            var n = "pageYOffset" === t;
            S.fn[e] = function(r) {
                return U(this, (function(e, r, i) {
                    var a;
                    if (y(e) ? a = e : 9 === e.nodeType && (a = e.defaultView),
                    void 0 === i)
                        return a ? a[t] : e[r];
                    a ? a.scrollTo(n ? a.pageXOffset : i, n ? i : a.pageYOffset) : e[r] = i
                }
                ), e, r, arguments.length)
            }
        }
        )),
        S.each(["top", "left"], (function(e, t) {
            S.cssHooks[t] = Ve(g.pixelPosition, (function(e, n) {
                if (n)
                    return n = He(e, t),
                    Ne.test(n) ? S(e).position()[t] + "px" : n
            }
            ))
        }
        )),
        S.each({
            Height: "height",
            Width: "width"
        }, (function(e, t) {
            S.each({
                padding: "inner" + e,
                content: t,
                "": "outer" + e
            }, (function(n, r) {
                S.fn[r] = function(i, a) {
                    var o = arguments.length && (n || "boolean" !== typeof i)
                      , s = n || (!0 === i || !0 === a ? "margin" : "border");
                    return U(this, (function(t, n, i) {
                        var a;
                        return y(t) ? 0 === r.indexOf("outer") ? t["inner" + e] : t.document.documentElement["client" + e] : 9 === t.nodeType ? (a = t.documentElement,
                        Math.max(t.body["scroll" + e], a["scroll" + e], t.body["offset" + e], a["offset" + e], a["client" + e])) : void 0 === i ? S.css(t, n, s) : S.style(t, n, i, s)
                    }
                    ), t, o ? i : void 0, o)
                }
            }
            ))
        }
        )),
        S.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], (function(e, t) {
            S.fn[t] = function(e) {
                return this.on(t, e)
            }
        }
        )),
        S.fn.extend({
            bind: function(e, t, n) {
                return this.on(e, null, t, n)
            },
            unbind: function(e, t) {
                return this.off(e, null, t)
            },
            delegate: function(e, t, n, r) {
                return this.on(t, e, n, r)
            },
            undelegate: function(e, t, n) {
                return 1 === arguments.length ? this.off(e, "**") : this.off(t, e || "**", n)
            },
            hover: function(e, t) {
                return this.mouseenter(e).mouseleave(t || e)
            }
        }),
        S.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), (function(e, t) {
            S.fn[t] = function(e, n) {
                return arguments.length > 0 ? this.on(t, null, e, n) : this.trigger(t)
            }
        }
        ));
        var Wt = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
        S.proxy = function(e, t) {
            var n, r, i;
            if ("string" === typeof t && (n = e[t],
            t = e,
            e = n),
            v(e))
                return r = s.call(arguments, 2),
                (i = function() {
                    return e.apply(t || this, r.concat(s.call(arguments)))
                }
                ).guid = e.guid = e.guid || S.guid++,
                i
        }
        ,
        S.holdReady = function(e) {
            e ? S.readyWait++ : S.ready(!0)
        }
        ,
        S.isArray = Array.isArray,
        S.parseJSON = JSON.parse,
        S.nodeName = C,
        S.isFunction = v,
        S.isWindow = y,
        S.camelCase = Y,
        S.type = _,
        S.now = Date.now,
        S.isNumeric = function(e) {
            var t = S.type(e);
            return ("number" === t || "string" === t) && !isNaN(e - parseFloat(e))
        }
        ,
        S.trim = function(e) {
            return null == e ? "" : (e + "").replace(Wt, "")
        }
        ,
        void 0 === (r = function() {
            return S
        }
        .apply(t, [])) || (e.exports = r);
        var qt = n.jQuery
          , Xt = n.$;
        return S.noConflict = function(e) {
            return n.$ === S && (n.$ = Xt),
            e && n.jQuery === S && (n.jQuery = qt),
            S
        }
        ,
        "undefined" === typeof i && (n.jQuery = n.$ = S),
        S
    }
    ))
}
, , function(e, t, n) {
    "use strict";
    n.d(t, "a", (function() {
        return h
    }
    )),
    n.d(t, "b", (function() {
        return G
    }
    ));
    var r = n(0)
      , i = n.n(r)
      , a = (n(11),
    i.a.createContext(null));
    var o = function(e) {
        e()
    }
      , s = {
        notify: function() {}
    };
    function l() {
        var e = o
          , t = null
          , n = null;
        return {
            clear: function() {
                t = null,
                n = null
            },
            notify: function() {
                e((function() {
                    for (var e = t; e; )
                        e.callback(),
                        e = e.next
                }
                ))
            },
            get: function() {
                for (var e = [], n = t; n; )
                    e.push(n),
                    n = n.next;
                return e
            },
            subscribe: function(e) {
                var r = !0
                  , i = n = {
                    callback: e,
                    next: null,
                    prev: n
                };
                return i.prev ? i.prev.next = i : t = i,
                function() {
                    r && null !== t && (r = !1,
                    i.next ? i.next.prev = i.prev : n = i.prev,
                    i.prev ? i.prev.next = i.next : t = i.next)
                }
            }
        }
    }
    var u = function() {
        function e(e, t) {
            this.store = e,
            this.parentSub = t,
            this.unsubscribe = null,
            this.listeners = s,
            this.handleChangeWrapper = this.handleChangeWrapper.bind(this)
        }
        var t = e.prototype;
        return t.addNestedSub = function(e) {
            return this.trySubscribe(),
            this.listeners.subscribe(e)
        }
        ,
        t.notifyNestedSubs = function() {
            this.listeners.notify()
        }
        ,
        t.handleChangeWrapper = function() {
            this.onStateChange && this.onStateChange()
        }
        ,
        t.isSubscribed = function() {
            return Boolean(this.unsubscribe)
        }
        ,
        t.trySubscribe = function() {
            this.unsubscribe || (this.unsubscribe = this.parentSub ? this.parentSub.addNestedSub(this.handleChangeWrapper) : this.store.subscribe(this.handleChangeWrapper),
            this.listeners = l())
        }
        ,
        t.tryUnsubscribe = function() {
            this.unsubscribe && (this.unsubscribe(),
            this.unsubscribe = null,
            this.listeners.clear(),
            this.listeners = s)
        }
        ,
        e
    }()
      , c = "undefined" !== typeof window && "undefined" !== typeof window.document && "undefined" !== typeof window.document.createElement ? r.useLayoutEffect : r.useEffect;
    var h = function(e) {
        var t = e.store
          , n = e.context
          , o = e.children
          , s = Object(r.useMemo)((function() {
            var e = new u(t);
            return e.onStateChange = e.notifyNestedSubs,
            {
                store: t,
                subscription: e
            }
        }
        ), [t])
          , l = Object(r.useMemo)((function() {
            return t.getState()
        }
        ), [t]);
        c((function() {
            var e = s.subscription;
            return e.trySubscribe(),
            l !== t.getState() && e.notifyNestedSubs(),
            function() {
                e.tryUnsubscribe(),
                e.onStateChange = null
            }
        }
        ), [s, l]);
        var h = n || a;
        return i.a.createElement(h.Provider, {
            value: s
        }, o)
    }
      , p = n(2)
      , f = n(9)
      , d = n(15)
      , m = n.n(d)
      , g = n(30)
      , v = []
      , y = [null, null];
    function b(e, t) {
        var n = e[1];
        return [t.payload, n + 1]
    }
    function x(e, t, n) {
        c((function() {
            return e.apply(void 0, t)
        }
        ), n)
    }
    function w(e, t, n, r, i, a, o) {
        e.current = r,
        t.current = i,
        n.current = !1,
        a.current && (a.current = null,
        o())
    }
    function _(e, t, n, r, i, a, o, s, l, u) {
        if (e) {
            var c = !1
              , h = null
              , p = function() {
                if (!c) {
                    var e, n, p = t.getState();
                    try {
                        e = r(p, i.current)
                    } catch (f) {
                        n = f,
                        h = f
                    }
                    n || (h = null),
                    e === a.current ? o.current || l() : (a.current = e,
                    s.current = e,
                    o.current = !0,
                    u({
                        type: "STORE_UPDATED",
                        payload: {
                            error: n
                        }
                    }))
                }
            };
            n.onStateChange = p,
            n.trySubscribe(),
            p();
            return function() {
                if (c = !0,
                n.tryUnsubscribe(),
                n.onStateChange = null,
                h)
                    throw h
            }
        }
    }
    var S = function() {
        return [null, 0]
    };
    function E(e, t) {
        void 0 === t && (t = {});
        var n = t
          , o = n.getDisplayName
          , s = void 0 === o ? function(e) {
            return "ConnectAdvanced(" + e + ")"
        }
        : o
          , l = n.methodName
          , c = void 0 === l ? "connectAdvanced" : l
          , h = n.renderCountProp
          , d = void 0 === h ? void 0 : h
          , E = n.shouldHandleStateChanges
          , M = void 0 === E || E
          , T = n.storeKey
          , A = void 0 === T ? "store" : T
          , P = (n.withRef,
        n.forwardRef)
          , C = void 0 !== P && P
          , L = n.context
          , R = void 0 === L ? a : L
          , k = Object(f.a)(n, ["getDisplayName", "methodName", "renderCountProp", "shouldHandleStateChanges", "storeKey", "withRef", "forwardRef", "context"])
          , D = R;
        return function(t) {
            var n = t.displayName || t.name || "Component"
              , a = s(n)
              , o = Object(p.a)({}, k, {
                getDisplayName: s,
                methodName: c,
                renderCountProp: d,
                shouldHandleStateChanges: M,
                storeKey: A,
                displayName: a,
                wrappedComponentName: n,
                WrappedComponent: t
            })
              , l = k.pure;
            var h = l ? r.useMemo : function(e) {
                return e()
            }
            ;
            function E(n) {
                var a = Object(r.useMemo)((function() {
                    var e = n.reactReduxForwardedRef
                      , t = Object(f.a)(n, ["reactReduxForwardedRef"]);
                    return [n.context, e, t]
                }
                ), [n])
                  , s = a[0]
                  , l = a[1]
                  , c = a[2]
                  , d = Object(r.useMemo)((function() {
                    return s && s.Consumer && Object(g.isContextConsumer)(i.a.createElement(s.Consumer, null)) ? s : D
                }
                ), [s, D])
                  , m = Object(r.useContext)(d)
                  , E = Boolean(n.store) && Boolean(n.store.getState) && Boolean(n.store.dispatch);
                Boolean(m) && Boolean(m.store);
                var T = E ? n.store : m.store
                  , A = Object(r.useMemo)((function() {
                    return function(t) {
                        return e(t.dispatch, o)
                    }(T)
                }
                ), [T])
                  , P = Object(r.useMemo)((function() {
                    if (!M)
                        return y;
                    var e = new u(T,E ? null : m.subscription)
                      , t = e.notifyNestedSubs.bind(e);
                    return [e, t]
                }
                ), [T, E, m])
                  , C = P[0]
                  , L = P[1]
                  , R = Object(r.useMemo)((function() {
                    return E ? m : Object(p.a)({}, m, {
                        subscription: C
                    })
                }
                ), [E, m, C])
                  , k = Object(r.useReducer)(b, v, S)
                  , I = k[0][0]
                  , O = k[1];
                if (I && I.error)
                    throw I.error;
                var F = Object(r.useRef)()
                  , N = Object(r.useRef)(c)
                  , B = Object(r.useRef)()
                  , z = Object(r.useRef)(!1)
                  , G = h((function() {
                    return B.current && c === N.current ? B.current : A(T.getState(), c)
                }
                ), [T, I, c]);
                x(w, [N, F, z, c, G, B, L]),
                x(_, [M, T, C, A, N, F, z, B, L, O], [T, C, A]);
                var H = Object(r.useMemo)((function() {
                    return i.a.createElement(t, Object(p.a)({}, G, {
                        ref: l
                    }))
                }
                ), [l, t, G]);
                return Object(r.useMemo)((function() {
                    return M ? i.a.createElement(d.Provider, {
                        value: R
                    }, H) : H
                }
                ), [d, H, R])
            }
            var T = l ? i.a.memo(E) : E;
            if (T.WrappedComponent = t,
            T.displayName = E.displayName = a,
            C) {
                var P = i.a.forwardRef((function(e, t) {
                    return i.a.createElement(T, Object(p.a)({}, e, {
                        reactReduxForwardedRef: t
                    }))
                }
                ));
                return P.displayName = a,
                P.WrappedComponent = t,
                m()(P, t)
            }
            return m()(T, t)
        }
    }
    function M(e, t) {
        return e === t ? 0 !== e || 0 !== t || 1 / e === 1 / t : e !== e && t !== t
    }
    function T(e, t) {
        if (M(e, t))
            return !0;
        if ("object" !== typeof e || null === e || "object" !== typeof t || null === t)
            return !1;
        var n = Object.keys(e)
          , r = Object.keys(t);
        if (n.length !== r.length)
            return !1;
        for (var i = 0; i < n.length; i++)
            if (!Object.prototype.hasOwnProperty.call(t, n[i]) || !M(e[n[i]], t[n[i]]))
                return !1;
        return !0
    }
    function A(e) {
        return function(t, n) {
            var r = e(t, n);
            function i() {
                return r
            }
            return i.dependsOnOwnProps = !1,
            i
        }
    }
    function P(e) {
        return null !== e.dependsOnOwnProps && void 0 !== e.dependsOnOwnProps ? Boolean(e.dependsOnOwnProps) : 1 !== e.length
    }
    function C(e, t) {
        return function(t, n) {
            n.displayName;
            var r = function(e, t) {
                return r.dependsOnOwnProps ? r.mapToProps(e, t) : r.mapToProps(e)
            };
            return r.dependsOnOwnProps = !0,
            r.mapToProps = function(t, n) {
                r.mapToProps = e,
                r.dependsOnOwnProps = P(e);
                var i = r(t, n);
                return "function" === typeof i && (r.mapToProps = i,
                r.dependsOnOwnProps = P(i),
                i = r(t, n)),
                i
            }
            ,
            r
        }
    }
    var L = [function(e) {
        return "function" === typeof e ? C(e) : void 0
    }
    , function(e) {
        return e ? void 0 : A((function(e) {
            return {
                dispatch: e
            }
        }
        ))
    }
    , function(e) {
        return e && "object" === typeof e ? A((function(t) {
            return function(e, t) {
                var n = {}
                  , r = function(r) {
                    var i = e[r];
                    "function" === typeof i && (n[r] = function() {
                        return t(i.apply(void 0, arguments))
                    }
                    )
                };
                for (var i in e)
                    r(i);
                return n
            }(e, t)
        }
        )) : void 0
    }
    ];
    var R = [function(e) {
        return "function" === typeof e ? C(e) : void 0
    }
    , function(e) {
        return e ? void 0 : A((function() {
            return {}
        }
        ))
    }
    ];
    function k(e, t, n) {
        return Object(p.a)({}, n, e, t)
    }
    var D = [function(e) {
        return "function" === typeof e ? function(e) {
            return function(t, n) {
                n.displayName;
                var r, i = n.pure, a = n.areMergedPropsEqual, o = !1;
                return function(t, n, s) {
                    var l = e(t, n, s);
                    return o ? i && a(l, r) || (r = l) : (o = !0,
                    r = l),
                    r
                }
            }
        }(e) : void 0
    }
    , function(e) {
        return e ? void 0 : function() {
            return k
        }
    }
    ];
    function I(e, t, n, r) {
        return function(i, a) {
            return n(e(i, a), t(r, a), a)
        }
    }
    function O(e, t, n, r, i) {
        var a, o, s, l, u, c = i.areStatesEqual, h = i.areOwnPropsEqual, p = i.areStatePropsEqual, f = !1;
        function d(i, f) {
            var d = !h(f, o)
              , m = !c(i, a);
            return a = i,
            o = f,
            d && m ? (s = e(a, o),
            t.dependsOnOwnProps && (l = t(r, o)),
            u = n(s, l, o)) : d ? (e.dependsOnOwnProps && (s = e(a, o)),
            t.dependsOnOwnProps && (l = t(r, o)),
            u = n(s, l, o)) : m ? function() {
                var t = e(a, o)
                  , r = !p(t, s);
                return s = t,
                r && (u = n(s, l, o)),
                u
            }() : u
        }
        return function(i, c) {
            return f ? d(i, c) : (s = e(a = i, o = c),
            l = t(r, o),
            u = n(s, l, o),
            f = !0,
            u)
        }
    }
    function F(e, t) {
        var n = t.initMapStateToProps
          , r = t.initMapDispatchToProps
          , i = t.initMergeProps
          , a = Object(f.a)(t, ["initMapStateToProps", "initMapDispatchToProps", "initMergeProps"])
          , o = n(e, a)
          , s = r(e, a)
          , l = i(e, a);
        return (a.pure ? O : I)(o, s, l, e, a)
    }
    function N(e, t, n) {
        for (var r = t.length - 1; r >= 0; r--) {
            var i = t[r](e);
            if (i)
                return i
        }
        return function(t, r) {
            throw new Error("Invalid value of type " + typeof e + " for " + n + " argument when connecting component " + r.wrappedComponentName + ".")
        }
    }
    function B(e, t) {
        return e === t
    }
    function z(e) {
        var t = void 0 === e ? {} : e
          , n = t.connectHOC
          , r = void 0 === n ? E : n
          , i = t.mapStateToPropsFactories
          , a = void 0 === i ? R : i
          , o = t.mapDispatchToPropsFactories
          , s = void 0 === o ? L : o
          , l = t.mergePropsFactories
          , u = void 0 === l ? D : l
          , c = t.selectorFactory
          , h = void 0 === c ? F : c;
        return function(e, t, n, i) {
            void 0 === i && (i = {});
            var o = i
              , l = o.pure
              , c = void 0 === l || l
              , d = o.areStatesEqual
              , m = void 0 === d ? B : d
              , g = o.areOwnPropsEqual
              , v = void 0 === g ? T : g
              , y = o.areStatePropsEqual
              , b = void 0 === y ? T : y
              , x = o.areMergedPropsEqual
              , w = void 0 === x ? T : x
              , _ = Object(f.a)(o, ["pure", "areStatesEqual", "areOwnPropsEqual", "areStatePropsEqual", "areMergedPropsEqual"])
              , S = N(e, a, "mapStateToProps")
              , E = N(t, s, "mapDispatchToProps")
              , M = N(n, u, "mergeProps");
            return r(h, Object(p.a)({
                methodName: "connect",
                getDisplayName: function(e) {
                    return "Connect(" + e + ")"
                },
                shouldHandleStateChanges: Boolean(e),
                initMapStateToProps: S,
                initMapDispatchToProps: E,
                initMergeProps: M,
                pure: c,
                areStatesEqual: m,
                areOwnPropsEqual: v,
                areStatePropsEqual: b,
                areMergedPropsEqual: w
            }, _))
        }
    }
    var G = z();
    var H, V = n(21);
    H = V.unstable_batchedUpdates,
    o = H
}
, function(e, t, n) {
    "use strict";
    (function(e) {
        var r = n(0)
          , i = n.n(r)
          , a = n(10)
          , o = n(11)
          , s = n.n(o)
          , l = "undefined" !== typeof globalThis ? globalThis : "undefined" !== typeof window ? window : "undefined" !== typeof e ? e : {};
        function u(e) {
            var t = [];
            return {
                on: function(e) {
                    t.push(e)
                },
                off: function(e) {
                    t = t.filter((function(t) {
                        return t !== e
                    }
                    ))
                },
                get: function() {
                    return e
                },
                set: function(n, r) {
                    e = n,
                    t.forEach((function(t) {
                        return t(e, r)
                    }
                    ))
                }
            }
        }
        var c = i.a.createContext || function(e, t) {
            var n, i, o = "__create-react-context-" + function() {
                var e = "__global_unique_id__";
                return l[e] = (l[e] || 0) + 1
            }() + "__", c = function(e) {
                function n() {
                    var t;
                    return (t = e.apply(this, arguments) || this).emitter = u(t.props.value),
                    t
                }
                Object(a.a)(n, e);
                var r = n.prototype;
                return r.getChildContext = function() {
                    var e;
                    return (e = {})[o] = this.emitter,
                    e
                }
                ,
                r.componentWillReceiveProps = function(e) {
                    if (this.props.value !== e.value) {
                        var n, r = this.props.value, i = e.value;
                        ((a = r) === (o = i) ? 0 !== a || 1 / a === 1 / o : a !== a && o !== o) ? n = 0 : (n = "function" === typeof t ? t(r, i) : 1073741823,
                        0 !== (n |= 0) && this.emitter.set(e.value, n))
                    }
                    var a, o
                }
                ,
                r.render = function() {
                    return this.props.children
                }
                ,
                n
            }(r.Component);
            c.childContextTypes = ((n = {})[o] = s.a.object.isRequired,
            n);
            var h = function(t) {
                function n() {
                    var e;
                    return (e = t.apply(this, arguments) || this).state = {
                        value: e.getValue()
                    },
                    e.onUpdate = function(t, n) {
                        0 !== ((0 | e.observedBits) & n) && e.setState({
                            value: e.getValue()
                        })
                    }
                    ,
                    e
                }
                Object(a.a)(n, t);
                var r = n.prototype;
                return r.componentWillReceiveProps = function(e) {
                    var t = e.observedBits;
                    this.observedBits = void 0 === t || null === t ? 1073741823 : t
                }
                ,
                r.componentDidMount = function() {
                    this.context[o] && this.context[o].on(this.onUpdate);
                    var e = this.props.observedBits;
                    this.observedBits = void 0 === e || null === e ? 1073741823 : e
                }
                ,
                r.componentWillUnmount = function() {
                    this.context[o] && this.context[o].off(this.onUpdate)
                }
                ,
                r.getValue = function() {
                    return this.context[o] ? this.context[o].get() : e
                }
                ,
                r.render = function() {
                    return (e = this.props.children,
                    Array.isArray(e) ? e[0] : e)(this.state.value);
                    var e
                }
                ,
                n
            }(r.Component);
            return h.contextTypes = ((i = {})[o] = s.a.object,
            i),
            {
                Provider: c,
                Consumer: h
            }
        }
        ;
        t.a = c
    }
    ).call(this, n(71))
}
, function(e, t, n) {
    var r = n(72);
    e.exports = f,
    e.exports.parse = a,
    e.exports.compile = function(e, t) {
        return s(a(e, t), t)
    }
    ,
    e.exports.tokensToFunction = s,
    e.exports.tokensToRegExp = p;
    var i = new RegExp(["(\\\\.)", "([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");
    function a(e, t) {
        for (var n, r = [], a = 0, o = 0, s = "", c = t && t.delimiter || "/"; null != (n = i.exec(e)); ) {
            var h = n[0]
              , p = n[1]
              , f = n.index;
            if (s += e.slice(o, f),
            o = f + h.length,
            p)
                s += p[1];
            else {
                var d = e[o]
                  , m = n[2]
                  , g = n[3]
                  , v = n[4]
                  , y = n[5]
                  , b = n[6]
                  , x = n[7];
                s && (r.push(s),
                s = "");
                var w = null != m && null != d && d !== m
                  , _ = "+" === b || "*" === b
                  , S = "?" === b || "*" === b
                  , E = n[2] || c
                  , M = v || y;
                r.push({
                    name: g || a++,
                    prefix: m || "",
                    delimiter: E,
                    optional: S,
                    repeat: _,
                    partial: w,
                    asterisk: !!x,
                    pattern: M ? u(M) : x ? ".*" : "[^" + l(E) + "]+?"
                })
            }
        }
        return o < e.length && (s += e.substr(o)),
        s && r.push(s),
        r
    }
    function o(e) {
        return encodeURI(e).replace(/[\/?#]/g, (function(e) {
            return "%" + e.charCodeAt(0).toString(16).toUpperCase()
        }
        ))
    }
    function s(e, t) {
        for (var n = new Array(e.length), i = 0; i < e.length; i++)
            "object" === typeof e[i] && (n[i] = new RegExp("^(?:" + e[i].pattern + ")$",h(t)));
        return function(t, i) {
            for (var a = "", s = t || {}, l = (i || {}).pretty ? o : encodeURIComponent, u = 0; u < e.length; u++) {
                var c = e[u];
                if ("string" !== typeof c) {
                    var h, p = s[c.name];
                    if (null == p) {
                        if (c.optional) {
                            c.partial && (a += c.prefix);
                            continue
                        }
                        throw new TypeError('Expected "' + c.name + '" to be defined')
                    }
                    if (r(p)) {
                        if (!c.repeat)
                            throw new TypeError('Expected "' + c.name + '" to not repeat, but received `' + JSON.stringify(p) + "`");
                        if (0 === p.length) {
                            if (c.optional)
                                continue;
                            throw new TypeError('Expected "' + c.name + '" to not be empty')
                        }
                        for (var f = 0; f < p.length; f++) {
                            if (h = l(p[f]),
                            !n[u].test(h))
                                throw new TypeError('Expected all "' + c.name + '" to match "' + c.pattern + '", but received `' + JSON.stringify(h) + "`");
                            a += (0 === f ? c.prefix : c.delimiter) + h
                        }
                    } else {
                        if (h = c.asterisk ? encodeURI(p).replace(/[?#]/g, (function(e) {
                            return "%" + e.charCodeAt(0).toString(16).toUpperCase()
                        }
                        )) : l(p),
                        !n[u].test(h))
                            throw new TypeError('Expected "' + c.name + '" to match "' + c.pattern + '", but received "' + h + '"');
                        a += c.prefix + h
                    }
                } else
                    a += c
            }
            return a
        }
    }
    function l(e) {
        return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g, "\\$1")
    }
    function u(e) {
        return e.replace(/([=!:$\/()])/g, "\\$1")
    }
    function c(e, t) {
        return e.keys = t,
        e
    }
    function h(e) {
        return e && e.sensitive ? "" : "i"
    }
    function p(e, t, n) {
        r(t) || (n = t || n,
        t = []);
        for (var i = (n = n || {}).strict, a = !1 !== n.end, o = "", s = 0; s < e.length; s++) {
            var u = e[s];
            if ("string" === typeof u)
                o += l(u);
            else {
                var p = l(u.prefix)
                  , f = "(?:" + u.pattern + ")";
                t.push(u),
                u.repeat && (f += "(?:" + p + f + ")*"),
                o += f = u.optional ? u.partial ? p + "(" + f + ")?" : "(?:" + p + "(" + f + "))?" : p + "(" + f + ")"
            }
        }
        var d = l(n.delimiter || "/")
          , m = o.slice(-d.length) === d;
        return i || (o = (m ? o.slice(0, -d.length) : o) + "(?:" + d + "(?=$))?"),
        o += a ? "$" : i && m ? "" : "(?=" + d + "|$)",
        c(new RegExp("^" + o,h(n)), t)
    }
    function f(e, t, n) {
        return r(t) || (n = t || n,
        t = []),
        n = n || {},
        e instanceof RegExp ? function(e, t) {
            var n = e.source.match(/\((?!\?)/g);
            if (n)
                for (var r = 0; r < n.length; r++)
                    t.push({
                        name: r,
                        prefix: null,
                        delimiter: null,
                        optional: !1,
                        repeat: !1,
                        partial: !1,
                        asterisk: !1,
                        pattern: null
                    });
            return c(e, t)
        }(e, t) : r(e) ? function(e, t, n) {
            for (var r = [], i = 0; i < e.length; i++)
                r.push(f(e[i], t, n).source);
            return c(new RegExp("(?:" + r.join("|") + ")",h(n)), t)
        }(e, t, n) : function(e, t, n) {
            return p(a(e, n), t, n)
        }(e, t, n)
    }
}
, function(e, t, n) {
    "use strict";
    var r = Object.getOwnPropertySymbols
      , i = Object.prototype.hasOwnProperty
      , a = Object.prototype.propertyIsEnumerable;
    function o(e) {
        if (null === e || void 0 === e)
            throw new TypeError("Object.assign cannot be called with null or undefined");
        return Object(e)
    }
    e.exports = function() {
        try {
            if (!Object.assign)
                return !1;
            var e = new String("abc");
            if (e[5] = "de",
            "5" === Object.getOwnPropertyNames(e)[0])
                return !1;
            for (var t = {}, n = 0; n < 10; n++)
                t["_" + String.fromCharCode(n)] = n;
            if ("0123456789" !== Object.getOwnPropertyNames(t).map((function(e) {
                return t[e]
            }
            )).join(""))
                return !1;
            var r = {};
            return "abcdefghijklmnopqrst".split("").forEach((function(e) {
                r[e] = e
            }
            )),
            "abcdefghijklmnopqrst" === Object.keys(Object.assign({}, r)).join("")
        } catch (i) {
            return !1
        }
    }() ? Object.assign : function(e, t) {
        for (var n, s, l = o(e), u = 1; u < arguments.length; u++) {
            for (var c in n = Object(arguments[u]))
                i.call(n, c) && (l[c] = n[c]);
            if (r) {
                s = r(n);
                for (var h = 0; h < s.length; h++)
                    a.call(n, s[h]) && (l[s[h]] = n[s[h]])
            }
        }
        return l
    }
}
, , , function(e, t, n) {
    "use strict";
    e.exports = n(59)
}
, function(e, t, n) {
    "use strict";
    n.d(t, "a", (function() {
        return i
    }
    ));
    var r = n(1)
      , i = function(e, t) {
        void 0 === t && console.warn('THREE.OrbitControls: The second parameter "domElement" is now mandatory.'),
        t === document && console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),
        this.object = e,
        this.domElement = t,
        this.enabled = !0,
        this.target = new r.Vector3,
        this.minDistance = 0,
        this.maxDistance = 1 / 0,
        this.minZoom = 0,
        this.maxZoom = 1 / 0,
        this.minPolarAngle = 0,
        this.maxPolarAngle = Math.PI,
        this.minAzimuthAngle = -1 / 0,
        this.maxAzimuthAngle = 1 / 0,
        this.enableDamping = !1,
        this.dampingFactor = .05,
        this.enableZoom = !0,
        this.zoomSpeed = 1,
        this.enableRotate = !0,
        this.rotateSpeed = 1,
        this.enablePan = !0,
        this.panSpeed = 1,
        this.screenSpacePanning = !0,
        this.keyPanSpeed = 7,
        this.autoRotate = !1,
        this.autoRotateSpeed = 2,
        this.enableKeys = !0,
        this.keys = {
            LEFT: 37,
            UP: 38,
            RIGHT: 39,
            BOTTOM: 40
        },
        this.mouseButtons = {
            LEFT: r.MOUSE.ROTATE,
            MIDDLE: r.MOUSE.DOLLY,
            RIGHT: r.MOUSE.PAN
        },
        this.touches = {
            ONE: r.TOUCH.ROTATE,
            TWO: r.TOUCH.DOLLY_PAN
        },
        this.target0 = this.target.clone(),
        this.position0 = this.object.position.clone(),
        this.zoom0 = this.object.zoom,
        this.getPolarAngle = function() {
            return c.phi
        }
        ,
        this.getAzimuthalAngle = function() {
            return c.theta
        }
        ,
        this.saveState = function() {
            n.target0.copy(n.target),
            n.position0.copy(n.object.position),
            n.zoom0 = n.object.zoom
        }
        ,
        this.reset = function() {
            n.target.copy(n.target0),
            n.object.position.copy(n.position0),
            n.object.zoom = n.zoom0,
            n.object.updateProjectionMatrix(),
            n.dispatchEvent(i),
            n.update(),
            l = s.NONE
        }
        ,
        this.update = function() {
            var t = new r.Vector3
              , a = (new r.Quaternion).setFromUnitVectors(e.up, new r.Vector3(0,1,0))
              , o = a.clone().inverse()
              , m = new r.Vector3
              , g = new r.Quaternion
              , v = 2 * Math.PI;
            return function() {
                var e = n.object.position;
                t.copy(e).sub(n.target),
                t.applyQuaternion(a),
                c.setFromVector3(t),
                n.autoRotate && l === s.NONE && M(2 * Math.PI / 60 / 60 * n.autoRotateSpeed),
                n.enableDamping ? (c.theta += h.theta * n.dampingFactor,
                c.phi += h.phi * n.dampingFactor) : (c.theta += h.theta,
                c.phi += h.phi);
                var r = n.minAzimuthAngle
                  , y = n.maxAzimuthAngle;
                return isFinite(r) && isFinite(y) && (r < -Math.PI ? r += v : r > Math.PI && (r -= v),
                y < -Math.PI ? y += v : y > Math.PI && (y -= v),
                c.theta = r < y ? Math.max(r, Math.min(y, c.theta)) : c.theta > (r + y) / 2 ? Math.max(r, c.theta) : Math.min(y, c.theta)),
                c.phi = Math.max(n.minPolarAngle, Math.min(n.maxPolarAngle, c.phi)),
                c.makeSafe(),
                c.radius *= p,
                c.radius = Math.max(n.minDistance, Math.min(n.maxDistance, c.radius)),
                !0 === n.enableDamping ? n.target.addScaledVector(f, n.dampingFactor) : n.target.add(f),
                t.setFromSpherical(c),
                t.applyQuaternion(o),
                e.copy(n.target).add(t),
                n.object.lookAt(n.target),
                !0 === n.enableDamping ? (h.theta *= 1 - n.dampingFactor,
                h.phi *= 1 - n.dampingFactor,
                f.multiplyScalar(1 - n.dampingFactor)) : (h.set(0, 0, 0),
                f.set(0, 0, 0)),
                p = 1,
                !!(d || m.distanceToSquared(n.object.position) > u || 8 * (1 - g.dot(n.object.quaternion)) > u) && (n.dispatchEvent(i),
                m.copy(n.object.position),
                g.copy(n.object.quaternion),
                d = !1,
                !0)
            }
        }(),
        this.dispose = function() {
            n.domElement.removeEventListener("contextmenu", Y, !1),
            n.domElement.removeEventListener("mousedown", G, !1),
            n.domElement.removeEventListener("wheel", j, !1),
            n.domElement.removeEventListener("touchstart", W, !1),
            n.domElement.removeEventListener("touchend", X, !1),
            n.domElement.removeEventListener("touchmove", q, !1),
            n.domElement.ownerDocument.removeEventListener("mousemove", H, !1),
            n.domElement.ownerDocument.removeEventListener("mouseup", V, !1),
            n.domElement.removeEventListener("keydown", U, !1)
        }
        ;
        var n = this
          , i = {
            type: "change"
        }
          , a = {
            type: "start"
        }
          , o = {
            type: "end"
        }
          , s = {
            NONE: -1,
            ROTATE: 0,
            DOLLY: 1,
            PAN: 2,
            TOUCH_ROTATE: 3,
            TOUCH_PAN: 4,
            TOUCH_DOLLY_PAN: 5,
            TOUCH_DOLLY_ROTATE: 6
        }
          , l = s.NONE
          , u = 1e-6
          , c = new r.Spherical
          , h = new r.Spherical
          , p = 1
          , f = new r.Vector3
          , d = !1
          , m = new r.Vector2
          , g = new r.Vector2
          , v = new r.Vector2
          , y = new r.Vector2
          , b = new r.Vector2
          , x = new r.Vector2
          , w = new r.Vector2
          , _ = new r.Vector2
          , S = new r.Vector2;
        function E() {
            return Math.pow(.95, n.zoomSpeed)
        }
        function M(e) {
            h.theta -= e
        }
        function T(e) {
            h.phi -= e
        }
        var A = function() {
            var e = new r.Vector3;
            return function(t, n) {
                e.setFromMatrixColumn(n, 0),
                e.multiplyScalar(-t),
                f.add(e)
            }
        }()
          , P = function() {
            var e = new r.Vector3;
            return function(t, r) {
                !0 === n.screenSpacePanning ? e.setFromMatrixColumn(r, 1) : (e.setFromMatrixColumn(r, 0),
                e.crossVectors(n.object.up, e)),
                e.multiplyScalar(t),
                f.add(e)
            }
        }()
          , C = function() {
            var e = new r.Vector3;
            return function(t, r) {
                var i = n.domElement;
                if (n.object.isPerspectiveCamera) {
                    var a = n.object.position;
                    e.copy(a).sub(n.target);
                    var o = e.length();
                    o *= Math.tan(n.object.fov / 2 * Math.PI / 180),
                    A(2 * t * o / i.clientHeight, n.object.matrix),
                    P(2 * r * o / i.clientHeight, n.object.matrix)
                } else
                    n.object.isOrthographicCamera ? (A(t * (n.object.right - n.object.left) / n.object.zoom / i.clientWidth, n.object.matrix),
                    P(r * (n.object.top - n.object.bottom) / n.object.zoom / i.clientHeight, n.object.matrix)) : (console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),
                    n.enablePan = !1)
            }
        }();
        function L(e) {
            n.object.isPerspectiveCamera ? p /= e : n.object.isOrthographicCamera ? (n.object.zoom = Math.max(n.minZoom, Math.min(n.maxZoom, n.object.zoom * e)),
            n.object.updateProjectionMatrix(),
            d = !0) : (console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),
            n.enableZoom = !1)
        }
        function R(e) {
            n.object.isPerspectiveCamera ? p *= e : n.object.isOrthographicCamera ? (n.object.zoom = Math.max(n.minZoom, Math.min(n.maxZoom, n.object.zoom / e)),
            n.object.updateProjectionMatrix(),
            d = !0) : (console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),
            n.enableZoom = !1)
        }
        function k(e) {
            m.set(e.clientX, e.clientY)
        }
        function D(e) {
            y.set(e.clientX, e.clientY)
        }
        function I(e) {
            if (1 == e.touches.length)
                m.set(e.touches[0].pageX, e.touches[0].pageY);
            else {
                var t = .5 * (e.touches[0].pageX + e.touches[1].pageX)
                  , n = .5 * (e.touches[0].pageY + e.touches[1].pageY);
                m.set(t, n)
            }
        }
        function O(e) {
            if (1 == e.touches.length)
                y.set(e.touches[0].pageX, e.touches[0].pageY);
            else {
                var t = .5 * (e.touches[0].pageX + e.touches[1].pageX)
                  , n = .5 * (e.touches[0].pageY + e.touches[1].pageY);
                y.set(t, n)
            }
        }
        function F(e) {
            var t = e.touches[0].pageX - e.touches[1].pageX
              , n = e.touches[0].pageY - e.touches[1].pageY
              , r = Math.sqrt(t * t + n * n);
            w.set(0, r)
        }
        function N(e) {
            if (1 == e.touches.length)
                g.set(e.touches[0].pageX, e.touches[0].pageY);
            else {
                var t = .5 * (e.touches[0].pageX + e.touches[1].pageX)
                  , r = .5 * (e.touches[0].pageY + e.touches[1].pageY);
                g.set(t, r)
            }
            v.subVectors(g, m).multiplyScalar(n.rotateSpeed);
            var i = n.domElement;
            M(2 * Math.PI * v.x / i.clientHeight),
            T(2 * Math.PI * v.y / i.clientHeight),
            m.copy(g)
        }
        function B(e) {
            if (1 == e.touches.length)
                b.set(e.touches[0].pageX, e.touches[0].pageY);
            else {
                var t = .5 * (e.touches[0].pageX + e.touches[1].pageX)
                  , r = .5 * (e.touches[0].pageY + e.touches[1].pageY);
                b.set(t, r)
            }
            x.subVectors(b, y).multiplyScalar(n.panSpeed),
            C(x.x, x.y),
            y.copy(b)
        }
        function z(e) {
            var t = e.touches[0].pageX - e.touches[1].pageX
              , r = e.touches[0].pageY - e.touches[1].pageY
              , i = Math.sqrt(t * t + r * r);
            _.set(0, i),
            S.set(0, Math.pow(_.y / w.y, n.zoomSpeed)),
            L(S.y),
            w.copy(_)
        }
        function G(e) {
            if (!1 !== n.enabled) {
                var t;
                switch (e.preventDefault(),
                n.domElement.focus ? n.domElement.focus() : window.focus(),
                e.button) {
                case 0:
                    t = n.mouseButtons.LEFT;
                    break;
                case 1:
                    t = n.mouseButtons.MIDDLE;
                    break;
                case 2:
                    t = n.mouseButtons.RIGHT;
                    break;
                default:
                    t = -1
                }
                switch (t) {
                case r.MOUSE.DOLLY:
                    if (!1 === n.enableZoom)
                        return;
                    !function(e) {
                        w.set(e.clientX, e.clientY)
                    }(e),
                    l = s.DOLLY;
                    break;
                case r.MOUSE.ROTATE:
                    if (e.ctrlKey || e.metaKey || e.shiftKey) {
                        if (!1 === n.enablePan)
                            return;
                        D(e),
                        l = s.PAN
                    } else {
                        if (!1 === n.enableRotate)
                            return;
                        k(e),
                        l = s.ROTATE
                    }
                    break;
                case r.MOUSE.PAN:
                    if (e.ctrlKey || e.metaKey || e.shiftKey) {
                        if (!1 === n.enableRotate)
                            return;
                        k(e),
                        l = s.ROTATE
                    } else {
                        if (!1 === n.enablePan)
                            return;
                        D(e),
                        l = s.PAN
                    }
                    break;
                default:
                    l = s.NONE
                }
                l !== s.NONE && (n.domElement.ownerDocument.addEventListener("mousemove", H, !1),
                n.domElement.ownerDocument.addEventListener("mouseup", V, !1),
                n.dispatchEvent(a))
            }
        }
        function H(e) {
            if (!1 !== n.enabled)
                switch (e.preventDefault(),
                l) {
                case s.ROTATE:
                    if (!1 === n.enableRotate)
                        return;
                    !function(e) {
                        g.set(e.clientX, e.clientY),
                        v.subVectors(g, m).multiplyScalar(n.rotateSpeed);
                        var t = n.domElement;
                        M(2 * Math.PI * v.x / t.clientHeight),
                        T(2 * Math.PI * v.y / t.clientHeight),
                        m.copy(g),
                        n.update()
                    }(e);
                    break;
                case s.DOLLY:
                    if (!1 === n.enableZoom)
                        return;
                    !function(e) {
                        _.set(e.clientX, e.clientY),
                        S.subVectors(_, w),
                        S.y > 0 ? L(E()) : S.y < 0 && R(E()),
                        w.copy(_),
                        n.update()
                    }(e);
                    break;
                case s.PAN:
                    if (!1 === n.enablePan)
                        return;
                    !function(e) {
                        b.set(e.clientX, e.clientY),
                        x.subVectors(b, y).multiplyScalar(n.panSpeed),
                        C(x.x, x.y),
                        y.copy(b),
                        n.update()
                    }(e)
                }
        }
        function V(e) {
            !1 !== n.enabled && (n.domElement.ownerDocument.removeEventListener("mousemove", H, !1),
            n.domElement.ownerDocument.removeEventListener("mouseup", V, !1),
            n.dispatchEvent(o),
            l = s.NONE)
        }
        function j(e) {
            !1 === n.enabled || !1 === n.enableZoom || l !== s.NONE && l !== s.ROTATE || (e.preventDefault(),
            e.stopPropagation(),
            n.dispatchEvent(a),
            function(e) {
                e.deltaY < 0 ? R(E()) : e.deltaY > 0 && L(E()),
                n.update()
            }(e),
            n.dispatchEvent(o))
        }
        function U(e) {
            !1 !== n.enabled && !1 !== n.enableKeys && !1 !== n.enablePan && function(e) {
                var t = !1;
                switch (e.keyCode) {
                case n.keys.UP:
                    C(0, n.keyPanSpeed),
                    t = !0;
                    break;
                case n.keys.BOTTOM:
                    C(0, -n.keyPanSpeed),
                    t = !0;
                    break;
                case n.keys.LEFT:
                    C(n.keyPanSpeed, 0),
                    t = !0;
                    break;
                case n.keys.RIGHT:
                    C(-n.keyPanSpeed, 0),
                    t = !0
                }
                t && (e.preventDefault(),
                n.update())
            }(e)
        }
        function W(e) {
            if (!1 !== n.enabled) {
                switch (e.preventDefault(),
                e.touches.length) {
                case 1:
                    switch (n.touches.ONE) {
                    case r.TOUCH.ROTATE:
                        if (!1 === n.enableRotate)
                            return;
                        I(e),
                        l = s.TOUCH_ROTATE;
                        break;
                    case r.TOUCH.PAN:
                        if (!1 === n.enablePan)
                            return;
                        O(e),
                        l = s.TOUCH_PAN;
                        break;
                    default:
                        l = s.NONE
                    }
                    break;
                case 2:
                    switch (n.touches.TWO) {
                    case r.TOUCH.DOLLY_PAN:
                        if (!1 === n.enableZoom && !1 === n.enablePan)
                            return;
                        !function(e) {
                            n.enableZoom && F(e),
                            n.enablePan && O(e)
                        }(e),
                        l = s.TOUCH_DOLLY_PAN;
                        break;
                    case r.TOUCH.DOLLY_ROTATE:
                        if (!1 === n.enableZoom && !1 === n.enableRotate)
                            return;
                        !function(e) {
                            n.enableZoom && F(e),
                            n.enableRotate && I(e)
                        }(e),
                        l = s.TOUCH_DOLLY_ROTATE;
                        break;
                    default:
                        l = s.NONE
                    }
                    break;
                default:
                    l = s.NONE
                }
                l !== s.NONE && n.dispatchEvent(a)
            }
        }
        function q(e) {
            if (!1 !== n.enabled)
                switch (e.preventDefault(),
                e.stopPropagation(),
                l) {
                case s.TOUCH_ROTATE:
                    if (!1 === n.enableRotate)
                        return;
                    N(e),
                    n.update();
                    break;
                case s.TOUCH_PAN:
                    if (!1 === n.enablePan)
                        return;
                    B(e),
                    n.update();
                    break;
                case s.TOUCH_DOLLY_PAN:
                    if (!1 === n.enableZoom && !1 === n.enablePan)
                        return;
                    !function(e) {
                        n.enableZoom && z(e),
                        n.enablePan && B(e)
                    }(e),
                    n.update();
                    break;
                case s.TOUCH_DOLLY_ROTATE:
                    if (!1 === n.enableZoom && !1 === n.enableRotate)
                        return;
                    !function(e) {
                        n.enableZoom && z(e),
                        n.enableRotate && N(e)
                    }(e),
                    n.update();
                    break;
                default:
                    l = s.NONE
                }
        }
        function X(e) {
            !1 !== n.enabled && (n.dispatchEvent(o),
            l = s.NONE)
        }
        function Y(e) {
            !1 !== n.enabled && e.preventDefault()
        }
        n.domElement.addEventListener("contextmenu", Y, !1),
        n.domElement.addEventListener("mousedown", G, !1),
        n.domElement.addEventListener("wheel", j, !1),
        n.domElement.addEventListener("touchstart", W, !1),
        n.domElement.addEventListener("touchend", X, !1),
        n.domElement.addEventListener("touchmove", q, !1),
        n.domElement.addEventListener("keydown", U, !1),
        -1 === n.domElement.tabIndex && (n.domElement.tabIndex = 0),
        this.update()
    };
    i.prototype = Object.create(r.EventDispatcher.prototype),
    i.prototype.constructor = i;
    var a = function(e, t) {
        i.call(this, e, t),
        this.screenSpacePanning = !1,
        this.mouseButtons.LEFT = r.MOUSE.PAN,
        this.mouseButtons.RIGHT = r.MOUSE.ROTATE,
        this.touches.ONE = r.TOUCH.PAN,
        this.touches.TWO = r.TOUCH.DOLLY_ROTATE
    };
    (a.prototype = Object.create(r.EventDispatcher.prototype)).constructor = a
}
, function(e, t, n) {
    "use strict";
    n.d(t, "a", (function() {
        return T
    }
    ));
    var r = n(1)
      , i = 0
      , a = 1
      , o = 2
      , s = 3
      , l = 4
      , u = 5121
      , c = 5123
      , h = 5126
      , p = 5125
      , f = 34962
      , d = 34963
      , m = 9728
      , g = 9729
      , v = 9984
      , y = 9985
      , b = 9986
      , x = 9987
      , w = 33071
      , _ = 33648
      , S = 10497
      , E = {};
    E[r.NearestFilter] = m,
    E[r.NearestMipmapNearestFilter] = v,
    E[r.NearestMipmapLinearFilter] = b,
    E[r.LinearFilter] = g,
    E[r.LinearMipmapNearestFilter] = y,
    E[r.LinearMipmapLinearFilter] = x,
    E[r.ClampToEdgeWrapping] = w,
    E[r.RepeatWrapping] = S,
    E[r.MirroredRepeatWrapping] = _;
    var M = {
        scale: "scale",
        position: "translation",
        quaternion: "rotation",
        morphTargetInfluences: "weights"
    }
      , T = function() {};
    T.prototype = {
        constructor: T,
        parse: function(e, t, n) {
            var m = {
                binary: !1,
                trs: !1,
                onlyVisible: !0,
                truncateDrawRange: !0,
                embedImages: !0,
                maxTextureSize: 1 / 0,
                animations: [],
                forcePowerOfTwoTextures: !1,
                includeCustomExtensions: !1
            };
            (n = Object.assign({}, m, n)).animations.length > 0 && (n.trs = !0);
            var g, v = {
                asset: {
                    version: "2.0",
                    generator: "GLTFExporter"
                }
            }, y = 0, b = [], x = [], w = new Map, _ = [], S = {}, A = {
                meshes: new Map,
                attributes: new Map,
                attributesNormalized: new Map,
                materials: new Map,
                textures: new Map,
                images: new Map
            }, P = new Map, C = 0;
            function L(e) {
                return P.has(e) || P.set(e, C++),
                P.get(e)
            }
            function R(e, t) {
                return e.length === t.length && e.every((function(e, n) {
                    return e === t[n]
                }
                ))
            }
            function k(e) {
                return 4 * Math.ceil(e / 4)
            }
            function D(e, t) {
                t = t || 0;
                var n = k(e.byteLength);
                if (n !== e.byteLength) {
                    var r = new Uint8Array(n);
                    if (r.set(new Uint8Array(e)),
                    0 !== t)
                        for (var i = e.byteLength; i < n; i++)
                            r[i] = t;
                    return r.buffer
                }
                return e
            }
            function I(e, t) {
                if (0 !== Object.keys(e.userData).length)
                    try {
                        var r = JSON.parse(JSON.stringify(e.userData));
                        if (n.includeCustomExtensions && r.gltfExtensions) {
                            for (var i in void 0 === t.extensions && (t.extensions = {}),
                            r.gltfExtensions)
                                t.extensions[i] = r.gltfExtensions[i],
                                S[i] = !0;
                            delete r.gltfExtensions
                        }
                        Object.keys(r).length > 0 && (t.extras = r)
                    } catch (a) {
                        console.warn("THREE.GLTFExporter: userData of '" + e.name + "' won't be serialized because of JSON.stringify error - " + a.message)
                    }
            }
            function O(e, t) {
                var n = !1
                  , r = {};
                0 === t.offset.x && 0 === t.offset.y || (r.offset = t.offset.toArray(),
                n = !0),
                0 !== t.rotation && (r.rotation = t.rotation,
                n = !0),
                1 === t.repeat.x && 1 === t.repeat.y || (r.scale = t.repeat.toArray(),
                n = !0),
                n && (e.extensions = e.extensions || {},
                e.extensions.KHR_texture_transform = r,
                S.KHR_texture_transform = !0)
            }
            function F(e) {
                return v.buffers || (v.buffers = [{
                    byteLength: 0
                }]),
                b.push(e),
                0
            }
            function N(e, t, r, i) {
                var a;
                if (e.array.constructor === Float32Array)
                    a = h;
                else if (e.array.constructor === Uint32Array)
                    a = p;
                else if (e.array.constructor === Uint16Array)
                    a = c;
                else {
                    if (e.array.constructor !== Uint8Array)
                        throw new Error("THREE.GLTFExporter: Unsupported bufferAttribute component type.");
                    a = u
                }
                if (void 0 === r && (r = 0),
                void 0 === i && (i = e.count),
                n.truncateDrawRange && void 0 !== t && null === t.index) {
                    var o = r + i
                      , s = t.drawRange.count === 1 / 0 ? e.count : t.drawRange.start + t.drawRange.count;
                    r = Math.max(r, t.drawRange.start),
                    (i = Math.min(o, s) - r) < 0 && (i = 0)
                }
                if (0 === i)
                    return null;
                var l, m = function(e, t, n) {
                    for (var r = {
                        min: new Array(e.itemSize).fill(Number.POSITIVE_INFINITY),
                        max: new Array(e.itemSize).fill(Number.NEGATIVE_INFINITY)
                    }, i = t; i < t + n; i++)
                        for (var a = 0; a < e.itemSize; a++) {
                            var o = e.array[i * e.itemSize + a];
                            r.min[a] = Math.min(r.min[a], o),
                            r.max[a] = Math.max(r.max[a], o)
                        }
                    return r
                }(e, r, i);
                void 0 !== t && (l = e === t.index ? d : f);
                var g = function(e, t, n, r, i) {
                    var a;
                    v.bufferViews || (v.bufferViews = []),
                    a = t === u ? 1 : t === c ? 2 : 4;
                    for (var o = k(r * e.itemSize * a), s = new DataView(new ArrayBuffer(o)), l = 0, d = n; d < n + r; d++)
                        for (var m = 0; m < e.itemSize; m++) {
                            var g;
                            e.itemSize > 4 ? g = e.array[d * e.itemSize + m] : 0 === m ? g = e.getX(d) : 1 === m ? g = e.getY(d) : 2 === m ? g = e.getZ(d) : 3 === m && (g = e.getW(d)),
                            t === h ? s.setFloat32(l, g, !0) : t === p ? s.setUint32(l, g, !0) : t === c ? s.setUint16(l, g, !0) : t === u && s.setUint8(l, g),
                            l += a
                        }
                    var b = {
                        buffer: F(s.buffer),
                        byteOffset: y,
                        byteLength: o
                    };
                    return void 0 !== i && (b.target = i),
                    i === f && (b.byteStride = e.itemSize * a),
                    y += o,
                    v.bufferViews.push(b),
                    {
                        id: v.bufferViews.length - 1,
                        byteLength: 0
                    }
                }(e, a, r, i, l)
                  , b = {
                    bufferView: g.id,
                    byteOffset: g.byteOffset,
                    componentType: a,
                    count: i,
                    max: m.max,
                    min: m.min,
                    type: {
                        1: "SCALAR",
                        2: "VEC2",
                        3: "VEC3",
                        4: "VEC4",
                        16: "MAT4"
                    }[e.itemSize]
                };
                return !0 === e.normalized && (b.normalized = !0),
                v.accessors || (v.accessors = []),
                v.accessors.push(b),
                v.accessors.length - 1
            }
            function B(e, t, i) {
                A.images.has(e) || A.images.set(e, {});
                var a = A.images.get(e)
                  , o = t === r.RGBAFormat ? "image/png" : "image/jpeg"
                  , s = o + ":flipY/" + i.toString();
                if (void 0 !== a[s])
                    return a[s];
                v.images || (v.images = []);
                var l = {
                    mimeType: o
                };
                if (n.embedImages) {
                    var u = g = g || document.createElement("canvas");
                    u.width = Math.min(e.width, n.maxTextureSize),
                    u.height = Math.min(e.height, n.maxTextureSize),
                    n.forcePowerOfTwoTextures && !function(e) {
                        return r.MathUtils.isPowerOfTwo(e.width) && r.MathUtils.isPowerOfTwo(e.height)
                    }(u) && (console.warn("GLTFExporter: Resized non-power-of-two image.", e),
                    u.width = r.MathUtils.floorPowerOfTwo(u.width),
                    u.height = r.MathUtils.floorPowerOfTwo(u.height));
                    var c = u.getContext("2d");
                    !0 === i && (c.translate(0, u.height),
                    c.scale(1, -1)),
                    c.drawImage(e, 0, 0, u.width, u.height),
                    !0 === n.binary ? x.push(new Promise((function(e) {
                        u.toBlob((function(t) {
                            (function(e) {
                                return v.bufferViews || (v.bufferViews = []),
                                new Promise((function(t) {
                                    var n = new window.FileReader;
                                    n.readAsArrayBuffer(e),
                                    n.onloadend = function() {
                                        var e = D(n.result)
                                          , r = {
                                            buffer: F(e),
                                            byteOffset: y,
                                            byteLength: e.byteLength
                                        };
                                        y += e.byteLength,
                                        v.bufferViews.push(r),
                                        t(v.bufferViews.length - 1)
                                    }
                                }
                                ))
                            }
                            )(t).then((function(t) {
                                l.bufferView = t,
                                e()
                            }
                            ))
                        }
                        ), o)
                    }
                    ))) : l.uri = u.toDataURL(o)
                } else
                    l.uri = e.src;
                v.images.push(l);
                var h = v.images.length - 1;
                return a[s] = h,
                h
            }
            function z(e) {
                v.samplers || (v.samplers = []);
                var t = {
                    magFilter: E[e.magFilter],
                    minFilter: E[e.minFilter],
                    wrapS: E[e.wrapS],
                    wrapT: E[e.wrapT]
                };
                return v.samplers.push(t),
                v.samplers.length - 1
            }
            function G(e) {
                if (A.textures.has(e))
                    return A.textures.get(e);
                v.textures || (v.textures = []);
                var t = {
                    sampler: z(e),
                    source: B(e.image, e.format, e.flipY)
                };
                e.name && (t.name = e.name),
                v.textures.push(t);
                var n = v.textures.length - 1;
                return A.textures.set(e, n),
                n
            }
            function H(e) {
                if (A.materials.has(e))
                    return A.materials.get(e);
                if (e.isShaderMaterial)
                    return console.warn("GLTFExporter: THREE.ShaderMaterial not supported."),
                    null;
                v.materials || (v.materials = []);
                var t = {
                    pbrMetallicRoughness: {}
                };
                e.isMeshBasicMaterial ? (t.extensions = {
                    KHR_materials_unlit: {}
                },
                S.KHR_materials_unlit = !0) : e.isGLTFSpecularGlossinessMaterial ? (t.extensions = {
                    KHR_materials_pbrSpecularGlossiness: {}
                },
                S.KHR_materials_pbrSpecularGlossiness = !0) : e.isMeshStandardMaterial || console.warn("GLTFExporter: Use MeshStandardMaterial or MeshBasicMaterial for best results.");
                var n = e.color.toArray().concat([e.opacity]);
                if (R(n, [1, 1, 1, 1]) || (t.pbrMetallicRoughness.baseColorFactor = n),
                e.isMeshStandardMaterial ? (t.pbrMetallicRoughness.metallicFactor = e.metalness,
                t.pbrMetallicRoughness.roughnessFactor = e.roughness) : e.isMeshBasicMaterial ? (t.pbrMetallicRoughness.metallicFactor = 0,
                t.pbrMetallicRoughness.roughnessFactor = .9) : (t.pbrMetallicRoughness.metallicFactor = .5,
                t.pbrMetallicRoughness.roughnessFactor = .5),
                e.isGLTFSpecularGlossinessMaterial) {
                    t.pbrMetallicRoughness.baseColorFactor && (t.extensions.KHR_materials_pbrSpecularGlossiness.diffuseFactor = t.pbrMetallicRoughness.baseColorFactor);
                    var i = [1, 1, 1];
                    e.specular.toArray(i, 0),
                    t.extensions.KHR_materials_pbrSpecularGlossiness.specularFactor = i,
                    t.extensions.KHR_materials_pbrSpecularGlossiness.glossinessFactor = e.glossiness
                }
                if (e.metalnessMap || e.roughnessMap)
                    if (e.metalnessMap === e.roughnessMap) {
                        var a = {
                            index: G(e.metalnessMap)
                        };
                        O(a, e.metalnessMap),
                        t.pbrMetallicRoughness.metallicRoughnessTexture = a
                    } else
                        console.warn("THREE.GLTFExporter: Ignoring metalnessMap and roughnessMap because they are not the same Texture.");
                if (e.map) {
                    var o = {
                        index: G(e.map)
                    };
                    O(o, e.map),
                    e.isGLTFSpecularGlossinessMaterial && (t.extensions.KHR_materials_pbrSpecularGlossiness.diffuseTexture = o),
                    t.pbrMetallicRoughness.baseColorTexture = o
                }
                if (e.isGLTFSpecularGlossinessMaterial && e.specularMap) {
                    var s = {
                        index: G(e.specularMap)
                    };
                    O(s, e.specularMap),
                    t.extensions.KHR_materials_pbrSpecularGlossiness.specularGlossinessTexture = s
                }
                if (e.emissive) {
                    var l = e.emissive.clone().multiplyScalar(e.emissiveIntensity).toArray();
                    if (R(l, [0, 0, 0]) || (t.emissiveFactor = l),
                    e.emissiveMap) {
                        var u = {
                            index: G(e.emissiveMap)
                        };
                        O(u, e.emissiveMap),
                        t.emissiveTexture = u
                    }
                }
                if (e.normalMap) {
                    var c = {
                        index: G(e.normalMap)
                    };
                    e.normalScale && -1 !== e.normalScale.x && (e.normalScale.x !== e.normalScale.y && console.warn("THREE.GLTFExporter: Normal scale components are different, ignoring Y and exporting X."),
                    c.scale = e.normalScale.x),
                    O(c, e.normalMap),
                    t.normalTexture = c
                }
                if (e.aoMap) {
                    var h = {
                        index: G(e.aoMap),
                        texCoord: 1
                    };
                    1 !== e.aoMapIntensity && (h.strength = e.aoMapIntensity),
                    O(h, e.aoMap),
                    t.occlusionTexture = h
                }
                e.transparent ? t.alphaMode = "BLEND" : e.alphaTest > 0 && (t.alphaMode = "MASK",
                t.alphaCutoff = e.alphaTest),
                e.side === r.DoubleSide && (t.doubleSided = !0),
                "" !== e.name && (t.name = e.name),
                I(e, t),
                v.materials.push(t);
                var p = v.materials.length - 1;
                return A.materials.set(e, p),
                p
            }
            function V(e) {
                var t = [e.geometry.uuid];
                if (Array.isArray(e.material))
                    for (var n = 0, u = e.material.length; n < u; n++)
                        t.push(e.material[n].uuid);
                else
                    t.push(e.material.uuid);
                var c = t.join(":");
                if (A.meshes.has(c))
                    return A.meshes.get(c);
                var h, p = e.geometry;
                h = e.isLineSegments ? a : e.isLineLoop ? o : e.isLine ? s : e.isPoints ? i : e.material.wireframe ? a : l,
                p.isBufferGeometry || (console.warn("GLTFExporter: Exporting THREE.Geometry will increase file size. Use BufferGeometry instead."),
                p = (new r.BufferGeometry).setFromObject(e));
                var f = {}
                  , d = {}
                  , m = []
                  , g = []
                  , y = {
                    uv: "TEXCOORD_0",
                    uv2: "TEXCOORD_1",
                    color: "COLOR_0",
                    skinWeight: "WEIGHTS_0",
                    skinIndex: "JOINTS_0"
                }
                  , b = p.getAttribute("normal");
                void 0 === b || function(e) {
                    if (A.attributesNormalized.has(e))
                        return !1;
                    for (var t = new r.Vector3, n = 0, i = e.count; n < i; n++)
                        if (Math.abs(t.fromArray(e.array, 3 * n).length() - 1) > 5e-4)
                            return !1;
                    return !0
                }(b) || (console.warn("THREE.GLTFExporter: Creating normalized normal attribute from the non-normalized one."),
                p.setAttribute("normal", function(e) {
                    if (A.attributesNormalized.has(e))
                        return A.attributesNormalized.get(e);
                    for (var t = e.clone(), n = new r.Vector3, i = 0, a = t.count; i < a; i++)
                        n.fromArray(t.array, 3 * i),
                        0 === n.x && 0 === n.y && 0 === n.z ? n.setX(1) : n.normalize(),
                        n.toArray(t.array, 3 * i);
                    return A.attributesNormalized.set(e, t),
                    t
                }(b)));
                var x = null;
                for (var w in p.attributes)
                    if ("morph" !== w.substr(0, 5)) {
                        var _ = p.attributes[w];
                        w = y[w] || w.toUpperCase();
                        if (/^(POSITION|NORMAL|TANGENT|TEXCOORD_\d+|COLOR_\d+|JOINTS_\d+|WEIGHTS_\d+)$/.test(w) || (w = "_" + w),
                        A.attributes.has(L(_)))
                            d[w] = A.attributes.get(L(_));
                        else {
                            x = null;
                            var S = _.array;
                            "JOINTS_0" !== w || S instanceof Uint16Array || S instanceof Uint8Array || (console.warn('GLTFExporter: Attribute "skinIndex" converted to type UNSIGNED_SHORT.'),
                            x = new r.BufferAttribute(new Uint16Array(S),_.itemSize,_.normalized));
                            var E = N(x || _, p);
                            null !== E && (d[w] = E,
                            A.attributes.set(L(_), E))
                        }
                    }
                if (void 0 !== b && p.setAttribute("normal", b),
                0 === Object.keys(d).length)
                    return null;
                if (void 0 !== e.morphTargetInfluences && e.morphTargetInfluences.length > 0) {
                    var M = []
                      , T = []
                      , P = {};
                    if (void 0 !== e.morphTargetDictionary)
                        for (var C in e.morphTargetDictionary)
                            P[e.morphTargetDictionary[C]] = C;
                    for (n = 0; n < e.morphTargetInfluences.length; ++n) {
                        var R = {}
                          , k = !1;
                        for (var w in p.morphAttributes)
                            if ("position" === w || "normal" === w) {
                                _ = p.morphAttributes[w][n];
                                var D = w.toUpperCase()
                                  , O = p.attributes[w];
                                if (A.attributes.has(L(_)))
                                    R[D] = A.attributes.get(L(_));
                                else {
                                    var F = _.clone();
                                    if (!p.morphTargetsRelative)
                                        for (var B = 0, z = _.count; B < z; B++)
                                            F.setXYZ(B, _.getX(B) - O.getX(B), _.getY(B) - O.getY(B), _.getZ(B) - O.getZ(B));
                                    R[D] = N(F, p),
                                    A.attributes.set(L(O), R[D])
                                }
                            } else
                                k || (console.warn("GLTFExporter: Only POSITION and NORMAL morph are supported."),
                                k = !0);
                        g.push(R),
                        M.push(e.morphTargetInfluences[n]),
                        void 0 !== e.morphTargetDictionary && T.push(P[n])
                    }
                    f.weights = M,
                    T.length > 0 && (f.extras = {},
                    f.extras.targetNames = T)
                }
                var G = Array.isArray(e.material);
                if (G && 0 === p.groups.length)
                    return null;
                for (var V = G ? e.material : [e.material], j = G ? p.groups : [{
                    materialIndex: 0,
                    start: void 0,
                    count: void 0
                }], U = (n = 0,
                j.length); n < U; n++) {
                    var W = {
                        mode: h,
                        attributes: d
                    };
                    if (I(p, W),
                    g.length > 0 && (W.targets = g),
                    null !== p.index) {
                        var q = L(p.index);
                        void 0 === j[n].start && void 0 === j[n].count || (q += ":" + j[n].start + ":" + j[n].count),
                        A.attributes.has(q) ? W.indices = A.attributes.get(q) : (W.indices = N(p.index, p, j[n].start, j[n].count),
                        A.attributes.set(q, W.indices)),
                        null === W.indices && delete W.indices
                    }
                    var X = H(V[j[n].materialIndex]);
                    null !== X && (W.material = X),
                    m.push(W)
                }
                f.primitives = m,
                v.meshes || (v.meshes = []),
                v.meshes.push(f);
                var Y = v.meshes.length - 1;
                return A.meshes.set(c, Y),
                Y
            }
            function j(e, t) {
                v.animations || (v.animations = []);
                for (var n = (e = T.Utils.mergeMorphTargetTracks(e.clone(), t)).tracks, i = [], a = [], o = 0; o < n.length; ++o) {
                    var s = n[o]
                      , l = r.PropertyBinding.parseTrackName(s.name)
                      , u = r.PropertyBinding.findNode(t, l.nodeName)
                      , c = M[l.propertyName];
                    if ("bones" === l.objectName && (u = !0 === u.isSkinnedMesh ? u.skeleton.getBoneByName(l.objectIndex) : void 0),
                    !u || !c)
                        return console.warn('THREE.GLTFExporter: Could not export animation track "%s".', s.name),
                        null;
                    var h, p = s.values.length / s.times.length;
                    c === M.morphTargetInfluences && (p /= u.morphTargetInfluences.length),
                    !0 === s.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ? (h = "CUBICSPLINE",
                    p /= 3) : h = s.getInterpolation() === r.InterpolateDiscrete ? "STEP" : "LINEAR",
                    a.push({
                        input: N(new r.BufferAttribute(s.times,1)),
                        output: N(new r.BufferAttribute(s.values,p)),
                        interpolation: h
                    }),
                    i.push({
                        sampler: a.length - 1,
                        target: {
                            node: w.get(u),
                            path: c
                        }
                    })
                }
                return v.animations.push({
                    name: e.name || "clip_" + v.animations.length,
                    samplers: a,
                    channels: i
                }),
                v.animations.length - 1
            }
            function U(e) {
                var t = v.nodes[w.get(e)]
                  , n = e.skeleton;
                if (void 0 === n)
                    return null;
                var i = e.skeleton.bones[0];
                if (void 0 === i)
                    return null;
                for (var a = [], o = new Float32Array(16 * n.bones.length), s = 0; s < n.bones.length; ++s)
                    a.push(w.get(n.bones[s])),
                    n.boneInverses[s].toArray(o, 16 * s);
                return void 0 === v.skins && (v.skins = []),
                v.skins.push({
                    inverseBindMatrices: N(new r.BufferAttribute(o,16)),
                    joints: a,
                    skeleton: w.get(i)
                }),
                t.skin = v.skins.length - 1
            }
            function W(e) {
                var t = {};
                e.name && (t.name = e.name),
                t.color = e.color.toArray(),
                t.intensity = e.intensity,
                e.isDirectionalLight ? t.type = "directional" : e.isPointLight ? (t.type = "point",
                e.distance > 0 && (t.range = e.distance)) : e.isSpotLight && (t.type = "spot",
                e.distance > 0 && (t.range = e.distance),
                t.spot = {},
                t.spot.innerConeAngle = (e.penumbra - 1) * e.angle * -1,
                t.spot.outerConeAngle = e.angle),
                void 0 !== e.decay && 2 !== e.decay && console.warn("THREE.GLTFExporter: Light decay may be lost. glTF is physically-based, and expects light.decay=2."),
                !e.target || e.target.parent === e && 0 === e.target.position.x && 0 === e.target.position.y && -1 === e.target.position.z || console.warn("THREE.GLTFExporter: Light direction may be lost. For best results, make light.target a child of the light with position 0,0,-1.");
                var n = v.extensions.KHR_lights_punctual.lights;
                return n.push(t),
                n.length - 1
            }
            function q(e) {
                v.nodes || (v.nodes = []);
                var t = {};
                if (n.trs) {
                    var i = e.quaternion.toArray()
                      , a = e.position.toArray()
                      , o = e.scale.toArray();
                    R(i, [0, 0, 0, 1]) || (t.rotation = i),
                    R(a, [0, 0, 0]) || (t.translation = a),
                    R(o, [1, 1, 1]) || (t.scale = o)
                } else
                    e.matrixAutoUpdate && e.updateMatrix(),
                    R(e.matrix.elements, [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]) || (t.matrix = e.matrix.elements);
                if ("" !== e.name && (t.name = String(e.name)),
                I(e, t),
                e.isMesh || e.isLine || e.isPoints) {
                    var s = V(e);
                    null !== s && (t.mesh = s)
                } else if (e.isCamera)
                    t.camera = function(e) {
                        v.cameras || (v.cameras = []);
                        var t = e.isOrthographicCamera
                          , n = {
                            type: t ? "orthographic" : "perspective"
                        };
                        return t ? n.orthographic = {
                            xmag: 2 * e.right,
                            ymag: 2 * e.top,
                            zfar: e.far <= 0 ? .001 : e.far,
                            znear: e.near < 0 ? 0 : e.near
                        } : n.perspective = {
                            aspectRatio: e.aspect,
                            yfov: r.MathUtils.degToRad(e.fov),
                            zfar: e.far <= 0 ? .001 : e.far,
                            znear: e.near < 0 ? 0 : e.near
                        },
                        "" !== e.name && (n.name = e.type),
                        v.cameras.push(n),
                        v.cameras.length - 1
                    }(e);
                else if (e.isDirectionalLight || e.isPointLight || e.isSpotLight)
                    S.KHR_lights_punctual || (v.extensions = v.extensions || {},
                    v.extensions.KHR_lights_punctual = {
                        lights: []
                    },
                    S.KHR_lights_punctual = !0),
                    t.extensions = t.extensions || {},
                    t.extensions.KHR_lights_punctual = {
                        light: W(e)
                    };
                else if (e.isLight)
                    return console.warn("THREE.GLTFExporter: Only directional, point, and spot lights are supported.", e),
                    null;
                if (e.isSkinnedMesh && _.push(e),
                e.children.length > 0) {
                    for (var l = [], u = 0, c = e.children.length; u < c; u++) {
                        var h = e.children[u];
                        if (h.visible || !1 === n.onlyVisible) {
                            var p = q(h);
                            null !== p && l.push(p)
                        }
                    }
                    l.length > 0 && (t.children = l)
                }
                v.nodes.push(t);
                var f = v.nodes.length - 1;
                return w.set(e, f),
                f
            }
            function X(e) {
                v.scenes || (v.scenes = [],
                v.scene = 0);
                var t = {};
                "" !== e.name && (t.name = e.name),
                v.scenes.push(t);
                for (var r = [], i = 0, a = e.children.length; i < a; i++) {
                    var o = e.children[i];
                    if (o.visible || !1 === n.onlyVisible) {
                        var s = q(o);
                        null !== s && r.push(s)
                    }
                }
                r.length > 0 && (t.nodes = r),
                I(e, t)
            }
            !function(e) {
                e = e instanceof Array ? e : [e];
                for (var t = [], i = 0; i < e.length; i++)
                    e[i]instanceof r.Scene ? X(e[i]) : t.push(e[i]);
                for (t.length > 0 && function(e) {
                    var t = new r.Scene;
                    t.name = "AuxScene";
                    for (var n = 0; n < e.length; n++)
                        t.children.push(e[n]);
                    X(t)
                }(t),
                i = 0; i < _.length; ++i)
                    U(_[i]);
                for (i = 0; i < n.animations.length; ++i)
                    j(n.animations[i], e[0])
            }(e),
            Promise.all(x).then((function() {
                var e = new Blob(b,{
                    type: "application/octet-stream"
                })
                  , r = Object.keys(S);
                if (r.length > 0 && (v.extensionsUsed = r),
                v.buffers && v.buffers.length > 0 && (v.buffers[0].byteLength = e.size),
                !0 === n.binary) {
                    (i = new window.FileReader).readAsArrayBuffer(e),
                    i.onloadend = function() {
                        var e = D(i.result)
                          , n = new DataView(new ArrayBuffer(8));
                        n.setUint32(0, e.byteLength, !0),
                        n.setUint32(4, 5130562, !0);
                        var r = D(function(e) {
                            if (void 0 !== window.TextEncoder)
                                return (new TextEncoder).encode(e).buffer;
                            for (var t = new Uint8Array(new ArrayBuffer(e.length)), n = 0, r = e.length; n < r; n++) {
                                var i = e.charCodeAt(n);
                                t[n] = i > 255 ? 32 : i
                            }
                            return t.buffer
                        }(JSON.stringify(v)), 32)
                          , a = new DataView(new ArrayBuffer(8));
                        a.setUint32(0, r.byteLength, !0),
                        a.setUint32(4, 1313821514, !0);
                        var o = new ArrayBuffer(12)
                          , s = new DataView(o);
                        s.setUint32(0, 1179937895, !0),
                        s.setUint32(4, 2, !0);
                        var l = 12 + a.byteLength + r.byteLength + n.byteLength + e.byteLength;
                        s.setUint32(8, l, !0);
                        var u = new Blob([o, a, r, n, e],{
                            type: "application/octet-stream"
                        })
                          , c = new window.FileReader;
                        c.readAsArrayBuffer(u),
                        c.onloadend = function() {
                            t(c.result)
                        }
                    }
                } else {
                    var i;
                    if (v.buffers && v.buffers.length > 0)
                        (i = new window.FileReader).readAsDataURL(e),
                        i.onloadend = function() {
                            var e = i.result;
                            v.buffers[0].uri = e,
                            t(v)
                        }
                        ;
                    else
                        t(v)
                }
            }
            ))
        }
    },
    T.Utils = {
        insertKeyframe: function(e, t) {
            var n, r = e.getValueSize(), i = new e.TimeBufferType(e.times.length + 1), a = new e.ValueBufferType(e.values.length + r), o = e.createInterpolant(new e.ValueBufferType(r));
            if (0 === e.times.length) {
                i[0] = t;
                for (var s = 0; s < r; s++)
                    a[s] = 0;
                n = 0
            } else if (t < e.times[0]) {
                if (Math.abs(e.times[0] - t) < .001)
                    return 0;
                i[0] = t,
                i.set(e.times, 1),
                a.set(o.evaluate(t), 0),
                a.set(e.values, r),
                n = 0
            } else if (t > e.times[e.times.length - 1]) {
                if (Math.abs(e.times[e.times.length - 1] - t) < .001)
                    return e.times.length - 1;
                i[i.length - 1] = t,
                i.set(e.times, 0),
                a.set(e.values, 0),
                a.set(o.evaluate(t), e.values.length),
                n = i.length - 1
            } else
                for (s = 0; s < e.times.length; s++) {
                    if (Math.abs(e.times[s] - t) < .001)
                        return s;
                    if (e.times[s] < t && e.times[s + 1] > t) {
                        i.set(e.times.slice(0, s + 1), 0),
                        i[s + 1] = t,
                        i.set(e.times.slice(s + 1), s + 2),
                        a.set(e.values.slice(0, (s + 1) * r), 0),
                        a.set(o.evaluate(t), (s + 1) * r),
                        a.set(e.values.slice((s + 1) * r), (s + 2) * r),
                        n = s + 1;
                        break
                    }
                }
            return e.times = i,
            e.values = a,
            n
        },
        mergeMorphTargetTracks: function(e, t) {
            for (var n = [], i = {}, a = e.tracks, o = 0; o < a.length; ++o) {
                var s = a[o]
                  , l = r.PropertyBinding.parseTrackName(s.name)
                  , u = r.PropertyBinding.findNode(t, l.nodeName);
                if ("morphTargetInfluences" === l.propertyName && void 0 !== l.propertyIndex) {
                    if (s.createInterpolant !== s.InterpolantFactoryMethodDiscrete && s.createInterpolant !== s.InterpolantFactoryMethodLinear) {
                        if (s.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline)
                            throw new Error("THREE.GLTFExporter: Cannot merge tracks with glTF CUBICSPLINE interpolation.");
                        console.warn("THREE.GLTFExporter: Morph target interpolation mode not yet supported. Using LINEAR instead."),
                        (s = s.clone()).setInterpolation(r.InterpolateLinear)
                    }
                    var c, h = u.morphTargetInfluences.length, p = u.morphTargetDictionary[l.propertyIndex];
                    if (void 0 === p)
                        throw new Error("THREE.GLTFExporter: Morph target name not found: " + l.propertyIndex);
                    if (void 0 !== i[u.uuid]) {
                        var f = s.createInterpolant(new s.ValueBufferType(1));
                        c = i[u.uuid];
                        for (g = 0; g < c.times.length; g++)
                            c.values[g * h + p] = f.evaluate(c.times[g]);
                        for (g = 0; g < s.times.length; g++) {
                            var d = this.insertKeyframe(c, s.times[g]);
                            c.values[d * h + p] = s.values[g]
                        }
                    } else {
                        for (var m = new ((c = s.clone()).ValueBufferType)(h * c.times.length), g = 0; g < c.times.length; g++)
                            m[g * h + p] = c.values[g];
                        c.name = l.nodeName + ".morphTargetInfluences",
                        c.values = m,
                        i[u.uuid] = c,
                        n.push(c)
                    }
                } else
                    n.push(s)
            }
            return e.tracks = n,
            e
        }
    }
}
, , , , , , , function(module, exports, __webpack_require__) {
    var __WEBPACK_AMD_DEFINE_RESULT__, root, factory;
    "undefined" !== typeof navigator && (root = window || {},
    factory = function(window) {
        "use strict";
        var svgNS = "http://www.w3.org/2000/svg", locationHref = "", initialDefaultFrame = -999999, subframeEnabled = !0, idPrefix = "", expressionsPlugin, isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent), cachedColors = {}, bmRnd, bmPow = Math.pow, bmSqrt = Math.sqrt, bmFloor = Math.floor, bmMax = Math.max, bmMin = Math.min, BMMath = {};
        function ProjectInterface() {
            return {}
        }
        !function() {
            var e, t = ["abs", "acos", "acosh", "asin", "asinh", "atan", "atanh", "atan2", "ceil", "cbrt", "expm1", "clz32", "cos", "cosh", "exp", "floor", "fround", "hypot", "imul", "log", "log1p", "log2", "log10", "max", "min", "pow", "random", "round", "sign", "sin", "sinh", "sqrt", "tan", "tanh", "trunc", "E", "LN10", "LN2", "LOG10E", "LOG2E", "PI", "SQRT1_2", "SQRT2"], n = t.length;
            for (e = 0; e < n; e += 1)
                BMMath[t[e]] = Math[t[e]]
        }(),
        BMMath.random = Math.random,
        BMMath.abs = function(e) {
            if ("object" === typeof e && e.length) {
                var t, n = createSizedArray(e.length), r = e.length;
                for (t = 0; t < r; t += 1)
                    n[t] = Math.abs(e[t]);
                return n
            }
            return Math.abs(e)
        }
        ;
        var defaultCurveSegments = 150
          , degToRads = Math.PI / 180
          , roundCorner = .5519;
        function roundValues(e) {
            bmRnd = e ? Math.round : function(e) {
                return e
            }
        }
        function styleDiv(e) {
            e.style.position = "absolute",
            e.style.top = 0,
            e.style.left = 0,
            e.style.display = "block",
            e.style.transformOrigin = "0 0",
            e.style.webkitTransformOrigin = "0 0",
            e.style.backfaceVisibility = "visible",
            e.style.webkitBackfaceVisibility = "visible",
            e.style.transformStyle = "preserve-3d",
            e.style.webkitTransformStyle = "preserve-3d",
            e.style.mozTransformStyle = "preserve-3d"
        }
        function BMEnterFrameEvent(e, t, n, r) {
            this.type = e,
            this.currentTime = t,
            this.totalTime = n,
            this.direction = r < 0 ? -1 : 1
        }
        function BMCompleteEvent(e, t) {
            this.type = e,
            this.direction = t < 0 ? -1 : 1
        }
        function BMCompleteLoopEvent(e, t, n, r) {
            this.type = e,
            this.currentLoop = n,
            this.totalLoops = t,
            this.direction = r < 0 ? -1 : 1
        }
        function BMSegmentStartEvent(e, t, n) {
            this.type = e,
            this.firstFrame = t,
            this.totalFrames = n
        }
        function BMDestroyEvent(e, t) {
            this.type = e,
            this.target = t
        }
        function BMRenderFrameErrorEvent(e, t) {
            this.type = "renderFrameError",
            this.nativeError = e,
            this.currentTime = t
        }
        function BMConfigErrorEvent(e) {
            this.type = "configError",
            this.nativeError = e
        }
        function BMAnimationConfigErrorEvent(e, t) {
            this.type = e,
            this.nativeError = t
        }
        roundValues(!1);
        var createElementID = function() {
            var e = 0;
            return function() {
                return idPrefix + "__lottie_element_" + (e += 1)
            }
        }();
        function HSVtoRGB(e, t, n) {
            var r, i, a, o, s, l, u, c;
            switch (l = n * (1 - t),
            u = n * (1 - (s = 6 * e - (o = Math.floor(6 * e))) * t),
            c = n * (1 - (1 - s) * t),
            o % 6) {
            case 0:
                r = n,
                i = c,
                a = l;
                break;
            case 1:
                r = u,
                i = n,
                a = l;
                break;
            case 2:
                r = l,
                i = n,
                a = c;
                break;
            case 3:
                r = l,
                i = u,
                a = n;
                break;
            case 4:
                r = c,
                i = l,
                a = n;
                break;
            case 5:
                r = n,
                i = l,
                a = u
            }
            return [r, i, a]
        }
        function RGBtoHSV(e, t, n) {
            var r, i = Math.max(e, t, n), a = Math.min(e, t, n), o = i - a, s = 0 === i ? 0 : o / i, l = i / 255;
            switch (i) {
            case a:
                r = 0;
                break;
            case e:
                r = t - n + o * (t < n ? 6 : 0),
                r /= 6 * o;
                break;
            case t:
                r = n - e + 2 * o,
                r /= 6 * o;
                break;
            case n:
                r = e - t + 4 * o,
                r /= 6 * o
            }
            return [r, s, l]
        }
        function addSaturationToRGB(e, t) {
            var n = RGBtoHSV(255 * e[0], 255 * e[1], 255 * e[2]);
            return n[1] += t,
            n[1] > 1 ? n[1] = 1 : n[1] <= 0 && (n[1] = 0),
            HSVtoRGB(n[0], n[1], n[2])
        }
        function addBrightnessToRGB(e, t) {
            var n = RGBtoHSV(255 * e[0], 255 * e[1], 255 * e[2]);
            return n[2] += t,
            n[2] > 1 ? n[2] = 1 : n[2] < 0 && (n[2] = 0),
            HSVtoRGB(n[0], n[1], n[2])
        }
        function addHueToRGB(e, t) {
            var n = RGBtoHSV(255 * e[0], 255 * e[1], 255 * e[2]);
            return n[0] += t / 360,
            n[0] > 1 ? n[0] -= 1 : n[0] < 0 && (n[0] += 1),
            HSVtoRGB(n[0], n[1], n[2])
        }
        var rgbToHex = function() {
            var e, t, n = [];
            for (e = 0; e < 256; e += 1)
                t = e.toString(16),
                n[e] = 1 === t.length ? "0" + t : t;
            return function(e, t, r) {
                return e < 0 && (e = 0),
                t < 0 && (t = 0),
                r < 0 && (r = 0),
                "#" + n[e] + n[t] + n[r]
            }
        }();
        function BaseEvent() {}
        BaseEvent.prototype = {
            triggerEvent: function(e, t) {
                if (this._cbs[e])
                    for (var n = this._cbs[e].length, r = 0; r < n; r += 1)
                        this._cbs[e][r](t)
            },
            addEventListener: function(e, t) {
                return this._cbs[e] || (this._cbs[e] = []),
                this._cbs[e].push(t),
                function() {
                    this.removeEventListener(e, t)
                }
                .bind(this)
            },
            removeEventListener: function(e, t) {
                if (t) {
                    if (this._cbs[e]) {
                        for (var n = 0, r = this._cbs[e].length; n < r; )
                            this._cbs[e][n] === t && (this._cbs[e].splice(n, 1),
                            n -= 1,
                            r -= 1),
                            n += 1;
                        this._cbs[e].length || (this._cbs[e] = null)
                    }
                } else
                    this._cbs[e] = null
            }
        };
        var createTypedArray = function() {
            function e(e, t) {
                var n, r = 0, i = [];
                switch (e) {
                case "int16":
                case "uint8c":
                    n = 1;
                    break;
                default:
                    n = 1.1
                }
                for (r = 0; r < t; r += 1)
                    i.push(n);
                return i
            }
            return "function" === typeof Uint8ClampedArray && "function" === typeof Float32Array ? function(t, n) {
                return "float32" === t ? new Float32Array(n) : "int16" === t ? new Int16Array(n) : "uint8c" === t ? new Uint8ClampedArray(n) : e(t, n)
            }
            : e
        }();
        function createSizedArray(e) {
            return Array.apply(null, {
                length: e
            })
        }
        function createNS(e) {
            return document.createElementNS(svgNS, e)
        }
        function createTag(e) {
            return document.createElement(e)
        }
        function DynamicPropertyContainer() {}
        DynamicPropertyContainer.prototype = {
            addDynamicProperty: function(e) {
                -1 === this.dynamicProperties.indexOf(e) && (this.dynamicProperties.push(e),
                this.container.addDynamicProperty(this),
                this._isAnimated = !0)
            },
            iterateDynamicProperties: function() {
                var e;
                this._mdf = !1;
                var t = this.dynamicProperties.length;
                for (e = 0; e < t; e += 1)
                    this.dynamicProperties[e].getValue(),
                    this.dynamicProperties[e]._mdf && (this._mdf = !0)
            },
            initDynamicPropertyContainer: function(e) {
                this.container = e,
                this.dynamicProperties = [],
                this._mdf = !1,
                this._isAnimated = !1
            }
        };
        var getBlendMode = function() {
            var e = {
                0: "source-over",
                1: "multiply",
                2: "screen",
                3: "overlay",
                4: "darken",
                5: "lighten",
                6: "color-dodge",
                7: "color-burn",
                8: "hard-light",
                9: "soft-light",
                10: "difference",
                11: "exclusion",
                12: "hue",
                13: "saturation",
                14: "color",
                15: "luminosity"
            };
            return function(t) {
                return e[t] || ""
            }
        }()
          , Matrix = function() {
            var e = Math.cos
              , t = Math.sin
              , n = Math.tan
              , r = Math.round;
            function i() {
                return this.props[0] = 1,
                this.props[1] = 0,
                this.props[2] = 0,
                this.props[3] = 0,
                this.props[4] = 0,
                this.props[5] = 1,
                this.props[6] = 0,
                this.props[7] = 0,
                this.props[8] = 0,
                this.props[9] = 0,
                this.props[10] = 1,
                this.props[11] = 0,
                this.props[12] = 0,
                this.props[13] = 0,
                this.props[14] = 0,
                this.props[15] = 1,
                this
            }
            function a(n) {
                if (0 === n)
                    return this;
                var r = e(n)
                  , i = t(n);
                return this._t(r, -i, 0, 0, i, r, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)
            }
            function o(n) {
                if (0 === n)
                    return this;
                var r = e(n)
                  , i = t(n);
                return this._t(1, 0, 0, 0, 0, r, -i, 0, 0, i, r, 0, 0, 0, 0, 1)
            }
            function s(n) {
                if (0 === n)
                    return this;
                var r = e(n)
                  , i = t(n);
                return this._t(r, 0, i, 0, 0, 1, 0, 0, -i, 0, r, 0, 0, 0, 0, 1)
            }
            function l(n) {
                if (0 === n)
                    return this;
                var r = e(n)
                  , i = t(n);
                return this._t(r, -i, 0, 0, i, r, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)
            }
            function u(e, t) {
                return this._t(1, t, e, 1, 0, 0)
            }
            function c(e, t) {
                return this.shear(n(e), n(t))
            }
            function h(r, i) {
                var a = e(i)
                  , o = t(i);
                return this._t(a, o, 0, 0, -o, a, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(1, 0, 0, 0, n(r), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(a, -o, 0, 0, o, a, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)
            }
            function p(e, t, n) {
                return n || 0 === n || (n = 1),
                1 === e && 1 === t && 1 === n ? this : this._t(e, 0, 0, 0, 0, t, 0, 0, 0, 0, n, 0, 0, 0, 0, 1)
            }
            function f(e, t, n, r, i, a, o, s, l, u, c, h, p, f, d, m) {
                return this.props[0] = e,
                this.props[1] = t,
                this.props[2] = n,
                this.props[3] = r,
                this.props[4] = i,
                this.props[5] = a,
                this.props[6] = o,
                this.props[7] = s,
                this.props[8] = l,
                this.props[9] = u,
                this.props[10] = c,
                this.props[11] = h,
                this.props[12] = p,
                this.props[13] = f,
                this.props[14] = d,
                this.props[15] = m,
                this
            }
            function d(e, t, n) {
                return n = n || 0,
                0 !== e || 0 !== t || 0 !== n ? this._t(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, e, t, n, 1) : this
            }
            function m(e, t, n, r, i, a, o, s, l, u, c, h, p, f, d, m) {
                var g = this.props;
                if (1 === e && 0 === t && 0 === n && 0 === r && 0 === i && 1 === a && 0 === o && 0 === s && 0 === l && 0 === u && 1 === c && 0 === h)
                    return g[12] = g[12] * e + g[15] * p,
                    g[13] = g[13] * a + g[15] * f,
                    g[14] = g[14] * c + g[15] * d,
                    g[15] *= m,
                    this._identityCalculated = !1,
                    this;
                var v = g[0]
                  , y = g[1]
                  , b = g[2]
                  , x = g[3]
                  , w = g[4]
                  , _ = g[5]
                  , S = g[6]
                  , E = g[7]
                  , M = g[8]
                  , T = g[9]
                  , A = g[10]
                  , P = g[11]
                  , C = g[12]
                  , L = g[13]
                  , R = g[14]
                  , k = g[15];
                return g[0] = v * e + y * i + b * l + x * p,
                g[1] = v * t + y * a + b * u + x * f,
                g[2] = v * n + y * o + b * c + x * d,
                g[3] = v * r + y * s + b * h + x * m,
                g[4] = w * e + _ * i + S * l + E * p,
                g[5] = w * t + _ * a + S * u + E * f,
                g[6] = w * n + _ * o + S * c + E * d,
                g[7] = w * r + _ * s + S * h + E * m,
                g[8] = M * e + T * i + A * l + P * p,
                g[9] = M * t + T * a + A * u + P * f,
                g[10] = M * n + T * o + A * c + P * d,
                g[11] = M * r + T * s + A * h + P * m,
                g[12] = C * e + L * i + R * l + k * p,
                g[13] = C * t + L * a + R * u + k * f,
                g[14] = C * n + L * o + R * c + k * d,
                g[15] = C * r + L * s + R * h + k * m,
                this._identityCalculated = !1,
                this
            }
            function g() {
                return this._identityCalculated || (this._identity = !(1 !== this.props[0] || 0 !== this.props[1] || 0 !== this.props[2] || 0 !== this.props[3] || 0 !== this.props[4] || 1 !== this.props[5] || 0 !== this.props[6] || 0 !== this.props[7] || 0 !== this.props[8] || 0 !== this.props[9] || 1 !== this.props[10] || 0 !== this.props[11] || 0 !== this.props[12] || 0 !== this.props[13] || 0 !== this.props[14] || 1 !== this.props[15]),
                this._identityCalculated = !0),
                this._identity
            }
            function v(e) {
                for (var t = 0; t < 16; ) {
                    if (e.props[t] !== this.props[t])
                        return !1;
                    t += 1
                }
                return !0
            }
            function y(e) {
                var t;
                for (t = 0; t < 16; t += 1)
                    e.props[t] = this.props[t];
                return e
            }
            function b(e) {
                var t;
                for (t = 0; t < 16; t += 1)
                    this.props[t] = e[t]
            }
            function x(e, t, n) {
                return {
                    x: e * this.props[0] + t * this.props[4] + n * this.props[8] + this.props[12],
                    y: e * this.props[1] + t * this.props[5] + n * this.props[9] + this.props[13],
                    z: e * this.props[2] + t * this.props[6] + n * this.props[10] + this.props[14]
                }
            }
            function w(e, t, n) {
                return e * this.props[0] + t * this.props[4] + n * this.props[8] + this.props[12]
            }
            function _(e, t, n) {
                return e * this.props[1] + t * this.props[5] + n * this.props[9] + this.props[13]
            }
            function S(e, t, n) {
                return e * this.props[2] + t * this.props[6] + n * this.props[10] + this.props[14]
            }
            function E() {
                var e = this.props[0] * this.props[5] - this.props[1] * this.props[4]
                  , t = this.props[5] / e
                  , n = -this.props[1] / e
                  , r = -this.props[4] / e
                  , i = this.props[0] / e
                  , a = (this.props[4] * this.props[13] - this.props[5] * this.props[12]) / e
                  , o = -(this.props[0] * this.props[13] - this.props[1] * this.props[12]) / e
                  , s = new Matrix;
                return s.props[0] = t,
                s.props[1] = n,
                s.props[4] = r,
                s.props[5] = i,
                s.props[12] = a,
                s.props[13] = o,
                s
            }
            function M(e) {
                return this.getInverseMatrix().applyToPointArray(e[0], e[1], e[2] || 0)
            }
            function T(e) {
                var t, n = e.length, r = [];
                for (t = 0; t < n; t += 1)
                    r[t] = M(e[t]);
                return r
            }
            function A(e, t, n) {
                var r = createTypedArray("float32", 6);
                if (this.isIdentity())
                    r[0] = e[0],
                    r[1] = e[1],
                    r[2] = t[0],
                    r[3] = t[1],
                    r[4] = n[0],
                    r[5] = n[1];
                else {
                    var i = this.props[0]
                      , a = this.props[1]
                      , o = this.props[4]
                      , s = this.props[5]
                      , l = this.props[12]
                      , u = this.props[13];
                    r[0] = e[0] * i + e[1] * o + l,
                    r[1] = e[0] * a + e[1] * s + u,
                    r[2] = t[0] * i + t[1] * o + l,
                    r[3] = t[0] * a + t[1] * s + u,
                    r[4] = n[0] * i + n[1] * o + l,
                    r[5] = n[0] * a + n[1] * s + u
                }
                return r
            }
            function P(e, t, n) {
                return this.isIdentity() ? [e, t, n] : [e * this.props[0] + t * this.props[4] + n * this.props[8] + this.props[12], e * this.props[1] + t * this.props[5] + n * this.props[9] + this.props[13], e * this.props[2] + t * this.props[6] + n * this.props[10] + this.props[14]]
            }
            function C(e, t) {
                if (this.isIdentity())
                    return e + "," + t;
                var n = this.props;
                return Math.round(100 * (e * n[0] + t * n[4] + n[12])) / 100 + "," + Math.round(100 * (e * n[1] + t * n[5] + n[13])) / 100
            }
            function L() {
                for (var e = 0, t = this.props, n = "matrix3d("; e < 16; )
                    n += r(1e4 * t[e]) / 1e4,
                    n += 15 === e ? ")" : ",",
                    e += 1;
                return n
            }
            function R(e) {
                return e < 1e-6 && e > 0 || e > -1e-6 && e < 0 ? r(1e4 * e) / 1e4 : e
            }
            function k() {
                var e = this.props;
                return "matrix(" + R(e[0]) + "," + R(e[1]) + "," + R(e[4]) + "," + R(e[5]) + "," + R(e[12]) + "," + R(e[13]) + ")"
            }
            return function() {
                this.reset = i,
                this.rotate = a,
                this.rotateX = o,
                this.rotateY = s,
                this.rotateZ = l,
                this.skew = c,
                this.skewFromAxis = h,
                this.shear = u,
                this.scale = p,
                this.setTransform = f,
                this.translate = d,
                this.transform = m,
                this.applyToPoint = x,
                this.applyToX = w,
                this.applyToY = _,
                this.applyToZ = S,
                this.applyToPointArray = P,
                this.applyToTriplePoints = A,
                this.applyToPointStringified = C,
                this.toCSS = L,
                this.to2dCSS = k,
                this.clone = y,
                this.cloneFromProps = b,
                this.equals = v,
                this.inversePoints = T,
                this.inversePoint = M,
                this.getInverseMatrix = E,
                this._t = this.transform,
                this.isIdentity = g,
                this._identity = !0,
                this._identityCalculated = !1,
                this.props = createTypedArray("float32", 16),
                this.reset()
            }
        }();
        !function(e, t) {
            var n = this
              , r = t.pow(256, 6)
              , i = t.pow(2, 52)
              , a = 2 * i;
            function o(e) {
                var t, n = e.length, r = this, i = 0, a = r.i = r.j = 0, o = r.S = [];
                for (n || (e = [n++]); i < 256; )
                    o[i] = i++;
                for (i = 0; i < 256; i++)
                    o[i] = o[a = 255 & a + e[i % n] + (t = o[i])],
                    o[a] = t;
                r.g = function(e) {
                    for (var t, n = 0, i = r.i, a = r.j, o = r.S; e--; )
                        t = o[i = 255 & i + 1],
                        n = 256 * n + o[255 & (o[i] = o[a = 255 & a + t]) + (o[a] = t)];
                    return r.i = i,
                    r.j = a,
                    n
                }
            }
            function s(e, t) {
                return t.i = e.i,
                t.j = e.j,
                t.S = e.S.slice(),
                t
            }
            function l(e, t) {
                for (var n, r = e + "", i = 0; i < r.length; )
                    t[255 & i] = 255 & (n ^= 19 * t[255 & i]) + r.charCodeAt(i++);
                return u(t)
            }
            function u(e) {
                return String.fromCharCode.apply(0, e)
            }
            t.seedrandom = function(c, h, p) {
                var f = []
                  , d = l(function e(t, n) {
                    var r, i = [], a = typeof t;
                    if (n && "object" == a)
                        for (r in t)
                            try {
                                i.push(e(t[r], n - 1))
                            } catch (o) {}
                    return i.length ? i : "string" == a ? t : t + "\0"
                }((h = !0 === h ? {
                    entropy: !0
                } : h || {}).entropy ? [c, u(e)] : null === c ? function() {
                    try {
                        var t = new Uint8Array(256);
                        return (n.crypto || n.msCrypto).getRandomValues(t),
                        u(t)
                    } catch (a) {
                        var r = n.navigator
                          , i = r && r.plugins;
                        return [+new Date, n, i, n.screen, u(e)]
                    }
                }() : c, 3), f)
                  , m = new o(f)
                  , g = function() {
                    for (var e = m.g(6), t = r, n = 0; e < i; )
                        e = 256 * (e + n),
                        t *= 256,
                        n = m.g(1);
                    for (; e >= a; )
                        e /= 2,
                        t /= 2,
                        n >>>= 1;
                    return (e + n) / t
                };
                return g.int32 = function() {
                    return 0 | m.g(4)
                }
                ,
                g.quick = function() {
                    return m.g(4) / 4294967296
                }
                ,
                g.double = g,
                l(u(m.S), e),
                (h.pass || p || function(e, n, r, i) {
                    return i && (i.S && s(i, m),
                    e.state = function() {
                        return s(m, {})
                    }
                    ),
                    r ? (t.random = e,
                    n) : e
                }
                )(g, d, "global"in h ? h.global : this == t, h.state)
            }
            ,
            l(t.random(), e)
        }([], BMMath);
        var BezierFactory = function() {
            var e = {
                getBezierEasing: function(e, n, r, i, a) {
                    var o = a || ("bez_" + e + "_" + n + "_" + r + "_" + i).replace(/\./g, "p");
                    if (t[o])
                        return t[o];
                    var s = new l([e, n, r, i]);
                    return t[o] = s,
                    s
                }
            }
              , t = {}
              , n = "function" === typeof Float32Array;
            function r(e, t) {
                return 1 - 3 * t + 3 * e
            }
            function i(e, t) {
                return 3 * t - 6 * e
            }
            function a(e) {
                return 3 * e
            }
            function o(e, t, n) {
                return ((r(t, n) * e + i(t, n)) * e + a(t)) * e
            }
            function s(e, t, n) {
                return 3 * r(t, n) * e * e + 2 * i(t, n) * e + a(t)
            }
            function l(e) {
                this._p = e,
                this._mSampleValues = n ? new Float32Array(11) : new Array(11),
                this._precomputed = !1,
                this.get = this.get.bind(this)
            }
            return l.prototype = {
                get: function(e) {
                    var t = this._p[0]
                      , n = this._p[1]
                      , r = this._p[2]
                      , i = this._p[3];
                    return this._precomputed || this._precompute(),
                    t === n && r === i ? e : 0 === e ? 0 : 1 === e ? 1 : o(this._getTForX(e), n, i)
                },
                _precompute: function() {
                    var e = this._p[0]
                      , t = this._p[1]
                      , n = this._p[2]
                      , r = this._p[3];
                    this._precomputed = !0,
                    e === t && n === r || this._calcSampleValues()
                },
                _calcSampleValues: function() {
                    for (var e = this._p[0], t = this._p[2], n = 0; n < 11; ++n)
                        this._mSampleValues[n] = o(.1 * n, e, t)
                },
                _getTForX: function(e) {
                    for (var t = this._p[0], n = this._p[2], r = this._mSampleValues, i = 0, a = 1; 10 !== a && r[a] <= e; ++a)
                        i += .1;
                    var l = i + (e - r[--a]) / (r[a + 1] - r[a]) * .1
                      , u = s(l, t, n);
                    return u >= .001 ? function(e, t, n, r) {
                        for (var i = 0; i < 4; ++i) {
                            var a = s(t, n, r);
                            if (0 === a)
                                return t;
                            t -= (o(t, n, r) - e) / a
                        }
                        return t
                    }(e, l, t, n) : 0 === u ? l : function(e, t, n, r, i) {
                        var a, s, l = 0;
                        do {
                            (a = o(s = t + (n - t) / 2, r, i) - e) > 0 ? n = s : t = s
                        } while (Math.abs(a) > 1e-7 && ++l < 10);
                        return s
                    }(e, i, i + .1, t, n)
                }
            },
            e
        }();
        function extendPrototype(e, t) {
            var n, r, i = e.length;
            for (n = 0; n < i; n += 1)
                for (var a in r = e[n].prototype)
                    Object.prototype.hasOwnProperty.call(r, a) && (t.prototype[a] = r[a])
        }
        function getDescriptor(e, t) {
            return Object.getOwnPropertyDescriptor(e, t)
        }
        function createProxyFunction(e) {
            function t() {}
            return t.prototype = e,
            t
        }
        function bezFunction() {
            var e = Math;
            function t(e, t, n, r, i, a) {
                var o = e * r + t * i + n * a - i * r - a * e - n * t;
                return o > -.001 && o < .001
            }
            var n = function(e, t, n, r) {
                var i, a, o, s, l, u, c = defaultCurveSegments, h = 0, p = [], f = [], d = bezierLengthPool.newElement();
                for (o = n.length,
                i = 0; i < c; i += 1) {
                    for (l = i / (c - 1),
                    u = 0,
                    a = 0; a < o; a += 1)
                        s = bmPow(1 - l, 3) * e[a] + 3 * bmPow(1 - l, 2) * l * n[a] + 3 * (1 - l) * bmPow(l, 2) * r[a] + bmPow(l, 3) * t[a],
                        p[a] = s,
                        null !== f[a] && (u += bmPow(p[a] - f[a], 2)),
                        f[a] = p[a];
                    u && (h += u = bmSqrt(u)),
                    d.percents[i] = l,
                    d.lengths[i] = h
                }
                return d.addedLength = h,
                d
            };
            function r(e) {
                this.segmentLength = 0,
                this.points = new Array(e)
            }
            function i(e, t) {
                this.partialLength = e,
                this.point = t
            }
            var a = function() {
                var e = {};
                return function(n, a, o, s) {
                    var l = (n[0] + "_" + n[1] + "_" + a[0] + "_" + a[1] + "_" + o[0] + "_" + o[1] + "_" + s[0] + "_" + s[1]).replace(/\./g, "p");
                    if (!e[l]) {
                        var u, c, h, p, f, d, m, g = defaultCurveSegments, v = 0, y = null;
                        2 === n.length && (n[0] !== a[0] || n[1] !== a[1]) && t(n[0], n[1], a[0], a[1], n[0] + o[0], n[1] + o[1]) && t(n[0], n[1], a[0], a[1], a[0] + s[0], a[1] + s[1]) && (g = 2);
                        var b = new r(g);
                        for (h = o.length,
                        u = 0; u < g; u += 1) {
                            for (m = createSizedArray(h),
                            f = u / (g - 1),
                            d = 0,
                            c = 0; c < h; c += 1)
                                p = bmPow(1 - f, 3) * n[c] + 3 * bmPow(1 - f, 2) * f * (n[c] + o[c]) + 3 * (1 - f) * bmPow(f, 2) * (a[c] + s[c]) + bmPow(f, 3) * a[c],
                                m[c] = p,
                                null !== y && (d += bmPow(m[c] - y[c], 2));
                            v += d = bmSqrt(d),
                            b.points[u] = new i(d,m),
                            y = m
                        }
                        b.segmentLength = v,
                        e[l] = b
                    }
                    return e[l]
                }
            }();
            function o(e, t) {
                var n = t.percents
                  , r = t.lengths
                  , i = n.length
                  , a = bmFloor((i - 1) * e)
                  , o = e * t.addedLength
                  , s = 0;
                if (a === i - 1 || 0 === a || o === r[a])
                    return n[a];
                for (var l = r[a] > o ? -1 : 1, u = !0; u; )
                    if (r[a] <= o && r[a + 1] > o ? (s = (o - r[a]) / (r[a + 1] - r[a]),
                    u = !1) : a += l,
                    a < 0 || a >= i - 1) {
                        if (a === i - 1)
                            return n[a];
                        u = !1
                    }
                return n[a] + (n[a + 1] - n[a]) * s
            }
            var s = createTypedArray("float32", 8);
            return {
                getSegmentsLength: function(e) {
                    var t, r = segmentsLengthPool.newElement(), i = e.c, a = e.v, o = e.o, s = e.i, l = e._length, u = r.lengths, c = 0;
                    for (t = 0; t < l - 1; t += 1)
                        u[t] = n(a[t], a[t + 1], o[t], s[t + 1]),
                        c += u[t].addedLength;
                    return i && l && (u[t] = n(a[t], a[0], o[t], s[0]),
                    c += u[t].addedLength),
                    r.totalLength = c,
                    r
                },
                getNewSegment: function(t, n, r, i, a, l, u) {
                    a < 0 ? a = 0 : a > 1 && (a = 1);
                    var c, h = o(a, u), p = o(l = l > 1 ? 1 : l, u), f = t.length, d = 1 - h, m = 1 - p, g = d * d * d, v = h * d * d * 3, y = h * h * d * 3, b = h * h * h, x = d * d * m, w = h * d * m + d * h * m + d * d * p, _ = h * h * m + d * h * p + h * d * p, S = h * h * p, E = d * m * m, M = h * m * m + d * p * m + d * m * p, T = h * p * m + d * p * p + h * m * p, A = h * p * p, P = m * m * m, C = p * m * m + m * p * m + m * m * p, L = p * p * m + m * p * p + p * m * p, R = p * p * p;
                    for (c = 0; c < f; c += 1)
                        s[4 * c] = e.round(1e3 * (g * t[c] + v * r[c] + y * i[c] + b * n[c])) / 1e3,
                        s[4 * c + 1] = e.round(1e3 * (x * t[c] + w * r[c] + _ * i[c] + S * n[c])) / 1e3,
                        s[4 * c + 2] = e.round(1e3 * (E * t[c] + M * r[c] + T * i[c] + A * n[c])) / 1e3,
                        s[4 * c + 3] = e.round(1e3 * (P * t[c] + C * r[c] + L * i[c] + R * n[c])) / 1e3;
                    return s
                },
                getPointInSegment: function(t, n, r, i, a, s) {
                    var l = o(a, s)
                      , u = 1 - l;
                    return [e.round(1e3 * (u * u * u * t[0] + (l * u * u + u * l * u + u * u * l) * r[0] + (l * l * u + u * l * l + l * u * l) * i[0] + l * l * l * n[0])) / 1e3, e.round(1e3 * (u * u * u * t[1] + (l * u * u + u * l * u + u * u * l) * r[1] + (l * l * u + u * l * l + l * u * l) * i[1] + l * l * l * n[1])) / 1e3]
                },
                buildBezierData: a,
                pointOnLine2D: t,
                pointOnLine3D: function(n, r, i, a, o, s, l, u, c) {
                    if (0 === i && 0 === s && 0 === c)
                        return t(n, r, a, o, l, u);
                    var h, p = e.sqrt(e.pow(a - n, 2) + e.pow(o - r, 2) + e.pow(s - i, 2)), f = e.sqrt(e.pow(l - n, 2) + e.pow(u - r, 2) + e.pow(c - i, 2)), d = e.sqrt(e.pow(l - a, 2) + e.pow(u - o, 2) + e.pow(c - s, 2));
                    return (h = p > f ? p > d ? p - f - d : d - f - p : d > f ? d - f - p : f - p - d) > -1e-4 && h < 1e-4
                }
            }
        }
        !function() {
            for (var e = 0, t = ["ms", "moz", "webkit", "o"], n = 0; n < t.length && !window.requestAnimationFrame; ++n)
                window.requestAnimationFrame = window[t[n] + "RequestAnimationFrame"],
                window.cancelAnimationFrame = window[t[n] + "CancelAnimationFrame"] || window[t[n] + "CancelRequestAnimationFrame"];
            window.requestAnimationFrame || (window.requestAnimationFrame = function(t) {
                var n = (new Date).getTime()
                  , r = Math.max(0, 16 - (n - e))
                  , i = setTimeout((function() {
                    t(n + r)
                }
                ), r);
                return e = n + r,
                i
            }
            ),
            window.cancelAnimationFrame || (window.cancelAnimationFrame = function(e) {
                clearTimeout(e)
            }
            )
        }();
        var bez = bezFunction();
        function dataFunctionManager() {
            function e(i, a, o) {
                var s, l, u, c, h, p, f, d = i.length;
                for (l = 0; l < d; l += 1)
                    if ("ks"in (s = i[l]) && !s.completed) {
                        if (s.completed = !0,
                        s.tt && (i[l - 1].td = s.tt),
                        s.hasMask) {
                            var m = s.masksProperties;
                            for (c = m.length,
                            u = 0; u < c; u += 1)
                                if (m[u].pt.k.i)
                                    r(m[u].pt.k);
                                else
                                    for (p = m[u].pt.k.length,
                                    h = 0; h < p; h += 1)
                                        m[u].pt.k[h].s && r(m[u].pt.k[h].s[0]),
                                        m[u].pt.k[h].e && r(m[u].pt.k[h].e[0])
                        }
                        0 === s.ty ? (s.layers = t(s.refId, a),
                        e(s.layers, a, o)) : 4 === s.ty ? n(s.shapes) : 5 === s.ty && (0 !== (f = s).t.a.length || "m"in f.t.p || (f.singleShape = !0))
                    }
            }
            function t(e, t) {
                for (var n = 0, r = t.length; n < r; ) {
                    if (t[n].id === e)
                        return t[n].layers.__used ? JSON.parse(JSON.stringify(t[n].layers)) : (t[n].layers.__used = !0,
                        t[n].layers);
                    n += 1
                }
                return null
            }
            function n(e) {
                var t, i, a;
                for (t = e.length - 1; t >= 0; t -= 1)
                    if ("sh" === e[t].ty)
                        if (e[t].ks.k.i)
                            r(e[t].ks.k);
                        else
                            for (a = e[t].ks.k.length,
                            i = 0; i < a; i += 1)
                                e[t].ks.k[i].s && r(e[t].ks.k[i].s[0]),
                                e[t].ks.k[i].e && r(e[t].ks.k[i].e[0]);
                    else
                        "gr" === e[t].ty && n(e[t].it)
            }
            function r(e) {
                var t, n = e.i.length;
                for (t = 0; t < n; t += 1)
                    e.i[t][0] += e.v[t][0],
                    e.i[t][1] += e.v[t][1],
                    e.o[t][0] += e.v[t][0],
                    e.o[t][1] += e.v[t][1]
            }
            function i(e, t) {
                var n = t ? t.split(".") : [100, 100, 100];
                return e[0] > n[0] || !(n[0] > e[0]) && (e[1] > n[1] || !(n[1] > e[1]) && (e[2] > n[2] || !(n[2] > e[2]) && null))
            }
            var a = function() {
                var e = [4, 4, 14];
                function t(e) {
                    var t = e.t.d;
                    e.t.d = {
                        k: [{
                            s: t,
                            t: 0
                        }]
                    }
                }
                function n(e) {
                    var n, r = e.length;
                    for (n = 0; n < r; n += 1)
                        5 === e[n].ty && t(e[n])
                }
                return function(t) {
                    if (i(e, t.v) && (n(t.layers),
                    t.assets)) {
                        var r, a = t.assets.length;
                        for (r = 0; r < a; r += 1)
                            t.assets[r].layers && n(t.assets[r].layers)
                    }
                }
            }()
              , o = function() {
                var e = [4, 7, 99];
                return function(t) {
                    if (t.chars && !i(e, t.v)) {
                        var n, a, o, s, l, u = t.chars.length;
                        for (n = 0; n < u; n += 1)
                            if (t.chars[n].data && t.chars[n].data.shapes)
                                for (o = (l = t.chars[n].data.shapes[0].it).length,
                                a = 0; a < o; a += 1)
                                    (s = l[a].ks.k).__converted || (r(l[a].ks.k),
                                    s.__converted = !0)
                    }
                }
            }()
              , s = function() {
                var e = [4, 1, 9];
                function t(e) {
                    var n, r, i, a = e.length;
                    for (n = 0; n < a; n += 1)
                        if ("gr" === e[n].ty)
                            t(e[n].it);
                        else if ("fl" === e[n].ty || "st" === e[n].ty)
                            if (e[n].c.k && e[n].c.k[0].i)
                                for (i = e[n].c.k.length,
                                r = 0; r < i; r += 1)
                                    e[n].c.k[r].s && (e[n].c.k[r].s[0] /= 255,
                                    e[n].c.k[r].s[1] /= 255,
                                    e[n].c.k[r].s[2] /= 255,
                                    e[n].c.k[r].s[3] /= 255),
                                    e[n].c.k[r].e && (e[n].c.k[r].e[0] /= 255,
                                    e[n].c.k[r].e[1] /= 255,
                                    e[n].c.k[r].e[2] /= 255,
                                    e[n].c.k[r].e[3] /= 255);
                            else
                                e[n].c.k[0] /= 255,
                                e[n].c.k[1] /= 255,
                                e[n].c.k[2] /= 255,
                                e[n].c.k[3] /= 255
                }
                function n(e) {
                    var n, r = e.length;
                    for (n = 0; n < r; n += 1)
                        4 === e[n].ty && t(e[n].shapes)
                }
                return function(t) {
                    if (i(e, t.v) && (n(t.layers),
                    t.assets)) {
                        var r, a = t.assets.length;
                        for (r = 0; r < a; r += 1)
                            t.assets[r].layers && n(t.assets[r].layers)
                    }
                }
            }()
              , l = function() {
                var e = [4, 4, 18];
                function t(e) {
                    var n, r, i;
                    for (n = e.length - 1; n >= 0; n -= 1)
                        if ("sh" === e[n].ty)
                            if (e[n].ks.k.i)
                                e[n].ks.k.c = e[n].closed;
                            else
                                for (i = e[n].ks.k.length,
                                r = 0; r < i; r += 1)
                                    e[n].ks.k[r].s && (e[n].ks.k[r].s[0].c = e[n].closed),
                                    e[n].ks.k[r].e && (e[n].ks.k[r].e[0].c = e[n].closed);
                        else
                            "gr" === e[n].ty && t(e[n].it)
                }
                function n(e) {
                    var n, r, i, a, o, s, l = e.length;
                    for (r = 0; r < l; r += 1) {
                        if ((n = e[r]).hasMask) {
                            var u = n.masksProperties;
                            for (a = u.length,
                            i = 0; i < a; i += 1)
                                if (u[i].pt.k.i)
                                    u[i].pt.k.c = u[i].cl;
                                else
                                    for (s = u[i].pt.k.length,
                                    o = 0; o < s; o += 1)
                                        u[i].pt.k[o].s && (u[i].pt.k[o].s[0].c = u[i].cl),
                                        u[i].pt.k[o].e && (u[i].pt.k[o].e[0].c = u[i].cl)
                        }
                        4 === n.ty && t(n.shapes)
                    }
                }
                return function(t) {
                    if (i(e, t.v) && (n(t.layers),
                    t.assets)) {
                        var r, a = t.assets.length;
                        for (r = 0; r < a; r += 1)
                            t.assets[r].layers && n(t.assets[r].layers)
                    }
                }
            }();
            var u = {
                completeData: function(t, n) {
                    t.__complete || (s(t),
                    a(t),
                    o(t),
                    l(t),
                    e(t.layers, t.assets, n),
                    t.__complete = !0)
                }
            };
            return u.checkColors = s,
            u.checkChars = o,
            u.checkShapes = l,
            u.completeLayers = e,
            u
        }
        var dataManager = dataFunctionManager();
        function getFontProperties(e) {
            for (var t = e.fStyle ? e.fStyle.split(" ") : [], n = "normal", r = "normal", i = t.length, a = 0; a < i; a += 1)
                switch (t[a].toLowerCase()) {
                case "italic":
                    r = "italic";
                    break;
                case "bold":
                    n = "700";
                    break;
                case "black":
                    n = "900";
                    break;
                case "medium":
                    n = "500";
                    break;
                case "regular":
                case "normal":
                    n = "400";
                    break;
                case "light":
                case "thin":
                    n = "200"
                }
            return {
                style: r,
                weight: e.fWeight || n
            }
        }
        var FontManager = function() {
            var e = {
                w: 0,
                size: 0,
                shapes: []
            }
              , t = [];
            function n(e, t) {
                var n = createTag("span");
                n.setAttribute("aria-hidden", !0),
                n.style.fontFamily = t;
                var r = createTag("span");
                r.innerText = "giItT1WQy@!-/#",
                n.style.position = "absolute",
                n.style.left = "-10000px",
                n.style.top = "-10000px",
                n.style.fontSize = "300px",
                n.style.fontVariant = "normal",
                n.style.fontStyle = "normal",
                n.style.fontWeight = "normal",
                n.style.letterSpacing = "0",
                n.appendChild(r),
                document.body.appendChild(n);
                var i = r.offsetWidth;
                return r.style.fontFamily = function(e) {
                    var t, n = e.split(","), r = n.length, i = [];
                    for (t = 0; t < r; t += 1)
                        "sans-serif" !== n[t] && "monospace" !== n[t] && i.push(n[t]);
                    return i.join(",")
                }(e) + ", " + t,
                {
                    node: r,
                    w: i,
                    parent: n
                }
            }
            function r(e, t) {
                var n = createNS("text");
                n.style.fontSize = "100px";
                var r = getFontProperties(t);
                return n.setAttribute("font-family", t.fFamily),
                n.setAttribute("font-style", r.style),
                n.setAttribute("font-weight", r.weight),
                n.textContent = "1",
                t.fClass ? (n.style.fontFamily = "inherit",
                n.setAttribute("class", t.fClass)) : n.style.fontFamily = t.fFamily,
                e.appendChild(n),
                createTag("canvas").getContext("2d").font = t.fWeight + " " + t.fStyle + " 100px " + t.fFamily,
                n
            }
            t = t.concat([2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403]);
            var i = function() {
                this.fonts = [],
                this.chars = null,
                this.typekitLoaded = 0,
                this.isLoaded = !1,
                this._warned = !1,
                this.initTime = Date.now(),
                this.setIsLoadedBinded = this.setIsLoaded.bind(this),
                this.checkLoadedFontsBinded = this.checkLoadedFonts.bind(this)
            };
            return i.getCombinedCharacterCodes = function() {
                return t
            }
            ,
            i.prototype = {
                addChars: function(e) {
                    if (e) {
                        var t;
                        this.chars || (this.chars = []);
                        var n, r, i = e.length, a = this.chars.length;
                        for (t = 0; t < i; t += 1) {
                            for (n = 0,
                            r = !1; n < a; )
                                this.chars[n].style === e[t].style && this.chars[n].fFamily === e[t].fFamily && this.chars[n].ch === e[t].ch && (r = !0),
                                n += 1;
                            r || (this.chars.push(e[t]),
                            a += 1)
                        }
                    }
                },
                addFonts: function(e, t) {
                    if (e) {
                        if (this.chars)
                            return this.isLoaded = !0,
                            void (this.fonts = e.list);
                        var i, a = e.list, o = a.length, s = o;
                        for (i = 0; i < o; i += 1) {
                            var l, u, c = !0;
                            if (a[i].loaded = !1,
                            a[i].monoCase = n(a[i].fFamily, "monospace"),
                            a[i].sansCase = n(a[i].fFamily, "sans-serif"),
                            a[i].fPath) {
                                if ("p" === a[i].fOrigin || 3 === a[i].origin) {
                                    if ((l = document.querySelectorAll('style[f-forigin="p"][f-family="' + a[i].fFamily + '"], style[f-origin="3"][f-family="' + a[i].fFamily + '"]')).length > 0 && (c = !1),
                                    c) {
                                        var h = createTag("style");
                                        h.setAttribute("f-forigin", a[i].fOrigin),
                                        h.setAttribute("f-origin", a[i].origin),
                                        h.setAttribute("f-family", a[i].fFamily),
                                        h.type = "text/css",
                                        h.innerText = "@font-face {font-family: " + a[i].fFamily + "; font-style: normal; src: url('" + a[i].fPath + "');}",
                                        t.appendChild(h)
                                    }
                                } else if ("g" === a[i].fOrigin || 1 === a[i].origin) {
                                    for (l = document.querySelectorAll('link[f-forigin="g"], link[f-origin="1"]'),
                                    u = 0; u < l.length; u += 1)
                                        -1 !== l[u].href.indexOf(a[i].fPath) && (c = !1);
                                    if (c) {
                                        var p = createTag("link");
                                        p.setAttribute("f-forigin", a[i].fOrigin),
                                        p.setAttribute("f-origin", a[i].origin),
                                        p.type = "text/css",
                                        p.rel = "stylesheet",
                                        p.href = a[i].fPath,
                                        document.body.appendChild(p)
                                    }
                                } else if ("t" === a[i].fOrigin || 2 === a[i].origin) {
                                    for (l = document.querySelectorAll('script[f-forigin="t"], script[f-origin="2"]'),
                                    u = 0; u < l.length; u += 1)
                                        a[i].fPath === l[u].src && (c = !1);
                                    if (c) {
                                        var f = createTag("link");
                                        f.setAttribute("f-forigin", a[i].fOrigin),
                                        f.setAttribute("f-origin", a[i].origin),
                                        f.setAttribute("rel", "stylesheet"),
                                        f.setAttribute("href", a[i].fPath),
                                        t.appendChild(f)
                                    }
                                }
                            } else
                                a[i].loaded = !0,
                                s -= 1;
                            a[i].helper = r(t, a[i]),
                            a[i].cache = {},
                            this.fonts.push(a[i])
                        }
                        0 === s ? this.isLoaded = !0 : setTimeout(this.checkLoadedFonts.bind(this), 100)
                    } else
                        this.isLoaded = !0
                },
                getCharData: function(t, n, r) {
                    for (var i = 0, a = this.chars.length; i < a; ) {
                        if (this.chars[i].ch === t && this.chars[i].style === n && this.chars[i].fFamily === r)
                            return this.chars[i];
                        i += 1
                    }
                    return ("string" === typeof t && 13 !== t.charCodeAt(0) || !t) && console && console.warn && !this._warned && (this._warned = !0,
                    console.warn("Missing character from exported characters list: ", t, n, r)),
                    e
                },
                getFontByName: function(e) {
                    for (var t = 0, n = this.fonts.length; t < n; ) {
                        if (this.fonts[t].fName === e)
                            return this.fonts[t];
                        t += 1
                    }
                    return this.fonts[0]
                },
                measureText: function(e, t, n) {
                    var r = this.getFontByName(t)
                      , i = e.charCodeAt(0);
                    if (!r.cache[i + 1]) {
                        var a = r.helper;
                        if (" " === e) {
                            a.textContent = "|" + e + "|";
                            var o = a.getComputedTextLength();
                            a.textContent = "||";
                            var s = a.getComputedTextLength();
                            r.cache[i + 1] = (o - s) / 100
                        } else
                            a.textContent = e,
                            r.cache[i + 1] = a.getComputedTextLength() / 100
                    }
                    return r.cache[i + 1] * n
                },
                checkLoadedFonts: function() {
                    var e, t, n, r = this.fonts.length, i = r;
                    for (e = 0; e < r; e += 1)
                        this.fonts[e].loaded ? i -= 1 : "n" === this.fonts[e].fOrigin || 0 === this.fonts[e].origin ? this.fonts[e].loaded = !0 : (t = this.fonts[e].monoCase.node,
                        n = this.fonts[e].monoCase.w,
                        t.offsetWidth !== n ? (i -= 1,
                        this.fonts[e].loaded = !0) : (t = this.fonts[e].sansCase.node,
                        n = this.fonts[e].sansCase.w,
                        t.offsetWidth !== n && (i -= 1,
                        this.fonts[e].loaded = !0)),
                        this.fonts[e].loaded && (this.fonts[e].sansCase.parent.parentNode.removeChild(this.fonts[e].sansCase.parent),
                        this.fonts[e].monoCase.parent.parentNode.removeChild(this.fonts[e].monoCase.parent)));
                    0 !== i && Date.now() - this.initTime < 5e3 ? setTimeout(this.checkLoadedFontsBinded, 20) : setTimeout(this.setIsLoadedBinded, 10)
                },
                setIsLoaded: function() {
                    this.isLoaded = !0
                }
            },
            i
        }()
          , PropertyFactory = function() {
            var e = initialDefaultFrame
              , t = Math.abs;
            function n(e, t) {
                var n, i = this.offsetTime;
                "multidimensional" === this.propType && (n = createTypedArray("float32", this.pv.length));
                for (var a, o, s, l, u, c, h, p, f = t.lastIndex, d = f, m = this.keyframes.length - 1, g = !0; g; ) {
                    if (a = this.keyframes[d],
                    o = this.keyframes[d + 1],
                    d === m - 1 && e >= o.t - i) {
                        a.h && (a = o),
                        f = 0;
                        break
                    }
                    if (o.t - i > e) {
                        f = d;
                        break
                    }
                    d < m - 1 ? d += 1 : (f = 0,
                    g = !1)
                }
                var v, y = o.t - i, b = a.t - i;
                if (a.to) {
                    a.bezierData || (a.bezierData = bez.buildBezierData(a.s, o.s || a.e, a.to, a.ti));
                    var x = a.bezierData;
                    if (e >= y || e < b) {
                        var w = e >= y ? x.points.length - 1 : 0;
                        for (l = x.points[w].point.length,
                        s = 0; s < l; s += 1)
                            n[s] = x.points[w].point[s]
                    } else {
                        a.__fnct ? p = a.__fnct : (p = BezierFactory.getBezierEasing(a.o.x, a.o.y, a.i.x, a.i.y, a.n).get,
                        a.__fnct = p),
                        u = p((e - b) / (y - b));
                        var _, S = x.segmentLength * u, E = t.lastFrame < e && t._lastKeyframeIndex === d ? t._lastAddedLength : 0;
                        for (h = t.lastFrame < e && t._lastKeyframeIndex === d ? t._lastPoint : 0,
                        g = !0,
                        c = x.points.length; g; ) {
                            if (E += x.points[h].partialLength,
                            0 === S || 0 === u || h === x.points.length - 1) {
                                for (l = x.points[h].point.length,
                                s = 0; s < l; s += 1)
                                    n[s] = x.points[h].point[s];
                                break
                            }
                            if (S >= E && S < E + x.points[h + 1].partialLength) {
                                for (_ = (S - E) / x.points[h + 1].partialLength,
                                l = x.points[h].point.length,
                                s = 0; s < l; s += 1)
                                    n[s] = x.points[h].point[s] + (x.points[h + 1].point[s] - x.points[h].point[s]) * _;
                                break
                            }
                            h < c - 1 ? h += 1 : g = !1
                        }
                        t._lastPoint = h,
                        t._lastAddedLength = E - x.points[h].partialLength,
                        t._lastKeyframeIndex = d
                    }
                } else {
                    var M, T, A, P, C;
                    if (m = a.s.length,
                    v = o.s || a.e,
                    this.sh && 1 !== a.h)
                        e >= y ? (n[0] = v[0],
                        n[1] = v[1],
                        n[2] = v[2]) : e <= b ? (n[0] = a.s[0],
                        n[1] = a.s[1],
                        n[2] = a.s[2]) : function(e, t) {
                            var n = t[0]
                              , r = t[1]
                              , i = t[2]
                              , a = t[3]
                              , o = Math.atan2(2 * r * a - 2 * n * i, 1 - 2 * r * r - 2 * i * i)
                              , s = Math.asin(2 * n * r + 2 * i * a)
                              , l = Math.atan2(2 * n * a - 2 * r * i, 1 - 2 * n * n - 2 * i * i);
                            e[0] = o / degToRads,
                            e[1] = s / degToRads,
                            e[2] = l / degToRads
                        }(n, function(e, t, n) {
                            var r, i, a, o, s, l = [], u = e[0], c = e[1], h = e[2], p = e[3], f = t[0], d = t[1], m = t[2], g = t[3];
                            return (i = u * f + c * d + h * m + p * g) < 0 && (i = -i,
                            f = -f,
                            d = -d,
                            m = -m,
                            g = -g),
                            1 - i > 1e-6 ? (r = Math.acos(i),
                            a = Math.sin(r),
                            o = Math.sin((1 - n) * r) / a,
                            s = Math.sin(n * r) / a) : (o = 1 - n,
                            s = n),
                            l[0] = o * u + s * f,
                            l[1] = o * c + s * d,
                            l[2] = o * h + s * m,
                            l[3] = o * p + s * g,
                            l
                        }(r(a.s), r(v), (e - b) / (y - b)));
                    else
                        for (d = 0; d < m; d += 1)
                            1 !== a.h && (e >= y ? u = 1 : e < b ? u = 0 : (a.o.x.constructor === Array ? (a.__fnct || (a.__fnct = []),
                            a.__fnct[d] ? p = a.__fnct[d] : (M = "undefined" === typeof a.o.x[d] ? a.o.x[0] : a.o.x[d],
                            T = "undefined" === typeof a.o.y[d] ? a.o.y[0] : a.o.y[d],
                            A = "undefined" === typeof a.i.x[d] ? a.i.x[0] : a.i.x[d],
                            P = "undefined" === typeof a.i.y[d] ? a.i.y[0] : a.i.y[d],
                            p = BezierFactory.getBezierEasing(M, T, A, P).get,
                            a.__fnct[d] = p)) : a.__fnct ? p = a.__fnct : (M = a.o.x,
                            T = a.o.y,
                            A = a.i.x,
                            P = a.i.y,
                            p = BezierFactory.getBezierEasing(M, T, A, P).get,
                            a.__fnct = p),
                            u = p((e - b) / (y - b)))),
                            v = o.s || a.e,
                            C = 1 === a.h ? a.s[d] : a.s[d] + (v[d] - a.s[d]) * u,
                            "multidimensional" === this.propType ? n[d] = C : n = C
                }
                return t.lastIndex = f,
                n
            }
            function r(e) {
                var t = e[0] * degToRads
                  , n = e[1] * degToRads
                  , r = e[2] * degToRads
                  , i = Math.cos(t / 2)
                  , a = Math.cos(n / 2)
                  , o = Math.cos(r / 2)
                  , s = Math.sin(t / 2)
                  , l = Math.sin(n / 2)
                  , u = Math.sin(r / 2);
                return [s * l * o + i * a * u, s * a * o + i * l * u, i * l * o - s * a * u, i * a * o - s * l * u]
            }
            function i() {
                var t = this.comp.renderedFrame - this.offsetTime
                  , n = this.keyframes[0].t - this.offsetTime
                  , r = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;
                if (!(t === this._caching.lastFrame || this._caching.lastFrame !== e && (this._caching.lastFrame >= r && t >= r || this._caching.lastFrame < n && t < n))) {
                    this._caching.lastFrame >= t && (this._caching._lastKeyframeIndex = -1,
                    this._caching.lastIndex = 0);
                    var i = this.interpolateValue(t, this._caching);
                    this.pv = i
                }
                return this._caching.lastFrame = t,
                this.pv
            }
            function a(e) {
                var n;
                if ("unidimensional" === this.propType)
                    n = e * this.mult,
                    t(this.v - n) > 1e-5 && (this.v = n,
                    this._mdf = !0);
                else
                    for (var r = 0, i = this.v.length; r < i; )
                        n = e[r] * this.mult,
                        t(this.v[r] - n) > 1e-5 && (this.v[r] = n,
                        this._mdf = !0),
                        r += 1
            }
            function o() {
                if (this.elem.globalData.frameId !== this.frameId && this.effectsSequence.length)
                    if (this.lock)
                        this.setVValue(this.pv);
                    else {
                        var e;
                        this.lock = !0,
                        this._mdf = this._isFirstFrame;
                        var t = this.effectsSequence.length
                          , n = this.kf ? this.pv : this.data.k;
                        for (e = 0; e < t; e += 1)
                            n = this.effectsSequence[e](n);
                        this.setVValue(n),
                        this._isFirstFrame = !1,
                        this.lock = !1,
                        this.frameId = this.elem.globalData.frameId
                    }
            }
            function s(e) {
                this.effectsSequence.push(e),
                this.container.addDynamicProperty(this)
            }
            function l(e, t, n, r) {
                this.propType = "unidimensional",
                this.mult = n || 1,
                this.data = t,
                this.v = n ? t.k * n : t.k,
                this.pv = t.k,
                this._mdf = !1,
                this.elem = e,
                this.container = r,
                this.comp = e.comp,
                this.k = !1,
                this.kf = !1,
                this.vel = 0,
                this.effectsSequence = [],
                this._isFirstFrame = !0,
                this.getValue = o,
                this.setVValue = a,
                this.addEffect = s
            }
            function u(e, t, n, r) {
                var i;
                this.propType = "multidimensional",
                this.mult = n || 1,
                this.data = t,
                this._mdf = !1,
                this.elem = e,
                this.container = r,
                this.comp = e.comp,
                this.k = !1,
                this.kf = !1,
                this.frameId = -1;
                var l = t.k.length;
                for (this.v = createTypedArray("float32", l),
                this.pv = createTypedArray("float32", l),
                this.vel = createTypedArray("float32", l),
                i = 0; i < l; i += 1)
                    this.v[i] = t.k[i] * this.mult,
                    this.pv[i] = t.k[i];
                this._isFirstFrame = !0,
                this.effectsSequence = [],
                this.getValue = o,
                this.setVValue = a,
                this.addEffect = s
            }
            function c(t, r, l, u) {
                this.propType = "unidimensional",
                this.keyframes = r.k,
                this.offsetTime = t.data.st,
                this.frameId = -1,
                this._caching = {
                    lastFrame: e,
                    lastIndex: 0,
                    value: 0,
                    _lastKeyframeIndex: -1
                },
                this.k = !0,
                this.kf = !0,
                this.data = r,
                this.mult = l || 1,
                this.elem = t,
                this.container = u,
                this.comp = t.comp,
                this.v = e,
                this.pv = e,
                this._isFirstFrame = !0,
                this.getValue = o,
                this.setVValue = a,
                this.interpolateValue = n,
                this.effectsSequence = [i.bind(this)],
                this.addEffect = s
            }
            function h(t, r, l, u) {
                var c;
                this.propType = "multidimensional";
                var h, p, f, d, m = r.k.length;
                for (c = 0; c < m - 1; c += 1)
                    r.k[c].to && r.k[c].s && r.k[c + 1] && r.k[c + 1].s && (h = r.k[c].s,
                    p = r.k[c + 1].s,
                    f = r.k[c].to,
                    d = r.k[c].ti,
                    (2 === h.length && (h[0] !== p[0] || h[1] !== p[1]) && bez.pointOnLine2D(h[0], h[1], p[0], p[1], h[0] + f[0], h[1] + f[1]) && bez.pointOnLine2D(h[0], h[1], p[0], p[1], p[0] + d[0], p[1] + d[1]) || 3 === h.length && (h[0] !== p[0] || h[1] !== p[1] || h[2] !== p[2]) && bez.pointOnLine3D(h[0], h[1], h[2], p[0], p[1], p[2], h[0] + f[0], h[1] + f[1], h[2] + f[2]) && bez.pointOnLine3D(h[0], h[1], h[2], p[0], p[1], p[2], p[0] + d[0], p[1] + d[1], p[2] + d[2])) && (r.k[c].to = null,
                    r.k[c].ti = null),
                    h[0] === p[0] && h[1] === p[1] && 0 === f[0] && 0 === f[1] && 0 === d[0] && 0 === d[1] && (2 === h.length || h[2] === p[2] && 0 === f[2] && 0 === d[2]) && (r.k[c].to = null,
                    r.k[c].ti = null));
                this.effectsSequence = [i.bind(this)],
                this.data = r,
                this.keyframes = r.k,
                this.offsetTime = t.data.st,
                this.k = !0,
                this.kf = !0,
                this._isFirstFrame = !0,
                this.mult = l || 1,
                this.elem = t,
                this.container = u,
                this.comp = t.comp,
                this.getValue = o,
                this.setVValue = a,
                this.interpolateValue = n,
                this.frameId = -1;
                var g = r.k[0].s.length;
                for (this.v = createTypedArray("float32", g),
                this.pv = createTypedArray("float32", g),
                c = 0; c < g; c += 1)
                    this.v[c] = e,
                    this.pv[c] = e;
                this._caching = {
                    lastFrame: e,
                    lastIndex: 0,
                    value: createTypedArray("float32", g)
                },
                this.addEffect = s
            }
            return {
                getProp: function(e, t, n, r, i) {
                    var a;
                    if (t.k.length)
                        if ("number" === typeof t.k[0])
                            a = new u(e,t,r,i);
                        else
                            switch (n) {
                            case 0:
                                a = new c(e,t,r,i);
                                break;
                            case 1:
                                a = new h(e,t,r,i)
                            }
                    else
                        a = new l(e,t,r,i);
                    return a.effectsSequence.length && i.addDynamicProperty(a),
                    a
                }
            }
        }()
          , TransformPropertyFactory = function() {
            var e = [0, 0];
            function t(e, t, n) {
                if (this.elem = e,
                this.frameId = -1,
                this.propType = "transform",
                this.data = t,
                this.v = new Matrix,
                this.pre = new Matrix,
                this.appliedTransformations = 0,
                this.initDynamicPropertyContainer(n || e),
                t.p && t.p.s ? (this.px = PropertyFactory.getProp(e, t.p.x, 0, 0, this),
                this.py = PropertyFactory.getProp(e, t.p.y, 0, 0, this),
                t.p.z && (this.pz = PropertyFactory.getProp(e, t.p.z, 0, 0, this))) : this.p = PropertyFactory.getProp(e, t.p || {
                    k: [0, 0, 0]
                }, 1, 0, this),
                t.rx) {
                    if (this.rx = PropertyFactory.getProp(e, t.rx, 0, degToRads, this),
                    this.ry = PropertyFactory.getProp(e, t.ry, 0, degToRads, this),
                    this.rz = PropertyFactory.getProp(e, t.rz, 0, degToRads, this),
                    t.or.k[0].ti) {
                        var r, i = t.or.k.length;
                        for (r = 0; r < i; r += 1)
                            t.or.k[r].to = null,
                            t.or.k[r].ti = null
                    }
                    this.or = PropertyFactory.getProp(e, t.or, 1, degToRads, this),
                    this.or.sh = !0
                } else
                    this.r = PropertyFactory.getProp(e, t.r || {
                        k: 0
                    }, 0, degToRads, this);
                t.sk && (this.sk = PropertyFactory.getProp(e, t.sk, 0, degToRads, this),
                this.sa = PropertyFactory.getProp(e, t.sa, 0, degToRads, this)),
                this.a = PropertyFactory.getProp(e, t.a || {
                    k: [0, 0, 0]
                }, 1, 0, this),
                this.s = PropertyFactory.getProp(e, t.s || {
                    k: [100, 100, 100]
                }, 1, .01, this),
                t.o ? this.o = PropertyFactory.getProp(e, t.o, 0, .01, e) : this.o = {
                    _mdf: !1,
                    v: 1
                },
                this._isDirty = !0,
                this.dynamicProperties.length || this.getValue(!0)
            }
            return t.prototype = {
                applyToMatrix: function(e) {
                    var t = this._mdf;
                    this.iterateDynamicProperties(),
                    this._mdf = this._mdf || t,
                    this.a && e.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]),
                    this.s && e.scale(this.s.v[0], this.s.v[1], this.s.v[2]),
                    this.sk && e.skewFromAxis(-this.sk.v, this.sa.v),
                    this.r ? e.rotate(-this.r.v) : e.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]),
                    this.data.p.s ? this.data.p.z ? e.translate(this.px.v, this.py.v, -this.pz.v) : e.translate(this.px.v, this.py.v, 0) : e.translate(this.p.v[0], this.p.v[1], -this.p.v[2])
                },
                getValue: function(t) {
                    if (this.elem.globalData.frameId !== this.frameId) {
                        if (this._isDirty && (this.precalculateMatrix(),
                        this._isDirty = !1),
                        this.iterateDynamicProperties(),
                        this._mdf || t) {
                            var n;
                            if (this.v.cloneFromProps(this.pre.props),
                            this.appliedTransformations < 1 && this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]),
                            this.appliedTransformations < 2 && this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]),
                            this.sk && this.appliedTransformations < 3 && this.v.skewFromAxis(-this.sk.v, this.sa.v),
                            this.r && this.appliedTransformations < 4 ? this.v.rotate(-this.r.v) : !this.r && this.appliedTransformations < 4 && this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]),
                            this.autoOriented) {
                                var r, i;
                                if (n = this.elem.globalData.frameRate,
                                this.p && this.p.keyframes && this.p.getValueAtTime)
                                    this.p._caching.lastFrame + this.p.offsetTime <= this.p.keyframes[0].t ? (r = this.p.getValueAtTime((this.p.keyframes[0].t + .01) / n, 0),
                                    i = this.p.getValueAtTime(this.p.keyframes[0].t / n, 0)) : this.p._caching.lastFrame + this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t ? (r = this.p.getValueAtTime(this.p.keyframes[this.p.keyframes.length - 1].t / n, 0),
                                    i = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - .05) / n, 0)) : (r = this.p.pv,
                                    i = this.p.getValueAtTime((this.p._caching.lastFrame + this.p.offsetTime - .01) / n, this.p.offsetTime));
                                else if (this.px && this.px.keyframes && this.py.keyframes && this.px.getValueAtTime && this.py.getValueAtTime) {
                                    r = [],
                                    i = [];
                                    var a = this.px
                                      , o = this.py;
                                    a._caching.lastFrame + a.offsetTime <= a.keyframes[0].t ? (r[0] = a.getValueAtTime((a.keyframes[0].t + .01) / n, 0),
                                    r[1] = o.getValueAtTime((o.keyframes[0].t + .01) / n, 0),
                                    i[0] = a.getValueAtTime(a.keyframes[0].t / n, 0),
                                    i[1] = o.getValueAtTime(o.keyframes[0].t / n, 0)) : a._caching.lastFrame + a.offsetTime >= a.keyframes[a.keyframes.length - 1].t ? (r[0] = a.getValueAtTime(a.keyframes[a.keyframes.length - 1].t / n, 0),
                                    r[1] = o.getValueAtTime(o.keyframes[o.keyframes.length - 1].t / n, 0),
                                    i[0] = a.getValueAtTime((a.keyframes[a.keyframes.length - 1].t - .01) / n, 0),
                                    i[1] = o.getValueAtTime((o.keyframes[o.keyframes.length - 1].t - .01) / n, 0)) : (r = [a.pv, o.pv],
                                    i[0] = a.getValueAtTime((a._caching.lastFrame + a.offsetTime - .01) / n, a.offsetTime),
                                    i[1] = o.getValueAtTime((o._caching.lastFrame + o.offsetTime - .01) / n, o.offsetTime))
                                } else
                                    r = i = e;
                                this.v.rotate(-Math.atan2(r[1] - i[1], r[0] - i[0]))
                            }
                            this.data.p && this.data.p.s ? this.data.p.z ? this.v.translate(this.px.v, this.py.v, -this.pz.v) : this.v.translate(this.px.v, this.py.v, 0) : this.v.translate(this.p.v[0], this.p.v[1], -this.p.v[2])
                        }
                        this.frameId = this.elem.globalData.frameId
                    }
                },
                precalculateMatrix: function() {
                    if (!this.a.k && (this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]),
                    this.appliedTransformations = 1,
                    !this.s.effectsSequence.length)) {
                        if (this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]),
                        this.appliedTransformations = 2,
                        this.sk) {
                            if (this.sk.effectsSequence.length || this.sa.effectsSequence.length)
                                return;
                            this.pre.skewFromAxis(-this.sk.v, this.sa.v),
                            this.appliedTransformations = 3
                        }
                        this.r ? this.r.effectsSequence.length || (this.pre.rotate(-this.r.v),
                        this.appliedTransformations = 4) : this.rz.effectsSequence.length || this.ry.effectsSequence.length || this.rx.effectsSequence.length || this.or.effectsSequence.length || (this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]),
                        this.appliedTransformations = 4)
                    }
                },
                autoOrient: function() {}
            },
            extendPrototype([DynamicPropertyContainer], t),
            t.prototype.addDynamicProperty = function(e) {
                this._addDynamicProperty(e),
                this.elem.addDynamicProperty(e),
                this._isDirty = !0
            }
            ,
            t.prototype._addDynamicProperty = DynamicPropertyContainer.prototype.addDynamicProperty,
            {
                getTransformProperty: function(e, n, r) {
                    return new t(e,n,r)
                }
            }
        }();
        function ShapePath() {
            this.c = !1,
            this._length = 0,
            this._maxLength = 8,
            this.v = createSizedArray(this._maxLength),
            this.o = createSizedArray(this._maxLength),
            this.i = createSizedArray(this._maxLength)
        }
        ShapePath.prototype.setPathData = function(e, t) {
            this.c = e,
            this.setLength(t);
            for (var n = 0; n < t; )
                this.v[n] = pointPool.newElement(),
                this.o[n] = pointPool.newElement(),
                this.i[n] = pointPool.newElement(),
                n += 1
        }
        ,
        ShapePath.prototype.setLength = function(e) {
            for (; this._maxLength < e; )
                this.doubleArrayLength();
            this._length = e
        }
        ,
        ShapePath.prototype.doubleArrayLength = function() {
            this.v = this.v.concat(createSizedArray(this._maxLength)),
            this.i = this.i.concat(createSizedArray(this._maxLength)),
            this.o = this.o.concat(createSizedArray(this._maxLength)),
            this._maxLength *= 2
        }
        ,
        ShapePath.prototype.setXYAt = function(e, t, n, r, i) {
            var a;
            switch (this._length = Math.max(this._length, r + 1),
            this._length >= this._maxLength && this.doubleArrayLength(),
            n) {
            case "v":
                a = this.v;
                break;
            case "i":
                a = this.i;
                break;
            case "o":
                a = this.o;
                break;
            default:
                a = []
            }
            (!a[r] || a[r] && !i) && (a[r] = pointPool.newElement()),
            a[r][0] = e,
            a[r][1] = t
        }
        ,
        ShapePath.prototype.setTripleAt = function(e, t, n, r, i, a, o, s) {
            this.setXYAt(e, t, "v", o, s),
            this.setXYAt(n, r, "o", o, s),
            this.setXYAt(i, a, "i", o, s)
        }
        ,
        ShapePath.prototype.reverse = function() {
            var e = new ShapePath;
            e.setPathData(this.c, this._length);
            var t = this.v
              , n = this.o
              , r = this.i
              , i = 0;
            this.c && (e.setTripleAt(t[0][0], t[0][1], r[0][0], r[0][1], n[0][0], n[0][1], 0, !1),
            i = 1);
            var a, o = this._length - 1, s = this._length;
            for (a = i; a < s; a += 1)
                e.setTripleAt(t[o][0], t[o][1], r[o][0], r[o][1], n[o][0], n[o][1], a, !1),
                o -= 1;
            return e
        }
        ;
        var ShapePropertyFactory = function() {
            function e(e, t, n) {
                var r, i, a, o, s, l, u, c, h, p = n.lastIndex, f = this.keyframes;
                if (e < f[0].t - this.offsetTime)
                    r = f[0].s[0],
                    a = !0,
                    p = 0;
                else if (e >= f[f.length - 1].t - this.offsetTime)
                    r = f[f.length - 1].s ? f[f.length - 1].s[0] : f[f.length - 2].e[0],
                    a = !0;
                else {
                    for (var d, m, g = p, v = f.length - 1, y = !0; y && (d = f[g],
                    !((m = f[g + 1]).t - this.offsetTime > e)); )
                        g < v - 1 ? g += 1 : y = !1;
                    if (p = g,
                    !(a = 1 === d.h)) {
                        if (e >= m.t - this.offsetTime)
                            c = 1;
                        else if (e < d.t - this.offsetTime)
                            c = 0;
                        else {
                            var b;
                            d.__fnct ? b = d.__fnct : (b = BezierFactory.getBezierEasing(d.o.x, d.o.y, d.i.x, d.i.y).get,
                            d.__fnct = b),
                            c = b((e - (d.t - this.offsetTime)) / (m.t - this.offsetTime - (d.t - this.offsetTime)))
                        }
                        i = m.s ? m.s[0] : d.e[0]
                    }
                    r = d.s[0]
                }
                for (l = t._length,
                u = r.i[0].length,
                n.lastIndex = p,
                o = 0; o < l; o += 1)
                    for (s = 0; s < u; s += 1)
                        h = a ? r.i[o][s] : r.i[o][s] + (i.i[o][s] - r.i[o][s]) * c,
                        t.i[o][s] = h,
                        h = a ? r.o[o][s] : r.o[o][s] + (i.o[o][s] - r.o[o][s]) * c,
                        t.o[o][s] = h,
                        h = a ? r.v[o][s] : r.v[o][s] + (i.v[o][s] - r.v[o][s]) * c,
                        t.v[o][s] = h
            }
            function t() {
                var e = this.comp.renderedFrame - this.offsetTime
                  , t = this.keyframes[0].t - this.offsetTime
                  , n = this.keyframes[this.keyframes.length - 1].t - this.offsetTime
                  , r = this._caching.lastFrame;
                return -999999 !== r && (r < t && e < t || r > n && e > n) || (this._caching.lastIndex = r < e ? this._caching.lastIndex : 0,
                this.interpolateShape(e, this.pv, this._caching)),
                this._caching.lastFrame = e,
                this.pv
            }
            function n() {
                this.paths = this.localShapeCollection
            }
            function r(e) {
                (function(e, t) {
                    if (e._length !== t._length || e.c !== t.c)
                        return !1;
                    var n, r = e._length;
                    for (n = 0; n < r; n += 1)
                        if (e.v[n][0] !== t.v[n][0] || e.v[n][1] !== t.v[n][1] || e.o[n][0] !== t.o[n][0] || e.o[n][1] !== t.o[n][1] || e.i[n][0] !== t.i[n][0] || e.i[n][1] !== t.i[n][1])
                            return !1;
                    return !0
                }
                )(this.v, e) || (this.v = shapePool.clone(e),
                this.localShapeCollection.releaseShapes(),
                this.localShapeCollection.addShape(this.v),
                this._mdf = !0,
                this.paths = this.localShapeCollection)
            }
            function i() {
                if (this.elem.globalData.frameId !== this.frameId)
                    if (this.effectsSequence.length)
                        if (this.lock)
                            this.setVValue(this.pv);
                        else {
                            var e, t;
                            this.lock = !0,
                            this._mdf = !1,
                            e = this.kf ? this.pv : this.data.ks ? this.data.ks.k : this.data.pt.k;
                            var n = this.effectsSequence.length;
                            for (t = 0; t < n; t += 1)
                                e = this.effectsSequence[t](e);
                            this.setVValue(e),
                            this.lock = !1,
                            this.frameId = this.elem.globalData.frameId
                        }
                    else
                        this._mdf = !1
            }
            function a(e, t, r) {
                this.propType = "shape",
                this.comp = e.comp,
                this.container = e,
                this.elem = e,
                this.data = t,
                this.k = !1,
                this.kf = !1,
                this._mdf = !1;
                var i = 3 === r ? t.pt.k : t.ks.k;
                this.v = shapePool.clone(i),
                this.pv = shapePool.clone(this.v),
                this.localShapeCollection = shapeCollectionPool.newShapeCollection(),
                this.paths = this.localShapeCollection,
                this.paths.addShape(this.v),
                this.reset = n,
                this.effectsSequence = []
            }
            function o(e) {
                this.effectsSequence.push(e),
                this.container.addDynamicProperty(this)
            }
            function s(e, r, i) {
                this.propType = "shape",
                this.comp = e.comp,
                this.elem = e,
                this.container = e,
                this.offsetTime = e.data.st,
                this.keyframes = 3 === i ? r.pt.k : r.ks.k,
                this.k = !0,
                this.kf = !0;
                var a = this.keyframes[0].s[0].i.length;
                this.v = shapePool.newElement(),
                this.v.setPathData(this.keyframes[0].s[0].c, a),
                this.pv = shapePool.clone(this.v),
                this.localShapeCollection = shapeCollectionPool.newShapeCollection(),
                this.paths = this.localShapeCollection,
                this.paths.addShape(this.v),
                this.lastFrame = -999999,
                this.reset = n,
                this._caching = {
                    lastFrame: -999999,
                    lastIndex: 0
                },
                this.effectsSequence = [t.bind(this)]
            }
            a.prototype.interpolateShape = e,
            a.prototype.getValue = i,
            a.prototype.setVValue = r,
            a.prototype.addEffect = o,
            s.prototype.getValue = i,
            s.prototype.interpolateShape = e,
            s.prototype.setVValue = r,
            s.prototype.addEffect = o;
            var l = function() {
                var e = roundCorner;
                function t(e, t) {
                    this.v = shapePool.newElement(),
                    this.v.setPathData(!0, 4),
                    this.localShapeCollection = shapeCollectionPool.newShapeCollection(),
                    this.paths = this.localShapeCollection,
                    this.localShapeCollection.addShape(this.v),
                    this.d = t.d,
                    this.elem = e,
                    this.comp = e.comp,
                    this.frameId = -1,
                    this.initDynamicPropertyContainer(e),
                    this.p = PropertyFactory.getProp(e, t.p, 1, 0, this),
                    this.s = PropertyFactory.getProp(e, t.s, 1, 0, this),
                    this.dynamicProperties.length ? this.k = !0 : (this.k = !1,
                    this.convertEllToPath())
                }
                return t.prototype = {
                    reset: n,
                    getValue: function() {
                        this.elem.globalData.frameId !== this.frameId && (this.frameId = this.elem.globalData.frameId,
                        this.iterateDynamicProperties(),
                        this._mdf && this.convertEllToPath())
                    },
                    convertEllToPath: function() {
                        var t = this.p.v[0]
                          , n = this.p.v[1]
                          , r = this.s.v[0] / 2
                          , i = this.s.v[1] / 2
                          , a = 3 !== this.d
                          , o = this.v;
                        o.v[0][0] = t,
                        o.v[0][1] = n - i,
                        o.v[1][0] = a ? t + r : t - r,
                        o.v[1][1] = n,
                        o.v[2][0] = t,
                        o.v[2][1] = n + i,
                        o.v[3][0] = a ? t - r : t + r,
                        o.v[3][1] = n,
                        o.i[0][0] = a ? t - r * e : t + r * e,
                        o.i[0][1] = n - i,
                        o.i[1][0] = a ? t + r : t - r,
                        o.i[1][1] = n - i * e,
                        o.i[2][0] = a ? t + r * e : t - r * e,
                        o.i[2][1] = n + i,
                        o.i[3][0] = a ? t - r : t + r,
                        o.i[3][1] = n + i * e,
                        o.o[0][0] = a ? t + r * e : t - r * e,
                        o.o[0][1] = n - i,
                        o.o[1][0] = a ? t + r : t - r,
                        o.o[1][1] = n + i * e,
                        o.o[2][0] = a ? t - r * e : t + r * e,
                        o.o[2][1] = n + i,
                        o.o[3][0] = a ? t - r : t + r,
                        o.o[3][1] = n - i * e
                    }
                },
                extendPrototype([DynamicPropertyContainer], t),
                t
            }()
              , u = function() {
                function e(e, t) {
                    this.v = shapePool.newElement(),
                    this.v.setPathData(!0, 0),
                    this.elem = e,
                    this.comp = e.comp,
                    this.data = t,
                    this.frameId = -1,
                    this.d = t.d,
                    this.initDynamicPropertyContainer(e),
                    1 === t.sy ? (this.ir = PropertyFactory.getProp(e, t.ir, 0, 0, this),
                    this.is = PropertyFactory.getProp(e, t.is, 0, .01, this),
                    this.convertToPath = this.convertStarToPath) : this.convertToPath = this.convertPolygonToPath,
                    this.pt = PropertyFactory.getProp(e, t.pt, 0, 0, this),
                    this.p = PropertyFactory.getProp(e, t.p, 1, 0, this),
                    this.r = PropertyFactory.getProp(e, t.r, 0, degToRads, this),
                    this.or = PropertyFactory.getProp(e, t.or, 0, 0, this),
                    this.os = PropertyFactory.getProp(e, t.os, 0, .01, this),
                    this.localShapeCollection = shapeCollectionPool.newShapeCollection(),
                    this.localShapeCollection.addShape(this.v),
                    this.paths = this.localShapeCollection,
                    this.dynamicProperties.length ? this.k = !0 : (this.k = !1,
                    this.convertToPath())
                }
                return e.prototype = {
                    reset: n,
                    getValue: function() {
                        this.elem.globalData.frameId !== this.frameId && (this.frameId = this.elem.globalData.frameId,
                        this.iterateDynamicProperties(),
                        this._mdf && this.convertToPath())
                    },
                    convertStarToPath: function() {
                        var e, t, n, r, i = 2 * Math.floor(this.pt.v), a = 2 * Math.PI / i, o = !0, s = this.or.v, l = this.ir.v, u = this.os.v, c = this.is.v, h = 2 * Math.PI * s / (2 * i), p = 2 * Math.PI * l / (2 * i), f = -Math.PI / 2;
                        f += this.r.v;
                        var d = 3 === this.data.d ? -1 : 1;
                        for (this.v._length = 0,
                        e = 0; e < i; e += 1) {
                            n = o ? u : c,
                            r = o ? h : p;
                            var m = (t = o ? s : l) * Math.cos(f)
                              , g = t * Math.sin(f)
                              , v = 0 === m && 0 === g ? 0 : g / Math.sqrt(m * m + g * g)
                              , y = 0 === m && 0 === g ? 0 : -m / Math.sqrt(m * m + g * g);
                            m += +this.p.v[0],
                            g += +this.p.v[1],
                            this.v.setTripleAt(m, g, m - v * r * n * d, g - y * r * n * d, m + v * r * n * d, g + y * r * n * d, e, !0),
                            o = !o,
                            f += a * d
                        }
                    },
                    convertPolygonToPath: function() {
                        var e, t = Math.floor(this.pt.v), n = 2 * Math.PI / t, r = this.or.v, i = this.os.v, a = 2 * Math.PI * r / (4 * t), o = .5 * -Math.PI, s = 3 === this.data.d ? -1 : 1;
                        for (o += this.r.v,
                        this.v._length = 0,
                        e = 0; e < t; e += 1) {
                            var l = r * Math.cos(o)
                              , u = r * Math.sin(o)
                              , c = 0 === l && 0 === u ? 0 : u / Math.sqrt(l * l + u * u)
                              , h = 0 === l && 0 === u ? 0 : -l / Math.sqrt(l * l + u * u);
                            l += +this.p.v[0],
                            u += +this.p.v[1],
                            this.v.setTripleAt(l, u, l - c * a * i * s, u - h * a * i * s, l + c * a * i * s, u + h * a * i * s, e, !0),
                            o += n * s
                        }
                        this.paths.length = 0,
                        this.paths[0] = this.v
                    }
                },
                extendPrototype([DynamicPropertyContainer], e),
                e
            }()
              , c = function() {
                function e(e, t) {
                    this.v = shapePool.newElement(),
                    this.v.c = !0,
                    this.localShapeCollection = shapeCollectionPool.newShapeCollection(),
                    this.localShapeCollection.addShape(this.v),
                    this.paths = this.localShapeCollection,
                    this.elem = e,
                    this.comp = e.comp,
                    this.frameId = -1,
                    this.d = t.d,
                    this.initDynamicPropertyContainer(e),
                    this.p = PropertyFactory.getProp(e, t.p, 1, 0, this),
                    this.s = PropertyFactory.getProp(e, t.s, 1, 0, this),
                    this.r = PropertyFactory.getProp(e, t.r, 0, 0, this),
                    this.dynamicProperties.length ? this.k = !0 : (this.k = !1,
                    this.convertRectToPath())
                }
                return e.prototype = {
                    convertRectToPath: function() {
                        var e = this.p.v[0]
                          , t = this.p.v[1]
                          , n = this.s.v[0] / 2
                          , r = this.s.v[1] / 2
                          , i = bmMin(n, r, this.r.v)
                          , a = i * (1 - roundCorner);
                        this.v._length = 0,
                        2 === this.d || 1 === this.d ? (this.v.setTripleAt(e + n, t - r + i, e + n, t - r + i, e + n, t - r + a, 0, !0),
                        this.v.setTripleAt(e + n, t + r - i, e + n, t + r - a, e + n, t + r - i, 1, !0),
                        0 !== i ? (this.v.setTripleAt(e + n - i, t + r, e + n - i, t + r, e + n - a, t + r, 2, !0),
                        this.v.setTripleAt(e - n + i, t + r, e - n + a, t + r, e - n + i, t + r, 3, !0),
                        this.v.setTripleAt(e - n, t + r - i, e - n, t + r - i, e - n, t + r - a, 4, !0),
                        this.v.setTripleAt(e - n, t - r + i, e - n, t - r + a, e - n, t - r + i, 5, !0),
                        this.v.setTripleAt(e - n + i, t - r, e - n + i, t - r, e - n + a, t - r, 6, !0),
                        this.v.setTripleAt(e + n - i, t - r, e + n - a, t - r, e + n - i, t - r, 7, !0)) : (this.v.setTripleAt(e - n, t + r, e - n + a, t + r, e - n, t + r, 2),
                        this.v.setTripleAt(e - n, t - r, e - n, t - r + a, e - n, t - r, 3))) : (this.v.setTripleAt(e + n, t - r + i, e + n, t - r + a, e + n, t - r + i, 0, !0),
                        0 !== i ? (this.v.setTripleAt(e + n - i, t - r, e + n - i, t - r, e + n - a, t - r, 1, !0),
                        this.v.setTripleAt(e - n + i, t - r, e - n + a, t - r, e - n + i, t - r, 2, !0),
                        this.v.setTripleAt(e - n, t - r + i, e - n, t - r + i, e - n, t - r + a, 3, !0),
                        this.v.setTripleAt(e - n, t + r - i, e - n, t + r - a, e - n, t + r - i, 4, !0),
                        this.v.setTripleAt(e - n + i, t + r, e - n + i, t + r, e - n + a, t + r, 5, !0),
                        this.v.setTripleAt(e + n - i, t + r, e + n - a, t + r, e + n - i, t + r, 6, !0),
                        this.v.setTripleAt(e + n, t + r - i, e + n, t + r - i, e + n, t + r - a, 7, !0)) : (this.v.setTripleAt(e - n, t - r, e - n + a, t - r, e - n, t - r, 1, !0),
                        this.v.setTripleAt(e - n, t + r, e - n, t + r - a, e - n, t + r, 2, !0),
                        this.v.setTripleAt(e + n, t + r, e + n - a, t + r, e + n, t + r, 3, !0)))
                    },
                    getValue: function() {
                        this.elem.globalData.frameId !== this.frameId && (this.frameId = this.elem.globalData.frameId,
                        this.iterateDynamicProperties(),
                        this._mdf && this.convertRectToPath())
                    },
                    reset: n
                },
                extendPrototype([DynamicPropertyContainer], e),
                e
            }()
              , h = {
                getShapeProp: function(e, t, n) {
                    var r;
                    return 3 === n || 4 === n ? r = (3 === n ? t.pt : t.ks).k.length ? new s(e,t,n) : new a(e,t,n) : 5 === n ? r = new c(e,t) : 6 === n ? r = new l(e,t) : 7 === n && (r = new u(e,t)),
                    r.k && e.addDynamicProperty(r),
                    r
                },
                getConstructorFunction: function() {
                    return a
                },
                getKeyframedConstructorFunction: function() {
                    return s
                }
            };
            return h
        }()
          , ShapeModifiers = function() {
            var e = {}
              , t = {};
            return e.registerModifier = function(e, n) {
                t[e] || (t[e] = n)
            }
            ,
            e.getModifier = function(e, n, r) {
                return new t[e](n,r)
            }
            ,
            e
        }();
        function ShapeModifier() {}
        function TrimModifier() {}
        function RoundCornersModifier() {}
        function PuckerAndBloatModifier() {}
        function RepeaterModifier() {}
        function ShapeCollection() {
            this._length = 0,
            this._maxLength = 4,
            this.shapes = createSizedArray(this._maxLength)
        }
        function DashProperty(e, t, n, r) {
            var i;
            this.elem = e,
            this.frameId = -1,
            this.dataProps = createSizedArray(t.length),
            this.renderer = n,
            this.k = !1,
            this.dashStr = "",
            this.dashArray = createTypedArray("float32", t.length ? t.length - 1 : 0),
            this.dashoffset = createTypedArray("float32", 1),
            this.initDynamicPropertyContainer(r);
            var a, o = t.length || 0;
            for (i = 0; i < o; i += 1)
                a = PropertyFactory.getProp(e, t[i].v, 0, 0, this),
                this.k = a.k || this.k,
                this.dataProps[i] = {
                    n: t[i].n,
                    p: a
                };
            this.k || this.getValue(!0),
            this._isAnimated = this.k
        }
        function GradientProperty(e, t, n) {
            this.data = t,
            this.c = createTypedArray("uint8c", 4 * t.p);
            var r = t.k.k[0].s ? t.k.k[0].s.length - 4 * t.p : t.k.k.length - 4 * t.p;
            this.o = createTypedArray("float32", r),
            this._cmdf = !1,
            this._omdf = !1,
            this._collapsable = this.checkCollapsable(),
            this._hasOpacity = r,
            this.initDynamicPropertyContainer(n),
            this.prop = PropertyFactory.getProp(e, t.k, 1, null, this),
            this.k = this.prop.k,
            this.getValue(!0)
        }
        ShapeModifier.prototype.initModifierProperties = function() {}
        ,
        ShapeModifier.prototype.addShapeToModifier = function() {}
        ,
        ShapeModifier.prototype.addShape = function(e) {
            if (!this.closed) {
                e.sh.container.addDynamicProperty(e.sh);
                var t = {
                    shape: e.sh,
                    data: e,
                    localShapeCollection: shapeCollectionPool.newShapeCollection()
                };
                this.shapes.push(t),
                this.addShapeToModifier(t),
                this._isAnimated && e.setAsAnimated()
            }
        }
        ,
        ShapeModifier.prototype.init = function(e, t) {
            this.shapes = [],
            this.elem = e,
            this.initDynamicPropertyContainer(e),
            this.initModifierProperties(e, t),
            this.frameId = initialDefaultFrame,
            this.closed = !1,
            this.k = !1,
            this.dynamicProperties.length ? this.k = !0 : this.getValue(!0)
        }
        ,
        ShapeModifier.prototype.processKeys = function() {
            this.elem.globalData.frameId !== this.frameId && (this.frameId = this.elem.globalData.frameId,
            this.iterateDynamicProperties())
        }
        ,
        extendPrototype([DynamicPropertyContainer], ShapeModifier),
        extendPrototype([ShapeModifier], TrimModifier),
        TrimModifier.prototype.initModifierProperties = function(e, t) {
            this.s = PropertyFactory.getProp(e, t.s, 0, .01, this),
            this.e = PropertyFactory.getProp(e, t.e, 0, .01, this),
            this.o = PropertyFactory.getProp(e, t.o, 0, 0, this),
            this.sValue = 0,
            this.eValue = 0,
            this.getValue = this.processKeys,
            this.m = t.m,
            this._isAnimated = !!this.s.effectsSequence.length || !!this.e.effectsSequence.length || !!this.o.effectsSequence.length
        }
        ,
        TrimModifier.prototype.addShapeToModifier = function(e) {
            e.pathsData = []
        }
        ,
        TrimModifier.prototype.calculateShapeEdges = function(e, t, n, r, i) {
            var a = [];
            t <= 1 ? a.push({
                s: e,
                e: t
            }) : e >= 1 ? a.push({
                s: e - 1,
                e: t - 1
            }) : (a.push({
                s: e,
                e: 1
            }),
            a.push({
                s: 0,
                e: t - 1
            }));
            var o, s, l = [], u = a.length;
            for (o = 0; o < u; o += 1) {
                var c, h;
                (s = a[o]).e * i < r || s.s * i > r + n || (c = s.s * i <= r ? 0 : (s.s * i - r) / n,
                h = s.e * i >= r + n ? 1 : (s.e * i - r) / n,
                l.push([c, h]))
            }
            return l.length || l.push([0, 0]),
            l
        }
        ,
        TrimModifier.prototype.releasePathsData = function(e) {
            var t, n = e.length;
            for (t = 0; t < n; t += 1)
                segmentsLengthPool.release(e[t]);
            return e.length = 0,
            e
        }
        ,
        TrimModifier.prototype.processShapes = function(e) {
            var t, n, r, i;
            if (this._mdf || e) {
                var a = this.o.v % 360 / 360;
                if (a < 0 && (a += 1),
                (t = this.s.v > 1 ? 1 + a : this.s.v < 0 ? 0 + a : this.s.v + a) > (n = this.e.v > 1 ? 1 + a : this.e.v < 0 ? 0 + a : this.e.v + a)) {
                    var o = t;
                    t = n,
                    n = o
                }
                t = 1e-4 * Math.round(1e4 * t),
                n = 1e-4 * Math.round(1e4 * n),
                this.sValue = t,
                this.eValue = n
            } else
                t = this.sValue,
                n = this.eValue;
            var s, l, u, c, h, p = this.shapes.length, f = 0;
            if (n === t)
                for (i = 0; i < p; i += 1)
                    this.shapes[i].localShapeCollection.releaseShapes(),
                    this.shapes[i].shape._mdf = !0,
                    this.shapes[i].shape.paths = this.shapes[i].localShapeCollection,
                    this._mdf && (this.shapes[i].pathsData.length = 0);
            else if (1 === n && 0 === t || 0 === n && 1 === t) {
                if (this._mdf)
                    for (i = 0; i < p; i += 1)
                        this.shapes[i].pathsData.length = 0,
                        this.shapes[i].shape._mdf = !0
            } else {
                var d, m, g = [];
                for (i = 0; i < p; i += 1)
                    if ((d = this.shapes[i]).shape._mdf || this._mdf || e || 2 === this.m) {
                        if (l = (r = d.shape.paths)._length,
                        h = 0,
                        !d.shape._mdf && d.pathsData.length)
                            h = d.totalShapeLength;
                        else {
                            for (u = this.releasePathsData(d.pathsData),
                            s = 0; s < l; s += 1)
                                c = bez.getSegmentsLength(r.shapes[s]),
                                u.push(c),
                                h += c.totalLength;
                            d.totalShapeLength = h,
                            d.pathsData = u
                        }
                        f += h,
                        d.shape._mdf = !0
                    } else
                        d.shape.paths = d.localShapeCollection;
                var v, y = t, b = n, x = 0;
                for (i = p - 1; i >= 0; i -= 1)
                    if ((d = this.shapes[i]).shape._mdf) {
                        for ((m = d.localShapeCollection).releaseShapes(),
                        2 === this.m && p > 1 ? (v = this.calculateShapeEdges(t, n, d.totalShapeLength, x, f),
                        x += d.totalShapeLength) : v = [[y, b]],
                        l = v.length,
                        s = 0; s < l; s += 1) {
                            y = v[s][0],
                            b = v[s][1],
                            g.length = 0,
                            b <= 1 ? g.push({
                                s: d.totalShapeLength * y,
                                e: d.totalShapeLength * b
                            }) : y >= 1 ? g.push({
                                s: d.totalShapeLength * (y - 1),
                                e: d.totalShapeLength * (b - 1)
                            }) : (g.push({
                                s: d.totalShapeLength * y,
                                e: d.totalShapeLength
                            }),
                            g.push({
                                s: 0,
                                e: d.totalShapeLength * (b - 1)
                            }));
                            var w = this.addShapes(d, g[0]);
                            if (g[0].s !== g[0].e) {
                                if (g.length > 1)
                                    if (d.shape.paths.shapes[d.shape.paths._length - 1].c) {
                                        var _ = w.pop();
                                        this.addPaths(w, m),
                                        w = this.addShapes(d, g[1], _)
                                    } else
                                        this.addPaths(w, m),
                                        w = this.addShapes(d, g[1]);
                                this.addPaths(w, m)
                            }
                        }
                        d.shape.paths = m
                    }
            }
        }
        ,
        TrimModifier.prototype.addPaths = function(e, t) {
            var n, r = e.length;
            for (n = 0; n < r; n += 1)
                t.addShape(e[n])
        }
        ,
        TrimModifier.prototype.addSegment = function(e, t, n, r, i, a, o) {
            i.setXYAt(t[0], t[1], "o", a),
            i.setXYAt(n[0], n[1], "i", a + 1),
            o && i.setXYAt(e[0], e[1], "v", a),
            i.setXYAt(r[0], r[1], "v", a + 1)
        }
        ,
        TrimModifier.prototype.addSegmentFromArray = function(e, t, n, r) {
            t.setXYAt(e[1], e[5], "o", n),
            t.setXYAt(e[2], e[6], "i", n + 1),
            r && t.setXYAt(e[0], e[4], "v", n),
            t.setXYAt(e[3], e[7], "v", n + 1)
        }
        ,
        TrimModifier.prototype.addShapes = function(e, t, n) {
            var r, i, a, o, s, l, u, c, h = e.pathsData, p = e.shape.paths.shapes, f = e.shape.paths._length, d = 0, m = [], g = !0;
            for (n ? (s = n._length,
            c = n._length) : (n = shapePool.newElement(),
            s = 0,
            c = 0),
            m.push(n),
            r = 0; r < f; r += 1) {
                for (l = h[r].lengths,
                n.c = p[r].c,
                a = p[r].c ? l.length : l.length + 1,
                i = 1; i < a; i += 1)
                    if (d + (o = l[i - 1]).addedLength < t.s)
                        d += o.addedLength,
                        n.c = !1;
                    else {
                        if (d > t.e) {
                            n.c = !1;
                            break
                        }
                        t.s <= d && t.e >= d + o.addedLength ? (this.addSegment(p[r].v[i - 1], p[r].o[i - 1], p[r].i[i], p[r].v[i], n, s, g),
                        g = !1) : (u = bez.getNewSegment(p[r].v[i - 1], p[r].v[i], p[r].o[i - 1], p[r].i[i], (t.s - d) / o.addedLength, (t.e - d) / o.addedLength, l[i - 1]),
                        this.addSegmentFromArray(u, n, s, g),
                        g = !1,
                        n.c = !1),
                        d += o.addedLength,
                        s += 1
                    }
                if (p[r].c && l.length) {
                    if (o = l[i - 1],
                    d <= t.e) {
                        var v = l[i - 1].addedLength;
                        t.s <= d && t.e >= d + v ? (this.addSegment(p[r].v[i - 1], p[r].o[i - 1], p[r].i[0], p[r].v[0], n, s, g),
                        g = !1) : (u = bez.getNewSegment(p[r].v[i - 1], p[r].v[0], p[r].o[i - 1], p[r].i[0], (t.s - d) / v, (t.e - d) / v, l[i - 1]),
                        this.addSegmentFromArray(u, n, s, g),
                        g = !1,
                        n.c = !1)
                    } else
                        n.c = !1;
                    d += o.addedLength,
                    s += 1
                }
                if (n._length && (n.setXYAt(n.v[c][0], n.v[c][1], "i", c),
                n.setXYAt(n.v[n._length - 1][0], n.v[n._length - 1][1], "o", n._length - 1)),
                d > t.e)
                    break;
                r < f - 1 && (n = shapePool.newElement(),
                g = !0,
                m.push(n),
                s = 0)
            }
            return m
        }
        ,
        ShapeModifiers.registerModifier("tm", TrimModifier),
        extendPrototype([ShapeModifier], RoundCornersModifier),
        RoundCornersModifier.prototype.initModifierProperties = function(e, t) {
            this.getValue = this.processKeys,
            this.rd = PropertyFactory.getProp(e, t.r, 0, null, this),
            this._isAnimated = !!this.rd.effectsSequence.length
        }
        ,
        RoundCornersModifier.prototype.processPath = function(e, t) {
            var n, r = shapePool.newElement();
            r.c = e.c;
            var i, a, o, s, l, u, c, h, p, f, d, m, g = e._length, v = 0;
            for (n = 0; n < g; n += 1)
                i = e.v[n],
                o = e.o[n],
                a = e.i[n],
                i[0] === o[0] && i[1] === o[1] && i[0] === a[0] && i[1] === a[1] ? 0 !== n && n !== g - 1 || e.c ? (s = 0 === n ? e.v[g - 1] : e.v[n - 1],
                u = (l = Math.sqrt(Math.pow(i[0] - s[0], 2) + Math.pow(i[1] - s[1], 2))) ? Math.min(l / 2, t) / l : 0,
                c = d = i[0] + (s[0] - i[0]) * u,
                h = m = i[1] - (i[1] - s[1]) * u,
                p = c - (c - i[0]) * roundCorner,
                f = h - (h - i[1]) * roundCorner,
                r.setTripleAt(c, h, p, f, d, m, v),
                v += 1,
                s = n === g - 1 ? e.v[0] : e.v[n + 1],
                u = (l = Math.sqrt(Math.pow(i[0] - s[0], 2) + Math.pow(i[1] - s[1], 2))) ? Math.min(l / 2, t) / l : 0,
                c = p = i[0] + (s[0] - i[0]) * u,
                h = f = i[1] + (s[1] - i[1]) * u,
                d = c - (c - i[0]) * roundCorner,
                m = h - (h - i[1]) * roundCorner,
                r.setTripleAt(c, h, p, f, d, m, v),
                v += 1) : (r.setTripleAt(i[0], i[1], o[0], o[1], a[0], a[1], v),
                v += 1) : (r.setTripleAt(e.v[n][0], e.v[n][1], e.o[n][0], e.o[n][1], e.i[n][0], e.i[n][1], v),
                v += 1);
            return r
        }
        ,
        RoundCornersModifier.prototype.processShapes = function(e) {
            var t, n, r, i, a, o, s = this.shapes.length, l = this.rd.v;
            if (0 !== l)
                for (n = 0; n < s; n += 1) {
                    if (o = (a = this.shapes[n]).localShapeCollection,
                    a.shape._mdf || this._mdf || e)
                        for (o.releaseShapes(),
                        a.shape._mdf = !0,
                        t = a.shape.paths.shapes,
                        i = a.shape.paths._length,
                        r = 0; r < i; r += 1)
                            o.addShape(this.processPath(t[r], l));
                    a.shape.paths = a.localShapeCollection
                }
            this.dynamicProperties.length || (this._mdf = !1)
        }
        ,
        ShapeModifiers.registerModifier("rd", RoundCornersModifier),
        extendPrototype([ShapeModifier], PuckerAndBloatModifier),
        PuckerAndBloatModifier.prototype.initModifierProperties = function(e, t) {
            this.getValue = this.processKeys,
            this.amount = PropertyFactory.getProp(e, t.a, 0, null, this),
            this._isAnimated = !!this.amount.effectsSequence.length
        }
        ,
        PuckerAndBloatModifier.prototype.processPath = function(e, t) {
            var n = t / 100
              , r = [0, 0]
              , i = e._length
              , a = 0;
            for (a = 0; a < i; a += 1)
                r[0] += e.v[a][0],
                r[1] += e.v[a][1];
            r[0] /= i,
            r[1] /= i;
            var o, s, l, u, c, h, p = shapePool.newElement();
            for (p.c = e.c,
            a = 0; a < i; a += 1)
                o = e.v[a][0] + (r[0] - e.v[a][0]) * n,
                s = e.v[a][1] + (r[1] - e.v[a][1]) * n,
                l = e.o[a][0] + (r[0] - e.o[a][0]) * -n,
                u = e.o[a][1] + (r[1] - e.o[a][1]) * -n,
                c = e.i[a][0] + (r[0] - e.i[a][0]) * -n,
                h = e.i[a][1] + (r[1] - e.i[a][1]) * -n,
                p.setTripleAt(o, s, l, u, c, h, a);
            return p
        }
        ,
        PuckerAndBloatModifier.prototype.processShapes = function(e) {
            var t, n, r, i, a, o, s = this.shapes.length, l = this.amount.v;
            if (0 !== l)
                for (n = 0; n < s; n += 1) {
                    if (o = (a = this.shapes[n]).localShapeCollection,
                    a.shape._mdf || this._mdf || e)
                        for (o.releaseShapes(),
                        a.shape._mdf = !0,
                        t = a.shape.paths.shapes,
                        i = a.shape.paths._length,
                        r = 0; r < i; r += 1)
                            o.addShape(this.processPath(t[r], l));
                    a.shape.paths = a.localShapeCollection
                }
            this.dynamicProperties.length || (this._mdf = !1)
        }
        ,
        ShapeModifiers.registerModifier("pb", PuckerAndBloatModifier),
        extendPrototype([ShapeModifier], RepeaterModifier),
        RepeaterModifier.prototype.initModifierProperties = function(e, t) {
            this.getValue = this.processKeys,
            this.c = PropertyFactory.getProp(e, t.c, 0, null, this),
            this.o = PropertyFactory.getProp(e, t.o, 0, null, this),
            this.tr = TransformPropertyFactory.getTransformProperty(e, t.tr, this),
            this.so = PropertyFactory.getProp(e, t.tr.so, 0, .01, this),
            this.eo = PropertyFactory.getProp(e, t.tr.eo, 0, .01, this),
            this.data = t,
            this.dynamicProperties.length || this.getValue(!0),
            this._isAnimated = !!this.dynamicProperties.length,
            this.pMatrix = new Matrix,
            this.rMatrix = new Matrix,
            this.sMatrix = new Matrix,
            this.tMatrix = new Matrix,
            this.matrix = new Matrix
        }
        ,
        RepeaterModifier.prototype.applyTransforms = function(e, t, n, r, i, a) {
            var o = a ? -1 : 1
              , s = r.s.v[0] + (1 - r.s.v[0]) * (1 - i)
              , l = r.s.v[1] + (1 - r.s.v[1]) * (1 - i);
            e.translate(r.p.v[0] * o * i, r.p.v[1] * o * i, r.p.v[2]),
            t.translate(-r.a.v[0], -r.a.v[1], r.a.v[2]),
            t.rotate(-r.r.v * o * i),
            t.translate(r.a.v[0], r.a.v[1], r.a.v[2]),
            n.translate(-r.a.v[0], -r.a.v[1], r.a.v[2]),
            n.scale(a ? 1 / s : s, a ? 1 / l : l),
            n.translate(r.a.v[0], r.a.v[1], r.a.v[2])
        }
        ,
        RepeaterModifier.prototype.init = function(e, t, n, r) {
            for (this.elem = e,
            this.arr = t,
            this.pos = n,
            this.elemsData = r,
            this._currentCopies = 0,
            this._elements = [],
            this._groups = [],
            this.frameId = -1,
            this.initDynamicPropertyContainer(e),
            this.initModifierProperties(e, t[n]); n > 0; )
                n -= 1,
                this._elements.unshift(t[n]);
            this.dynamicProperties.length ? this.k = !0 : this.getValue(!0)
        }
        ,
        RepeaterModifier.prototype.resetElements = function(e) {
            var t, n = e.length;
            for (t = 0; t < n; t += 1)
                e[t]._processed = !1,
                "gr" === e[t].ty && this.resetElements(e[t].it)
        }
        ,
        RepeaterModifier.prototype.cloneElements = function(e) {
            var t = JSON.parse(JSON.stringify(e));
            return this.resetElements(t),
            t
        }
        ,
        RepeaterModifier.prototype.changeGroupRender = function(e, t) {
            var n, r = e.length;
            for (n = 0; n < r; n += 1)
                e[n]._render = t,
                "gr" === e[n].ty && this.changeGroupRender(e[n].it, t)
        }
        ,
        RepeaterModifier.prototype.processShapes = function(e) {
            var t, n, r, i, a, o = !1;
            if (this._mdf || e) {
                var s, l = Math.ceil(this.c.v);
                if (this._groups.length < l) {
                    for (; this._groups.length < l; ) {
                        var u = {
                            it: this.cloneElements(this._elements),
                            ty: "gr"
                        };
                        u.it.push({
                            a: {
                                a: 0,
                                ix: 1,
                                k: [0, 0]
                            },
                            nm: "Transform",
                            o: {
                                a: 0,
                                ix: 7,
                                k: 100
                            },
                            p: {
                                a: 0,
                                ix: 2,
                                k: [0, 0]
                            },
                            r: {
                                a: 1,
                                ix: 6,
                                k: [{
                                    s: 0,
                                    e: 0,
                                    t: 0
                                }, {
                                    s: 0,
                                    e: 0,
                                    t: 1
                                }]
                            },
                            s: {
                                a: 0,
                                ix: 3,
                                k: [100, 100]
                            },
                            sa: {
                                a: 0,
                                ix: 5,
                                k: 0
                            },
                            sk: {
                                a: 0,
                                ix: 4,
                                k: 0
                            },
                            ty: "tr"
                        }),
                        this.arr.splice(0, 0, u),
                        this._groups.splice(0, 0, u),
                        this._currentCopies += 1
                    }
                    this.elem.reloadShapes(),
                    o = !0
                }
                for (a = 0,
                r = 0; r <= this._groups.length - 1; r += 1) {
                    if (s = a < l,
                    this._groups[r]._render = s,
                    this.changeGroupRender(this._groups[r].it, s),
                    !s) {
                        var c = this.elemsData[r].it
                          , h = c[c.length - 1];
                        0 !== h.transform.op.v ? (h.transform.op._mdf = !0,
                        h.transform.op.v = 0) : h.transform.op._mdf = !1
                    }
                    a += 1
                }
                this._currentCopies = l;
                var p = this.o.v
                  , f = p % 1
                  , d = p > 0 ? Math.floor(p) : Math.ceil(p)
                  , m = this.pMatrix.props
                  , g = this.rMatrix.props
                  , v = this.sMatrix.props;
                this.pMatrix.reset(),
                this.rMatrix.reset(),
                this.sMatrix.reset(),
                this.tMatrix.reset(),
                this.matrix.reset();
                var y, b, x = 0;
                if (p > 0) {
                    for (; x < d; )
                        this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, !1),
                        x += 1;
                    f && (this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, f, !1),
                    x += f)
                } else if (p < 0) {
                    for (; x > d; )
                        this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, !0),
                        x -= 1;
                    f && (this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, -f, !0),
                    x -= f)
                }
                for (r = 1 === this.data.m ? 0 : this._currentCopies - 1,
                i = 1 === this.data.m ? 1 : -1,
                a = this._currentCopies; a; ) {
                    if (b = (n = (t = this.elemsData[r].it)[t.length - 1].transform.mProps.v.props).length,
                    t[t.length - 1].transform.mProps._mdf = !0,
                    t[t.length - 1].transform.op._mdf = !0,
                    t[t.length - 1].transform.op.v = 1 === this._currentCopies ? this.so.v : this.so.v + (this.eo.v - this.so.v) * (r / (this._currentCopies - 1)),
                    0 !== x) {
                        for ((0 !== r && 1 === i || r !== this._currentCopies - 1 && -1 === i) && this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, !1),
                        this.matrix.transform(g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], g[9], g[10], g[11], g[12], g[13], g[14], g[15]),
                        this.matrix.transform(v[0], v[1], v[2], v[3], v[4], v[5], v[6], v[7], v[8], v[9], v[10], v[11], v[12], v[13], v[14], v[15]),
                        this.matrix.transform(m[0], m[1], m[2], m[3], m[4], m[5], m[6], m[7], m[8], m[9], m[10], m[11], m[12], m[13], m[14], m[15]),
                        y = 0; y < b; y += 1)
                            n[y] = this.matrix.props[y];
                        this.matrix.reset()
                    } else
                        for (this.matrix.reset(),
                        y = 0; y < b; y += 1)
                            n[y] = this.matrix.props[y];
                    x += 1,
                    a -= 1,
                    r += i
                }
            } else
                for (a = this._currentCopies,
                r = 0,
                i = 1; a; )
                    n = (t = this.elemsData[r].it)[t.length - 1].transform.mProps.v.props,
                    t[t.length - 1].transform.mProps._mdf = !1,
                    t[t.length - 1].transform.op._mdf = !1,
                    a -= 1,
                    r += i;
            return o
        }
        ,
        RepeaterModifier.prototype.addShape = function() {}
        ,
        ShapeModifiers.registerModifier("rp", RepeaterModifier),
        ShapeCollection.prototype.addShape = function(e) {
            this._length === this._maxLength && (this.shapes = this.shapes.concat(createSizedArray(this._maxLength)),
            this._maxLength *= 2),
            this.shapes[this._length] = e,
            this._length += 1
        }
        ,
        ShapeCollection.prototype.releaseShapes = function() {
            var e;
            for (e = 0; e < this._length; e += 1)
                shapePool.release(this.shapes[e]);
            this._length = 0
        }
        ,
        DashProperty.prototype.getValue = function(e) {
            if ((this.elem.globalData.frameId !== this.frameId || e) && (this.frameId = this.elem.globalData.frameId,
            this.iterateDynamicProperties(),
            this._mdf = this._mdf || e,
            this._mdf)) {
                var t = 0
                  , n = this.dataProps.length;
                for ("svg" === this.renderer && (this.dashStr = ""),
                t = 0; t < n; t += 1)
                    "o" !== this.dataProps[t].n ? "svg" === this.renderer ? this.dashStr += " " + this.dataProps[t].p.v : this.dashArray[t] = this.dataProps[t].p.v : this.dashoffset[0] = this.dataProps[t].p.v
            }
        }
        ,
        extendPrototype([DynamicPropertyContainer], DashProperty),
        GradientProperty.prototype.comparePoints = function(e, t) {
            for (var n = 0, r = this.o.length / 2; n < r; ) {
                if (Math.abs(e[4 * n] - e[4 * t + 2 * n]) > .01)
                    return !1;
                n += 1
            }
            return !0
        }
        ,
        GradientProperty.prototype.checkCollapsable = function() {
            if (this.o.length / 2 !== this.c.length / 4)
                return !1;
            if (this.data.k.k[0].s)
                for (var e = 0, t = this.data.k.k.length; e < t; ) {
                    if (!this.comparePoints(this.data.k.k[e].s, this.data.p))
                        return !1;
                    e += 1
                }
            else if (!this.comparePoints(this.data.k.k, this.data.p))
                return !1;
            return !0
        }
        ,
        GradientProperty.prototype.getValue = function(e) {
            if (this.prop.getValue(),
            this._mdf = !1,
            this._cmdf = !1,
            this._omdf = !1,
            this.prop._mdf || e) {
                var t, n, r, i = 4 * this.data.p;
                for (t = 0; t < i; t += 1)
                    n = t % 4 === 0 ? 100 : 255,
                    r = Math.round(this.prop.v[t] * n),
                    this.c[t] !== r && (this.c[t] = r,
                    this._cmdf = !e);
                if (this.o.length)
                    for (i = this.prop.v.length,
                    t = 4 * this.data.p; t < i; t += 1)
                        n = t % 2 === 0 ? 100 : 1,
                        r = t % 2 === 0 ? Math.round(100 * this.prop.v[t]) : this.prop.v[t],
                        this.o[t - 4 * this.data.p] !== r && (this.o[t - 4 * this.data.p] = r,
                        this._omdf = !e);
                this._mdf = !e
            }
        }
        ,
        extendPrototype([DynamicPropertyContainer], GradientProperty);
        var buildShapeString = function(e, t, n, r) {
            if (0 === t)
                return "";
            var i, a = e.o, o = e.i, s = e.v, l = " M" + r.applyToPointStringified(s[0][0], s[0][1]);
            for (i = 1; i < t; i += 1)
                l += " C" + r.applyToPointStringified(a[i - 1][0], a[i - 1][1]) + " " + r.applyToPointStringified(o[i][0], o[i][1]) + " " + r.applyToPointStringified(s[i][0], s[i][1]);
            return n && t && (l += " C" + r.applyToPointStringified(a[i - 1][0], a[i - 1][1]) + " " + r.applyToPointStringified(o[0][0], o[0][1]) + " " + r.applyToPointStringified(s[0][0], s[0][1]),
            l += "z"),
            l
        }
          , audioControllerFactory = function() {
            function e(e) {
                this.audios = [],
                this.audioFactory = e,
                this._volume = 1,
                this._isMuted = !1
            }
            return e.prototype = {
                addAudio: function(e) {
                    this.audios.push(e)
                },
                pause: function() {
                    var e, t = this.audios.length;
                    for (e = 0; e < t; e += 1)
                        this.audios[e].pause()
                },
                resume: function() {
                    var e, t = this.audios.length;
                    for (e = 0; e < t; e += 1)
                        this.audios[e].resume()
                },
                setRate: function(e) {
                    var t, n = this.audios.length;
                    for (t = 0; t < n; t += 1)
                        this.audios[t].setRate(e)
                },
                createAudio: function(e) {
                    return this.audioFactory ? this.audioFactory(e) : Howl ? new Howl({
                        src: [e]
                    }) : {
                        isPlaying: !1,
                        play: function() {
                            this.isPlaying = !0
                        },
                        seek: function() {
                            this.isPlaying = !1
                        },
                        playing: function() {},
                        rate: function() {},
                        setVolume: function() {}
                    }
                },
                setAudioFactory: function(e) {
                    this.audioFactory = e
                },
                setVolume: function(e) {
                    this._volume = e,
                    this._updateVolume()
                },
                mute: function() {
                    this._isMuted = !0,
                    this._updateVolume()
                },
                unmute: function() {
                    this._isMuted = !1,
                    this._updateVolume()
                },
                getVolume: function() {
                    return this._volume
                },
                _updateVolume: function() {
                    var e, t = this.audios.length;
                    for (e = 0; e < t; e += 1)
                        this.audios[e].volume(this._volume * (this._isMuted ? 0 : 1))
                }
            },
            function() {
                return new e
            }
        }()
          , ImagePreloader = function() {
            var e = function() {
                var e = createTag("canvas");
                e.width = 1,
                e.height = 1;
                var t = e.getContext("2d");
                return t.fillStyle = "rgba(0,0,0,0)",
                t.fillRect(0, 0, 1, 1),
                e
            }();
            function t() {
                this.loadedAssets += 1,
                this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages && this.imagesLoadedCb && this.imagesLoadedCb(null)
            }
            function n() {
                this.loadedFootagesCount += 1,
                this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages && this.imagesLoadedCb && this.imagesLoadedCb(null)
            }
            function r(e, t, n) {
                var r = "";
                if (e.e)
                    r = e.p;
                else if (t) {
                    var i = e.p;
                    -1 !== i.indexOf("images/") && (i = i.split("/")[1]),
                    r = t + i
                } else
                    r = n,
                    r += e.u ? e.u : "",
                    r += e.p;
                return r
            }
            function i(e) {
                var t = 0
                  , n = setInterval(function() {
                    (e.getBBox().width || t > 500) && (this._imageLoaded(),
                    clearInterval(n)),
                    t += 1
                }
                .bind(this), 50)
            }
            function a(e) {
                var t = {
                    assetData: e
                }
                  , n = r(e, this.assetsPath, this.path);
                return assetLoader.load(n, function(e) {
                    t.img = e,
                    this._footageLoaded()
                }
                .bind(this), function() {
                    t.img = {},
                    this._footageLoaded()
                }
                .bind(this)),
                t
            }
            function o() {
                this._imageLoaded = t.bind(this),
                this._footageLoaded = n.bind(this),
                this.testImageLoaded = i.bind(this),
                this.createFootageData = a.bind(this),
                this.assetsPath = "",
                this.path = "",
                this.totalImages = 0,
                this.totalFootages = 0,
                this.loadedAssets = 0,
                this.loadedFootagesCount = 0,
                this.imagesLoadedCb = null,
                this.images = []
            }
            return o.prototype = {
                loadAssets: function(e, t) {
                    var n;
                    this.imagesLoadedCb = t;
                    var r = e.length;
                    for (n = 0; n < r; n += 1)
                        e[n].layers || (e[n].t && "seq" !== e[n].t ? 3 === e[n].t && (this.totalFootages += 1,
                        this.images.push(this.createFootageData(e[n]))) : (this.totalImages += 1,
                        this.images.push(this._createImageData(e[n]))))
                },
                setAssetsPath: function(e) {
                    this.assetsPath = e || ""
                },
                setPath: function(e) {
                    this.path = e || ""
                },
                loadedImages: function() {
                    return this.totalImages === this.loadedAssets
                },
                loadedFootages: function() {
                    return this.totalFootages === this.loadedFootagesCount
                },
                destroy: function() {
                    this.imagesLoadedCb = null,
                    this.images.length = 0
                },
                getAsset: function(e) {
                    for (var t = 0, n = this.images.length; t < n; ) {
                        if (this.images[t].assetData === e)
                            return this.images[t].img;
                        t += 1
                    }
                    return null
                },
                createImgData: function(t) {
                    var n = r(t, this.assetsPath, this.path)
                      , i = createTag("img");
                    i.crossOrigin = "anonymous",
                    i.addEventListener("load", this._imageLoaded, !1),
                    i.addEventListener("error", function() {
                        a.img = e,
                        this._imageLoaded()
                    }
                    .bind(this), !1),
                    i.src = n;
                    var a = {
                        img: i,
                        assetData: t
                    };
                    return a
                },
                createImageData: function(t) {
                    var n = r(t, this.assetsPath, this.path)
                      , i = createNS("image");
                    isSafari ? this.testImageLoaded(i) : i.addEventListener("load", this._imageLoaded, !1),
                    i.addEventListener("error", function() {
                        a.img = e,
                        this._imageLoaded()
                    }
                    .bind(this), !1),
                    i.setAttributeNS("http://www.w3.org/1999/xlink", "href", n),
                    this._elementHelper.append ? this._elementHelper.append(i) : this._elementHelper.appendChild(i);
                    var a = {
                        img: i,
                        assetData: t
                    };
                    return a
                },
                imageLoaded: t,
                footageLoaded: n,
                setCacheType: function(e, t) {
                    "svg" === e ? (this._elementHelper = t,
                    this._createImageData = this.createImageData.bind(this)) : this._createImageData = this.createImgData.bind(this)
                }
            },
            o
        }()
          , featureSupport = function() {
            var e = {
                maskType: !0
            };
            return (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\/\d./i.test(navigator.userAgent)) && (e.maskType = !1),
            e
        }()
          , filtersFactory = function() {
            var e = {
                createFilter: function(e, t) {
                    var n = createNS("filter");
                    return n.setAttribute("id", e),
                    !0 !== t && (n.setAttribute("filterUnits", "objectBoundingBox"),
                    n.setAttribute("x", "0%"),
                    n.setAttribute("y", "0%"),
                    n.setAttribute("width", "100%"),
                    n.setAttribute("height", "100%")),
                    n
                },
                createAlphaToLuminanceFilter: function() {
                    var e = createNS("feColorMatrix");
                    return e.setAttribute("type", "matrix"),
                    e.setAttribute("color-interpolation-filters", "sRGB"),
                    e.setAttribute("values", "0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1"),
                    e
                }
            };
            return e
        }()
          , assetLoader = function() {
            function e(e) {
                return e.response && "object" === typeof e.response ? e.response : e.response && "string" === typeof e.response ? JSON.parse(e.response) : e.responseText ? JSON.parse(e.responseText) : null
            }
            return {
                load: function(t, n, r) {
                    var i, a = new XMLHttpRequest;
                    try {
                        a.responseType = "json"
                    } catch (o) {}
                    a.onreadystatechange = function() {
                        if (4 === a.readyState)
                            if (200 === a.status)
                                i = e(a),
                                n(i);
                            else
                                try {
                                    i = e(a),
                                    n(i)
                                } catch (o) {
                                    r && r(o)
                                }
                    }
                    ,
                    a.open("GET", t, !0),
                    a.send()
                }
            }
        }();
        function TextAnimatorProperty(e, t, n) {
            this._isFirstFrame = !0,
            this._hasMaskedPath = !1,
            this._frameId = -1,
            this._textData = e,
            this._renderType = t,
            this._elem = n,
            this._animatorsData = createSizedArray(this._textData.a.length),
            this._pathData = {},
            this._moreOptions = {
                alignment: {}
            },
            this.renderedLetters = [],
            this.lettersChangedFlag = !1,
            this.initDynamicPropertyContainer(n)
        }
        function TextAnimatorDataProperty(e, t, n) {
            var r = {
                propType: !1
            }
              , i = PropertyFactory.getProp
              , a = t.a;
            this.a = {
                r: a.r ? i(e, a.r, 0, degToRads, n) : r,
                rx: a.rx ? i(e, a.rx, 0, degToRads, n) : r,
                ry: a.ry ? i(e, a.ry, 0, degToRads, n) : r,
                sk: a.sk ? i(e, a.sk, 0, degToRads, n) : r,
                sa: a.sa ? i(e, a.sa, 0, degToRads, n) : r,
                s: a.s ? i(e, a.s, 1, .01, n) : r,
                a: a.a ? i(e, a.a, 1, 0, n) : r,
                o: a.o ? i(e, a.o, 0, .01, n) : r,
                p: a.p ? i(e, a.p, 1, 0, n) : r,
                sw: a.sw ? i(e, a.sw, 0, 0, n) : r,
                sc: a.sc ? i(e, a.sc, 1, 0, n) : r,
                fc: a.fc ? i(e, a.fc, 1, 0, n) : r,
                fh: a.fh ? i(e, a.fh, 0, 0, n) : r,
                fs: a.fs ? i(e, a.fs, 0, .01, n) : r,
                fb: a.fb ? i(e, a.fb, 0, .01, n) : r,
                t: a.t ? i(e, a.t, 0, 0, n) : r
            },
            this.s = TextSelectorProp.getTextSelectorProp(e, t.s, n),
            this.s.t = t.s.t
        }
        function LetterProps(e, t, n, r, i, a) {
            this.o = e,
            this.sw = t,
            this.sc = n,
            this.fc = r,
            this.m = i,
            this.p = a,
            this._mdf = {
                o: !0,
                sw: !!t,
                sc: !!n,
                fc: !!r,
                m: !0,
                p: !0
            }
        }
        function TextProperty(e, t) {
            this._frameId = initialDefaultFrame,
            this.pv = "",
            this.v = "",
            this.kf = !1,
            this._isFirstFrame = !0,
            this._mdf = !1,
            this.data = t,
            this.elem = e,
            this.comp = this.elem.comp,
            this.keysIndex = 0,
            this.canResize = !1,
            this.minimumFontSize = 1,
            this.effectsSequence = [],
            this.currentData = {
                ascent: 0,
                boxWidth: this.defaultBoxWidth,
                f: "",
                fStyle: "",
                fWeight: "",
                fc: "",
                j: "",
                justifyOffset: "",
                l: [],
                lh: 0,
                lineWidths: [],
                ls: "",
                of: "",
                s: "",
                sc: "",
                sw: 0,
                t: 0,
                tr: 0,
                sz: 0,
                ps: null,
                fillColorAnim: !1,
                strokeColorAnim: !1,
                strokeWidthAnim: !1,
                yOffset: 0,
                finalSize: 0,
                finalText: [],
                finalLineHeight: 0,
                __complete: !1
            },
            this.copyData(this.currentData, this.data.d.k[0].s),
            this.searchProperty() || this.completeTextData(this.currentData)
        }
        TextAnimatorProperty.prototype.searchProperties = function() {
            var e, t, n = this._textData.a.length, r = PropertyFactory.getProp;
            for (e = 0; e < n; e += 1)
                t = this._textData.a[e],
                this._animatorsData[e] = new TextAnimatorDataProperty(this._elem,t,this);
            this._textData.p && "m"in this._textData.p ? (this._pathData = {
                f: r(this._elem, this._textData.p.f, 0, 0, this),
                l: r(this._elem, this._textData.p.l, 0, 0, this),
                r: this._textData.p.r,
                m: this._elem.maskManager.getMaskProperty(this._textData.p.m)
            },
            this._hasMaskedPath = !0) : this._hasMaskedPath = !1,
            this._moreOptions.alignment = r(this._elem, this._textData.m.a, 1, 0, this)
        }
        ,
        TextAnimatorProperty.prototype.getMeasures = function(e, t) {
            if (this.lettersChangedFlag = t,
            this._mdf || this._isFirstFrame || t || this._hasMaskedPath && this._pathData.m._mdf) {
                this._isFirstFrame = !1;
                var n, r, i, a, o, s, l, u, c, h, p, f, d, m, g, v, y, b, x, w = this._moreOptions.alignment.v, _ = this._animatorsData, S = this._textData, E = this.mHelper, M = this._renderType, T = this.renderedLetters.length, A = e.l;
                if (this._hasMaskedPath) {
                    if (x = this._pathData.m,
                    !this._pathData.n || this._pathData._mdf) {
                        var P, C = x.v;
                        for (this._pathData.r && (C = C.reverse()),
                        o = {
                            tLength: 0,
                            segments: []
                        },
                        a = C._length - 1,
                        v = 0,
                        i = 0; i < a; i += 1)
                            P = bez.buildBezierData(C.v[i], C.v[i + 1], [C.o[i][0] - C.v[i][0], C.o[i][1] - C.v[i][1]], [C.i[i + 1][0] - C.v[i + 1][0], C.i[i + 1][1] - C.v[i + 1][1]]),
                            o.tLength += P.segmentLength,
                            o.segments.push(P),
                            v += P.segmentLength;
                        i = a,
                        x.v.c && (P = bez.buildBezierData(C.v[i], C.v[0], [C.o[i][0] - C.v[i][0], C.o[i][1] - C.v[i][1]], [C.i[0][0] - C.v[0][0], C.i[0][1] - C.v[0][1]]),
                        o.tLength += P.segmentLength,
                        o.segments.push(P),
                        v += P.segmentLength),
                        this._pathData.pi = o
                    }
                    if (o = this._pathData.pi,
                    s = this._pathData.f.v,
                    p = 0,
                    h = 1,
                    u = 0,
                    c = !0,
                    m = o.segments,
                    s < 0 && x.v.c)
                        for (o.tLength < Math.abs(s) && (s = -Math.abs(s) % o.tLength),
                        h = (d = m[p = m.length - 1].points).length - 1; s < 0; )
                            s += d[h].partialLength,
                            (h -= 1) < 0 && (h = (d = m[p -= 1].points).length - 1);
                    f = (d = m[p].points)[h - 1],
                    g = (l = d[h]).partialLength
                }
                a = A.length,
                n = 0,
                r = 0;
                var L, R, k, D, I, O = 1.2 * e.finalSize * .714, F = !0;
                k = _.length;
                var N, B, z, G, H, V, j, U, W, q, X, Y, Z = -1, $ = s, J = p, K = h, Q = -1, ee = "", te = this.defaultPropsArray;
                if (2 === e.j || 1 === e.j) {
                    var ne = 0
                      , re = 0
                      , ie = 2 === e.j ? -.5 : -1
                      , ae = 0
                      , oe = !0;
                    for (i = 0; i < a; i += 1)
                        if (A[i].n) {
                            for (ne && (ne += re); ae < i; )
                                A[ae].animatorJustifyOffset = ne,
                                ae += 1;
                            ne = 0,
                            oe = !0
                        } else {
                            for (R = 0; R < k; R += 1)
                                (L = _[R].a).t.propType && (oe && 2 === e.j && (re += L.t.v * ie),
                                (I = _[R].s.getMult(A[i].anIndexes[R], S.a[R].s.totalChars)).length ? ne += L.t.v * I[0] * ie : ne += L.t.v * I * ie);
                            oe = !1
                        }
                    for (ne && (ne += re); ae < i; )
                        A[ae].animatorJustifyOffset = ne,
                        ae += 1
                }
                for (i = 0; i < a; i += 1) {
                    if (E.reset(),
                    G = 1,
                    A[i].n)
                        n = 0,
                        r += e.yOffset,
                        r += F ? 1 : 0,
                        s = $,
                        F = !1,
                        this._hasMaskedPath && (h = K,
                        f = (d = m[p = J].points)[h - 1],
                        g = (l = d[h]).partialLength,
                        u = 0),
                        ee = "",
                        X = "",
                        W = "",
                        Y = "",
                        te = this.defaultPropsArray;
                    else {
                        if (this._hasMaskedPath) {
                            if (Q !== A[i].line) {
                                switch (e.j) {
                                case 1:
                                    s += v - e.lineWidths[A[i].line];
                                    break;
                                case 2:
                                    s += (v - e.lineWidths[A[i].line]) / 2
                                }
                                Q = A[i].line
                            }
                            Z !== A[i].ind && (A[Z] && (s += A[Z].extra),
                            s += A[i].an / 2,
                            Z = A[i].ind),
                            s += w[0] * A[i].an * .005;
                            var se = 0;
                            for (R = 0; R < k; R += 1)
                                (L = _[R].a).p.propType && ((I = _[R].s.getMult(A[i].anIndexes[R], S.a[R].s.totalChars)).length ? se += L.p.v[0] * I[0] : se += L.p.v[0] * I),
                                L.a.propType && ((I = _[R].s.getMult(A[i].anIndexes[R], S.a[R].s.totalChars)).length ? se += L.a.v[0] * I[0] : se += L.a.v[0] * I);
                            for (c = !0; c; )
                                u + g >= s + se || !d ? (y = (s + se - u) / l.partialLength,
                                B = f.point[0] + (l.point[0] - f.point[0]) * y,
                                z = f.point[1] + (l.point[1] - f.point[1]) * y,
                                E.translate(-w[0] * A[i].an * .005, -w[1] * O * .01),
                                c = !1) : d && (u += l.partialLength,
                                (h += 1) >= d.length && (h = 0,
                                m[p += 1] ? d = m[p].points : x.v.c ? (h = 0,
                                d = m[p = 0].points) : (u -= l.partialLength,
                                d = null)),
                                d && (f = l,
                                g = (l = d[h]).partialLength));
                            N = A[i].an / 2 - A[i].add,
                            E.translate(-N, 0, 0)
                        } else
                            N = A[i].an / 2 - A[i].add,
                            E.translate(-N, 0, 0),
                            E.translate(-w[0] * A[i].an * .005, -w[1] * O * .01, 0);
                        for (R = 0; R < k; R += 1)
                            (L = _[R].a).t.propType && (I = _[R].s.getMult(A[i].anIndexes[R], S.a[R].s.totalChars),
                            0 === n && 0 === e.j || (this._hasMaskedPath ? I.length ? s += L.t.v * I[0] : s += L.t.v * I : I.length ? n += L.t.v * I[0] : n += L.t.v * I));
                        for (e.strokeWidthAnim && (V = e.sw || 0),
                        e.strokeColorAnim && (H = e.sc ? [e.sc[0], e.sc[1], e.sc[2]] : [0, 0, 0]),
                        e.fillColorAnim && e.fc && (j = [e.fc[0], e.fc[1], e.fc[2]]),
                        R = 0; R < k; R += 1)
                            (L = _[R].a).a.propType && ((I = _[R].s.getMult(A[i].anIndexes[R], S.a[R].s.totalChars)).length ? E.translate(-L.a.v[0] * I[0], -L.a.v[1] * I[1], L.a.v[2] * I[2]) : E.translate(-L.a.v[0] * I, -L.a.v[1] * I, L.a.v[2] * I));
                        for (R = 0; R < k; R += 1)
                            (L = _[R].a).s.propType && ((I = _[R].s.getMult(A[i].anIndexes[R], S.a[R].s.totalChars)).length ? E.scale(1 + (L.s.v[0] - 1) * I[0], 1 + (L.s.v[1] - 1) * I[1], 1) : E.scale(1 + (L.s.v[0] - 1) * I, 1 + (L.s.v[1] - 1) * I, 1));
                        for (R = 0; R < k; R += 1) {
                            if (L = _[R].a,
                            I = _[R].s.getMult(A[i].anIndexes[R], S.a[R].s.totalChars),
                            L.sk.propType && (I.length ? E.skewFromAxis(-L.sk.v * I[0], L.sa.v * I[1]) : E.skewFromAxis(-L.sk.v * I, L.sa.v * I)),
                            L.r.propType && (I.length ? E.rotateZ(-L.r.v * I[2]) : E.rotateZ(-L.r.v * I)),
                            L.ry.propType && (I.length ? E.rotateY(L.ry.v * I[1]) : E.rotateY(L.ry.v * I)),
                            L.rx.propType && (I.length ? E.rotateX(L.rx.v * I[0]) : E.rotateX(L.rx.v * I)),
                            L.o.propType && (I.length ? G += (L.o.v * I[0] - G) * I[0] : G += (L.o.v * I - G) * I),
                            e.strokeWidthAnim && L.sw.propType && (I.length ? V += L.sw.v * I[0] : V += L.sw.v * I),
                            e.strokeColorAnim && L.sc.propType)
                                for (U = 0; U < 3; U += 1)
                                    I.length ? H[U] += (L.sc.v[U] - H[U]) * I[0] : H[U] += (L.sc.v[U] - H[U]) * I;
                            if (e.fillColorAnim && e.fc) {
                                if (L.fc.propType)
                                    for (U = 0; U < 3; U += 1)
                                        I.length ? j[U] += (L.fc.v[U] - j[U]) * I[0] : j[U] += (L.fc.v[U] - j[U]) * I;
                                L.fh.propType && (j = I.length ? addHueToRGB(j, L.fh.v * I[0]) : addHueToRGB(j, L.fh.v * I)),
                                L.fs.propType && (j = I.length ? addSaturationToRGB(j, L.fs.v * I[0]) : addSaturationToRGB(j, L.fs.v * I)),
                                L.fb.propType && (j = I.length ? addBrightnessToRGB(j, L.fb.v * I[0]) : addBrightnessToRGB(j, L.fb.v * I))
                            }
                        }
                        for (R = 0; R < k; R += 1)
                            (L = _[R].a).p.propType && (I = _[R].s.getMult(A[i].anIndexes[R], S.a[R].s.totalChars),
                            this._hasMaskedPath ? I.length ? E.translate(0, L.p.v[1] * I[0], -L.p.v[2] * I[1]) : E.translate(0, L.p.v[1] * I, -L.p.v[2] * I) : I.length ? E.translate(L.p.v[0] * I[0], L.p.v[1] * I[1], -L.p.v[2] * I[2]) : E.translate(L.p.v[0] * I, L.p.v[1] * I, -L.p.v[2] * I));
                        if (e.strokeWidthAnim && (W = V < 0 ? 0 : V),
                        e.strokeColorAnim && (q = "rgb(" + Math.round(255 * H[0]) + "," + Math.round(255 * H[1]) + "," + Math.round(255 * H[2]) + ")"),
                        e.fillColorAnim && e.fc && (X = "rgb(" + Math.round(255 * j[0]) + "," + Math.round(255 * j[1]) + "," + Math.round(255 * j[2]) + ")"),
                        this._hasMaskedPath) {
                            if (E.translate(0, -e.ls),
                            E.translate(0, w[1] * O * .01 + r, 0),
                            S.p.p) {
                                b = (l.point[1] - f.point[1]) / (l.point[0] - f.point[0]);
                                var le = 180 * Math.atan(b) / Math.PI;
                                l.point[0] < f.point[0] && (le += 180),
                                E.rotate(-le * Math.PI / 180)
                            }
                            E.translate(B, z, 0),
                            s -= w[0] * A[i].an * .005,
                            A[i + 1] && Z !== A[i + 1].ind && (s += A[i].an / 2,
                            s += .001 * e.tr * e.finalSize)
                        } else {
                            switch (E.translate(n, r, 0),
                            e.ps && E.translate(e.ps[0], e.ps[1] + e.ascent, 0),
                            e.j) {
                            case 1:
                                E.translate(A[i].animatorJustifyOffset + e.justifyOffset + (e.boxWidth - e.lineWidths[A[i].line]), 0, 0);
                                break;
                            case 2:
                                E.translate(A[i].animatorJustifyOffset + e.justifyOffset + (e.boxWidth - e.lineWidths[A[i].line]) / 2, 0, 0)
                            }
                            E.translate(0, -e.ls),
                            E.translate(N, 0, 0),
                            E.translate(w[0] * A[i].an * .005, w[1] * O * .01, 0),
                            n += A[i].l + .001 * e.tr * e.finalSize
                        }
                        "html" === M ? ee = E.toCSS() : "svg" === M ? ee = E.to2dCSS() : te = [E.props[0], E.props[1], E.props[2], E.props[3], E.props[4], E.props[5], E.props[6], E.props[7], E.props[8], E.props[9], E.props[10], E.props[11], E.props[12], E.props[13], E.props[14], E.props[15]],
                        Y = G
                    }
                    T <= i ? (D = new LetterProps(Y,W,q,X,ee,te),
                    this.renderedLetters.push(D),
                    T += 1,
                    this.lettersChangedFlag = !0) : (D = this.renderedLetters[i],
                    this.lettersChangedFlag = D.update(Y, W, q, X, ee, te) || this.lettersChangedFlag)
                }
            }
        }
        ,
        TextAnimatorProperty.prototype.getValue = function() {
            this._elem.globalData.frameId !== this._frameId && (this._frameId = this._elem.globalData.frameId,
            this.iterateDynamicProperties())
        }
        ,
        TextAnimatorProperty.prototype.mHelper = new Matrix,
        TextAnimatorProperty.prototype.defaultPropsArray = [],
        extendPrototype([DynamicPropertyContainer], TextAnimatorProperty),
        LetterProps.prototype.update = function(e, t, n, r, i, a) {
            this._mdf.o = !1,
            this._mdf.sw = !1,
            this._mdf.sc = !1,
            this._mdf.fc = !1,
            this._mdf.m = !1,
            this._mdf.p = !1;
            var o = !1;
            return this.o !== e && (this.o = e,
            this._mdf.o = !0,
            o = !0),
            this.sw !== t && (this.sw = t,
            this._mdf.sw = !0,
            o = !0),
            this.sc !== n && (this.sc = n,
            this._mdf.sc = !0,
            o = !0),
            this.fc !== r && (this.fc = r,
            this._mdf.fc = !0,
            o = !0),
            this.m !== i && (this.m = i,
            this._mdf.m = !0,
            o = !0),
            !a.length || this.p[0] === a[0] && this.p[1] === a[1] && this.p[4] === a[4] && this.p[5] === a[5] && this.p[12] === a[12] && this.p[13] === a[13] || (this.p = a,
            this._mdf.p = !0,
            o = !0),
            o
        }
        ,
        TextProperty.prototype.defaultBoxWidth = [0, 0],
        TextProperty.prototype.copyData = function(e, t) {
            for (var n in t)
                Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
            return e
        }
        ,
        TextProperty.prototype.setCurrentData = function(e) {
            e.__complete || this.completeTextData(e),
            this.currentData = e,
            this.currentData.boxWidth = this.currentData.boxWidth || this.defaultBoxWidth,
            this._mdf = !0
        }
        ,
        TextProperty.prototype.searchProperty = function() {
            return this.searchKeyframes()
        }
        ,
        TextProperty.prototype.searchKeyframes = function() {
            return this.kf = this.data.d.k.length > 1,
            this.kf && this.addEffect(this.getKeyframeValue.bind(this)),
            this.kf
        }
        ,
        TextProperty.prototype.addEffect = function(e) {
            this.effectsSequence.push(e),
            this.elem.addDynamicProperty(this)
        }
        ,
        TextProperty.prototype.getValue = function(e) {
            if (this.elem.globalData.frameId !== this.frameId && this.effectsSequence.length || e) {
                this.currentData.t = this.data.d.k[this.keysIndex].s.t;
                var t = this.currentData
                  , n = this.keysIndex;
                if (this.lock)
                    this.setCurrentData(this.currentData);
                else {
                    var r;
                    this.lock = !0,
                    this._mdf = !1;
                    var i = this.effectsSequence.length
                      , a = e || this.data.d.k[this.keysIndex].s;
                    for (r = 0; r < i; r += 1)
                        a = n !== this.keysIndex ? this.effectsSequence[r](a, a.t) : this.effectsSequence[r](this.currentData, a.t);
                    t !== a && this.setCurrentData(a),
                    this.v = this.currentData,
                    this.pv = this.v,
                    this.lock = !1,
                    this.frameId = this.elem.globalData.frameId
                }
            }
        }
        ,
        TextProperty.prototype.getKeyframeValue = function() {
            for (var e = this.data.d.k, t = this.elem.comp.renderedFrame, n = 0, r = e.length; n <= r - 1 && !(n === r - 1 || e[n + 1].t > t); )
                n += 1;
            return this.keysIndex !== n && (this.keysIndex = n),
            this.data.d.k[this.keysIndex].s
        }
        ,
        TextProperty.prototype.buildFinalText = function(e) {
            for (var t, n = FontManager.getCombinedCharacterCodes(), r = [], i = 0, a = e.length; i < a; )
                t = e.charCodeAt(i),
                -1 !== n.indexOf(t) ? r[r.length - 1] += e.charAt(i) : t >= 55296 && t <= 56319 && (t = e.charCodeAt(i + 1)) >= 56320 && t <= 57343 ? (r.push(e.substr(i, 2)),
                i += 1) : r.push(e.charAt(i)),
                i += 1;
            return r
        }
        ,
        TextProperty.prototype.completeTextData = function(e) {
            e.__complete = !0;
            var t, n, r, i, a, o, s, l = this.elem.globalData.fontManager, u = this.data, c = [], h = 0, p = u.m.g, f = 0, d = 0, m = 0, g = [], v = 0, y = 0, b = l.getFontByName(e.f), x = 0, w = getFontProperties(b);
            e.fWeight = w.weight,
            e.fStyle = w.style,
            e.finalSize = e.s,
            e.finalText = this.buildFinalText(e.t),
            n = e.finalText.length,
            e.finalLineHeight = e.lh;
            var _, S = e.tr / 1e3 * e.finalSize;
            if (e.sz)
                for (var E, M, T = !0, A = e.sz[0], P = e.sz[1]; T; ) {
                    E = 0,
                    v = 0,
                    n = (M = this.buildFinalText(e.t)).length,
                    S = e.tr / 1e3 * e.finalSize;
                    var C = -1;
                    for (t = 0; t < n; t += 1)
                        _ = M[t].charCodeAt(0),
                        r = !1,
                        " " === M[t] ? C = t : 13 !== _ && 3 !== _ || (v = 0,
                        r = !0,
                        E += e.finalLineHeight || 1.2 * e.finalSize),
                        l.chars ? (s = l.getCharData(M[t], b.fStyle, b.fFamily),
                        x = r ? 0 : s.w * e.finalSize / 100) : x = l.measureText(M[t], e.f, e.finalSize),
                        v + x > A && " " !== M[t] ? (-1 === C ? n += 1 : t = C,
                        E += e.finalLineHeight || 1.2 * e.finalSize,
                        M.splice(t, C === t ? 1 : 0, "\r"),
                        C = -1,
                        v = 0) : (v += x,
                        v += S);
                    E += b.ascent * e.finalSize / 100,
                    this.canResize && e.finalSize > this.minimumFontSize && P < E ? (e.finalSize -= 1,
                    e.finalLineHeight = e.finalSize * e.lh / e.s) : (e.finalText = M,
                    n = e.finalText.length,
                    T = !1)
                }
            v = -S,
            x = 0;
            var L, R = 0;
            for (t = 0; t < n; t += 1)
                if (r = !1,
                13 === (_ = (L = e.finalText[t]).charCodeAt(0)) || 3 === _ ? (R = 0,
                g.push(v),
                y = v > y ? v : y,
                v = -2 * S,
                i = "",
                r = !0,
                m += 1) : i = L,
                l.chars ? (s = l.getCharData(L, b.fStyle, l.getFontByName(e.f).fFamily),
                x = r ? 0 : s.w * e.finalSize / 100) : x = l.measureText(i, e.f, e.finalSize),
                " " === L ? R += x + S : (v += x + S + R,
                R = 0),
                c.push({
                    l: x,
                    an: x,
                    add: f,
                    n: r,
                    anIndexes: [],
                    val: i,
                    line: m,
                    animatorJustifyOffset: 0
                }),
                2 == p) {
                    if (f += x,
                    "" === i || " " === i || t === n - 1) {
                        for ("" !== i && " " !== i || (f -= x); d <= t; )
                            c[d].an = f,
                            c[d].ind = h,
                            c[d].extra = x,
                            d += 1;
                        h += 1,
                        f = 0
                    }
                } else if (3 == p) {
                    if (f += x,
                    "" === i || t === n - 1) {
                        for ("" === i && (f -= x); d <= t; )
                            c[d].an = f,
                            c[d].ind = h,
                            c[d].extra = x,
                            d += 1;
                        f = 0,
                        h += 1
                    }
                } else
                    c[h].ind = h,
                    c[h].extra = 0,
                    h += 1;
            if (e.l = c,
            y = v > y ? v : y,
            g.push(v),
            e.sz)
                e.boxWidth = e.sz[0],
                e.justifyOffset = 0;
            else
                switch (e.boxWidth = y,
                e.j) {
                case 1:
                    e.justifyOffset = -e.boxWidth;
                    break;
                case 2:
                    e.justifyOffset = -e.boxWidth / 2;
                    break;
                default:
                    e.justifyOffset = 0
                }
            e.lineWidths = g;
            var k, D, I, O, F = u.a;
            o = F.length;
            var N = [];
            for (a = 0; a < o; a += 1) {
                for ((k = F[a]).a.sc && (e.strokeColorAnim = !0),
                k.a.sw && (e.strokeWidthAnim = !0),
                (k.a.fc || k.a.fh || k.a.fs || k.a.fb) && (e.fillColorAnim = !0),
                O = 0,
                I = k.s.b,
                t = 0; t < n; t += 1)
                    (D = c[t]).anIndexes[a] = O,
                    (1 == I && "" !== D.val || 2 == I && "" !== D.val && " " !== D.val || 3 == I && (D.n || " " == D.val || t == n - 1) || 4 == I && (D.n || t == n - 1)) && (1 === k.s.rn && N.push(O),
                    O += 1);
                u.a[a].s.totalChars = O;
                var B, z = -1;
                if (1 === k.s.rn)
                    for (t = 0; t < n; t += 1)
                        z != (D = c[t]).anIndexes[a] && (z = D.anIndexes[a],
                        B = N.splice(Math.floor(Math.random() * N.length), 1)[0]),
                        D.anIndexes[a] = B
            }
            e.yOffset = e.finalLineHeight || 1.2 * e.finalSize,
            e.ls = e.ls || 0,
            e.ascent = b.ascent * e.finalSize / 100
        }
        ,
        TextProperty.prototype.updateDocumentData = function(e, t) {
            t = void 0 === t ? this.keysIndex : t;
            var n = this.copyData({}, this.data.d.k[t].s);
            n = this.copyData(n, e),
            this.data.d.k[t].s = n,
            this.recalculate(t),
            this.elem.addDynamicProperty(this)
        }
        ,
        TextProperty.prototype.recalculate = function(e) {
            var t = this.data.d.k[e].s;
            t.__complete = !1,
            this.keysIndex = 0,
            this._isFirstFrame = !0,
            this.getValue(t)
        }
        ,
        TextProperty.prototype.canResizeFont = function(e) {
            this.canResize = e,
            this.recalculate(this.keysIndex),
            this.elem.addDynamicProperty(this)
        }
        ,
        TextProperty.prototype.setMinimumFontSize = function(e) {
            this.minimumFontSize = Math.floor(e) || 1,
            this.recalculate(this.keysIndex),
            this.elem.addDynamicProperty(this)
        }
        ;
        var TextSelectorProp = function() {
            var e = Math.max
              , t = Math.min
              , n = Math.floor;
            function r(e, t) {
                this._currentTextLength = -1,
                this.k = !1,
                this.data = t,
                this.elem = e,
                this.comp = e.comp,
                this.finalS = 0,
                this.finalE = 0,
                this.initDynamicPropertyContainer(e),
                this.s = PropertyFactory.getProp(e, t.s || {
                    k: 0
                }, 0, 0, this),
                this.e = "e"in t ? PropertyFactory.getProp(e, t.e, 0, 0, this) : {
                    v: 100
                },
                this.o = PropertyFactory.getProp(e, t.o || {
                    k: 0
                }, 0, 0, this),
                this.xe = PropertyFactory.getProp(e, t.xe || {
                    k: 0
                }, 0, 0, this),
                this.ne = PropertyFactory.getProp(e, t.ne || {
                    k: 0
                }, 0, 0, this),
                this.a = PropertyFactory.getProp(e, t.a, 0, .01, this),
                this.dynamicProperties.length || this.getValue()
            }
            return r.prototype = {
                getMult: function(r) {
                    this._currentTextLength !== this.elem.textProperty.currentData.l.length && this.getValue();
                    var i = 0
                      , a = 0
                      , o = 1
                      , s = 1;
                    this.ne.v > 0 ? i = this.ne.v / 100 : a = -this.ne.v / 100,
                    this.xe.v > 0 ? o = 1 - this.xe.v / 100 : s = 1 + this.xe.v / 100;
                    var l = BezierFactory.getBezierEasing(i, a, o, s).get
                      , u = 0
                      , c = this.finalS
                      , h = this.finalE
                      , p = this.data.sh;
                    if (2 === p)
                        u = l(u = h === c ? r >= h ? 1 : 0 : e(0, t(.5 / (h - c) + (r - c) / (h - c), 1)));
                    else if (3 === p)
                        u = l(u = h === c ? r >= h ? 0 : 1 : 1 - e(0, t(.5 / (h - c) + (r - c) / (h - c), 1)));
                    else if (4 === p)
                        h === c ? u = 0 : (u = e(0, t(.5 / (h - c) + (r - c) / (h - c), 1))) < .5 ? u *= 2 : u = 1 - 2 * (u - .5),
                        u = l(u);
                    else if (5 === p) {
                        if (h === c)
                            u = 0;
                        else {
                            var f = h - c
                              , d = -f / 2 + (r = t(e(0, r + .5 - c), h - c))
                              , m = f / 2;
                            u = Math.sqrt(1 - d * d / (m * m))
                        }
                        u = l(u)
                    } else
                        6 === p ? (h === c ? u = 0 : (r = t(e(0, r + .5 - c), h - c),
                        u = (1 + Math.cos(Math.PI + 2 * Math.PI * r / (h - c))) / 2),
                        u = l(u)) : (r >= n(c) && (u = e(0, t(r - c < 0 ? t(h, 1) - (c - r) : h - r, 1))),
                        u = l(u));
                    return u * this.a.v
                },
                getValue: function(e) {
                    this.iterateDynamicProperties(),
                    this._mdf = e || this._mdf,
                    this._currentTextLength = this.elem.textProperty.currentData.l.length || 0,
                    e && 2 === this.data.r && (this.e.v = this._currentTextLength);
                    var t = 2 === this.data.r ? 1 : 100 / this.data.totalChars
                      , n = this.o.v / t
                      , r = this.s.v / t + n
                      , i = this.e.v / t + n;
                    if (r > i) {
                        var a = r;
                        r = i,
                        i = a
                    }
                    this.finalS = r,
                    this.finalE = i
                }
            },
            extendPrototype([DynamicPropertyContainer], r),
            {
                getTextSelectorProp: function(e, t, n) {
                    return new r(e,t,n)
                }
            }
        }()
          , poolFactory = function(e, t, n) {
            var r = 0
              , i = e
              , a = createSizedArray(i);
            return {
                newElement: function() {
                    return r ? a[r -= 1] : t()
                },
                release: function(e) {
                    r === i && (a = pooling.double(a),
                    i *= 2),
                    n && n(e),
                    a[r] = e,
                    r += 1
                }
            }
        }
          , pooling = {
            double: function(e) {
                return e.concat(createSizedArray(e.length))
            }
        }
          , pointPool = poolFactory(8, (function() {
            return createTypedArray("float32", 2)
        }
        ))
          , shapePool = function() {
            var e = poolFactory(4, (function() {
                return new ShapePath
            }
            ), (function(e) {
                var t, n = e._length;
                for (t = 0; t < n; t += 1)
                    pointPool.release(e.v[t]),
                    pointPool.release(e.i[t]),
                    pointPool.release(e.o[t]),
                    e.v[t] = null,
                    e.i[t] = null,
                    e.o[t] = null;
                e._length = 0,
                e.c = !1
            }
            ));
            return e.clone = function(t) {
                var n, r = e.newElement(), i = void 0 === t._length ? t.v.length : t._length;
                for (r.setLength(i),
                r.c = t.c,
                n = 0; n < i; n += 1)
                    r.setTripleAt(t.v[n][0], t.v[n][1], t.o[n][0], t.o[n][1], t.i[n][0], t.i[n][1], n);
                return r
            }
            ,
            e
        }()
          , shapeCollectionPool = function() {
            var e = {
                newShapeCollection: function() {
                    return t ? r[t -= 1] : new ShapeCollection
                },
                release: function(e) {
                    var i, a = e._length;
                    for (i = 0; i < a; i += 1)
                        shapePool.release(e.shapes[i]);
                    e._length = 0,
                    t === n && (r = pooling.double(r),
                    n *= 2),
                    r[t] = e,
                    t += 1
                }
            }
              , t = 0
              , n = 4
              , r = createSizedArray(n);
            return e
        }()
          , segmentsLengthPool = poolFactory(8, (function() {
            return {
                lengths: [],
                totalLength: 0
            }
        }
        ), (function(e) {
            var t, n = e.lengths.length;
            for (t = 0; t < n; t += 1)
                bezierLengthPool.release(e.lengths[t]);
            e.lengths.length = 0
        }
        ))
          , bezierLengthPool = poolFactory(8, (function() {
            return {
                addedLength: 0,
                percents: createTypedArray("float32", defaultCurveSegments),
                lengths: createTypedArray("float32", defaultCurveSegments)
            }
        }
        ))
          , markerParser = function() {
            function e(e) {
                for (var t, n = e.split("\r\n"), r = {}, i = 0, a = 0; a < n.length; a += 1)
                    2 === (t = n[a].split(":")).length && (r[t[0]] = t[1].trim(),
                    i += 1);
                if (0 === i)
                    throw new Error;
                return r
            }
            return function(t) {
                for (var n = [], r = 0; r < t.length; r += 1) {
                    var i = t[r]
                      , a = {
                        time: i.tm,
                        duration: i.dr
                    };
                    try {
                        a.payload = JSON.parse(t[r].cm)
                    } catch (o) {
                        try {
                            a.payload = e(t[r].cm)
                        } catch (s) {
                            a.payload = {
                                name: t[r]
                            }
                        }
                    }
                    n.push(a)
                }
                return n
            }
        }();
        function BaseRenderer() {}
        function SVGRenderer(e, t) {
            this.animationItem = e,
            this.layers = null,
            this.renderedFrame = -1,
            this.svgElement = createNS("svg");
            var n = "";
            if (t && t.title) {
                var r = createNS("title")
                  , i = createElementID();
                r.setAttribute("id", i),
                r.textContent = t.title,
                this.svgElement.appendChild(r),
                n += i
            }
            if (t && t.description) {
                var a = createNS("desc")
                  , o = createElementID();
                a.setAttribute("id", o),
                a.textContent = t.description,
                this.svgElement.appendChild(a),
                n += " " + o
            }
            n && this.svgElement.setAttribute("aria-labelledby", n);
            var s = createNS("defs");
            this.svgElement.appendChild(s);
            var l = createNS("g");
            this.svgElement.appendChild(l),
            this.layerElement = l,
            this.renderConfig = {
                preserveAspectRatio: t && t.preserveAspectRatio || "xMidYMid meet",
                imagePreserveAspectRatio: t && t.imagePreserveAspectRatio || "xMidYMid slice",
                progressiveLoad: t && t.progressiveLoad || !1,
                hideOnTransparent: !(t && !1 === t.hideOnTransparent),
                viewBoxOnly: t && t.viewBoxOnly || !1,
                viewBoxSize: t && t.viewBoxSize || !1,
                className: t && t.className || "",
                id: t && t.id || "",
                focusable: t && t.focusable,
                filterSize: {
                    width: t && t.filterSize && t.filterSize.width || "100%",
                    height: t && t.filterSize && t.filterSize.height || "100%",
                    x: t && t.filterSize && t.filterSize.x || "0%",
                    y: t && t.filterSize && t.filterSize.y || "0%"
                }
            },
            this.globalData = {
                _mdf: !1,
                frameNum: -1,
                defs: s,
                renderConfig: this.renderConfig
            },
            this.elements = [],
            this.pendingElements = [],
            this.destroyed = !1,
            this.rendererType = "svg"
        }
        function CanvasRenderer(e, t) {
            this.animationItem = e,
            this.renderConfig = {
                clearCanvas: !t || void 0 === t.clearCanvas || t.clearCanvas,
                context: t && t.context || null,
                progressiveLoad: t && t.progressiveLoad || !1,
                preserveAspectRatio: t && t.preserveAspectRatio || "xMidYMid meet",
                imagePreserveAspectRatio: t && t.imagePreserveAspectRatio || "xMidYMid slice",
                className: t && t.className || "",
                id: t && t.id || ""
            },
            this.renderConfig.dpr = t && t.dpr || 1,
            this.animationItem.wrapper && (this.renderConfig.dpr = t && t.dpr || window.devicePixelRatio || 1),
            this.renderedFrame = -1,
            this.globalData = {
                frameNum: -1,
                _mdf: !1,
                renderConfig: this.renderConfig,
                currentGlobalAlpha: -1
            },
            this.contextData = new CVContextData,
            this.elements = [],
            this.pendingElements = [],
            this.transformMat = new Matrix,
            this.completeLayers = !1,
            this.rendererType = "canvas"
        }
        function HybridRenderer(e, t) {
            this.animationItem = e,
            this.layers = null,
            this.renderedFrame = -1,
            this.renderConfig = {
                className: t && t.className || "",
                imagePreserveAspectRatio: t && t.imagePreserveAspectRatio || "xMidYMid slice",
                hideOnTransparent: !(t && !1 === t.hideOnTransparent),
                filterSize: {
                    width: t && t.filterSize && t.filterSize.width || "400%",
                    height: t && t.filterSize && t.filterSize.height || "400%",
                    x: t && t.filterSize && t.filterSize.x || "-100%",
                    y: t && t.filterSize && t.filterSize.y || "-100%"
                }
            },
            this.globalData = {
                _mdf: !1,
                frameNum: -1,
                renderConfig: this.renderConfig
            },
            this.pendingElements = [],
            this.elements = [],
            this.threeDElements = [],
            this.destroyed = !1,
            this.camera = null,
            this.supports3d = !0,
            this.rendererType = "html"
        }
        function MaskElement(e, t, n) {
            this.data = e,
            this.element = t,
            this.globalData = n,
            this.storedData = [],
            this.masksProperties = this.data.masksProperties || [],
            this.maskElement = null;
            var r, i, a = this.globalData.defs, o = this.masksProperties ? this.masksProperties.length : 0;
            this.viewData = createSizedArray(o),
            this.solidPath = "";
            var s, l, u, c, h, p, f = this.masksProperties, d = 0, m = [], g = createElementID(), v = "clipPath", y = "clip-path";
            for (r = 0; r < o; r += 1)
                if (("a" !== f[r].mode && "n" !== f[r].mode || f[r].inv || 100 !== f[r].o.k || f[r].o.x) && (v = "mask",
                y = "mask"),
                "s" !== f[r].mode && "i" !== f[r].mode || 0 !== d ? u = null : ((u = createNS("rect")).setAttribute("fill", "#ffffff"),
                u.setAttribute("width", this.element.comp.data.w || 0),
                u.setAttribute("height", this.element.comp.data.h || 0),
                m.push(u)),
                i = createNS("path"),
                "n" === f[r].mode)
                    this.viewData[r] = {
                        op: PropertyFactory.getProp(this.element, f[r].o, 0, .01, this.element),
                        prop: ShapePropertyFactory.getShapeProp(this.element, f[r], 3),
                        elem: i,
                        lastPath: ""
                    },
                    a.appendChild(i);
                else {
                    var b;
                    if (d += 1,
                    i.setAttribute("fill", "s" === f[r].mode ? "#000000" : "#ffffff"),
                    i.setAttribute("clip-rule", "nonzero"),
                    0 !== f[r].x.k ? (v = "mask",
                    y = "mask",
                    p = PropertyFactory.getProp(this.element, f[r].x, 0, null, this.element),
                    b = createElementID(),
                    (c = createNS("filter")).setAttribute("id", b),
                    (h = createNS("feMorphology")).setAttribute("operator", "erode"),
                    h.setAttribute("in", "SourceGraphic"),
                    h.setAttribute("radius", "0"),
                    c.appendChild(h),
                    a.appendChild(c),
                    i.setAttribute("stroke", "s" === f[r].mode ? "#000000" : "#ffffff")) : (h = null,
                    p = null),
                    this.storedData[r] = {
                        elem: i,
                        x: p,
                        expan: h,
                        lastPath: "",
                        lastOperator: "",
                        filterId: b,
                        lastRadius: 0
                    },
                    "i" === f[r].mode) {
                        l = m.length;
                        var x = createNS("g");
                        for (s = 0; s < l; s += 1)
                            x.appendChild(m[s]);
                        var w = createNS("mask");
                        w.setAttribute("mask-type", "alpha"),
                        w.setAttribute("id", g + "_" + d),
                        w.appendChild(i),
                        a.appendChild(w),
                        x.setAttribute("mask", "url(" + locationHref + "#" + g + "_" + d + ")"),
                        m.length = 0,
                        m.push(x)
                    } else
                        m.push(i);
                    f[r].inv && !this.solidPath && (this.solidPath = this.createLayerSolidPath()),
                    this.viewData[r] = {
                        elem: i,
                        lastPath: "",
                        op: PropertyFactory.getProp(this.element, f[r].o, 0, .01, this.element),
                        prop: ShapePropertyFactory.getShapeProp(this.element, f[r], 3),
                        invRect: u
                    },
                    this.viewData[r].prop.k || this.drawPath(f[r], this.viewData[r].prop.v, this.viewData[r])
                }
            for (this.maskElement = createNS(v),
            o = m.length,
            r = 0; r < o; r += 1)
                this.maskElement.appendChild(m[r]);
            d > 0 && (this.maskElement.setAttribute("id", g),
            this.element.maskedElement.setAttribute(y, "url(" + locationHref + "#" + g + ")"),
            a.appendChild(this.maskElement)),
            this.viewData.length && this.element.addRenderableComponent(this)
        }
        function HierarchyElement() {}
        function FrameElement() {}
        function TransformElement() {}
        function RenderableElement() {}
        function RenderableDOMElement() {}
        function ProcessedElement(e, t) {
            this.elem = e,
            this.pos = t
        }
        function SVGStyleData(e, t) {
            this.data = e,
            this.type = e.ty,
            this.d = "",
            this.lvl = t,
            this._mdf = !1,
            this.closed = !0 === e.hd,
            this.pElem = createNS("path"),
            this.msElem = null
        }
        function SVGShapeData(e, t, n) {
            this.caches = [],
            this.styles = [],
            this.transformers = e,
            this.lStr = "",
            this.sh = n,
            this.lvl = t,
            this._isAnimated = !!n.k;
            for (var r = 0, i = e.length; r < i; ) {
                if (e[r].mProps.dynamicProperties.length) {
                    this._isAnimated = !0;
                    break
                }
                r += 1
            }
        }
        function SVGTransformData(e, t, n) {
            this.transform = {
                mProps: e,
                op: t,
                container: n
            },
            this.elements = [],
            this._isAnimated = this.transform.mProps.dynamicProperties.length || this.transform.op.effectsSequence.length
        }
        function SVGStrokeStyleData(e, t, n) {
            this.initDynamicPropertyContainer(e),
            this.getValue = this.iterateDynamicProperties,
            this.o = PropertyFactory.getProp(e, t.o, 0, .01, this),
            this.w = PropertyFactory.getProp(e, t.w, 0, null, this),
            this.d = new DashProperty(e,t.d || {},"svg",this),
            this.c = PropertyFactory.getProp(e, t.c, 1, 255, this),
            this.style = n,
            this._isAnimated = !!this._isAnimated
        }
        function SVGFillStyleData(e, t, n) {
            this.initDynamicPropertyContainer(e),
            this.getValue = this.iterateDynamicProperties,
            this.o = PropertyFactory.getProp(e, t.o, 0, .01, this),
            this.c = PropertyFactory.getProp(e, t.c, 1, 255, this),
            this.style = n
        }
        function SVGGradientFillStyleData(e, t, n) {
            this.initDynamicPropertyContainer(e),
            this.getValue = this.iterateDynamicProperties,
            this.initGradientData(e, t, n)
        }
        function SVGGradientStrokeStyleData(e, t, n) {
            this.initDynamicPropertyContainer(e),
            this.getValue = this.iterateDynamicProperties,
            this.w = PropertyFactory.getProp(e, t.w, 0, null, this),
            this.d = new DashProperty(e,t.d || {},"svg",this),
            this.initGradientData(e, t, n),
            this._isAnimated = !!this._isAnimated
        }
        function ShapeGroupData() {
            this.it = [],
            this.prevViewData = [],
            this.gr = createNS("g")
        }
        BaseRenderer.prototype.checkLayers = function(e) {
            var t, n, r = this.layers.length;
            for (this.completeLayers = !0,
            t = r - 1; t >= 0; t -= 1)
                this.elements[t] || (n = this.layers[t]).ip - n.st <= e - this.layers[t].st && n.op - n.st > e - this.layers[t].st && this.buildItem(t),
                this.completeLayers = !!this.elements[t] && this.completeLayers;
            this.checkPendingElements()
        }
        ,
        BaseRenderer.prototype.createItem = function(e) {
            switch (e.ty) {
            case 2:
                return this.createImage(e);
            case 0:
                return this.createComp(e);
            case 1:
                return this.createSolid(e);
            case 3:
                return this.createNull(e);
            case 4:
                return this.createShape(e);
            case 5:
                return this.createText(e);
            case 6:
                return this.createAudio(e);
            case 13:
                return this.createCamera(e);
            case 15:
                return this.createFootage(e);
            default:
                return this.createNull(e)
            }
        }
        ,
        BaseRenderer.prototype.createCamera = function() {
            throw new Error("You're using a 3d camera. Try the html renderer.")
        }
        ,
        BaseRenderer.prototype.createAudio = function(e) {
            return new AudioElement(e,this.globalData,this)
        }
        ,
        BaseRenderer.prototype.createFootage = function(e) {
            return new FootageElement(e,this.globalData,this)
        }
        ,
        BaseRenderer.prototype.buildAllItems = function() {
            var e, t = this.layers.length;
            for (e = 0; e < t; e += 1)
                this.buildItem(e);
            this.checkPendingElements()
        }
        ,
        BaseRenderer.prototype.includeLayers = function(e) {
            var t;
            this.completeLayers = !1;
            var n, r = e.length, i = this.layers.length;
            for (t = 0; t < r; t += 1)
                for (n = 0; n < i; ) {
                    if (this.layers[n].id === e[t].id) {
                        this.layers[n] = e[t];
                        break
                    }
                    n += 1
                }
        }
        ,
        BaseRenderer.prototype.setProjectInterface = function(e) {
            this.globalData.projectInterface = e
        }
        ,
        BaseRenderer.prototype.initItems = function() {
            this.globalData.progressiveLoad || this.buildAllItems()
        }
        ,
        BaseRenderer.prototype.buildElementParenting = function(e, t, n) {
            for (var r = this.elements, i = this.layers, a = 0, o = i.length; a < o; )
                i[a].ind == t && (r[a] && !0 !== r[a] ? (n.push(r[a]),
                r[a].setAsParent(),
                void 0 !== i[a].parent ? this.buildElementParenting(e, i[a].parent, n) : e.setHierarchy(n)) : (this.buildItem(a),
                this.addPendingElement(e))),
                a += 1
        }
        ,
        BaseRenderer.prototype.addPendingElement = function(e) {
            this.pendingElements.push(e)
        }
        ,
        BaseRenderer.prototype.searchExtraCompositions = function(e) {
            var t, n = e.length;
            for (t = 0; t < n; t += 1)
                if (e[t].xt) {
                    var r = this.createComp(e[t]);
                    r.initExpressions(),
                    this.globalData.projectInterface.registerComposition(r)
                }
        }
        ,
        BaseRenderer.prototype.setupGlobalData = function(e, t) {
            this.globalData.fontManager = new FontManager,
            this.globalData.fontManager.addChars(e.chars),
            this.globalData.fontManager.addFonts(e.fonts, t),
            this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem),
            this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem),
            this.globalData.imageLoader = this.animationItem.imagePreloader,
            this.globalData.audioController = this.animationItem.audioController,
            this.globalData.frameId = 0,
            this.globalData.frameRate = e.fr,
            this.globalData.nm = e.nm,
            this.globalData.compSize = {
                w: e.w,
                h: e.h
            }
        }
        ,
        extendPrototype([BaseRenderer], SVGRenderer),
        SVGRenderer.prototype.createNull = function(e) {
            return new NullElement(e,this.globalData,this)
        }
        ,
        SVGRenderer.prototype.createShape = function(e) {
            return new SVGShapeElement(e,this.globalData,this)
        }
        ,
        SVGRenderer.prototype.createText = function(e) {
            return new SVGTextLottieElement(e,this.globalData,this)
        }
        ,
        SVGRenderer.prototype.createImage = function(e) {
            return new IImageElement(e,this.globalData,this)
        }
        ,
        SVGRenderer.prototype.createComp = function(e) {
            return new SVGCompElement(e,this.globalData,this)
        }
        ,
        SVGRenderer.prototype.createSolid = function(e) {
            return new ISolidElement(e,this.globalData,this)
        }
        ,
        SVGRenderer.prototype.configAnimation = function(e) {
            this.svgElement.setAttribute("xmlns", "http://www.w3.org/2000/svg"),
            this.renderConfig.viewBoxSize ? this.svgElement.setAttribute("viewBox", this.renderConfig.viewBoxSize) : this.svgElement.setAttribute("viewBox", "0 0 " + e.w + " " + e.h),
            this.renderConfig.viewBoxOnly || (this.svgElement.setAttribute("width", e.w),
            this.svgElement.setAttribute("height", e.h),
            this.svgElement.style.width = "100%",
            this.svgElement.style.height = "100%",
            this.svgElement.style.transform = "translate3d(0,0,0)"),
            this.renderConfig.className && this.svgElement.setAttribute("class", this.renderConfig.className),
            this.renderConfig.id && this.svgElement.setAttribute("id", this.renderConfig.id),
            void 0 !== this.renderConfig.focusable && this.svgElement.setAttribute("focusable", this.renderConfig.focusable),
            this.svgElement.setAttribute("preserveAspectRatio", this.renderConfig.preserveAspectRatio),
            this.animationItem.wrapper.appendChild(this.svgElement);
            var t = this.globalData.defs;
            this.setupGlobalData(e, t),
            this.globalData.progressiveLoad = this.renderConfig.progressiveLoad,
            this.data = e;
            var n = createNS("clipPath")
              , r = createNS("rect");
            r.setAttribute("width", e.w),
            r.setAttribute("height", e.h),
            r.setAttribute("x", 0),
            r.setAttribute("y", 0);
            var i = createElementID();
            n.setAttribute("id", i),
            n.appendChild(r),
            this.layerElement.setAttribute("clip-path", "url(" + locationHref + "#" + i + ")"),
            t.appendChild(n),
            this.layers = e.layers,
            this.elements = createSizedArray(e.layers.length)
        }
        ,
        SVGRenderer.prototype.destroy = function() {
            var e;
            this.animationItem.wrapper && (this.animationItem.wrapper.innerText = ""),
            this.layerElement = null,
            this.globalData.defs = null;
            var t = this.layers ? this.layers.length : 0;
            for (e = 0; e < t; e += 1)
                this.elements[e] && this.elements[e].destroy();
            this.elements.length = 0,
            this.destroyed = !0,
            this.animationItem = null
        }
        ,
        SVGRenderer.prototype.updateContainerSize = function() {}
        ,
        SVGRenderer.prototype.buildItem = function(e) {
            var t = this.elements;
            if (!t[e] && 99 !== this.layers[e].ty) {
                t[e] = !0;
                var n = this.createItem(this.layers[e]);
                t[e] = n,
                expressionsPlugin && (0 === this.layers[e].ty && this.globalData.projectInterface.registerComposition(n),
                n.initExpressions()),
                this.appendElementInPos(n, e),
                this.layers[e].tt && (this.elements[e - 1] && !0 !== this.elements[e - 1] ? n.setMatte(t[e - 1].layerId) : (this.buildItem(e - 1),
                this.addPendingElement(n)))
            }
        }
        ,
        SVGRenderer.prototype.checkPendingElements = function() {
            for (; this.pendingElements.length; ) {
                var e = this.pendingElements.pop();
                if (e.checkParenting(),
                e.data.tt)
                    for (var t = 0, n = this.elements.length; t < n; ) {
                        if (this.elements[t] === e) {
                            e.setMatte(this.elements[t - 1].layerId);
                            break
                        }
                        t += 1
                    }
            }
        }
        ,
        SVGRenderer.prototype.renderFrame = function(e) {
            if (this.renderedFrame !== e && !this.destroyed) {
                var t;
                null === e ? e = this.renderedFrame : this.renderedFrame = e,
                this.globalData.frameNum = e,
                this.globalData.frameId += 1,
                this.globalData.projectInterface.currentFrame = e,
                this.globalData._mdf = !1;
                var n = this.layers.length;
                for (this.completeLayers || this.checkLayers(e),
                t = n - 1; t >= 0; t -= 1)
                    (this.completeLayers || this.elements[t]) && this.elements[t].prepareFrame(e - this.layers[t].st);
                if (this.globalData._mdf)
                    for (t = 0; t < n; t += 1)
                        (this.completeLayers || this.elements[t]) && this.elements[t].renderFrame()
            }
        }
        ,
        SVGRenderer.prototype.appendElementInPos = function(e, t) {
            var n = e.getBaseElement();
            if (n) {
                for (var r, i = 0; i < t; )
                    this.elements[i] && !0 !== this.elements[i] && this.elements[i].getBaseElement() && (r = this.elements[i].getBaseElement()),
                    i += 1;
                r ? this.layerElement.insertBefore(n, r) : this.layerElement.appendChild(n)
            }
        }
        ,
        SVGRenderer.prototype.hide = function() {
            this.layerElement.style.display = "none"
        }
        ,
        SVGRenderer.prototype.show = function() {
            this.layerElement.style.display = "block"
        }
        ,
        extendPrototype([BaseRenderer], CanvasRenderer),
        CanvasRenderer.prototype.createShape = function(e) {
            return new CVShapeElement(e,this.globalData,this)
        }
        ,
        CanvasRenderer.prototype.createText = function(e) {
            return new CVTextElement(e,this.globalData,this)
        }
        ,
        CanvasRenderer.prototype.createImage = function(e) {
            return new CVImageElement(e,this.globalData,this)
        }
        ,
        CanvasRenderer.prototype.createComp = function(e) {
            return new CVCompElement(e,this.globalData,this)
        }
        ,
        CanvasRenderer.prototype.createSolid = function(e) {
            return new CVSolidElement(e,this.globalData,this)
        }
        ,
        CanvasRenderer.prototype.createNull = SVGRenderer.prototype.createNull,
        CanvasRenderer.prototype.ctxTransform = function(e) {
            if (1 !== e[0] || 0 !== e[1] || 0 !== e[4] || 1 !== e[5] || 0 !== e[12] || 0 !== e[13])
                if (this.renderConfig.clearCanvas) {
                    this.transformMat.cloneFromProps(e);
                    var t = this.contextData.cTr.props;
                    this.transformMat.transform(t[0], t[1], t[2], t[3], t[4], t[5], t[6], t[7], t[8], t[9], t[10], t[11], t[12], t[13], t[14], t[15]),
                    this.contextData.cTr.cloneFromProps(this.transformMat.props);
                    var n = this.contextData.cTr.props;
                    this.canvasContext.setTransform(n[0], n[1], n[4], n[5], n[12], n[13])
                } else
                    this.canvasContext.transform(e[0], e[1], e[4], e[5], e[12], e[13])
        }
        ,
        CanvasRenderer.prototype.ctxOpacity = function(e) {
            if (!this.renderConfig.clearCanvas)
                return this.canvasContext.globalAlpha *= e < 0 ? 0 : e,
                void (this.globalData.currentGlobalAlpha = this.contextData.cO);
            this.contextData.cO *= e < 0 ? 0 : e,
            this.globalData.currentGlobalAlpha !== this.contextData.cO && (this.canvasContext.globalAlpha = this.contextData.cO,
            this.globalData.currentGlobalAlpha = this.contextData.cO)
        }
        ,
        CanvasRenderer.prototype.reset = function() {
            this.renderConfig.clearCanvas ? this.contextData.reset() : this.canvasContext.restore()
        }
        ,
        CanvasRenderer.prototype.save = function(e) {
            if (this.renderConfig.clearCanvas) {
                e && this.canvasContext.save();
                var t, n = this.contextData.cTr.props;
                this.contextData._length <= this.contextData.cArrPos && this.contextData.duplicate();
                var r = this.contextData.saved[this.contextData.cArrPos];
                for (t = 0; t < 16; t += 1)
                    r[t] = n[t];
                this.contextData.savedOp[this.contextData.cArrPos] = this.contextData.cO,
                this.contextData.cArrPos += 1
            } else
                this.canvasContext.save()
        }
        ,
        CanvasRenderer.prototype.restore = function(e) {
            if (this.renderConfig.clearCanvas) {
                e && (this.canvasContext.restore(),
                this.globalData.blendMode = "source-over"),
                this.contextData.cArrPos -= 1;
                var t, n = this.contextData.saved[this.contextData.cArrPos], r = this.contextData.cTr.props;
                for (t = 0; t < 16; t += 1)
                    r[t] = n[t];
                this.canvasContext.setTransform(n[0], n[1], n[4], n[5], n[12], n[13]),
                n = this.contextData.savedOp[this.contextData.cArrPos],
                this.contextData.cO = n,
                this.globalData.currentGlobalAlpha !== n && (this.canvasContext.globalAlpha = n,
                this.globalData.currentGlobalAlpha = n)
            } else
                this.canvasContext.restore()
        }
        ,
        CanvasRenderer.prototype.configAnimation = function(e) {
            if (this.animationItem.wrapper) {
                this.animationItem.container = createTag("canvas");
                var t = this.animationItem.container.style;
                t.width = "100%",
                t.height = "100%";
                var n = "0px 0px 0px";
                t.transformOrigin = n,
                t.mozTransformOrigin = n,
                t.webkitTransformOrigin = n,
                t["-webkit-transform"] = n,
                this.animationItem.wrapper.appendChild(this.animationItem.container),
                this.canvasContext = this.animationItem.container.getContext("2d"),
                this.renderConfig.className && this.animationItem.container.setAttribute("class", this.renderConfig.className),
                this.renderConfig.id && this.animationItem.container.setAttribute("id", this.renderConfig.id)
            } else
                this.canvasContext = this.renderConfig.context;
            this.data = e,
            this.layers = e.layers,
            this.transformCanvas = {
                w: e.w,
                h: e.h,
                sx: 0,
                sy: 0,
                tx: 0,
                ty: 0
            },
            this.setupGlobalData(e, document.body),
            this.globalData.canvasContext = this.canvasContext,
            this.globalData.renderer = this,
            this.globalData.isDashed = !1,
            this.globalData.progressiveLoad = this.renderConfig.progressiveLoad,
            this.globalData.transformCanvas = this.transformCanvas,
            this.elements = createSizedArray(e.layers.length),
            this.updateContainerSize()
        }
        ,
        CanvasRenderer.prototype.updateContainerSize = function() {
            var e, t, n, r;
            if (this.reset(),
            this.animationItem.wrapper && this.animationItem.container ? (e = this.animationItem.wrapper.offsetWidth,
            t = this.animationItem.wrapper.offsetHeight,
            this.animationItem.container.setAttribute("width", e * this.renderConfig.dpr),
            this.animationItem.container.setAttribute("height", t * this.renderConfig.dpr)) : (e = this.canvasContext.canvas.width * this.renderConfig.dpr,
            t = this.canvasContext.canvas.height * this.renderConfig.dpr),
            -1 !== this.renderConfig.preserveAspectRatio.indexOf("meet") || -1 !== this.renderConfig.preserveAspectRatio.indexOf("slice")) {
                var i = this.renderConfig.preserveAspectRatio.split(" ")
                  , a = i[1] || "meet"
                  , o = i[0] || "xMidYMid"
                  , s = o.substr(0, 4)
                  , l = o.substr(4);
                n = e / t,
                (r = this.transformCanvas.w / this.transformCanvas.h) > n && "meet" === a || r < n && "slice" === a ? (this.transformCanvas.sx = e / (this.transformCanvas.w / this.renderConfig.dpr),
                this.transformCanvas.sy = e / (this.transformCanvas.w / this.renderConfig.dpr)) : (this.transformCanvas.sx = t / (this.transformCanvas.h / this.renderConfig.dpr),
                this.transformCanvas.sy = t / (this.transformCanvas.h / this.renderConfig.dpr)),
                this.transformCanvas.tx = "xMid" === s && (r < n && "meet" === a || r > n && "slice" === a) ? (e - this.transformCanvas.w * (t / this.transformCanvas.h)) / 2 * this.renderConfig.dpr : "xMax" === s && (r < n && "meet" === a || r > n && "slice" === a) ? (e - this.transformCanvas.w * (t / this.transformCanvas.h)) * this.renderConfig.dpr : 0,
                this.transformCanvas.ty = "YMid" === l && (r > n && "meet" === a || r < n && "slice" === a) ? (t - this.transformCanvas.h * (e / this.transformCanvas.w)) / 2 * this.renderConfig.dpr : "YMax" === l && (r > n && "meet" === a || r < n && "slice" === a) ? (t - this.transformCanvas.h * (e / this.transformCanvas.w)) * this.renderConfig.dpr : 0
            } else
                "none" === this.renderConfig.preserveAspectRatio ? (this.transformCanvas.sx = e / (this.transformCanvas.w / this.renderConfig.dpr),
                this.transformCanvas.sy = t / (this.transformCanvas.h / this.renderConfig.dpr),
                this.transformCanvas.tx = 0,
                this.transformCanvas.ty = 0) : (this.transformCanvas.sx = this.renderConfig.dpr,
                this.transformCanvas.sy = this.renderConfig.dpr,
                this.transformCanvas.tx = 0,
                this.transformCanvas.ty = 0);
            this.transformCanvas.props = [this.transformCanvas.sx, 0, 0, 0, 0, this.transformCanvas.sy, 0, 0, 0, 0, 1, 0, this.transformCanvas.tx, this.transformCanvas.ty, 0, 1],
            this.ctxTransform(this.transformCanvas.props),
            this.canvasContext.beginPath(),
            this.canvasContext.rect(0, 0, this.transformCanvas.w, this.transformCanvas.h),
            this.canvasContext.closePath(),
            this.canvasContext.clip(),
            this.renderFrame(this.renderedFrame, !0)
        }
        ,
        CanvasRenderer.prototype.destroy = function() {
            var e;
            for (this.renderConfig.clearCanvas && this.animationItem.wrapper && (this.animationItem.wrapper.innerText = ""),
            e = (this.layers ? this.layers.length : 0) - 1; e >= 0; e -= 1)
                this.elements[e] && this.elements[e].destroy();
            this.elements.length = 0,
            this.globalData.canvasContext = null,
            this.animationItem.container = null,
            this.destroyed = !0
        }
        ,
        CanvasRenderer.prototype.renderFrame = function(e, t) {
            if ((this.renderedFrame !== e || !0 !== this.renderConfig.clearCanvas || t) && !this.destroyed && -1 !== e) {
                var n;
                this.renderedFrame = e,
                this.globalData.frameNum = e - this.animationItem._isFirstFrame,
                this.globalData.frameId += 1,
                this.globalData._mdf = !this.renderConfig.clearCanvas || t,
                this.globalData.projectInterface.currentFrame = e;
                var r = this.layers.length;
                for (this.completeLayers || this.checkLayers(e),
                n = 0; n < r; n += 1)
                    (this.completeLayers || this.elements[n]) && this.elements[n].prepareFrame(e - this.layers[n].st);
                if (this.globalData._mdf) {
                    for (!0 === this.renderConfig.clearCanvas ? this.canvasContext.clearRect(0, 0, this.transformCanvas.w, this.transformCanvas.h) : this.save(),
                    n = r - 1; n >= 0; n -= 1)
                        (this.completeLayers || this.elements[n]) && this.elements[n].renderFrame();
                    !0 !== this.renderConfig.clearCanvas && this.restore()
                }
            }
        }
        ,
        CanvasRenderer.prototype.buildItem = function(e) {
            var t = this.elements;
            if (!t[e] && 99 !== this.layers[e].ty) {
                var n = this.createItem(this.layers[e], this, this.globalData);
                t[e] = n,
                n.initExpressions()
            }
        }
        ,
        CanvasRenderer.prototype.checkPendingElements = function() {
            for (; this.pendingElements.length; )
                this.pendingElements.pop().checkParenting()
        }
        ,
        CanvasRenderer.prototype.hide = function() {
            this.animationItem.container.style.display = "none"
        }
        ,
        CanvasRenderer.prototype.show = function() {
            this.animationItem.container.style.display = "block"
        }
        ,
        extendPrototype([BaseRenderer], HybridRenderer),
        HybridRenderer.prototype.buildItem = SVGRenderer.prototype.buildItem,
        HybridRenderer.prototype.checkPendingElements = function() {
            for (; this.pendingElements.length; )
                this.pendingElements.pop().checkParenting()
        }
        ,
        HybridRenderer.prototype.appendElementInPos = function(e, t) {
            var n = e.getBaseElement();
            if (n) {
                var r = this.layers[t];
                if (r.ddd && this.supports3d)
                    this.addTo3dContainer(n, t);
                else if (this.threeDElements)
                    this.addTo3dContainer(n, t);
                else {
                    for (var i, a, o = 0; o < t; )
                        this.elements[o] && !0 !== this.elements[o] && this.elements[o].getBaseElement && (a = this.elements[o],
                        i = (this.layers[o].ddd ? this.getThreeDContainerByPos(o) : a.getBaseElement()) || i),
                        o += 1;
                    i ? r.ddd && this.supports3d || this.layerElement.insertBefore(n, i) : r.ddd && this.supports3d || this.layerElement.appendChild(n)
                }
            }
        }
        ,
        HybridRenderer.prototype.createShape = function(e) {
            return this.supports3d ? new HShapeElement(e,this.globalData,this) : new SVGShapeElement(e,this.globalData,this)
        }
        ,
        HybridRenderer.prototype.createText = function(e) {
            return this.supports3d ? new HTextElement(e,this.globalData,this) : new SVGTextLottieElement(e,this.globalData,this)
        }
        ,
        HybridRenderer.prototype.createCamera = function(e) {
            return this.camera = new HCameraElement(e,this.globalData,this),
            this.camera
        }
        ,
        HybridRenderer.prototype.createImage = function(e) {
            return this.supports3d ? new HImageElement(e,this.globalData,this) : new IImageElement(e,this.globalData,this)
        }
        ,
        HybridRenderer.prototype.createComp = function(e) {
            return this.supports3d ? new HCompElement(e,this.globalData,this) : new SVGCompElement(e,this.globalData,this)
        }
        ,
        HybridRenderer.prototype.createSolid = function(e) {
            return this.supports3d ? new HSolidElement(e,this.globalData,this) : new ISolidElement(e,this.globalData,this)
        }
        ,
        HybridRenderer.prototype.createNull = SVGRenderer.prototype.createNull,
        HybridRenderer.prototype.getThreeDContainerByPos = function(e) {
            for (var t = 0, n = this.threeDElements.length; t < n; ) {
                if (this.threeDElements[t].startPos <= e && this.threeDElements[t].endPos >= e)
                    return this.threeDElements[t].perspectiveElem;
                t += 1
            }
            return null
        }
        ,
        HybridRenderer.prototype.createThreeDContainer = function(e, t) {
            var n, r, i = createTag("div");
            styleDiv(i);
            var a = createTag("div");
            if (styleDiv(a),
            "3d" === t) {
                (n = i.style).width = this.globalData.compSize.w + "px",
                n.height = this.globalData.compSize.h + "px",
                n.webkitTransformOrigin = "50% 50%",
                n.mozTransformOrigin = "50% 50%",
                n.transformOrigin = "50% 50%";
                var o = "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)";
                (r = a.style).transform = o,
                r.webkitTransform = o
            }
            i.appendChild(a);
            var s = {
                container: a,
                perspectiveElem: i,
                startPos: e,
                endPos: e,
                type: t
            };
            return this.threeDElements.push(s),
            s
        }
        ,
        HybridRenderer.prototype.build3dContainers = function() {
            var e, t, n = this.layers.length, r = "";
            for (e = 0; e < n; e += 1)
                this.layers[e].ddd && 3 !== this.layers[e].ty ? ("3d" !== r && (r = "3d",
                t = this.createThreeDContainer(e, "3d")),
                t.endPos = Math.max(t.endPos, e)) : ("2d" !== r && (r = "2d",
                t = this.createThreeDContainer(e, "2d")),
                t.endPos = Math.max(t.endPos, e));
            for (e = (n = this.threeDElements.length) - 1; e >= 0; e -= 1)
                this.resizerElem.appendChild(this.threeDElements[e].perspectiveElem)
        }
        ,
        HybridRenderer.prototype.addTo3dContainer = function(e, t) {
            for (var n = 0, r = this.threeDElements.length; n < r; ) {
                if (t <= this.threeDElements[n].endPos) {
                    for (var i, a = this.threeDElements[n].startPos; a < t; )
                        this.elements[a] && this.elements[a].getBaseElement && (i = this.elements[a].getBaseElement()),
                        a += 1;
                    i ? this.threeDElements[n].container.insertBefore(e, i) : this.threeDElements[n].container.appendChild(e);
                    break
                }
                n += 1
            }
        }
        ,
        HybridRenderer.prototype.configAnimation = function(e) {
            var t = createTag("div")
              , n = this.animationItem.wrapper
              , r = t.style;
            r.width = e.w + "px",
            r.height = e.h + "px",
            this.resizerElem = t,
            styleDiv(t),
            r.transformStyle = "flat",
            r.mozTransformStyle = "flat",
            r.webkitTransformStyle = "flat",
            this.renderConfig.className && t.setAttribute("class", this.renderConfig.className),
            n.appendChild(t),
            r.overflow = "hidden";
            var i = createNS("svg");
            i.setAttribute("width", "1"),
            i.setAttribute("height", "1"),
            styleDiv(i),
            this.resizerElem.appendChild(i);
            var a = createNS("defs");
            i.appendChild(a),
            this.data = e,
            this.setupGlobalData(e, i),
            this.globalData.defs = a,
            this.layers = e.layers,
            this.layerElement = this.resizerElem,
            this.build3dContainers(),
            this.updateContainerSize()
        }
        ,
        HybridRenderer.prototype.destroy = function() {
            var e;
            this.animationItem.wrapper && (this.animationItem.wrapper.innerText = ""),
            this.animationItem.container = null,
            this.globalData.defs = null;
            var t = this.layers ? this.layers.length : 0;
            for (e = 0; e < t; e += 1)
                this.elements[e].destroy();
            this.elements.length = 0,
            this.destroyed = !0,
            this.animationItem = null
        }
        ,
        HybridRenderer.prototype.updateContainerSize = function() {
            var e, t, n, r, i = this.animationItem.wrapper.offsetWidth, a = this.animationItem.wrapper.offsetHeight, o = i / a;
            this.globalData.compSize.w / this.globalData.compSize.h > o ? (e = i / this.globalData.compSize.w,
            t = i / this.globalData.compSize.w,
            n = 0,
            r = (a - this.globalData.compSize.h * (i / this.globalData.compSize.w)) / 2) : (e = a / this.globalData.compSize.h,
            t = a / this.globalData.compSize.h,
            n = (i - this.globalData.compSize.w * (a / this.globalData.compSize.h)) / 2,
            r = 0);
            var s = this.resizerElem.style;
            s.webkitTransform = "matrix3d(" + e + ",0,0,0,0," + t + ",0,0,0,0,1,0," + n + "," + r + ",0,1)",
            s.transform = s.webkitTransform
        }
        ,
        HybridRenderer.prototype.renderFrame = SVGRenderer.prototype.renderFrame,
        HybridRenderer.prototype.hide = function() {
            this.resizerElem.style.display = "none"
        }
        ,
        HybridRenderer.prototype.show = function() {
            this.resizerElem.style.display = "block"
        }
        ,
        HybridRenderer.prototype.initItems = function() {
            if (this.buildAllItems(),
            this.camera)
                this.camera.setup();
            else {
                var e, t = this.globalData.compSize.w, n = this.globalData.compSize.h, r = this.threeDElements.length;
                for (e = 0; e < r; e += 1) {
                    var i = this.threeDElements[e].perspectiveElem.style;
                    i.webkitPerspective = Math.sqrt(Math.pow(t, 2) + Math.pow(n, 2)) + "px",
                    i.perspective = i.webkitPerspective
                }
            }
        }
        ,
        HybridRenderer.prototype.searchExtraCompositions = function(e) {
            var t, n = e.length, r = createTag("div");
            for (t = 0; t < n; t += 1)
                if (e[t].xt) {
                    var i = this.createComp(e[t], r, this.globalData.comp, null);
                    i.initExpressions(),
                    this.globalData.projectInterface.registerComposition(i)
                }
        }
        ,
        MaskElement.prototype.getMaskProperty = function(e) {
            return this.viewData[e].prop
        }
        ,
        MaskElement.prototype.renderFrame = function(e) {
            var t, n = this.element.finalTransform.mat, r = this.masksProperties.length;
            for (t = 0; t < r; t += 1)
                if ((this.viewData[t].prop._mdf || e) && this.drawPath(this.masksProperties[t], this.viewData[t].prop.v, this.viewData[t]),
                (this.viewData[t].op._mdf || e) && this.viewData[t].elem.setAttribute("fill-opacity", this.viewData[t].op.v),
                "n" !== this.masksProperties[t].mode && (this.viewData[t].invRect && (this.element.finalTransform.mProp._mdf || e) && this.viewData[t].invRect.setAttribute("transform", n.getInverseMatrix().to2dCSS()),
                this.storedData[t].x && (this.storedData[t].x._mdf || e))) {
                    var i = this.storedData[t].expan;
                    this.storedData[t].x.v < 0 ? ("erode" !== this.storedData[t].lastOperator && (this.storedData[t].lastOperator = "erode",
                    this.storedData[t].elem.setAttribute("filter", "url(" + locationHref + "#" + this.storedData[t].filterId + ")")),
                    i.setAttribute("radius", -this.storedData[t].x.v)) : ("dilate" !== this.storedData[t].lastOperator && (this.storedData[t].lastOperator = "dilate",
                    this.storedData[t].elem.setAttribute("filter", null)),
                    this.storedData[t].elem.setAttribute("stroke-width", 2 * this.storedData[t].x.v))
                }
        }
        ,
        MaskElement.prototype.getMaskelement = function() {
            return this.maskElement
        }
        ,
        MaskElement.prototype.createLayerSolidPath = function() {
            var e = "M0,0 ";
            return e += " h" + this.globalData.compSize.w,
            e += " v" + this.globalData.compSize.h,
            e += " h-" + this.globalData.compSize.w,
            e += " v-" + this.globalData.compSize.h + " "
        }
        ,
        MaskElement.prototype.drawPath = function(e, t, n) {
            var r, i, a = " M" + t.v[0][0] + "," + t.v[0][1];
            for (i = t._length,
            r = 1; r < i; r += 1)
                a += " C" + t.o[r - 1][0] + "," + t.o[r - 1][1] + " " + t.i[r][0] + "," + t.i[r][1] + " " + t.v[r][0] + "," + t.v[r][1];
            if (t.c && i > 1 && (a += " C" + t.o[r - 1][0] + "," + t.o[r - 1][1] + " " + t.i[0][0] + "," + t.i[0][1] + " " + t.v[0][0] + "," + t.v[0][1]),
            n.lastPath !== a) {
                var o = "";
                n.elem && (t.c && (o = e.inv ? this.solidPath + a : a),
                n.elem.setAttribute("d", o)),
                n.lastPath = a
            }
        }
        ,
        MaskElement.prototype.destroy = function() {
            this.element = null,
            this.globalData = null,
            this.maskElement = null,
            this.data = null,
            this.masksProperties = null
        }
        ,
        HierarchyElement.prototype = {
            initHierarchy: function() {
                this.hierarchy = [],
                this._isParent = !1,
                this.checkParenting()
            },
            setHierarchy: function(e) {
                this.hierarchy = e
            },
            setAsParent: function() {
                this._isParent = !0
            },
            checkParenting: function() {
                void 0 !== this.data.parent && this.comp.buildElementParenting(this, this.data.parent, [])
            }
        },
        FrameElement.prototype = {
            initFrame: function() {
                this._isFirstFrame = !1,
                this.dynamicProperties = [],
                this._mdf = !1
            },
            prepareProperties: function(e, t) {
                var n, r = this.dynamicProperties.length;
                for (n = 0; n < r; n += 1)
                    (t || this._isParent && "transform" === this.dynamicProperties[n].propType) && (this.dynamicProperties[n].getValue(),
                    this.dynamicProperties[n]._mdf && (this.globalData._mdf = !0,
                    this._mdf = !0))
            },
            addDynamicProperty: function(e) {
                -1 === this.dynamicProperties.indexOf(e) && this.dynamicProperties.push(e)
            }
        },
        TransformElement.prototype = {
            initTransform: function() {
                this.finalTransform = {
                    mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : {
                        o: 0
                    },
                    _matMdf: !1,
                    _opMdf: !1,
                    mat: new Matrix
                },
                this.data.ao && (this.finalTransform.mProp.autoOriented = !0),
                this.data.ty
            },
            renderTransform: function() {
                if (this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame,
                this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame,
                this.hierarchy) {
                    var e, t = this.finalTransform.mat, n = 0, r = this.hierarchy.length;
                    if (!this.finalTransform._matMdf)
                        for (; n < r; ) {
                            if (this.hierarchy[n].finalTransform.mProp._mdf) {
                                this.finalTransform._matMdf = !0;
                                break
                            }
                            n += 1
                        }
                    if (this.finalTransform._matMdf)
                        for (e = this.finalTransform.mProp.v.props,
                        t.cloneFromProps(e),
                        n = 0; n < r; n += 1)
                            e = this.hierarchy[n].finalTransform.mProp.v.props,
                            t.transform(e[0], e[1], e[2], e[3], e[4], e[5], e[6], e[7], e[8], e[9], e[10], e[11], e[12], e[13], e[14], e[15])
                }
            },
            globalToLocal: function(e) {
                var t = [];
                t.push(this.finalTransform);
                for (var n, r = !0, i = this.comp; r; )
                    i.finalTransform ? (i.data.hasMask && t.splice(0, 0, i.finalTransform),
                    i = i.comp) : r = !1;
                var a, o = t.length;
                for (n = 0; n < o; n += 1)
                    a = t[n].mat.applyToPointArray(0, 0, 0),
                    e = [e[0] - a[0], e[1] - a[1], 0];
                return e
            },
            mHelper: new Matrix
        },
        RenderableElement.prototype = {
            initRenderable: function() {
                this.isInRange = !1,
                this.hidden = !1,
                this.isTransparent = !1,
                this.renderableComponents = []
            },
            addRenderableComponent: function(e) {
                -1 === this.renderableComponents.indexOf(e) && this.renderableComponents.push(e)
            },
            removeRenderableComponent: function(e) {
                -1 !== this.renderableComponents.indexOf(e) && this.renderableComponents.splice(this.renderableComponents.indexOf(e), 1)
            },
            prepareRenderableFrame: function(e) {
                this.checkLayerLimits(e)
            },
            checkTransparency: function() {
                this.finalTransform.mProp.o.v <= 0 ? !this.isTransparent && this.globalData.renderConfig.hideOnTransparent && (this.isTransparent = !0,
                this.hide()) : this.isTransparent && (this.isTransparent = !1,
                this.show())
            },
            checkLayerLimits: function(e) {
                this.data.ip - this.data.st <= e && this.data.op - this.data.st > e ? !0 !== this.isInRange && (this.globalData._mdf = !0,
                this._mdf = !0,
                this.isInRange = !0,
                this.show()) : !1 !== this.isInRange && (this.globalData._mdf = !0,
                this.isInRange = !1,
                this.hide())
            },
            renderRenderable: function() {
                var e, t = this.renderableComponents.length;
                for (e = 0; e < t; e += 1)
                    this.renderableComponents[e].renderFrame(this._isFirstFrame)
            },
            sourceRectAtTime: function() {
                return {
                    top: 0,
                    left: 0,
                    width: 100,
                    height: 100
                }
            },
            getLayerSize: function() {
                return 5 === this.data.ty ? {
                    w: this.data.textData.width,
                    h: this.data.textData.height
                } : {
                    w: this.data.width,
                    h: this.data.height
                }
            }
        },
        extendPrototype([RenderableElement, createProxyFunction({
            initElement: function(e, t, n) {
                this.initFrame(),
                this.initBaseData(e, t, n),
                this.initTransform(e, t, n),
                this.initHierarchy(),
                this.initRenderable(),
                this.initRendererElement(),
                this.createContainerElements(),
                this.createRenderableComponents(),
                this.createContent(),
                this.hide()
            },
            hide: function() {
                this.hidden || this.isInRange && !this.isTransparent || ((this.baseElement || this.layerElement).style.display = "none",
                this.hidden = !0)
            },
            show: function() {
                this.isInRange && !this.isTransparent && (this.data.hd || ((this.baseElement || this.layerElement).style.display = "block"),
                this.hidden = !1,
                this._isFirstFrame = !0)
            },
            renderFrame: function() {
                this.data.hd || this.hidden || (this.renderTransform(),
                this.renderRenderable(),
                this.renderElement(),
                this.renderInnerContent(),
                this._isFirstFrame && (this._isFirstFrame = !1))
            },
            renderInnerContent: function() {},
            prepareFrame: function(e) {
                this._mdf = !1,
                this.prepareRenderableFrame(e),
                this.prepareProperties(e, this.isInRange),
                this.checkTransparency()
            },
            destroy: function() {
                this.innerElem = null,
                this.destroyBaseElement()
            }
        })], RenderableDOMElement),
        SVGStyleData.prototype.reset = function() {
            this.d = "",
            this._mdf = !1
        }
        ,
        SVGShapeData.prototype.setAsAnimated = function() {
            this._isAnimated = !0
        }
        ,
        extendPrototype([DynamicPropertyContainer], SVGStrokeStyleData),
        extendPrototype([DynamicPropertyContainer], SVGFillStyleData),
        SVGGradientFillStyleData.prototype.initGradientData = function(e, t, n) {
            this.o = PropertyFactory.getProp(e, t.o, 0, .01, this),
            this.s = PropertyFactory.getProp(e, t.s, 1, null, this),
            this.e = PropertyFactory.getProp(e, t.e, 1, null, this),
            this.h = PropertyFactory.getProp(e, t.h || {
                k: 0
            }, 0, .01, this),
            this.a = PropertyFactory.getProp(e, t.a || {
                k: 0
            }, 0, degToRads, this),
            this.g = new GradientProperty(e,t.g,this),
            this.style = n,
            this.stops = [],
            this.setGradientData(n.pElem, t),
            this.setGradientOpacity(t, n),
            this._isAnimated = !!this._isAnimated
        }
        ,
        SVGGradientFillStyleData.prototype.setGradientData = function(e, t) {
            var n = createElementID()
              , r = createNS(1 === t.t ? "linearGradient" : "radialGradient");
            r.setAttribute("id", n),
            r.setAttribute("spreadMethod", "pad"),
            r.setAttribute("gradientUnits", "userSpaceOnUse");
            var i, a, o, s = [];
            for (o = 4 * t.g.p,
            a = 0; a < o; a += 4)
                i = createNS("stop"),
                r.appendChild(i),
                s.push(i);
            e.setAttribute("gf" === t.ty ? "fill" : "stroke", "url(" + locationHref + "#" + n + ")"),
            this.gf = r,
            this.cst = s
        }
        ,
        SVGGradientFillStyleData.prototype.setGradientOpacity = function(e, t) {
            if (this.g._hasOpacity && !this.g._collapsable) {
                var n, r, i, a = createNS("mask"), o = createNS("path");
                a.appendChild(o);
                var s = createElementID()
                  , l = createElementID();
                a.setAttribute("id", l);
                var u = createNS(1 === e.t ? "linearGradient" : "radialGradient");
                u.setAttribute("id", s),
                u.setAttribute("spreadMethod", "pad"),
                u.setAttribute("gradientUnits", "userSpaceOnUse"),
                i = e.g.k.k[0].s ? e.g.k.k[0].s.length : e.g.k.k.length;
                var c = this.stops;
                for (r = 4 * e.g.p; r < i; r += 2)
                    (n = createNS("stop")).setAttribute("stop-color", "rgb(255,255,255)"),
                    u.appendChild(n),
                    c.push(n);
                o.setAttribute("gf" === e.ty ? "fill" : "stroke", "url(" + locationHref + "#" + s + ")"),
                this.of = u,
                this.ms = a,
                this.ost = c,
                this.maskId = l,
                t.msElem = o
            }
        }
        ,
        extendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData),
        extendPrototype([SVGGradientFillStyleData, DynamicPropertyContainer], SVGGradientStrokeStyleData);
        var SVGElementsRenderer = function() {
            var e = new Matrix
              , t = new Matrix;
            function n(e, t, n) {
                (n || t.transform.op._mdf) && t.transform.container.setAttribute("opacity", t.transform.op.v),
                (n || t.transform.mProps._mdf) && t.transform.container.setAttribute("transform", t.transform.mProps.v.to2dCSS())
            }
            function r(n, r, i) {
                var a, o, s, l, u, c, h, p, f, d, m, g = r.styles.length, v = r.lvl;
                for (c = 0; c < g; c += 1) {
                    if (l = r.sh._mdf || i,
                    r.styles[c].lvl < v) {
                        for (p = t.reset(),
                        d = v - r.styles[c].lvl,
                        m = r.transformers.length - 1; !l && d > 0; )
                            l = r.transformers[m].mProps._mdf || l,
                            d -= 1,
                            m -= 1;
                        if (l)
                            for (d = v - r.styles[c].lvl,
                            m = r.transformers.length - 1; d > 0; )
                                f = r.transformers[m].mProps.v.props,
                                p.transform(f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], f[9], f[10], f[11], f[12], f[13], f[14], f[15]),
                                d -= 1,
                                m -= 1
                    } else
                        p = e;
                    if (o = (h = r.sh.paths)._length,
                    l) {
                        for (s = "",
                        a = 0; a < o; a += 1)
                            (u = h.shapes[a]) && u._length && (s += buildShapeString(u, u._length, u.c, p));
                        r.caches[c] = s
                    } else
                        s = r.caches[c];
                    r.styles[c].d += !0 === n.hd ? "" : s,
                    r.styles[c]._mdf = l || r.styles[c]._mdf
                }
            }
            function i(e, t, n) {
                var r = t.style;
                (t.c._mdf || n) && r.pElem.setAttribute("fill", "rgb(" + bmFloor(t.c.v[0]) + "," + bmFloor(t.c.v[1]) + "," + bmFloor(t.c.v[2]) + ")"),
                (t.o._mdf || n) && r.pElem.setAttribute("fill-opacity", t.o.v)
            }
            function a(e, t, n) {
                o(e, t, n),
                s(0, t, n)
            }
            function o(e, t, n) {
                var r, i, a, o, s, l = t.gf, u = t.g._hasOpacity, c = t.s.v, h = t.e.v;
                if (t.o._mdf || n) {
                    var p = "gf" === e.ty ? "fill-opacity" : "stroke-opacity";
                    t.style.pElem.setAttribute(p, t.o.v)
                }
                if (t.s._mdf || n) {
                    var f = 1 === e.t ? "x1" : "cx"
                      , d = "x1" === f ? "y1" : "cy";
                    l.setAttribute(f, c[0]),
                    l.setAttribute(d, c[1]),
                    u && !t.g._collapsable && (t.of.setAttribute(f, c[0]),
                    t.of.setAttribute(d, c[1]))
                }
                if (t.g._cmdf || n) {
                    r = t.cst;
                    var m = t.g.c;
                    for (a = r.length,
                    i = 0; i < a; i += 1)
                        (o = r[i]).setAttribute("offset", m[4 * i] + "%"),
                        o.setAttribute("stop-color", "rgb(" + m[4 * i + 1] + "," + m[4 * i + 2] + "," + m[4 * i + 3] + ")")
                }
                if (u && (t.g._omdf || n)) {
                    var g = t.g.o;
                    for (a = (r = t.g._collapsable ? t.cst : t.ost).length,
                    i = 0; i < a; i += 1)
                        o = r[i],
                        t.g._collapsable || o.setAttribute("offset", g[2 * i] + "%"),
                        o.setAttribute("stop-opacity", g[2 * i + 1])
                }
                if (1 === e.t)
                    (t.e._mdf || n) && (l.setAttribute("x2", h[0]),
                    l.setAttribute("y2", h[1]),
                    u && !t.g._collapsable && (t.of.setAttribute("x2", h[0]),
                    t.of.setAttribute("y2", h[1])));
                else if ((t.s._mdf || t.e._mdf || n) && (s = Math.sqrt(Math.pow(c[0] - h[0], 2) + Math.pow(c[1] - h[1], 2)),
                l.setAttribute("r", s),
                u && !t.g._collapsable && t.of.setAttribute("r", s)),
                t.e._mdf || t.h._mdf || t.a._mdf || n) {
                    s || (s = Math.sqrt(Math.pow(c[0] - h[0], 2) + Math.pow(c[1] - h[1], 2)));
                    var v = Math.atan2(h[1] - c[1], h[0] - c[0])
                      , y = t.h.v;
                    y >= 1 ? y = .99 : y <= -1 && (y = -.99);
                    var b = s * y
                      , x = Math.cos(v + t.a.v) * b + c[0]
                      , w = Math.sin(v + t.a.v) * b + c[1];
                    l.setAttribute("fx", x),
                    l.setAttribute("fy", w),
                    u && !t.g._collapsable && (t.of.setAttribute("fx", x),
                    t.of.setAttribute("fy", w))
                }
            }
            function s(e, t, n) {
                var r = t.style
                  , i = t.d;
                i && (i._mdf || n) && i.dashStr && (r.pElem.setAttribute("stroke-dasharray", i.dashStr),
                r.pElem.setAttribute("stroke-dashoffset", i.dashoffset[0])),
                t.c && (t.c._mdf || n) && r.pElem.setAttribute("stroke", "rgb(" + bmFloor(t.c.v[0]) + "," + bmFloor(t.c.v[1]) + "," + bmFloor(t.c.v[2]) + ")"),
                (t.o._mdf || n) && r.pElem.setAttribute("stroke-opacity", t.o.v),
                (t.w._mdf || n) && (r.pElem.setAttribute("stroke-width", t.w.v),
                r.msElem && r.msElem.setAttribute("stroke-width", t.w.v))
            }
            return {
                createRenderFunction: function(e) {
                    switch (e.ty) {
                    case "fl":
                        return i;
                    case "gf":
                        return o;
                    case "gs":
                        return a;
                    case "st":
                        return s;
                    case "sh":
                    case "el":
                    case "rc":
                    case "sr":
                        return r;
                    case "tr":
                        return n;
                    default:
                        return null
                    }
                }
            }
        }();
        function ShapeTransformManager() {
            this.sequences = {},
            this.sequenceList = [],
            this.transform_key_count = 0
        }
        function CVShapeData(e, t, n, r) {
            this.styledShapes = [],
            this.tr = [0, 0, 0, 0, 0, 0];
            var i, a = 4;
            "rc" === t.ty ? a = 5 : "el" === t.ty ? a = 6 : "sr" === t.ty && (a = 7),
            this.sh = ShapePropertyFactory.getShapeProp(e, t, a, e);
            var o, s = n.length;
            for (i = 0; i < s; i += 1)
                n[i].closed || (o = {
                    transforms: r.addTransformSequence(n[i].transforms),
                    trNodes: []
                },
                this.styledShapes.push(o),
                n[i].elements.push(o))
        }
        function BaseElement() {}
        function NullElement(e, t, n) {
            this.initFrame(),
            this.initBaseData(e, t, n),
            this.initFrame(),
            this.initTransform(e, t, n),
            this.initHierarchy()
        }
        function SVGBaseElement() {}
        function IShapeElement() {}
        function ITextElement() {}
        function ICompElement() {}
        function IImageElement(e, t, n) {
            this.assetData = t.getAssetData(e.refId),
            this.initElement(e, t, n),
            this.sourceRect = {
                top: 0,
                left: 0,
                width: this.assetData.w,
                height: this.assetData.h
            }
        }
        function ISolidElement(e, t, n) {
            this.initElement(e, t, n)
        }
        function AudioElement(e, t, n) {
            this.initFrame(),
            this.initRenderable(),
            this.assetData = t.getAssetData(e.refId),
            this.initBaseData(e, t, n),
            this._isPlaying = !1,
            this._canPlay = !1;
            var r = this.globalData.getAssetsPath(this.assetData);
            this.audio = this.globalData.audioController.createAudio(r),
            this._currentTime = 0,
            this.globalData.audioController.addAudio(this),
            this.tm = e.tm ? PropertyFactory.getProp(this, e.tm, 0, t.frameRate, this) : {
                _placeholder: !0
            }
        }
        function FootageElement(e, t, n) {
            this.initFrame(),
            this.initRenderable(),
            this.assetData = t.getAssetData(e.refId),
            this.footageData = t.imageLoader.getAsset(this.assetData),
            this.initBaseData(e, t, n)
        }
        function SVGCompElement(e, t, n) {
            this.layers = e.layers,
            this.supports3d = !0,
            this.completeLayers = !1,
            this.pendingElements = [],
            this.elements = this.layers ? createSizedArray(this.layers.length) : [],
            this.initElement(e, t, n),
            this.tm = e.tm ? PropertyFactory.getProp(this, e.tm, 0, t.frameRate, this) : {
                _placeholder: !0
            }
        }
        function SVGTextLottieElement(e, t, n) {
            this.textSpans = [],
            this.renderType = "svg",
            this.initElement(e, t, n)
        }
        function SVGShapeElement(e, t, n) {
            this.shapes = [],
            this.shapesData = e.shapes,
            this.stylesList = [],
            this.shapeModifiers = [],
            this.itemsData = [],
            this.processedElements = [],
            this.animatedContents = [],
            this.initElement(e, t, n),
            this.prevViewData = []
        }
        function SVGTintFilter(e, t) {
            this.filterManager = t;
            var n = createNS("feColorMatrix");
            if (n.setAttribute("type", "matrix"),
            n.setAttribute("color-interpolation-filters", "linearRGB"),
            n.setAttribute("values", "0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0"),
            n.setAttribute("result", "f1"),
            e.appendChild(n),
            (n = createNS("feColorMatrix")).setAttribute("type", "matrix"),
            n.setAttribute("color-interpolation-filters", "sRGB"),
            n.setAttribute("values", "1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0"),
            n.setAttribute("result", "f2"),
            e.appendChild(n),
            this.matrixFilter = n,
            100 !== t.effectElements[2].p.v || t.effectElements[2].p.k) {
                var r, i = createNS("feMerge");
                e.appendChild(i),
                (r = createNS("feMergeNode")).setAttribute("in", "SourceGraphic"),
                i.appendChild(r),
                (r = createNS("feMergeNode")).setAttribute("in", "f2"),
                i.appendChild(r)
            }
        }
        function SVGFillFilter(e, t) {
            this.filterManager = t;
            var n = createNS("feColorMatrix");
            n.setAttribute("type", "matrix"),
            n.setAttribute("color-interpolation-filters", "sRGB"),
            n.setAttribute("values", "1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0"),
            e.appendChild(n),
            this.matrixFilter = n
        }
        function SVGGaussianBlurEffect(e, t) {
            e.setAttribute("x", "-100%"),
            e.setAttribute("y", "-100%"),
            e.setAttribute("width", "300%"),
            e.setAttribute("height", "300%"),
            this.filterManager = t;
            var n = createNS("feGaussianBlur");
            e.appendChild(n),
            this.feGaussianBlur = n
        }
        function SVGStrokeEffect(e, t) {
            this.initialized = !1,
            this.filterManager = t,
            this.elem = e,
            this.paths = []
        }
        function SVGTritoneFilter(e, t) {
            this.filterManager = t;
            var n = createNS("feColorMatrix");
            n.setAttribute("type", "matrix"),
            n.setAttribute("color-interpolation-filters", "linearRGB"),
            n.setAttribute("values", "0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0"),
            n.setAttribute("result", "f1"),
            e.appendChild(n);
            var r = createNS("feComponentTransfer");
            r.setAttribute("color-interpolation-filters", "sRGB"),
            e.appendChild(r),
            this.matrixFilter = r;
            var i = createNS("feFuncR");
            i.setAttribute("type", "table"),
            r.appendChild(i),
            this.feFuncR = i;
            var a = createNS("feFuncG");
            a.setAttribute("type", "table"),
            r.appendChild(a),
            this.feFuncG = a;
            var o = createNS("feFuncB");
            o.setAttribute("type", "table"),
            r.appendChild(o),
            this.feFuncB = o
        }
        function SVGProLevelsFilter(e, t) {
            this.filterManager = t;
            var n = this.filterManager.effectElements
              , r = createNS("feComponentTransfer");
            (n[10].p.k || 0 !== n[10].p.v || n[11].p.k || 1 !== n[11].p.v || n[12].p.k || 1 !== n[12].p.v || n[13].p.k || 0 !== n[13].p.v || n[14].p.k || 1 !== n[14].p.v) && (this.feFuncR = this.createFeFunc("feFuncR", r)),
            (n[17].p.k || 0 !== n[17].p.v || n[18].p.k || 1 !== n[18].p.v || n[19].p.k || 1 !== n[19].p.v || n[20].p.k || 0 !== n[20].p.v || n[21].p.k || 1 !== n[21].p.v) && (this.feFuncG = this.createFeFunc("feFuncG", r)),
            (n[24].p.k || 0 !== n[24].p.v || n[25].p.k || 1 !== n[25].p.v || n[26].p.k || 1 !== n[26].p.v || n[27].p.k || 0 !== n[27].p.v || n[28].p.k || 1 !== n[28].p.v) && (this.feFuncB = this.createFeFunc("feFuncB", r)),
            (n[31].p.k || 0 !== n[31].p.v || n[32].p.k || 1 !== n[32].p.v || n[33].p.k || 1 !== n[33].p.v || n[34].p.k || 0 !== n[34].p.v || n[35].p.k || 1 !== n[35].p.v) && (this.feFuncA = this.createFeFunc("feFuncA", r)),
            (this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA) && (r.setAttribute("color-interpolation-filters", "sRGB"),
            e.appendChild(r),
            r = createNS("feComponentTransfer")),
            (n[3].p.k || 0 !== n[3].p.v || n[4].p.k || 1 !== n[4].p.v || n[5].p.k || 1 !== n[5].p.v || n[6].p.k || 0 !== n[6].p.v || n[7].p.k || 1 !== n[7].p.v) && (r.setAttribute("color-interpolation-filters", "sRGB"),
            e.appendChild(r),
            this.feFuncRComposed = this.createFeFunc("feFuncR", r),
            this.feFuncGComposed = this.createFeFunc("feFuncG", r),
            this.feFuncBComposed = this.createFeFunc("feFuncB", r))
        }
        function SVGDropShadowEffect(e, t) {
            var n = t.container.globalData.renderConfig.filterSize;
            e.setAttribute("x", n.x),
            e.setAttribute("y", n.y),
            e.setAttribute("width", n.width),
            e.setAttribute("height", n.height),
            this.filterManager = t;
            var r = createNS("feGaussianBlur");
            r.setAttribute("in", "SourceAlpha"),
            r.setAttribute("result", "drop_shadow_1"),
            r.setAttribute("stdDeviation", "0"),
            this.feGaussianBlur = r,
            e.appendChild(r);
            var i = createNS("feOffset");
            i.setAttribute("dx", "25"),
            i.setAttribute("dy", "0"),
            i.setAttribute("in", "drop_shadow_1"),
            i.setAttribute("result", "drop_shadow_2"),
            this.feOffset = i,
            e.appendChild(i);
            var a = createNS("feFlood");
            a.setAttribute("flood-color", "#00ff00"),
            a.setAttribute("flood-opacity", "1"),
            a.setAttribute("result", "drop_shadow_3"),
            this.feFlood = a,
            e.appendChild(a);
            var o = createNS("feComposite");
            o.setAttribute("in", "drop_shadow_3"),
            o.setAttribute("in2", "drop_shadow_2"),
            o.setAttribute("operator", "in"),
            o.setAttribute("result", "drop_shadow_4"),
            e.appendChild(o);
            var s, l = createNS("feMerge");
            e.appendChild(l),
            s = createNS("feMergeNode"),
            l.appendChild(s),
            (s = createNS("feMergeNode")).setAttribute("in", "SourceGraphic"),
            this.feMergeNode = s,
            this.feMerge = l,
            this.originalNodeAdded = !1,
            l.appendChild(s)
        }
        ShapeTransformManager.prototype = {
            addTransformSequence: function(e) {
                var t, n = e.length, r = "_";
                for (t = 0; t < n; t += 1)
                    r += e[t].transform.key + "_";
                var i = this.sequences[r];
                return i || (i = {
                    transforms: [].concat(e),
                    finalTransform: new Matrix,
                    _mdf: !1
                },
                this.sequences[r] = i,
                this.sequenceList.push(i)),
                i
            },
            processSequence: function(e, t) {
                for (var n, r = 0, i = e.transforms.length, a = t; r < i && !t; ) {
                    if (e.transforms[r].transform.mProps._mdf) {
                        a = !0;
                        break
                    }
                    r += 1
                }
                if (a)
                    for (e.finalTransform.reset(),
                    r = i - 1; r >= 0; r -= 1)
                        n = e.transforms[r].transform.mProps.v.props,
                        e.finalTransform.transform(n[0], n[1], n[2], n[3], n[4], n[5], n[6], n[7], n[8], n[9], n[10], n[11], n[12], n[13], n[14], n[15]);
                e._mdf = a
            },
            processSequences: function(e) {
                var t, n = this.sequenceList.length;
                for (t = 0; t < n; t += 1)
                    this.processSequence(this.sequenceList[t], e)
            },
            getNewKey: function() {
                return this.transform_key_count += 1,
                "_" + this.transform_key_count
            }
        },
        CVShapeData.prototype.setAsAnimated = SVGShapeData.prototype.setAsAnimated,
        BaseElement.prototype = {
            checkMasks: function() {
                if (!this.data.hasMask)
                    return !1;
                for (var e = 0, t = this.data.masksProperties.length; e < t; ) {
                    if ("n" !== this.data.masksProperties[e].mode && !1 !== this.data.masksProperties[e].cl)
                        return !0;
                    e += 1
                }
                return !1
            },
            initExpressions: function() {
                this.layerInterface = LayerExpressionInterface(this),
                this.data.hasMask && this.maskManager && this.layerInterface.registerMaskInterface(this.maskManager);
                var e = EffectsExpressionInterface.createEffectsInterface(this, this.layerInterface);
                this.layerInterface.registerEffectsInterface(e),
                0 === this.data.ty || this.data.xt ? this.compInterface = CompExpressionInterface(this) : 4 === this.data.ty ? (this.layerInterface.shapeInterface = ShapeExpressionInterface(this.shapesData, this.itemsData, this.layerInterface),
                this.layerInterface.content = this.layerInterface.shapeInterface) : 5 === this.data.ty && (this.layerInterface.textInterface = TextExpressionInterface(this),
                this.layerInterface.text = this.layerInterface.textInterface)
            },
            setBlendMode: function() {
                var e = getBlendMode(this.data.bm);
                (this.baseElement || this.layerElement).style["mix-blend-mode"] = e
            },
            initBaseData: function(e, t, n) {
                this.globalData = t,
                this.comp = n,
                this.data = e,
                this.layerId = createElementID(),
                this.data.sr || (this.data.sr = 1),
                this.effectsManager = new EffectsManager(this.data,this,this.dynamicProperties)
            },
            getType: function() {
                return this.type
            },
            sourceRectAtTime: function() {}
        },
        NullElement.prototype.prepareFrame = function(e) {
            this.prepareProperties(e, !0)
        }
        ,
        NullElement.prototype.renderFrame = function() {}
        ,
        NullElement.prototype.getBaseElement = function() {
            return null
        }
        ,
        NullElement.prototype.destroy = function() {}
        ,
        NullElement.prototype.sourceRectAtTime = function() {}
        ,
        NullElement.prototype.hide = function() {}
        ,
        extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement], NullElement),
        SVGBaseElement.prototype = {
            initRendererElement: function() {
                this.layerElement = createNS("g")
            },
            createContainerElements: function() {
                this.matteElement = createNS("g"),
                this.transformedElement = this.layerElement,
                this.maskedElement = this.layerElement,
                this._sizeChanged = !1;
                var e, t, n, r = null;
                if (this.data.td) {
                    if (3 == this.data.td || 1 == this.data.td) {
                        var i = createNS("mask");
                        i.setAttribute("id", this.layerId),
                        i.setAttribute("mask-type", 3 == this.data.td ? "luminance" : "alpha"),
                        i.appendChild(this.layerElement),
                        r = i,
                        this.globalData.defs.appendChild(i),
                        featureSupport.maskType || 1 != this.data.td || (i.setAttribute("mask-type", "luminance"),
                        e = createElementID(),
                        t = filtersFactory.createFilter(e),
                        this.globalData.defs.appendChild(t),
                        t.appendChild(filtersFactory.createAlphaToLuminanceFilter()),
                        (n = createNS("g")).appendChild(this.layerElement),
                        r = n,
                        i.appendChild(n),
                        n.setAttribute("filter", "url(" + locationHref + "#" + e + ")"))
                    } else if (2 == this.data.td) {
                        var a = createNS("mask");
                        a.setAttribute("id", this.layerId),
                        a.setAttribute("mask-type", "alpha");
                        var o = createNS("g");
                        a.appendChild(o),
                        e = createElementID(),
                        t = filtersFactory.createFilter(e);
                        var s = createNS("feComponentTransfer");
                        s.setAttribute("in", "SourceGraphic"),
                        t.appendChild(s);
                        var l = createNS("feFuncA");
                        l.setAttribute("type", "table"),
                        l.setAttribute("tableValues", "1.0 0.0"),
                        s.appendChild(l),
                        this.globalData.defs.appendChild(t);
                        var u = createNS("rect");
                        u.setAttribute("width", this.comp.data.w),
                        u.setAttribute("height", this.comp.data.h),
                        u.setAttribute("x", "0"),
                        u.setAttribute("y", "0"),
                        u.setAttribute("fill", "#ffffff"),
                        u.setAttribute("opacity", "0"),
                        o.setAttribute("filter", "url(" + locationHref + "#" + e + ")"),
                        o.appendChild(u),
                        o.appendChild(this.layerElement),
                        r = o,
                        featureSupport.maskType || (a.setAttribute("mask-type", "luminance"),
                        t.appendChild(filtersFactory.createAlphaToLuminanceFilter()),
                        n = createNS("g"),
                        o.appendChild(u),
                        n.appendChild(this.layerElement),
                        r = n,
                        o.appendChild(n)),
                        this.globalData.defs.appendChild(a)
                    }
                } else
                    this.data.tt ? (this.matteElement.appendChild(this.layerElement),
                    r = this.matteElement,
                    this.baseElement = this.matteElement) : this.baseElement = this.layerElement;
                if (this.data.ln && this.layerElement.setAttribute("id", this.data.ln),
                this.data.cl && this.layerElement.setAttribute("class", this.data.cl),
                0 === this.data.ty && !this.data.hd) {
                    var c = createNS("clipPath")
                      , h = createNS("path");
                    h.setAttribute("d", "M0,0 L" + this.data.w + ",0 L" + this.data.w + "," + this.data.h + " L0," + this.data.h + "z");
                    var p = createElementID();
                    if (c.setAttribute("id", p),
                    c.appendChild(h),
                    this.globalData.defs.appendChild(c),
                    this.checkMasks()) {
                        var f = createNS("g");
                        f.setAttribute("clip-path", "url(" + locationHref + "#" + p + ")"),
                        f.appendChild(this.layerElement),
                        this.transformedElement = f,
                        r ? r.appendChild(this.transformedElement) : this.baseElement = this.transformedElement
                    } else
                        this.layerElement.setAttribute("clip-path", "url(" + locationHref + "#" + p + ")")
                }
                0 !== this.data.bm && this.setBlendMode()
            },
            renderElement: function() {
                this.finalTransform._matMdf && this.transformedElement.setAttribute("transform", this.finalTransform.mat.to2dCSS()),
                this.finalTransform._opMdf && this.transformedElement.setAttribute("opacity", this.finalTransform.mProp.o.v)
            },
            destroyBaseElement: function() {
                this.layerElement = null,
                this.matteElement = null,
                this.maskManager.destroy()
            },
            getBaseElement: function() {
                return this.data.hd ? null : this.baseElement
            },
            createRenderableComponents: function() {
                this.maskManager = new MaskElement(this.data,this,this.globalData),
                this.renderableEffectsManager = new SVGEffects(this)
            },
            setMatte: function(e) {
                this.matteElement && this.matteElement.setAttribute("mask", "url(" + locationHref + "#" + e + ")")
            }
        },
        IShapeElement.prototype = {
            addShapeToModifiers: function(e) {
                var t, n = this.shapeModifiers.length;
                for (t = 0; t < n; t += 1)
                    this.shapeModifiers[t].addShape(e)
            },
            isShapeInAnimatedModifiers: function(e) {
                for (var t = this.shapeModifiers.length; 0 < t; )
                    if (this.shapeModifiers[0].isAnimatedWithShape(e))
                        return !0;
                return !1
            },
            renderModifiers: function() {
                if (this.shapeModifiers.length) {
                    var e, t = this.shapes.length;
                    for (e = 0; e < t; e += 1)
                        this.shapes[e].sh.reset();
                    for (e = (t = this.shapeModifiers.length) - 1; e >= 0 && !this.shapeModifiers[e].processShapes(this._isFirstFrame); e -= 1)
                        ;
                }
            },
            lcEnum: {
                1: "butt",
                2: "round",
                3: "square"
            },
            ljEnum: {
                1: "miter",
                2: "round",
                3: "bevel"
            },
            searchProcessedElement: function(e) {
                for (var t = this.processedElements, n = 0, r = t.length; n < r; ) {
                    if (t[n].elem === e)
                        return t[n].pos;
                    n += 1
                }
                return 0
            },
            addProcessedElement: function(e, t) {
                for (var n = this.processedElements, r = n.length; r; )
                    if (n[r -= 1].elem === e)
                        return void (n[r].pos = t);
                n.push(new ProcessedElement(e,t))
            },
            prepareFrame: function(e) {
                this.prepareRenderableFrame(e),
                this.prepareProperties(e, this.isInRange)
            }
        },
        ITextElement.prototype.initElement = function(e, t, n) {
            this.lettersChangedFlag = !0,
            this.initFrame(),
            this.initBaseData(e, t, n),
            this.textProperty = new TextProperty(this,e.t,this.dynamicProperties),
            this.textAnimator = new TextAnimatorProperty(e.t,this.renderType,this),
            this.initTransform(e, t, n),
            this.initHierarchy(),
            this.initRenderable(),
            this.initRendererElement(),
            this.createContainerElements(),
            this.createRenderableComponents(),
            this.createContent(),
            this.hide(),
            this.textAnimator.searchProperties(this.dynamicProperties)
        }
        ,
        ITextElement.prototype.prepareFrame = function(e) {
            this._mdf = !1,
            this.prepareRenderableFrame(e),
            this.prepareProperties(e, this.isInRange),
            (this.textProperty._mdf || this.textProperty._isFirstFrame) && (this.buildNewText(),
            this.textProperty._isFirstFrame = !1,
            this.textProperty._mdf = !1)
        }
        ,
        ITextElement.prototype.createPathShape = function(e, t) {
            var n, r, i = t.length, a = "";
            for (n = 0; n < i; n += 1)
                r = t[n].ks.k,
                a += buildShapeString(r, r.i.length, !0, e);
            return a
        }
        ,
        ITextElement.prototype.updateDocumentData = function(e, t) {
            this.textProperty.updateDocumentData(e, t)
        }
        ,
        ITextElement.prototype.canResizeFont = function(e) {
            this.textProperty.canResizeFont(e)
        }
        ,
        ITextElement.prototype.setMinimumFontSize = function(e) {
            this.textProperty.setMinimumFontSize(e)
        }
        ,
        ITextElement.prototype.applyTextPropertiesToMatrix = function(e, t, n, r, i) {
            switch (e.ps && t.translate(e.ps[0], e.ps[1] + e.ascent, 0),
            t.translate(0, -e.ls, 0),
            e.j) {
            case 1:
                t.translate(e.justifyOffset + (e.boxWidth - e.lineWidths[n]), 0, 0);
                break;
            case 2:
                t.translate(e.justifyOffset + (e.boxWidth - e.lineWidths[n]) / 2, 0, 0)
            }
            t.translate(r, i, 0)
        }
        ,
        ITextElement.prototype.buildColor = function(e) {
            return "rgb(" + Math.round(255 * e[0]) + "," + Math.round(255 * e[1]) + "," + Math.round(255 * e[2]) + ")"
        }
        ,
        ITextElement.prototype.emptyProp = new LetterProps,
        ITextElement.prototype.destroy = function() {}
        ,
        extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement),
        ICompElement.prototype.initElement = function(e, t, n) {
            this.initFrame(),
            this.initBaseData(e, t, n),
            this.initTransform(e, t, n),
            this.initRenderable(),
            this.initHierarchy(),
            this.initRendererElement(),
            this.createContainerElements(),
            this.createRenderableComponents(),
            !this.data.xt && t.progressiveLoad || this.buildAllItems(),
            this.hide()
        }
        ,
        ICompElement.prototype.prepareFrame = function(e) {
            if (this._mdf = !1,
            this.prepareRenderableFrame(e),
            this.prepareProperties(e, this.isInRange),
            this.isInRange || this.data.xt) {
                if (this.tm._placeholder)
                    this.renderedFrame = e / this.data.sr;
                else {
                    var t = this.tm.v;
                    t === this.data.op && (t = this.data.op - 1),
                    this.renderedFrame = t
                }
                var n, r = this.elements.length;
                for (this.completeLayers || this.checkLayers(this.renderedFrame),
                n = r - 1; n >= 0; n -= 1)
                    (this.completeLayers || this.elements[n]) && (this.elements[n].prepareFrame(this.renderedFrame - this.layers[n].st),
                    this.elements[n]._mdf && (this._mdf = !0))
            }
        }
        ,
        ICompElement.prototype.renderInnerContent = function() {
            var e, t = this.layers.length;
            for (e = 0; e < t; e += 1)
                (this.completeLayers || this.elements[e]) && this.elements[e].renderFrame()
        }
        ,
        ICompElement.prototype.setElements = function(e) {
            this.elements = e
        }
        ,
        ICompElement.prototype.getElements = function() {
            return this.elements
        }
        ,
        ICompElement.prototype.destroyElements = function() {
            var e, t = this.layers.length;
            for (e = 0; e < t; e += 1)
                this.elements[e] && this.elements[e].destroy()
        }
        ,
        ICompElement.prototype.destroy = function() {
            this.destroyElements(),
            this.destroyBaseElement()
        }
        ,
        extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], IImageElement),
        IImageElement.prototype.createContent = function() {
            var e = this.globalData.getAssetsPath(this.assetData);
            this.innerElem = createNS("image"),
            this.innerElem.setAttribute("width", this.assetData.w + "px"),
            this.innerElem.setAttribute("height", this.assetData.h + "px"),
            this.innerElem.setAttribute("preserveAspectRatio", this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio),
            this.innerElem.setAttributeNS("http://www.w3.org/1999/xlink", "href", e),
            this.layerElement.appendChild(this.innerElem)
        }
        ,
        IImageElement.prototype.sourceRectAtTime = function() {
            return this.sourceRect
        }
        ,
        extendPrototype([IImageElement], ISolidElement),
        ISolidElement.prototype.createContent = function() {
            var e = createNS("rect");
            e.setAttribute("width", this.data.sw),
            e.setAttribute("height", this.data.sh),
            e.setAttribute("fill", this.data.sc),
            this.layerElement.appendChild(e)
        }
        ,
        AudioElement.prototype.prepareFrame = function(e) {
            if (this.prepareRenderableFrame(e, !0),
            this.prepareProperties(e, !0),
            this.tm._placeholder)
                this._currentTime = e / this.data.sr;
            else {
                var t = this.tm.v;
                this._currentTime = t
            }
        }
        ,
        extendPrototype([RenderableElement, BaseElement, FrameElement], AudioElement),
        AudioElement.prototype.renderFrame = function() {
            this.isInRange && this._canPlay && (this._isPlaying ? (!this.audio.playing() || Math.abs(this._currentTime / this.globalData.frameRate - this.audio.seek()) > .1) && this.audio.seek(this._currentTime / this.globalData.frameRate) : (this.audio.play(),
            this.audio.seek(this._currentTime / this.globalData.frameRate),
            this._isPlaying = !0))
        }
        ,
        AudioElement.prototype.show = function() {}
        ,
        AudioElement.prototype.hide = function() {
            this.audio.pause(),
            this._isPlaying = !1
        }
        ,
        AudioElement.prototype.pause = function() {
            this.audio.pause(),
            this._isPlaying = !1,
            this._canPlay = !1
        }
        ,
        AudioElement.prototype.resume = function() {
            this._canPlay = !0
        }
        ,
        AudioElement.prototype.setRate = function(e) {
            this.audio.rate(e)
        }
        ,
        AudioElement.prototype.volume = function(e) {
            this.audio.volume(e)
        }
        ,
        AudioElement.prototype.getBaseElement = function() {
            return null
        }
        ,
        AudioElement.prototype.destroy = function() {}
        ,
        AudioElement.prototype.sourceRectAtTime = function() {}
        ,
        AudioElement.prototype.initExpressions = function() {}
        ,
        FootageElement.prototype.prepareFrame = function() {}
        ,
        extendPrototype([RenderableElement, BaseElement, FrameElement], FootageElement),
        FootageElement.prototype.getBaseElement = function() {
            return null
        }
        ,
        FootageElement.prototype.renderFrame = function() {}
        ,
        FootageElement.prototype.destroy = function() {}
        ,
        FootageElement.prototype.initExpressions = function() {
            this.layerInterface = FootageInterface(this)
        }
        ,
        FootageElement.prototype.getFootageData = function() {
            return this.footageData
        }
        ,
        extendPrototype([SVGRenderer, ICompElement, SVGBaseElement], SVGCompElement),
        extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], SVGTextLottieElement),
        SVGTextLottieElement.prototype.createContent = function() {
            this.data.singleShape && !this.globalData.fontManager.chars && (this.textContainer = createNS("text"))
        }
        ,
        SVGTextLottieElement.prototype.buildTextContents = function(e) {
            for (var t = 0, n = e.length, r = [], i = ""; t < n; )
                e[t] === String.fromCharCode(13) || e[t] === String.fromCharCode(3) ? (r.push(i),
                i = "") : i += e[t],
                t += 1;
            return r.push(i),
            r
        }
        ,
        SVGTextLottieElement.prototype.buildNewText = function() {
            var e, t, n = this.textProperty.currentData;
            this.renderedLetters = createSizedArray(n ? n.l.length : 0),
            n.fc ? this.layerElement.setAttribute("fill", this.buildColor(n.fc)) : this.layerElement.setAttribute("fill", "rgba(0,0,0,0)"),
            n.sc && (this.layerElement.setAttribute("stroke", this.buildColor(n.sc)),
            this.layerElement.setAttribute("stroke-width", n.sw)),
            this.layerElement.setAttribute("font-size", n.finalSize);
            var r = this.globalData.fontManager.getFontByName(n.f);
            if (r.fClass)
                this.layerElement.setAttribute("class", r.fClass);
            else {
                this.layerElement.setAttribute("font-family", r.fFamily);
                var i = n.fWeight
                  , a = n.fStyle;
                this.layerElement.setAttribute("font-style", a),
                this.layerElement.setAttribute("font-weight", i)
            }
            this.layerElement.setAttribute("aria-label", n.t);
            var o, s = n.l || [], l = !!this.globalData.fontManager.chars;
            t = s.length;
            var u, c = this.mHelper, h = "", p = this.data.singleShape, f = 0, d = 0, m = !0, g = .001 * n.tr * n.finalSize;
            if (!p || l || n.sz) {
                var v, y, b = this.textSpans.length;
                for (e = 0; e < t; e += 1)
                    l && p && 0 !== e || (o = b > e ? this.textSpans[e] : createNS(l ? "path" : "text"),
                    b <= e && (o.setAttribute("stroke-linecap", "butt"),
                    o.setAttribute("stroke-linejoin", "round"),
                    o.setAttribute("stroke-miterlimit", "4"),
                    this.textSpans[e] = o,
                    this.layerElement.appendChild(o)),
                    o.style.display = "inherit"),
                    c.reset(),
                    c.scale(n.finalSize / 100, n.finalSize / 100),
                    p && (s[e].n && (f = -g,
                    d += n.yOffset,
                    d += m ? 1 : 0,
                    m = !1),
                    this.applyTextPropertiesToMatrix(n, c, s[e].line, f, d),
                    f += s[e].l || 0,
                    f += g),
                    l ? (u = (v = (y = this.globalData.fontManager.getCharData(n.finalText[e], r.fStyle, this.globalData.fontManager.getFontByName(n.f).fFamily)) && y.data || {}).shapes ? v.shapes[0].it : [],
                    p ? h += this.createPathShape(c, u) : o.setAttribute("d", this.createPathShape(c, u))) : (p && o.setAttribute("transform", "translate(" + c.props[12] + "," + c.props[13] + ")"),
                    o.textContent = s[e].val,
                    o.setAttributeNS("http://www.w3.org/XML/1998/namespace", "xml:space", "preserve"));
                p && o && o.setAttribute("d", h)
            } else {
                var x = this.textContainer
                  , w = "start";
                switch (n.j) {
                case 1:
                    w = "end";
                    break;
                case 2:
                    w = "middle";
                    break;
                default:
                    w = "start"
                }
                x.setAttribute("text-anchor", w),
                x.setAttribute("letter-spacing", g);
                var _ = this.buildTextContents(n.finalText);
                for (t = _.length,
                d = n.ps ? n.ps[1] + n.ascent : 0,
                e = 0; e < t; e += 1)
                    (o = this.textSpans[e] || createNS("tspan")).textContent = _[e],
                    o.setAttribute("x", 0),
                    o.setAttribute("y", d),
                    o.style.display = "inherit",
                    x.appendChild(o),
                    this.textSpans[e] = o,
                    d += n.finalLineHeight;
                this.layerElement.appendChild(x)
            }
            for (; e < this.textSpans.length; )
                this.textSpans[e].style.display = "none",
                e += 1;
            this._sizeChanged = !0
        }
        ,
        SVGTextLottieElement.prototype.sourceRectAtTime = function() {
            if (this.prepareFrame(this.comp.renderedFrame - this.data.st),
            this.renderInnerContent(),
            this._sizeChanged) {
                this._sizeChanged = !1;
                var e = this.layerElement.getBBox();
                this.bbox = {
                    top: e.y,
                    left: e.x,
                    width: e.width,
                    height: e.height
                }
            }
            return this.bbox
        }
        ,
        SVGTextLottieElement.prototype.renderInnerContent = function() {
            if (!this.data.singleShape && (this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag),
            this.lettersChangedFlag || this.textAnimator.lettersChangedFlag)) {
                var e, t;
                this._sizeChanged = !0;
                var n, r, i = this.textAnimator.renderedLetters, a = this.textProperty.currentData.l;
                for (t = a.length,
                e = 0; e < t; e += 1)
                    a[e].n || (n = i[e],
                    r = this.textSpans[e],
                    n._mdf.m && r.setAttribute("transform", n.m),
                    n._mdf.o && r.setAttribute("opacity", n.o),
                    n._mdf.sw && r.setAttribute("stroke-width", n.sw),
                    n._mdf.sc && r.setAttribute("stroke", n.sc),
                    n._mdf.fc && r.setAttribute("fill", n.fc))
            }
        }
        ,
        extendPrototype([BaseElement, TransformElement, SVGBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableDOMElement], SVGShapeElement),
        SVGShapeElement.prototype.initSecondaryElement = function() {}
        ,
        SVGShapeElement.prototype.identityMatrix = new Matrix,
        SVGShapeElement.prototype.buildExpressionInterface = function() {}
        ,
        SVGShapeElement.prototype.createContent = function() {
            this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], !0),
            this.filterUniqueShapes()
        }
        ,
        SVGShapeElement.prototype.filterUniqueShapes = function() {
            var e, t, n, r, i = this.shapes.length, a = this.stylesList.length, o = [], s = !1;
            for (n = 0; n < a; n += 1) {
                for (r = this.stylesList[n],
                s = !1,
                o.length = 0,
                e = 0; e < i; e += 1)
                    -1 !== (t = this.shapes[e]).styles.indexOf(r) && (o.push(t),
                    s = t._isAnimated || s);
                o.length > 1 && s && this.setShapesAsAnimated(o)
            }
        }
        ,
        SVGShapeElement.prototype.setShapesAsAnimated = function(e) {
            var t, n = e.length;
            for (t = 0; t < n; t += 1)
                e[t].setAsAnimated()
        }
        ,
        SVGShapeElement.prototype.createStyleElement = function(e, t) {
            var n, r = new SVGStyleData(e,t), i = r.pElem;
            return "st" === e.ty ? n = new SVGStrokeStyleData(this,e,r) : "fl" === e.ty ? n = new SVGFillStyleData(this,e,r) : "gf" !== e.ty && "gs" !== e.ty || (n = new ("gf" === e.ty ? SVGGradientFillStyleData : SVGGradientStrokeStyleData)(this,e,r),
            this.globalData.defs.appendChild(n.gf),
            n.maskId && (this.globalData.defs.appendChild(n.ms),
            this.globalData.defs.appendChild(n.of),
            i.setAttribute("mask", "url(" + locationHref + "#" + n.maskId + ")"))),
            "st" !== e.ty && "gs" !== e.ty || (i.setAttribute("stroke-linecap", this.lcEnum[e.lc] || "round"),
            i.setAttribute("stroke-linejoin", this.ljEnum[e.lj] || "round"),
            i.setAttribute("fill-opacity", "0"),
            1 === e.lj && i.setAttribute("stroke-miterlimit", e.ml)),
            2 === e.r && i.setAttribute("fill-rule", "evenodd"),
            e.ln && i.setAttribute("id", e.ln),
            e.cl && i.setAttribute("class", e.cl),
            e.bm && (i.style["mix-blend-mode"] = getBlendMode(e.bm)),
            this.stylesList.push(r),
            this.addToAnimatedContents(e, n),
            n
        }
        ,
        SVGShapeElement.prototype.createGroupElement = function(e) {
            var t = new ShapeGroupData;
            return e.ln && t.gr.setAttribute("id", e.ln),
            e.cl && t.gr.setAttribute("class", e.cl),
            e.bm && (t.gr.style["mix-blend-mode"] = getBlendMode(e.bm)),
            t
        }
        ,
        SVGShapeElement.prototype.createTransformElement = function(e, t) {
            var n = TransformPropertyFactory.getTransformProperty(this, e, this)
              , r = new SVGTransformData(n,n.o,t);
            return this.addToAnimatedContents(e, r),
            r
        }
        ,
        SVGShapeElement.prototype.createShapeElement = function(e, t, n) {
            var r = 4;
            "rc" === e.ty ? r = 5 : "el" === e.ty ? r = 6 : "sr" === e.ty && (r = 7);
            var i = new SVGShapeData(t,n,ShapePropertyFactory.getShapeProp(this, e, r, this));
            return this.shapes.push(i),
            this.addShapeToModifiers(i),
            this.addToAnimatedContents(e, i),
            i
        }
        ,
        SVGShapeElement.prototype.addToAnimatedContents = function(e, t) {
            for (var n = 0, r = this.animatedContents.length; n < r; ) {
                if (this.animatedContents[n].element === t)
                    return;
                n += 1
            }
            this.animatedContents.push({
                fn: SVGElementsRenderer.createRenderFunction(e),
                element: t,
                data: e
            })
        }
        ,
        SVGShapeElement.prototype.setElementStyles = function(e) {
            var t, n = e.styles, r = this.stylesList.length;
            for (t = 0; t < r; t += 1)
                this.stylesList[t].closed || n.push(this.stylesList[t])
        }
        ,
        SVGShapeElement.prototype.reloadShapes = function() {
            var e;
            this._isFirstFrame = !0;
            var t = this.itemsData.length;
            for (e = 0; e < t; e += 1)
                this.prevViewData[e] = this.itemsData[e];
            for (this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], !0),
            this.filterUniqueShapes(),
            t = this.dynamicProperties.length,
            e = 0; e < t; e += 1)
                this.dynamicProperties[e].getValue();
            this.renderModifiers()
        }
        ,
        SVGShapeElement.prototype.searchShapes = function(e, t, n, r, i, a, o) {
            var s, l, u, c, h, p, f = [].concat(a), d = e.length - 1, m = [], g = [];
            for (s = d; s >= 0; s -= 1) {
                if ((p = this.searchProcessedElement(e[s])) ? t[s] = n[p - 1] : e[s]._render = o,
                "fl" === e[s].ty || "st" === e[s].ty || "gf" === e[s].ty || "gs" === e[s].ty)
                    p ? t[s].style.closed = !1 : t[s] = this.createStyleElement(e[s], i),
                    e[s]._render && r.appendChild(t[s].style.pElem),
                    m.push(t[s].style);
                else if ("gr" === e[s].ty) {
                    if (p)
                        for (u = t[s].it.length,
                        l = 0; l < u; l += 1)
                            t[s].prevViewData[l] = t[s].it[l];
                    else
                        t[s] = this.createGroupElement(e[s]);
                    this.searchShapes(e[s].it, t[s].it, t[s].prevViewData, t[s].gr, i + 1, f, o),
                    e[s]._render && r.appendChild(t[s].gr)
                } else
                    "tr" === e[s].ty ? (p || (t[s] = this.createTransformElement(e[s], r)),
                    c = t[s].transform,
                    f.push(c)) : "sh" === e[s].ty || "rc" === e[s].ty || "el" === e[s].ty || "sr" === e[s].ty ? (p || (t[s] = this.createShapeElement(e[s], f, i)),
                    this.setElementStyles(t[s])) : "tm" === e[s].ty || "rd" === e[s].ty || "ms" === e[s].ty || "pb" === e[s].ty ? (p ? (h = t[s]).closed = !1 : ((h = ShapeModifiers.getModifier(e[s].ty)).init(this, e[s]),
                    t[s] = h,
                    this.shapeModifiers.push(h)),
                    g.push(h)) : "rp" === e[s].ty && (p ? (h = t[s]).closed = !0 : (h = ShapeModifiers.getModifier(e[s].ty),
                    t[s] = h,
                    h.init(this, e, s, t),
                    this.shapeModifiers.push(h),
                    o = !1),
                    g.push(h));
                this.addProcessedElement(e[s], s + 1)
            }
            for (d = m.length,
            s = 0; s < d; s += 1)
                m[s].closed = !0;
            for (d = g.length,
            s = 0; s < d; s += 1)
                g[s].closed = !0
        }
        ,
        SVGShapeElement.prototype.renderInnerContent = function() {
            var e;
            this.renderModifiers();
            var t = this.stylesList.length;
            for (e = 0; e < t; e += 1)
                this.stylesList[e].reset();
            for (this.renderShape(),
            e = 0; e < t; e += 1)
                (this.stylesList[e]._mdf || this._isFirstFrame) && (this.stylesList[e].msElem && (this.stylesList[e].msElem.setAttribute("d", this.stylesList[e].d),
                this.stylesList[e].d = "M0 0" + this.stylesList[e].d),
                this.stylesList[e].pElem.setAttribute("d", this.stylesList[e].d || "M0 0"))
        }
        ,
        SVGShapeElement.prototype.renderShape = function() {
            var e, t, n = this.animatedContents.length;
            for (e = 0; e < n; e += 1)
                t = this.animatedContents[e],
                (this._isFirstFrame || t.element._isAnimated) && !0 !== t.data && t.fn(t.data, t.element, this._isFirstFrame)
        }
        ,
        SVGShapeElement.prototype.destroy = function() {
            this.destroyBaseElement(),
            this.shapesData = null,
            this.itemsData = null
        }
        ,
        SVGTintFilter.prototype.renderFrame = function(e) {
            if (e || this.filterManager._mdf) {
                var t = this.filterManager.effectElements[0].p.v
                  , n = this.filterManager.effectElements[1].p.v
                  , r = this.filterManager.effectElements[2].p.v / 100;
                this.matrixFilter.setAttribute("values", n[0] - t[0] + " 0 0 0 " + t[0] + " " + (n[1] - t[1]) + " 0 0 0 " + t[1] + " " + (n[2] - t[2]) + " 0 0 0 " + t[2] + " 0 0 0 " + r + " 0")
            }
        }
        ,
        SVGFillFilter.prototype.renderFrame = function(e) {
            if (e || this.filterManager._mdf) {
                var t = this.filterManager.effectElements[2].p.v
                  , n = this.filterManager.effectElements[6].p.v;
                this.matrixFilter.setAttribute("values", "0 0 0 0 " + t[0] + " 0 0 0 0 " + t[1] + " 0 0 0 0 " + t[2] + " 0 0 0 " + n + " 0")
            }
        }
        ,
        SVGGaussianBlurEffect.prototype.renderFrame = function(e) {
            if (e || this.filterManager._mdf) {
                var t = .3 * this.filterManager.effectElements[0].p.v
                  , n = this.filterManager.effectElements[1].p.v
                  , r = 3 == n ? 0 : t
                  , i = 2 == n ? 0 : t;
                this.feGaussianBlur.setAttribute("stdDeviation", r + " " + i);
                var a = 1 == this.filterManager.effectElements[2].p.v ? "wrap" : "duplicate";
                this.feGaussianBlur.setAttribute("edgeMode", a)
            }
        }
        ,
        SVGStrokeEffect.prototype.initialize = function() {
            var e, t, n, r, i = this.elem.layerElement.children || this.elem.layerElement.childNodes;
            for (1 === this.filterManager.effectElements[1].p.v ? (r = this.elem.maskManager.masksProperties.length,
            n = 0) : r = 1 + (n = this.filterManager.effectElements[0].p.v - 1),
            (t = createNS("g")).setAttribute("fill", "none"),
            t.setAttribute("stroke-linecap", "round"),
            t.setAttribute("stroke-dashoffset", 1); n < r; n += 1)
                e = createNS("path"),
                t.appendChild(e),
                this.paths.push({
                    p: e,
                    m: n
                });
            if (3 === this.filterManager.effectElements[10].p.v) {
                var a = createNS("mask")
                  , o = createElementID();
                a.setAttribute("id", o),
                a.setAttribute("mask-type", "alpha"),
                a.appendChild(t),
                this.elem.globalData.defs.appendChild(a);
                var s = createNS("g");
                for (s.setAttribute("mask", "url(" + locationHref + "#" + o + ")"); i[0]; )
                    s.appendChild(i[0]);
                this.elem.layerElement.appendChild(s),
                this.masker = a,
                t.setAttribute("stroke", "#fff")
            } else if (1 === this.filterManager.effectElements[10].p.v || 2 === this.filterManager.effectElements[10].p.v) {
                if (2 === this.filterManager.effectElements[10].p.v)
                    for (i = this.elem.layerElement.children || this.elem.layerElement.childNodes; i.length; )
                        this.elem.layerElement.removeChild(i[0]);
                this.elem.layerElement.appendChild(t),
                this.elem.layerElement.removeAttribute("mask"),
                t.setAttribute("stroke", "#fff")
            }
            this.initialized = !0,
            this.pathMasker = t
        }
        ,
        SVGStrokeEffect.prototype.renderFrame = function(e) {
            var t;
            this.initialized || this.initialize();
            var n, r, i = this.paths.length;
            for (t = 0; t < i; t += 1)
                if (-1 !== this.paths[t].m && (n = this.elem.maskManager.viewData[this.paths[t].m],
                r = this.paths[t].p,
                (e || this.filterManager._mdf || n.prop._mdf) && r.setAttribute("d", n.lastPath),
                e || this.filterManager.effectElements[9].p._mdf || this.filterManager.effectElements[4].p._mdf || this.filterManager.effectElements[7].p._mdf || this.filterManager.effectElements[8].p._mdf || n.prop._mdf)) {
                    var a;
                    if (0 !== this.filterManager.effectElements[7].p.v || 100 !== this.filterManager.effectElements[8].p.v) {
                        var o = .01 * Math.min(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v)
                          , s = .01 * Math.max(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v)
                          , l = r.getTotalLength();
                        a = "0 0 0 " + l * o + " ";
                        var u, c = l * (s - o), h = 1 + 2 * this.filterManager.effectElements[4].p.v * this.filterManager.effectElements[9].p.v * .01, p = Math.floor(c / h);
                        for (u = 0; u < p; u += 1)
                            a += "1 " + 2 * this.filterManager.effectElements[4].p.v * this.filterManager.effectElements[9].p.v * .01 + " ";
                        a += "0 " + 10 * l + " 0 0"
                    } else
                        a = "1 " + 2 * this.filterManager.effectElements[4].p.v * this.filterManager.effectElements[9].p.v * .01;
                    r.setAttribute("stroke-dasharray", a)
                }
            if ((e || this.filterManager.effectElements[4].p._mdf) && this.pathMasker.setAttribute("stroke-width", 2 * this.filterManager.effectElements[4].p.v),
            (e || this.filterManager.effectElements[6].p._mdf) && this.pathMasker.setAttribute("opacity", this.filterManager.effectElements[6].p.v),
            (1 === this.filterManager.effectElements[10].p.v || 2 === this.filterManager.effectElements[10].p.v) && (e || this.filterManager.effectElements[3].p._mdf)) {
                var f = this.filterManager.effectElements[3].p.v;
                this.pathMasker.setAttribute("stroke", "rgb(" + bmFloor(255 * f[0]) + "," + bmFloor(255 * f[1]) + "," + bmFloor(255 * f[2]) + ")")
            }
        }
        ,
        SVGTritoneFilter.prototype.renderFrame = function(e) {
            if (e || this.filterManager._mdf) {
                var t = this.filterManager.effectElements[0].p.v
                  , n = this.filterManager.effectElements[1].p.v
                  , r = this.filterManager.effectElements[2].p.v
                  , i = r[0] + " " + n[0] + " " + t[0]
                  , a = r[1] + " " + n[1] + " " + t[1]
                  , o = r[2] + " " + n[2] + " " + t[2];
                this.feFuncR.setAttribute("tableValues", i),
                this.feFuncG.setAttribute("tableValues", a),
                this.feFuncB.setAttribute("tableValues", o)
            }
        }
        ,
        SVGProLevelsFilter.prototype.createFeFunc = function(e, t) {
            var n = createNS(e);
            return n.setAttribute("type", "table"),
            t.appendChild(n),
            n
        }
        ,
        SVGProLevelsFilter.prototype.getTableValue = function(e, t, n, r, i) {
            for (var a, o, s = 0, l = Math.min(e, t), u = Math.max(e, t), c = Array.call(null, {
                length: 256
            }), h = 0, p = i - r, f = t - e; s <= 256; )
                o = (a = s / 256) <= l ? f < 0 ? i : r : a >= u ? f < 0 ? r : i : r + p * Math.pow((a - e) / f, 1 / n),
                c[h] = o,
                h += 1,
                s += 256 / 255;
            return c.join(" ")
        }
        ,
        SVGProLevelsFilter.prototype.renderFrame = function(e) {
            if (e || this.filterManager._mdf) {
                var t, n = this.filterManager.effectElements;
                this.feFuncRComposed && (e || n[3].p._mdf || n[4].p._mdf || n[5].p._mdf || n[6].p._mdf || n[7].p._mdf) && (t = this.getTableValue(n[3].p.v, n[4].p.v, n[5].p.v, n[6].p.v, n[7].p.v),
                this.feFuncRComposed.setAttribute("tableValues", t),
                this.feFuncGComposed.setAttribute("tableValues", t),
                this.feFuncBComposed.setAttribute("tableValues", t)),
                this.feFuncR && (e || n[10].p._mdf || n[11].p._mdf || n[12].p._mdf || n[13].p._mdf || n[14].p._mdf) && (t = this.getTableValue(n[10].p.v, n[11].p.v, n[12].p.v, n[13].p.v, n[14].p.v),
                this.feFuncR.setAttribute("tableValues", t)),
                this.feFuncG && (e || n[17].p._mdf || n[18].p._mdf || n[19].p._mdf || n[20].p._mdf || n[21].p._mdf) && (t = this.getTableValue(n[17].p.v, n[18].p.v, n[19].p.v, n[20].p.v, n[21].p.v),
                this.feFuncG.setAttribute("tableValues", t)),
                this.feFuncB && (e || n[24].p._mdf || n[25].p._mdf || n[26].p._mdf || n[27].p._mdf || n[28].p._mdf) && (t = this.getTableValue(n[24].p.v, n[25].p.v, n[26].p.v, n[27].p.v, n[28].p.v),
                this.feFuncB.setAttribute("tableValues", t)),
                this.feFuncA && (e || n[31].p._mdf || n[32].p._mdf || n[33].p._mdf || n[34].p._mdf || n[35].p._mdf) && (t = this.getTableValue(n[31].p.v, n[32].p.v, n[33].p.v, n[34].p.v, n[35].p.v),
                this.feFuncA.setAttribute("tableValues", t))
            }
        }
        ,
        SVGDropShadowEffect.prototype.renderFrame = function(e) {
            if (e || this.filterManager._mdf) {
                if ((e || this.filterManager.effectElements[4].p._mdf) && this.feGaussianBlur.setAttribute("stdDeviation", this.filterManager.effectElements[4].p.v / 4),
                e || this.filterManager.effectElements[0].p._mdf) {
                    var t = this.filterManager.effectElements[0].p.v;
                    this.feFlood.setAttribute("flood-color", rgbToHex(Math.round(255 * t[0]), Math.round(255 * t[1]), Math.round(255 * t[2])))
                }
                if ((e || this.filterManager.effectElements[1].p._mdf) && this.feFlood.setAttribute("flood-opacity", this.filterManager.effectElements[1].p.v / 255),
                e || this.filterManager.effectElements[2].p._mdf || this.filterManager.effectElements[3].p._mdf) {
                    var n = this.filterManager.effectElements[3].p.v
                      , r = (this.filterManager.effectElements[2].p.v - 90) * degToRads
                      , i = n * Math.cos(r)
                      , a = n * Math.sin(r);
                    this.feOffset.setAttribute("dx", i),
                    this.feOffset.setAttribute("dy", a)
                }
            }
        }
        ;
        var _svgMatteSymbols = [];
        function SVGMatte3Effect(e, t, n) {
            this.initialized = !1,
            this.filterManager = t,
            this.filterElem = e,
            this.elem = n,
            n.matteElement = createNS("g"),
            n.matteElement.appendChild(n.layerElement),
            n.matteElement.appendChild(n.transformedElement),
            n.baseElement = n.matteElement
        }
        function SVGEffects(e) {
            var t, n, r = e.data.ef ? e.data.ef.length : 0, i = createElementID(), a = filtersFactory.createFilter(i, !0), o = 0;
            for (this.filters = [],
            t = 0; t < r; t += 1)
                n = null,
                20 === e.data.ef[t].ty ? (o += 1,
                n = new SVGTintFilter(a,e.effectsManager.effectElements[t])) : 21 === e.data.ef[t].ty ? (o += 1,
                n = new SVGFillFilter(a,e.effectsManager.effectElements[t])) : 22 === e.data.ef[t].ty ? n = new SVGStrokeEffect(e,e.effectsManager.effectElements[t]) : 23 === e.data.ef[t].ty ? (o += 1,
                n = new SVGTritoneFilter(a,e.effectsManager.effectElements[t])) : 24 === e.data.ef[t].ty ? (o += 1,
                n = new SVGProLevelsFilter(a,e.effectsManager.effectElements[t])) : 25 === e.data.ef[t].ty ? (o += 1,
                n = new SVGDropShadowEffect(a,e.effectsManager.effectElements[t])) : 28 === e.data.ef[t].ty ? n = new SVGMatte3Effect(a,e.effectsManager.effectElements[t],e) : 29 === e.data.ef[t].ty && (o += 1,
                n = new SVGGaussianBlurEffect(a,e.effectsManager.effectElements[t])),
                n && this.filters.push(n);
            o && (e.globalData.defs.appendChild(a),
            e.layerElement.setAttribute("filter", "url(" + locationHref + "#" + i + ")")),
            this.filters.length && e.addRenderableComponent(this)
        }
        function CVContextData() {
            var e;
            for (this.saved = [],
            this.cArrPos = 0,
            this.cTr = new Matrix,
            this.cO = 1,
            this.savedOp = createTypedArray("float32", 15),
            e = 0; e < 15; e += 1)
                this.saved[e] = createTypedArray("float32", 16);
            this._length = 15
        }
        function CVBaseElement() {}
        function CVImageElement(e, t, n) {
            this.assetData = t.getAssetData(e.refId),
            this.img = t.imageLoader.getAsset(this.assetData),
            this.initElement(e, t, n)
        }
        function CVCompElement(e, t, n) {
            this.completeLayers = !1,
            this.layers = e.layers,
            this.pendingElements = [],
            this.elements = createSizedArray(this.layers.length),
            this.initElement(e, t, n),
            this.tm = e.tm ? PropertyFactory.getProp(this, e.tm, 0, t.frameRate, this) : {
                _placeholder: !0
            }
        }
        function CVMaskElement(e, t) {
            var n;
            this.data = e,
            this.element = t,
            this.masksProperties = this.data.masksProperties || [],
            this.viewData = createSizedArray(this.masksProperties.length);
            var r = this.masksProperties.length
              , i = !1;
            for (n = 0; n < r; n += 1)
                "n" !== this.masksProperties[n].mode && (i = !0),
                this.viewData[n] = ShapePropertyFactory.getShapeProp(this.element, this.masksProperties[n], 3);
            this.hasMasks = i,
            i && this.element.addRenderableComponent(this)
        }
        function CVShapeElement(e, t, n) {
            this.shapes = [],
            this.shapesData = e.shapes,
            this.stylesList = [],
            this.itemsData = [],
            this.prevViewData = [],
            this.shapeModifiers = [],
            this.processedElements = [],
            this.transformsManager = new ShapeTransformManager,
            this.initElement(e, t, n)
        }
        function CVSolidElement(e, t, n) {
            this.initElement(e, t, n)
        }
        function CVTextElement(e, t, n) {
            this.textSpans = [],
            this.yOffset = 0,
            this.fillColorAnim = !1,
            this.strokeColorAnim = !1,
            this.strokeWidthAnim = !1,
            this.stroke = !1,
            this.fill = !1,
            this.justifyOffset = 0,
            this.currentRender = null,
            this.renderType = "canvas",
            this.values = {
                fill: "rgba(0,0,0,0)",
                stroke: "rgba(0,0,0,0)",
                sWidth: 0,
                fValue: ""
            },
            this.initElement(e, t, n)
        }
        function CVEffects() {}
        function HBaseElement() {}
        function HSolidElement(e, t, n) {
            this.initElement(e, t, n)
        }
        function HCompElement(e, t, n) {
            this.layers = e.layers,
            this.supports3d = !e.hasMask,
            this.completeLayers = !1,
            this.pendingElements = [],
            this.elements = this.layers ? createSizedArray(this.layers.length) : [],
            this.initElement(e, t, n),
            this.tm = e.tm ? PropertyFactory.getProp(this, e.tm, 0, t.frameRate, this) : {
                _placeholder: !0
            }
        }
        function HShapeElement(e, t, n) {
            this.shapes = [],
            this.shapesData = e.shapes,
            this.stylesList = [],
            this.shapeModifiers = [],
            this.itemsData = [],
            this.processedElements = [],
            this.animatedContents = [],
            this.shapesContainer = createNS("g"),
            this.initElement(e, t, n),
            this.prevViewData = [],
            this.currentBBox = {
                x: 999999,
                y: -999999,
                h: 0,
                w: 0
            }
        }
        function HTextElement(e, t, n) {
            this.textSpans = [],
            this.textPaths = [],
            this.currentBBox = {
                x: 999999,
                y: -999999,
                h: 0,
                w: 0
            },
            this.renderType = "svg",
            this.isMasked = !1,
            this.initElement(e, t, n)
        }
        function HImageElement(e, t, n) {
            this.assetData = t.getAssetData(e.refId),
            this.initElement(e, t, n)
        }
        function HCameraElement(e, t, n) {
            this.initFrame(),
            this.initBaseData(e, t, n),
            this.initHierarchy();
            var r = PropertyFactory.getProp;
            if (this.pe = r(this, e.pe, 0, 0, this),
            e.ks.p.s ? (this.px = r(this, e.ks.p.x, 1, 0, this),
            this.py = r(this, e.ks.p.y, 1, 0, this),
            this.pz = r(this, e.ks.p.z, 1, 0, this)) : this.p = r(this, e.ks.p, 1, 0, this),
            e.ks.a && (this.a = r(this, e.ks.a, 1, 0, this)),
            e.ks.or.k.length && e.ks.or.k[0].to) {
                var i, a = e.ks.or.k.length;
                for (i = 0; i < a; i += 1)
                    e.ks.or.k[i].to = null,
                    e.ks.or.k[i].ti = null
            }
            this.or = r(this, e.ks.or, 1, degToRads, this),
            this.or.sh = !0,
            this.rx = r(this, e.ks.rx, 0, degToRads, this),
            this.ry = r(this, e.ks.ry, 0, degToRads, this),
            this.rz = r(this, e.ks.rz, 0, degToRads, this),
            this.mat = new Matrix,
            this._prevMat = new Matrix,
            this._isFirstFrame = !0,
            this.finalTransform = {
                mProp: this
            }
        }
        function HEffects() {}
        SVGMatte3Effect.prototype.findSymbol = function(e) {
            for (var t = 0, n = _svgMatteSymbols.length; t < n; ) {
                if (_svgMatteSymbols[t] === e)
                    return _svgMatteSymbols[t];
                t += 1
            }
            return null
        }
        ,
        SVGMatte3Effect.prototype.replaceInParent = function(e, t) {
            var n = e.layerElement.parentNode;
            if (n) {
                for (var r, i = n.children, a = 0, o = i.length; a < o && i[a] !== e.layerElement; )
                    a += 1;
                a <= o - 2 && (r = i[a + 1]);
                var s = createNS("use");
                s.setAttribute("href", "#" + t),
                r ? n.insertBefore(s, r) : n.appendChild(s)
            }
        }
        ,
        SVGMatte3Effect.prototype.setElementAsMask = function(e, t) {
            if (!this.findSymbol(t)) {
                var n = createElementID()
                  , r = createNS("mask");
                r.setAttribute("id", t.layerId),
                r.setAttribute("mask-type", "alpha"),
                _svgMatteSymbols.push(t);
                var i = e.globalData.defs;
                i.appendChild(r);
                var a = createNS("symbol");
                a.setAttribute("id", n),
                this.replaceInParent(t, n),
                a.appendChild(t.layerElement),
                i.appendChild(a);
                var o = createNS("use");
                o.setAttribute("href", "#" + n),
                r.appendChild(o),
                t.data.hd = !1,
                t.show()
            }
            e.setMatte(t.layerId)
        }
        ,
        SVGMatte3Effect.prototype.initialize = function() {
            for (var e = this.filterManager.effectElements[0].p.v, t = this.elem.comp.elements, n = 0, r = t.length; n < r; )
                t[n] && t[n].data.ind === e && this.setElementAsMask(this.elem, t[n]),
                n += 1;
            this.initialized = !0
        }
        ,
        SVGMatte3Effect.prototype.renderFrame = function() {
            this.initialized || this.initialize()
        }
        ,
        SVGEffects.prototype.renderFrame = function(e) {
            var t, n = this.filters.length;
            for (t = 0; t < n; t += 1)
                this.filters[t].renderFrame(e)
        }
        ,
        CVContextData.prototype.duplicate = function() {
            var e = 2 * this._length
              , t = this.savedOp;
            this.savedOp = createTypedArray("float32", e),
            this.savedOp.set(t);
            var n = 0;
            for (n = this._length; n < e; n += 1)
                this.saved[n] = createTypedArray("float32", 16);
            this._length = e
        }
        ,
        CVContextData.prototype.reset = function() {
            this.cArrPos = 0,
            this.cTr.reset(),
            this.cO = 1
        }
        ,
        CVBaseElement.prototype = {
            createElements: function() {},
            initRendererElement: function() {},
            createContainerElements: function() {
                this.canvasContext = this.globalData.canvasContext,
                this.renderableEffectsManager = new CVEffects(this)
            },
            createContent: function() {},
            setBlendMode: function() {
                var e = this.globalData;
                if (e.blendMode !== this.data.bm) {
                    e.blendMode = this.data.bm;
                    var t = getBlendMode(this.data.bm);
                    e.canvasContext.globalCompositeOperation = t
                }
            },
            createRenderableComponents: function() {
                this.maskManager = new CVMaskElement(this.data,this)
            },
            hideElement: function() {
                this.hidden || this.isInRange && !this.isTransparent || (this.hidden = !0)
            },
            showElement: function() {
                this.isInRange && !this.isTransparent && (this.hidden = !1,
                this._isFirstFrame = !0,
                this.maskManager._isFirstFrame = !0)
            },
            renderFrame: function() {
                if (!this.hidden && !this.data.hd) {
                    this.renderTransform(),
                    this.renderRenderable(),
                    this.setBlendMode();
                    var e = 0 === this.data.ty;
                    this.globalData.renderer.save(e),
                    this.globalData.renderer.ctxTransform(this.finalTransform.mat.props),
                    this.globalData.renderer.ctxOpacity(this.finalTransform.mProp.o.v),
                    this.renderInnerContent(),
                    this.globalData.renderer.restore(e),
                    this.maskManager.hasMasks && this.globalData.renderer.restore(!0),
                    this._isFirstFrame && (this._isFirstFrame = !1)
                }
            },
            destroy: function() {
                this.canvasContext = null,
                this.data = null,
                this.globalData = null,
                this.maskManager.destroy()
            },
            mHelper: new Matrix
        },
        CVBaseElement.prototype.hide = CVBaseElement.prototype.hideElement,
        CVBaseElement.prototype.show = CVBaseElement.prototype.showElement,
        extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVImageElement),
        CVImageElement.prototype.initElement = SVGShapeElement.prototype.initElement,
        CVImageElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame,
        CVImageElement.prototype.createContent = function() {
            if (this.img.width && (this.assetData.w !== this.img.width || this.assetData.h !== this.img.height)) {
                var e = createTag("canvas");
                e.width = this.assetData.w,
                e.height = this.assetData.h;
                var t, n, r = e.getContext("2d"), i = this.img.width, a = this.img.height, o = i / a, s = this.assetData.w / this.assetData.h, l = this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio;
                o > s && "xMidYMid slice" === l || o < s && "xMidYMid slice" !== l ? t = (n = a) * s : n = (t = i) / s,
                r.drawImage(this.img, (i - t) / 2, (a - n) / 2, t, n, 0, 0, this.assetData.w, this.assetData.h),
                this.img = e
            }
        }
        ,
        CVImageElement.prototype.renderInnerContent = function() {
            this.canvasContext.drawImage(this.img, 0, 0)
        }
        ,
        CVImageElement.prototype.destroy = function() {
            this.img = null
        }
        ,
        extendPrototype([CanvasRenderer, ICompElement, CVBaseElement], CVCompElement),
        CVCompElement.prototype.renderInnerContent = function() {
            var e, t = this.canvasContext;
            for (t.beginPath(),
            t.moveTo(0, 0),
            t.lineTo(this.data.w, 0),
            t.lineTo(this.data.w, this.data.h),
            t.lineTo(0, this.data.h),
            t.lineTo(0, 0),
            t.clip(),
            e = this.layers.length - 1; e >= 0; e -= 1)
                (this.completeLayers || this.elements[e]) && this.elements[e].renderFrame()
        }
        ,
        CVCompElement.prototype.destroy = function() {
            var e;
            for (e = this.layers.length - 1; e >= 0; e -= 1)
                this.elements[e] && this.elements[e].destroy();
            this.layers = null,
            this.elements = null
        }
        ,
        CVMaskElement.prototype.renderFrame = function() {
            if (this.hasMasks) {
                var e, t, n, r, i = this.element.finalTransform.mat, a = this.element.canvasContext, o = this.masksProperties.length;
                for (a.beginPath(),
                e = 0; e < o; e += 1)
                    if ("n" !== this.masksProperties[e].mode) {
                        var s;
                        this.masksProperties[e].inv && (a.moveTo(0, 0),
                        a.lineTo(this.element.globalData.compSize.w, 0),
                        a.lineTo(this.element.globalData.compSize.w, this.element.globalData.compSize.h),
                        a.lineTo(0, this.element.globalData.compSize.h),
                        a.lineTo(0, 0)),
                        r = this.viewData[e].v,
                        t = i.applyToPointArray(r.v[0][0], r.v[0][1], 0),
                        a.moveTo(t[0], t[1]);
                        var l = r._length;
                        for (s = 1; s < l; s += 1)
                            n = i.applyToTriplePoints(r.o[s - 1], r.i[s], r.v[s]),
                            a.bezierCurveTo(n[0], n[1], n[2], n[3], n[4], n[5]);
                        n = i.applyToTriplePoints(r.o[s - 1], r.i[0], r.v[0]),
                        a.bezierCurveTo(n[0], n[1], n[2], n[3], n[4], n[5])
                    }
                this.element.globalData.renderer.save(!0),
                a.clip()
            }
        }
        ,
        CVMaskElement.prototype.getMaskProperty = MaskElement.prototype.getMaskProperty,
        CVMaskElement.prototype.destroy = function() {
            this.element = null
        }
        ,
        extendPrototype([BaseElement, TransformElement, CVBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableElement], CVShapeElement),
        CVShapeElement.prototype.initElement = RenderableDOMElement.prototype.initElement,
        CVShapeElement.prototype.transformHelper = {
            opacity: 1,
            _opMdf: !1
        },
        CVShapeElement.prototype.dashResetter = [],
        CVShapeElement.prototype.createContent = function() {
            this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, !0, [])
        }
        ,
        CVShapeElement.prototype.createStyleElement = function(e, t) {
            var n = {
                data: e,
                type: e.ty,
                preTransforms: this.transformsManager.addTransformSequence(t),
                transforms: [],
                elements: [],
                closed: !0 === e.hd
            }
              , r = {};
            if ("fl" === e.ty || "st" === e.ty ? (r.c = PropertyFactory.getProp(this, e.c, 1, 255, this),
            r.c.k || (n.co = "rgb(" + bmFloor(r.c.v[0]) + "," + bmFloor(r.c.v[1]) + "," + bmFloor(r.c.v[2]) + ")")) : "gf" !== e.ty && "gs" !== e.ty || (r.s = PropertyFactory.getProp(this, e.s, 1, null, this),
            r.e = PropertyFactory.getProp(this, e.e, 1, null, this),
            r.h = PropertyFactory.getProp(this, e.h || {
                k: 0
            }, 0, .01, this),
            r.a = PropertyFactory.getProp(this, e.a || {
                k: 0
            }, 0, degToRads, this),
            r.g = new GradientProperty(this,e.g,this)),
            r.o = PropertyFactory.getProp(this, e.o, 0, .01, this),
            "st" === e.ty || "gs" === e.ty) {
                if (n.lc = this.lcEnum[e.lc] || "round",
                n.lj = this.ljEnum[e.lj] || "round",
                1 == e.lj && (n.ml = e.ml),
                r.w = PropertyFactory.getProp(this, e.w, 0, null, this),
                r.w.k || (n.wi = r.w.v),
                e.d) {
                    var i = new DashProperty(this,e.d,"canvas",this);
                    r.d = i,
                    r.d.k || (n.da = r.d.dashArray,
                    n.do = r.d.dashoffset[0])
                }
            } else
                n.r = 2 === e.r ? "evenodd" : "nonzero";
            return this.stylesList.push(n),
            r.style = n,
            r
        }
        ,
        CVShapeElement.prototype.createGroupElement = function() {
            return {
                it: [],
                prevViewData: []
            }
        }
        ,
        CVShapeElement.prototype.createTransformElement = function(e) {
            return {
                transform: {
                    opacity: 1,
                    _opMdf: !1,
                    key: this.transformsManager.getNewKey(),
                    op: PropertyFactory.getProp(this, e.o, 0, .01, this),
                    mProps: TransformPropertyFactory.getTransformProperty(this, e, this)
                }
            }
        }
        ,
        CVShapeElement.prototype.createShapeElement = function(e) {
            var t = new CVShapeData(this,e,this.stylesList,this.transformsManager);
            return this.shapes.push(t),
            this.addShapeToModifiers(t),
            t
        }
        ,
        CVShapeElement.prototype.reloadShapes = function() {
            var e;
            this._isFirstFrame = !0;
            var t = this.itemsData.length;
            for (e = 0; e < t; e += 1)
                this.prevViewData[e] = this.itemsData[e];
            for (this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, !0, []),
            t = this.dynamicProperties.length,
            e = 0; e < t; e += 1)
                this.dynamicProperties[e].getValue();
            this.renderModifiers(),
            this.transformsManager.processSequences(this._isFirstFrame)
        }
        ,
        CVShapeElement.prototype.addTransformToStyleList = function(e) {
            var t, n = this.stylesList.length;
            for (t = 0; t < n; t += 1)
                this.stylesList[t].closed || this.stylesList[t].transforms.push(e)
        }
        ,
        CVShapeElement.prototype.removeTransformFromStyleList = function() {
            var e, t = this.stylesList.length;
            for (e = 0; e < t; e += 1)
                this.stylesList[e].closed || this.stylesList[e].transforms.pop()
        }
        ,
        CVShapeElement.prototype.closeStyles = function(e) {
            var t, n = e.length;
            for (t = 0; t < n; t += 1)
                e[t].closed = !0
        }
        ,
        CVShapeElement.prototype.searchShapes = function(e, t, n, r, i) {
            var a, o, s, l, u, c, h = e.length - 1, p = [], f = [], d = [].concat(i);
            for (a = h; a >= 0; a -= 1) {
                if ((l = this.searchProcessedElement(e[a])) ? t[a] = n[l - 1] : e[a]._shouldRender = r,
                "fl" === e[a].ty || "st" === e[a].ty || "gf" === e[a].ty || "gs" === e[a].ty)
                    l ? t[a].style.closed = !1 : t[a] = this.createStyleElement(e[a], d),
                    p.push(t[a].style);
                else if ("gr" === e[a].ty) {
                    if (l)
                        for (s = t[a].it.length,
                        o = 0; o < s; o += 1)
                            t[a].prevViewData[o] = t[a].it[o];
                    else
                        t[a] = this.createGroupElement(e[a]);
                    this.searchShapes(e[a].it, t[a].it, t[a].prevViewData, r, d)
                } else
                    "tr" === e[a].ty ? (l || (c = this.createTransformElement(e[a]),
                    t[a] = c),
                    d.push(t[a]),
                    this.addTransformToStyleList(t[a])) : "sh" === e[a].ty || "rc" === e[a].ty || "el" === e[a].ty || "sr" === e[a].ty ? l || (t[a] = this.createShapeElement(e[a])) : "tm" === e[a].ty || "rd" === e[a].ty || "pb" === e[a].ty ? (l ? (u = t[a]).closed = !1 : ((u = ShapeModifiers.getModifier(e[a].ty)).init(this, e[a]),
                    t[a] = u,
                    this.shapeModifiers.push(u)),
                    f.push(u)) : "rp" === e[a].ty && (l ? (u = t[a]).closed = !0 : (u = ShapeModifiers.getModifier(e[a].ty),
                    t[a] = u,
                    u.init(this, e, a, t),
                    this.shapeModifiers.push(u),
                    r = !1),
                    f.push(u));
                this.addProcessedElement(e[a], a + 1)
            }
            for (this.removeTransformFromStyleList(),
            this.closeStyles(p),
            h = f.length,
            a = 0; a < h; a += 1)
                f[a].closed = !0
        }
        ,
        CVShapeElement.prototype.renderInnerContent = function() {
            this.transformHelper.opacity = 1,
            this.transformHelper._opMdf = !1,
            this.renderModifiers(),
            this.transformsManager.processSequences(this._isFirstFrame),
            this.renderShape(this.transformHelper, this.shapesData, this.itemsData, !0)
        }
        ,
        CVShapeElement.prototype.renderShapeTransform = function(e, t) {
            (e._opMdf || t.op._mdf || this._isFirstFrame) && (t.opacity = e.opacity,
            t.opacity *= t.op.v,
            t._opMdf = !0)
        }
        ,
        CVShapeElement.prototype.drawLayer = function() {
            var e, t, n, r, i, a, o, s, l, u = this.stylesList.length, c = this.globalData.renderer, h = this.globalData.canvasContext;
            for (e = 0; e < u; e += 1)
                if (("st" !== (s = (l = this.stylesList[e]).type) && "gs" !== s || 0 !== l.wi) && l.data._shouldRender && 0 !== l.coOp && 0 !== this.globalData.currentGlobalAlpha) {
                    for (c.save(),
                    a = l.elements,
                    "st" === s || "gs" === s ? (h.strokeStyle = "st" === s ? l.co : l.grd,
                    h.lineWidth = l.wi,
                    h.lineCap = l.lc,
                    h.lineJoin = l.lj,
                    h.miterLimit = l.ml || 0) : h.fillStyle = "fl" === s ? l.co : l.grd,
                    c.ctxOpacity(l.coOp),
                    "st" !== s && "gs" !== s && h.beginPath(),
                    c.ctxTransform(l.preTransforms.finalTransform.props),
                    n = a.length,
                    t = 0; t < n; t += 1) {
                        for ("st" !== s && "gs" !== s || (h.beginPath(),
                        l.da && (h.setLineDash(l.da),
                        h.lineDashOffset = l.do)),
                        i = (o = a[t].trNodes).length,
                        r = 0; r < i; r += 1)
                            "m" === o[r].t ? h.moveTo(o[r].p[0], o[r].p[1]) : "c" === o[r].t ? h.bezierCurveTo(o[r].pts[0], o[r].pts[1], o[r].pts[2], o[r].pts[3], o[r].pts[4], o[r].pts[5]) : h.closePath();
                        "st" !== s && "gs" !== s || (h.stroke(),
                        l.da && h.setLineDash(this.dashResetter))
                    }
                    "st" !== s && "gs" !== s && h.fill(l.r),
                    c.restore()
                }
        }
        ,
        CVShapeElement.prototype.renderShape = function(e, t, n, r) {
            var i, a;
            for (a = e,
            i = t.length - 1; i >= 0; i -= 1)
                "tr" === t[i].ty ? (a = n[i].transform,
                this.renderShapeTransform(e, a)) : "sh" === t[i].ty || "el" === t[i].ty || "rc" === t[i].ty || "sr" === t[i].ty ? this.renderPath(t[i], n[i]) : "fl" === t[i].ty ? this.renderFill(t[i], n[i], a) : "st" === t[i].ty ? this.renderStroke(t[i], n[i], a) : "gf" === t[i].ty || "gs" === t[i].ty ? this.renderGradientFill(t[i], n[i], a) : "gr" === t[i].ty ? this.renderShape(a, t[i].it, n[i].it) : t[i].ty;
            r && this.drawLayer()
        }
        ,
        CVShapeElement.prototype.renderStyledShape = function(e, t) {
            if (this._isFirstFrame || t._mdf || e.transforms._mdf) {
                var n, r, i, a = e.trNodes, o = t.paths, s = o._length;
                a.length = 0;
                var l = e.transforms.finalTransform;
                for (i = 0; i < s; i += 1) {
                    var u = o.shapes[i];
                    if (u && u.v) {
                        for (r = u._length,
                        n = 1; n < r; n += 1)
                            1 === n && a.push({
                                t: "m",
                                p: l.applyToPointArray(u.v[0][0], u.v[0][1], 0)
                            }),
                            a.push({
                                t: "c",
                                pts: l.applyToTriplePoints(u.o[n - 1], u.i[n], u.v[n])
                            });
                        1 === r && a.push({
                            t: "m",
                            p: l.applyToPointArray(u.v[0][0], u.v[0][1], 0)
                        }),
                        u.c && r && (a.push({
                            t: "c",
                            pts: l.applyToTriplePoints(u.o[n - 1], u.i[0], u.v[0])
                        }),
                        a.push({
                            t: "z"
                        }))
                    }
                }
                e.trNodes = a
            }
        }
        ,
        CVShapeElement.prototype.renderPath = function(e, t) {
            if (!0 !== e.hd && e._shouldRender) {
                var n, r = t.styledShapes.length;
                for (n = 0; n < r; n += 1)
                    this.renderStyledShape(t.styledShapes[n], t.sh)
            }
        }
        ,
        CVShapeElement.prototype.renderFill = function(e, t, n) {
            var r = t.style;
            (t.c._mdf || this._isFirstFrame) && (r.co = "rgb(" + bmFloor(t.c.v[0]) + "," + bmFloor(t.c.v[1]) + "," + bmFloor(t.c.v[2]) + ")"),
            (t.o._mdf || n._opMdf || this._isFirstFrame) && (r.coOp = t.o.v * n.opacity)
        }
        ,
        CVShapeElement.prototype.renderGradientFill = function(e, t, n) {
            var r, i = t.style;
            if (!i.grd || t.g._mdf || t.s._mdf || t.e._mdf || 1 !== e.t && (t.h._mdf || t.a._mdf)) {
                var a, o = this.globalData.canvasContext, s = t.s.v, l = t.e.v;
                if (1 === e.t)
                    r = o.createLinearGradient(s[0], s[1], l[0], l[1]);
                else {
                    var u = Math.sqrt(Math.pow(s[0] - l[0], 2) + Math.pow(s[1] - l[1], 2))
                      , c = Math.atan2(l[1] - s[1], l[0] - s[0])
                      , h = t.h.v;
                    h >= 1 ? h = .99 : h <= -1 && (h = -.99);
                    var p = u * h
                      , f = Math.cos(c + t.a.v) * p + s[0]
                      , d = Math.sin(c + t.a.v) * p + s[1];
                    r = o.createRadialGradient(f, d, 0, s[0], s[1], u)
                }
                var m = e.g.p
                  , g = t.g.c
                  , v = 1;
                for (a = 0; a < m; a += 1)
                    t.g._hasOpacity && t.g._collapsable && (v = t.g.o[2 * a + 1]),
                    r.addColorStop(g[4 * a] / 100, "rgba(" + g[4 * a + 1] + "," + g[4 * a + 2] + "," + g[4 * a + 3] + "," + v + ")");
                i.grd = r
            }
            i.coOp = t.o.v * n.opacity
        }
        ,
        CVShapeElement.prototype.renderStroke = function(e, t, n) {
            var r = t.style
              , i = t.d;
            i && (i._mdf || this._isFirstFrame) && (r.da = i.dashArray,
            r.do = i.dashoffset[0]),
            (t.c._mdf || this._isFirstFrame) && (r.co = "rgb(" + bmFloor(t.c.v[0]) + "," + bmFloor(t.c.v[1]) + "," + bmFloor(t.c.v[2]) + ")"),
            (t.o._mdf || n._opMdf || this._isFirstFrame) && (r.coOp = t.o.v * n.opacity),
            (t.w._mdf || this._isFirstFrame) && (r.wi = t.w.v)
        }
        ,
        CVShapeElement.prototype.destroy = function() {
            this.shapesData = null,
            this.globalData = null,
            this.canvasContext = null,
            this.stylesList.length = 0,
            this.itemsData.length = 0
        }
        ,
        extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVSolidElement),
        CVSolidElement.prototype.initElement = SVGShapeElement.prototype.initElement,
        CVSolidElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame,
        CVSolidElement.prototype.renderInnerContent = function() {
            var e = this.canvasContext;
            e.fillStyle = this.data.sc,
            e.fillRect(0, 0, this.data.sw, this.data.sh)
        }
        ,
        extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement, ITextElement], CVTextElement),
        CVTextElement.prototype.tHelper = createTag("canvas").getContext("2d"),
        CVTextElement.prototype.buildNewText = function() {
            var e = this.textProperty.currentData;
            this.renderedLetters = createSizedArray(e.l ? e.l.length : 0);
            var t = !1;
            e.fc ? (t = !0,
            this.values.fill = this.buildColor(e.fc)) : this.values.fill = "rgba(0,0,0,0)",
            this.fill = t;
            var n = !1;
            e.sc && (n = !0,
            this.values.stroke = this.buildColor(e.sc),
            this.values.sWidth = e.sw);
            var r, i, a, o, s, l, u, c, h, p, f, d, m = this.globalData.fontManager.getFontByName(e.f), g = e.l, v = this.mHelper;
            this.stroke = n,
            this.values.fValue = e.finalSize + "px " + this.globalData.fontManager.getFontByName(e.f).fFamily,
            i = e.finalText.length;
            var y = this.data.singleShape
              , b = .001 * e.tr * e.finalSize
              , x = 0
              , w = 0
              , _ = !0
              , S = 0;
            for (r = 0; r < i; r += 1) {
                for (o = (a = this.globalData.fontManager.getCharData(e.finalText[r], m.fStyle, this.globalData.fontManager.getFontByName(e.f).fFamily)) && a.data || {},
                v.reset(),
                y && g[r].n && (x = -b,
                w += e.yOffset,
                w += _ ? 1 : 0,
                _ = !1),
                h = (u = o.shapes ? o.shapes[0].it : []).length,
                v.scale(e.finalSize / 100, e.finalSize / 100),
                y && this.applyTextPropertiesToMatrix(e, v, g[r].line, x, w),
                f = createSizedArray(h),
                c = 0; c < h; c += 1) {
                    for (l = u[c].ks.k.i.length,
                    p = u[c].ks.k,
                    d = [],
                    s = 1; s < l; s += 1)
                        1 === s && d.push(v.applyToX(p.v[0][0], p.v[0][1], 0), v.applyToY(p.v[0][0], p.v[0][1], 0)),
                        d.push(v.applyToX(p.o[s - 1][0], p.o[s - 1][1], 0), v.applyToY(p.o[s - 1][0], p.o[s - 1][1], 0), v.applyToX(p.i[s][0], p.i[s][1], 0), v.applyToY(p.i[s][0], p.i[s][1], 0), v.applyToX(p.v[s][0], p.v[s][1], 0), v.applyToY(p.v[s][0], p.v[s][1], 0));
                    d.push(v.applyToX(p.o[s - 1][0], p.o[s - 1][1], 0), v.applyToY(p.o[s - 1][0], p.o[s - 1][1], 0), v.applyToX(p.i[0][0], p.i[0][1], 0), v.applyToY(p.i[0][0], p.i[0][1], 0), v.applyToX(p.v[0][0], p.v[0][1], 0), v.applyToY(p.v[0][0], p.v[0][1], 0)),
                    f[c] = d
                }
                y && (x += g[r].l,
                x += b),
                this.textSpans[S] ? this.textSpans[S].elem = f : this.textSpans[S] = {
                    elem: f
                },
                S += 1
            }
        }
        ,
        CVTextElement.prototype.renderInnerContent = function() {
            var e, t, n, r, i, a, o = this.canvasContext;
            o.font = this.values.fValue,
            o.lineCap = "butt",
            o.lineJoin = "miter",
            o.miterLimit = 4,
            this.data.singleShape || this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);
            var s, l = this.textAnimator.renderedLetters, u = this.textProperty.currentData.l;
            t = u.length;
            var c, h, p = null, f = null, d = null;
            for (e = 0; e < t; e += 1)
                if (!u[e].n) {
                    if ((s = l[e]) && (this.globalData.renderer.save(),
                    this.globalData.renderer.ctxTransform(s.p),
                    this.globalData.renderer.ctxOpacity(s.o)),
                    this.fill) {
                        for (s && s.fc ? p !== s.fc && (p = s.fc,
                        o.fillStyle = s.fc) : p !== this.values.fill && (p = this.values.fill,
                        o.fillStyle = this.values.fill),
                        r = (c = this.textSpans[e].elem).length,
                        this.globalData.canvasContext.beginPath(),
                        n = 0; n < r; n += 1)
                            for (a = (h = c[n]).length,
                            this.globalData.canvasContext.moveTo(h[0], h[1]),
                            i = 2; i < a; i += 6)
                                this.globalData.canvasContext.bezierCurveTo(h[i], h[i + 1], h[i + 2], h[i + 3], h[i + 4], h[i + 5]);
                        this.globalData.canvasContext.closePath(),
                        this.globalData.canvasContext.fill()
                    }
                    if (this.stroke) {
                        for (s && s.sw ? d !== s.sw && (d = s.sw,
                        o.lineWidth = s.sw) : d !== this.values.sWidth && (d = this.values.sWidth,
                        o.lineWidth = this.values.sWidth),
                        s && s.sc ? f !== s.sc && (f = s.sc,
                        o.strokeStyle = s.sc) : f !== this.values.stroke && (f = this.values.stroke,
                        o.strokeStyle = this.values.stroke),
                        r = (c = this.textSpans[e].elem).length,
                        this.globalData.canvasContext.beginPath(),
                        n = 0; n < r; n += 1)
                            for (a = (h = c[n]).length,
                            this.globalData.canvasContext.moveTo(h[0], h[1]),
                            i = 2; i < a; i += 6)
                                this.globalData.canvasContext.bezierCurveTo(h[i], h[i + 1], h[i + 2], h[i + 3], h[i + 4], h[i + 5]);
                        this.globalData.canvasContext.closePath(),
                        this.globalData.canvasContext.stroke()
                    }
                    s && this.globalData.renderer.restore()
                }
        }
        ,
        CVEffects.prototype.renderFrame = function() {}
        ,
        HBaseElement.prototype = {
            checkBlendMode: function() {},
            initRendererElement: function() {
                this.baseElement = createTag(this.data.tg || "div"),
                this.data.hasMask ? (this.svgElement = createNS("svg"),
                this.layerElement = createNS("g"),
                this.maskedElement = this.layerElement,
                this.svgElement.appendChild(this.layerElement),
                this.baseElement.appendChild(this.svgElement)) : this.layerElement = this.baseElement,
                styleDiv(this.baseElement)
            },
            createContainerElements: function() {
                this.renderableEffectsManager = new CVEffects(this),
                this.transformedElement = this.baseElement,
                this.maskedElement = this.layerElement,
                this.data.ln && this.layerElement.setAttribute("id", this.data.ln),
                this.data.cl && this.layerElement.setAttribute("class", this.data.cl),
                0 !== this.data.bm && this.setBlendMode()
            },
            renderElement: function() {
                var e = this.transformedElement ? this.transformedElement.style : {};
                if (this.finalTransform._matMdf) {
                    var t = this.finalTransform.mat.toCSS();
                    e.transform = t,
                    e.webkitTransform = t
                }
                this.finalTransform._opMdf && (e.opacity = this.finalTransform.mProp.o.v)
            },
            renderFrame: function() {
                this.data.hd || this.hidden || (this.renderTransform(),
                this.renderRenderable(),
                this.renderElement(),
                this.renderInnerContent(),
                this._isFirstFrame && (this._isFirstFrame = !1))
            },
            destroy: function() {
                this.layerElement = null,
                this.transformedElement = null,
                this.matteElement && (this.matteElement = null),
                this.maskManager && (this.maskManager.destroy(),
                this.maskManager = null)
            },
            createRenderableComponents: function() {
                this.maskManager = new MaskElement(this.data,this,this.globalData)
            },
            addEffects: function() {},
            setMatte: function() {}
        },
        HBaseElement.prototype.getBaseElement = SVGBaseElement.prototype.getBaseElement,
        HBaseElement.prototype.destroyBaseElement = HBaseElement.prototype.destroy,
        HBaseElement.prototype.buildElementParenting = HybridRenderer.prototype.buildElementParenting,
        extendPrototype([BaseElement, TransformElement, HBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], HSolidElement),
        HSolidElement.prototype.createContent = function() {
            var e;
            this.data.hasMask ? ((e = createNS("rect")).setAttribute("width", this.data.sw),
            e.setAttribute("height", this.data.sh),
            e.setAttribute("fill", this.data.sc),
            this.svgElement.setAttribute("width", this.data.sw),
            this.svgElement.setAttribute("height", this.data.sh)) : ((e = createTag("div")).style.width = this.data.sw + "px",
            e.style.height = this.data.sh + "px",
            e.style.backgroundColor = this.data.sc),
            this.layerElement.appendChild(e)
        }
        ,
        extendPrototype([HybridRenderer, ICompElement, HBaseElement], HCompElement),
        HCompElement.prototype._createBaseContainerElements = HCompElement.prototype.createContainerElements,
        HCompElement.prototype.createContainerElements = function() {
            this._createBaseContainerElements(),
            this.data.hasMask ? (this.svgElement.setAttribute("width", this.data.w),
            this.svgElement.setAttribute("height", this.data.h),
            this.transformedElement = this.baseElement) : this.transformedElement = this.layerElement
        }
        ,
        HCompElement.prototype.addTo3dContainer = function(e, t) {
            for (var n, r = 0; r < t; )
                this.elements[r] && this.elements[r].getBaseElement && (n = this.elements[r].getBaseElement()),
                r += 1;
            n ? this.layerElement.insertBefore(e, n) : this.layerElement.appendChild(e)
        }
        ,
        extendPrototype([BaseElement, TransformElement, HSolidElement, SVGShapeElement, HBaseElement, HierarchyElement, FrameElement, RenderableElement], HShapeElement),
        HShapeElement.prototype._renderShapeFrame = HShapeElement.prototype.renderInnerContent,
        HShapeElement.prototype.createContent = function() {
            var e;
            if (this.baseElement.style.fontSize = 0,
            this.data.hasMask)
                this.layerElement.appendChild(this.shapesContainer),
                e = this.svgElement;
            else {
                e = createNS("svg");
                var t = this.comp.data ? this.comp.data : this.globalData.compSize;
                e.setAttribute("width", t.w),
                e.setAttribute("height", t.h),
                e.appendChild(this.shapesContainer),
                this.layerElement.appendChild(e)
            }
            this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.shapesContainer, 0, [], !0),
            this.filterUniqueShapes(),
            this.shapeCont = e
        }
        ,
        HShapeElement.prototype.getTransformedPoint = function(e, t) {
            var n, r = e.length;
            for (n = 0; n < r; n += 1)
                t = e[n].mProps.v.applyToPointArray(t[0], t[1], 0);
            return t
        }
        ,
        HShapeElement.prototype.calculateShapeBoundingBox = function(e, t) {
            var n, r, i, a, o, s = e.sh.v, l = e.transformers, u = s._length;
            if (!(u <= 1)) {
                for (n = 0; n < u - 1; n += 1)
                    r = this.getTransformedPoint(l, s.v[n]),
                    i = this.getTransformedPoint(l, s.o[n]),
                    a = this.getTransformedPoint(l, s.i[n + 1]),
                    o = this.getTransformedPoint(l, s.v[n + 1]),
                    this.checkBounds(r, i, a, o, t);
                s.c && (r = this.getTransformedPoint(l, s.v[n]),
                i = this.getTransformedPoint(l, s.o[n]),
                a = this.getTransformedPoint(l, s.i[0]),
                o = this.getTransformedPoint(l, s.v[0]),
                this.checkBounds(r, i, a, o, t))
            }
        }
        ,
        HShapeElement.prototype.checkBounds = function(e, t, n, r, i) {
            this.getBoundsOfCurve(e, t, n, r);
            var a = this.shapeBoundingBox;
            i.x = bmMin(a.left, i.x),
            i.xMax = bmMax(a.right, i.xMax),
            i.y = bmMin(a.top, i.y),
            i.yMax = bmMax(a.bottom, i.yMax)
        }
        ,
        HShapeElement.prototype.shapeBoundingBox = {
            left: 0,
            right: 0,
            top: 0,
            bottom: 0
        },
        HShapeElement.prototype.tempBoundingBox = {
            x: 0,
            xMax: 0,
            y: 0,
            yMax: 0,
            width: 0,
            height: 0
        },
        HShapeElement.prototype.getBoundsOfCurve = function(e, t, n, r) {
            for (var i, a, o, s, l, u, c, h = [[e[0], r[0]], [e[1], r[1]]], p = 0; p < 2; ++p)
                a = 6 * e[p] - 12 * t[p] + 6 * n[p],
                i = -3 * e[p] + 9 * t[p] - 9 * n[p] + 3 * r[p],
                o = 3 * t[p] - 3 * e[p],
                a |= 0,
                o |= 0,
                0 === (i |= 0) && 0 === a || (0 === i ? (s = -o / a) > 0 && s < 1 && h[p].push(this.calculateF(s, e, t, n, r, p)) : (l = a * a - 4 * o * i) >= 0 && ((u = (-a + bmSqrt(l)) / (2 * i)) > 0 && u < 1 && h[p].push(this.calculateF(u, e, t, n, r, p)),
                (c = (-a - bmSqrt(l)) / (2 * i)) > 0 && c < 1 && h[p].push(this.calculateF(c, e, t, n, r, p))));
            this.shapeBoundingBox.left = bmMin.apply(null, h[0]),
            this.shapeBoundingBox.top = bmMin.apply(null, h[1]),
            this.shapeBoundingBox.right = bmMax.apply(null, h[0]),
            this.shapeBoundingBox.bottom = bmMax.apply(null, h[1])
        }
        ,
        HShapeElement.prototype.calculateF = function(e, t, n, r, i, a) {
            return bmPow(1 - e, 3) * t[a] + 3 * bmPow(1 - e, 2) * e * n[a] + 3 * (1 - e) * bmPow(e, 2) * r[a] + bmPow(e, 3) * i[a]
        }
        ,
        HShapeElement.prototype.calculateBoundingBox = function(e, t) {
            var n, r = e.length;
            for (n = 0; n < r; n += 1)
                e[n] && e[n].sh ? this.calculateShapeBoundingBox(e[n], t) : e[n] && e[n].it && this.calculateBoundingBox(e[n].it, t)
        }
        ,
        HShapeElement.prototype.currentBoxContains = function(e) {
            return this.currentBBox.x <= e.x && this.currentBBox.y <= e.y && this.currentBBox.width + this.currentBBox.x >= e.x + e.width && this.currentBBox.height + this.currentBBox.y >= e.y + e.height
        }
        ,
        HShapeElement.prototype.renderInnerContent = function() {
            if (this._renderShapeFrame(),
            !this.hidden && (this._isFirstFrame || this._mdf)) {
                var e = this.tempBoundingBox
                  , t = 999999;
                if (e.x = t,
                e.xMax = -t,
                e.y = t,
                e.yMax = -t,
                this.calculateBoundingBox(this.itemsData, e),
                e.width = e.xMax < e.x ? 0 : e.xMax - e.x,
                e.height = e.yMax < e.y ? 0 : e.yMax - e.y,
                this.currentBoxContains(e))
                    return;
                var n = !1;
                if (this.currentBBox.w !== e.width && (this.currentBBox.w = e.width,
                this.shapeCont.setAttribute("width", e.width),
                n = !0),
                this.currentBBox.h !== e.height && (this.currentBBox.h = e.height,
                this.shapeCont.setAttribute("height", e.height),
                n = !0),
                n || this.currentBBox.x !== e.x || this.currentBBox.y !== e.y) {
                    this.currentBBox.w = e.width,
                    this.currentBBox.h = e.height,
                    this.currentBBox.x = e.x,
                    this.currentBBox.y = e.y,
                    this.shapeCont.setAttribute("viewBox", this.currentBBox.x + " " + this.currentBBox.y + " " + this.currentBBox.w + " " + this.currentBBox.h);
                    var r = this.shapeCont.style
                      , i = "translate(" + this.currentBBox.x + "px," + this.currentBBox.y + "px)";
                    r.transform = i,
                    r.webkitTransform = i
                }
            }
        }
        ,
        extendPrototype([BaseElement, TransformElement, HBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], HTextElement),
        HTextElement.prototype.createContent = function() {
            if (this.isMasked = this.checkMasks(),
            this.isMasked) {
                this.renderType = "svg",
                this.compW = this.comp.data.w,
                this.compH = this.comp.data.h,
                this.svgElement.setAttribute("width", this.compW),
                this.svgElement.setAttribute("height", this.compH);
                var e = createNS("g");
                this.maskedElement.appendChild(e),
                this.innerElem = e
            } else
                this.renderType = "html",
                this.innerElem = this.layerElement;
            this.checkParenting()
        }
        ,
        HTextElement.prototype.buildNewText = function() {
            var e = this.textProperty.currentData;
            this.renderedLetters = createSizedArray(e.l ? e.l.length : 0);
            var t = this.innerElem.style
              , n = e.fc ? this.buildColor(e.fc) : "rgba(0,0,0,0)";
            t.fill = n,
            t.color = n,
            e.sc && (t.stroke = this.buildColor(e.sc),
            t.strokeWidth = e.sw + "px");
            var r, i, a = this.globalData.fontManager.getFontByName(e.f);
            if (!this.globalData.fontManager.chars)
                if (t.fontSize = e.finalSize + "px",
                t.lineHeight = e.finalSize + "px",
                a.fClass)
                    this.innerElem.className = a.fClass;
                else {
                    t.fontFamily = a.fFamily;
                    var o = e.fWeight
                      , s = e.fStyle;
                    t.fontStyle = s,
                    t.fontWeight = o
                }
            var l, u, c, h = e.l;
            i = h.length;
            var p, f = this.mHelper, d = "", m = 0;
            for (r = 0; r < i; r += 1) {
                if (this.globalData.fontManager.chars ? (this.textPaths[m] ? l = this.textPaths[m] : ((l = createNS("path")).setAttribute("stroke-linecap", "butt"),
                l.setAttribute("stroke-linejoin", "round"),
                l.setAttribute("stroke-miterlimit", "4")),
                this.isMasked || (this.textSpans[m] ? c = (u = this.textSpans[m]).children[0] : ((u = createTag("div")).style.lineHeight = 0,
                (c = createNS("svg")).appendChild(l),
                styleDiv(u)))) : this.isMasked ? l = this.textPaths[m] ? this.textPaths[m] : createNS("text") : this.textSpans[m] ? (u = this.textSpans[m],
                l = this.textPaths[m]) : (styleDiv(u = createTag("span")),
                styleDiv(l = createTag("span")),
                u.appendChild(l)),
                this.globalData.fontManager.chars) {
                    var g, v = this.globalData.fontManager.getCharData(e.finalText[r], a.fStyle, this.globalData.fontManager.getFontByName(e.f).fFamily);
                    if (g = v ? v.data : null,
                    f.reset(),
                    g && g.shapes && (p = g.shapes[0].it,
                    f.scale(e.finalSize / 100, e.finalSize / 100),
                    d = this.createPathShape(f, p),
                    l.setAttribute("d", d)),
                    this.isMasked)
                        this.innerElem.appendChild(l);
                    else {
                        if (this.innerElem.appendChild(u),
                        g && g.shapes) {
                            document.body.appendChild(c);
                            var y = c.getBBox();
                            c.setAttribute("width", y.width + 2),
                            c.setAttribute("height", y.height + 2),
                            c.setAttribute("viewBox", y.x - 1 + " " + (y.y - 1) + " " + (y.width + 2) + " " + (y.height + 2));
                            var b = c.style
                              , x = "translate(" + (y.x - 1) + "px," + (y.y - 1) + "px)";
                            b.transform = x,
                            b.webkitTransform = x,
                            h[r].yOffset = y.y - 1
                        } else
                            c.setAttribute("width", 1),
                            c.setAttribute("height", 1);
                        u.appendChild(c)
                    }
                } else if (l.textContent = h[r].val,
                l.setAttributeNS("http://www.w3.org/XML/1998/namespace", "xml:space", "preserve"),
                this.isMasked)
                    this.innerElem.appendChild(l);
                else {
                    this.innerElem.appendChild(u);
                    var w = l.style
                      , _ = "translate3d(0," + -e.finalSize / 1.2 + "px,0)";
                    w.transform = _,
                    w.webkitTransform = _
                }
                this.isMasked ? this.textSpans[m] = l : this.textSpans[m] = u,
                this.textSpans[m].style.display = "block",
                this.textPaths[m] = l,
                m += 1
            }
            for (; m < this.textSpans.length; )
                this.textSpans[m].style.display = "none",
                m += 1
        }
        ,
        HTextElement.prototype.renderInnerContent = function() {
            var e;
            if (this.data.singleShape) {
                if (!this._isFirstFrame && !this.lettersChangedFlag)
                    return;
                if (this.isMasked && this.finalTransform._matMdf) {
                    this.svgElement.setAttribute("viewBox", -this.finalTransform.mProp.p.v[0] + " " + -this.finalTransform.mProp.p.v[1] + " " + this.compW + " " + this.compH),
                    e = this.svgElement.style;
                    var t = "translate(" + -this.finalTransform.mProp.p.v[0] + "px," + -this.finalTransform.mProp.p.v[1] + "px)";
                    e.transform = t,
                    e.webkitTransform = t
                }
            }
            if (this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag),
            this.lettersChangedFlag || this.textAnimator.lettersChangedFlag) {
                var n, r, i, a, o, s = 0, l = this.textAnimator.renderedLetters, u = this.textProperty.currentData.l;
                for (r = u.length,
                n = 0; n < r; n += 1)
                    u[n].n ? s += 1 : (a = this.textSpans[n],
                    o = this.textPaths[n],
                    i = l[s],
                    s += 1,
                    i._mdf.m && (this.isMasked ? a.setAttribute("transform", i.m) : (a.style.webkitTransform = i.m,
                    a.style.transform = i.m)),
                    a.style.opacity = i.o,
                    i.sw && i._mdf.sw && o.setAttribute("stroke-width", i.sw),
                    i.sc && i._mdf.sc && o.setAttribute("stroke", i.sc),
                    i.fc && i._mdf.fc && (o.setAttribute("fill", i.fc),
                    o.style.color = i.fc));
                if (this.innerElem.getBBox && !this.hidden && (this._isFirstFrame || this._mdf)) {
                    var c = this.innerElem.getBBox();
                    if (this.currentBBox.w !== c.width && (this.currentBBox.w = c.width,
                    this.svgElement.setAttribute("width", c.width)),
                    this.currentBBox.h !== c.height && (this.currentBBox.h = c.height,
                    this.svgElement.setAttribute("height", c.height)),
                    this.currentBBox.w !== c.width + 2 || this.currentBBox.h !== c.height + 2 || this.currentBBox.x !== c.x - 1 || this.currentBBox.y !== c.y - 1) {
                        this.currentBBox.w = c.width + 2,
                        this.currentBBox.h = c.height + 2,
                        this.currentBBox.x = c.x - 1,
                        this.currentBBox.y = c.y - 1,
                        this.svgElement.setAttribute("viewBox", this.currentBBox.x + " " + this.currentBBox.y + " " + this.currentBBox.w + " " + this.currentBBox.h),
                        e = this.svgElement.style;
                        var h = "translate(" + this.currentBBox.x + "px," + this.currentBBox.y + "px)";
                        e.transform = h,
                        e.webkitTransform = h
                    }
                }
            }
        }
        ,
        extendPrototype([BaseElement, TransformElement, HBaseElement, HSolidElement, HierarchyElement, FrameElement, RenderableElement], HImageElement),
        HImageElement.prototype.createContent = function() {
            var e = this.globalData.getAssetsPath(this.assetData)
              , t = new Image;
            this.data.hasMask ? (this.imageElem = createNS("image"),
            this.imageElem.setAttribute("width", this.assetData.w + "px"),
            this.imageElem.setAttribute("height", this.assetData.h + "px"),
            this.imageElem.setAttributeNS("http://www.w3.org/1999/xlink", "href", e),
            this.layerElement.appendChild(this.imageElem),
            this.baseElement.setAttribute("width", this.assetData.w),
            this.baseElement.setAttribute("height", this.assetData.h)) : this.layerElement.appendChild(t),
            t.crossOrigin = "anonymous",
            t.src = e,
            this.data.ln && this.baseElement.setAttribute("id", this.data.ln)
        }
        ,
        extendPrototype([BaseElement, FrameElement, HierarchyElement], HCameraElement),
        HCameraElement.prototype.setup = function() {
            var e, t, n, r, i = this.comp.threeDElements.length;
            for (e = 0; e < i; e += 1)
                if ("3d" === (t = this.comp.threeDElements[e]).type) {
                    n = t.perspectiveElem.style,
                    r = t.container.style;
                    var a = this.pe.v + "px"
                      , o = "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)";
                    n.perspective = a,
                    n.webkitPerspective = a,
                    r.transformOrigin = "0px 0px 0px",
                    r.mozTransformOrigin = "0px 0px 0px",
                    r.webkitTransformOrigin = "0px 0px 0px",
                    n.transform = o,
                    n.webkitTransform = o
                }
        }
        ,
        HCameraElement.prototype.createElements = function() {}
        ,
        HCameraElement.prototype.hide = function() {}
        ,
        HCameraElement.prototype.renderFrame = function() {
            var e, t, n = this._isFirstFrame;
            if (this.hierarchy)
                for (t = this.hierarchy.length,
                e = 0; e < t; e += 1)
                    n = this.hierarchy[e].finalTransform.mProp._mdf || n;
            if (n || this.pe._mdf || this.p && this.p._mdf || this.px && (this.px._mdf || this.py._mdf || this.pz._mdf) || this.rx._mdf || this.ry._mdf || this.rz._mdf || this.or._mdf || this.a && this.a._mdf) {
                if (this.mat.reset(),
                this.hierarchy)
                    for (e = t = this.hierarchy.length - 1; e >= 0; e -= 1) {
                        var r = this.hierarchy[e].finalTransform.mProp;
                        this.mat.translate(-r.p.v[0], -r.p.v[1], r.p.v[2]),
                        this.mat.rotateX(-r.or.v[0]).rotateY(-r.or.v[1]).rotateZ(r.or.v[2]),
                        this.mat.rotateX(-r.rx.v).rotateY(-r.ry.v).rotateZ(r.rz.v),
                        this.mat.scale(1 / r.s.v[0], 1 / r.s.v[1], 1 / r.s.v[2]),
                        this.mat.translate(r.a.v[0], r.a.v[1], r.a.v[2])
                    }
                if (this.p ? this.mat.translate(-this.p.v[0], -this.p.v[1], this.p.v[2]) : this.mat.translate(-this.px.v, -this.py.v, this.pz.v),
                this.a) {
                    var i;
                    i = this.p ? [this.p.v[0] - this.a.v[0], this.p.v[1] - this.a.v[1], this.p.v[2] - this.a.v[2]] : [this.px.v - this.a.v[0], this.py.v - this.a.v[1], this.pz.v - this.a.v[2]];
                    var a = Math.sqrt(Math.pow(i[0], 2) + Math.pow(i[1], 2) + Math.pow(i[2], 2))
                      , o = [i[0] / a, i[1] / a, i[2] / a]
                      , s = Math.sqrt(o[2] * o[2] + o[0] * o[0])
                      , l = Math.atan2(o[1], s)
                      , u = Math.atan2(o[0], -o[2]);
                    this.mat.rotateY(u).rotateX(-l)
                }
                this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v),
                this.mat.rotateX(-this.or.v[0]).rotateY(-this.or.v[1]).rotateZ(this.or.v[2]),
                this.mat.translate(this.globalData.compSize.w / 2, this.globalData.compSize.h / 2, 0),
                this.mat.translate(0, 0, this.pe.v);
                var c = !this._prevMat.equals(this.mat);
                if ((c || this.pe._mdf) && this.comp.threeDElements) {
                    var h, p, f;
                    for (t = this.comp.threeDElements.length,
                    e = 0; e < t; e += 1)
                        if ("3d" === (h = this.comp.threeDElements[e]).type) {
                            if (c) {
                                var d = this.mat.toCSS();
                                (f = h.container.style).transform = d,
                                f.webkitTransform = d
                            }
                            this.pe._mdf && ((p = h.perspectiveElem.style).perspective = this.pe.v + "px",
                            p.webkitPerspective = this.pe.v + "px")
                        }
                    this.mat.clone(this._prevMat)
                }
            }
            this._isFirstFrame = !1
        }
        ,
        HCameraElement.prototype.prepareFrame = function(e) {
            this.prepareProperties(e, !0)
        }
        ,
        HCameraElement.prototype.destroy = function() {}
        ,
        HCameraElement.prototype.getBaseElement = function() {
            return null
        }
        ,
        HEffects.prototype.renderFrame = function() {}
        ;
        var animationManager = function() {
            var e = {}
              , t = []
              , n = 0
              , r = 0
              , i = 0
              , a = !0
              , o = !1;
            function s(e) {
                for (var n = 0, i = e.target; n < r; )
                    t[n].animation === i && (t.splice(n, 1),
                    n -= 1,
                    r -= 1,
                    i.isPaused || c()),
                    n += 1
            }
            function l(e, n) {
                if (!e)
                    return null;
                for (var i = 0; i < r; ) {
                    if (t[i].elem === e && null !== t[i].elem)
                        return t[i].animation;
                    i += 1
                }
                var a = new AnimationItem;
                return h(a, e),
                a.setData(e, n),
                a
            }
            function u() {
                i += 1,
                d()
            }
            function c() {
                i -= 1
            }
            function h(e, n) {
                e.addEventListener("destroy", s),
                e.addEventListener("_active", u),
                e.addEventListener("_idle", c),
                t.push({
                    elem: n,
                    animation: e
                }),
                r += 1
            }
            function p(e) {
                var s, l = e - n;
                for (s = 0; s < r; s += 1)
                    t[s].animation.advanceTime(l);
                n = e,
                i && !o ? window.requestAnimationFrame(p) : a = !0
            }
            function f(e) {
                n = e,
                window.requestAnimationFrame(p)
            }
            function d() {
                !o && i && a && (window.requestAnimationFrame(f),
                a = !1)
            }
            return e.registerAnimation = l,
            e.loadAnimation = function(e) {
                var t = new AnimationItem;
                return h(t, null),
                t.setParams(e),
                t
            }
            ,
            e.setSpeed = function(e, n) {
                var i;
                for (i = 0; i < r; i += 1)
                    t[i].animation.setSpeed(e, n)
            }
            ,
            e.setDirection = function(e, n) {
                var i;
                for (i = 0; i < r; i += 1)
                    t[i].animation.setDirection(e, n)
            }
            ,
            e.play = function(e) {
                var n;
                for (n = 0; n < r; n += 1)
                    t[n].animation.play(e)
            }
            ,
            e.pause = function(e) {
                var n;
                for (n = 0; n < r; n += 1)
                    t[n].animation.pause(e)
            }
            ,
            e.stop = function(e) {
                var n;
                for (n = 0; n < r; n += 1)
                    t[n].animation.stop(e)
            }
            ,
            e.togglePause = function(e) {
                var n;
                for (n = 0; n < r; n += 1)
                    t[n].animation.togglePause(e)
            }
            ,
            e.searchAnimations = function(e, t, n) {
                var r, i = [].concat([].slice.call(document.getElementsByClassName("lottie")), [].slice.call(document.getElementsByClassName("bodymovin"))), a = i.length;
                for (r = 0; r < a; r += 1)
                    n && i[r].setAttribute("data-bm-type", n),
                    l(i[r], e);
                if (t && 0 === a) {
                    n || (n = "svg");
                    var o = document.getElementsByTagName("body")[0];
                    o.innerText = "";
                    var s = createTag("div");
                    s.style.width = "100%",
                    s.style.height = "100%",
                    s.setAttribute("data-bm-type", n),
                    o.appendChild(s),
                    l(s, e)
                }
            }
            ,
            e.resize = function() {
                var e;
                for (e = 0; e < r; e += 1)
                    t[e].animation.resize()
            }
            ,
            e.goToAndStop = function(e, n, i) {
                var a;
                for (a = 0; a < r; a += 1)
                    t[a].animation.goToAndStop(e, n, i)
            }
            ,
            e.destroy = function(e) {
                var n;
                for (n = r - 1; n >= 0; n -= 1)
                    t[n].animation.destroy(e)
            }
            ,
            e.freeze = function() {
                o = !0
            }
            ,
            e.unfreeze = function() {
                o = !1,
                d()
            }
            ,
            e.setVolume = function(e, n) {
                var i;
                for (i = 0; i < r; i += 1)
                    t[i].animation.setVolume(e, n)
            }
            ,
            e.mute = function(e) {
                var n;
                for (n = 0; n < r; n += 1)
                    t[n].animation.mute(e)
            }
            ,
            e.unmute = function(e) {
                var n;
                for (n = 0; n < r; n += 1)
                    t[n].animation.unmute(e)
            }
            ,
            e.getRegisteredAnimations = function() {
                var e, n = t.length, r = [];
                for (e = 0; e < n; e += 1)
                    r.push(t[e].animation);
                return r
            }
            ,
            e
        }()
          , AnimationItem = function() {
            this._cbs = [],
            this.name = "",
            this.path = "",
            this.isLoaded = !1,
            this.currentFrame = 0,
            this.currentRawFrame = 0,
            this.firstFrame = 0,
            this.totalFrames = 0,
            this.frameRate = 0,
            this.frameMult = 0,
            this.playSpeed = 1,
            this.playDirection = 1,
            this.playCount = 0,
            this.animationData = {},
            this.assets = [],
            this.isPaused = !0,
            this.autoplay = !1,
            this.loop = !0,
            this.renderer = null,
            this.animationID = createElementID(),
            this.assetsPath = "",
            this.timeCompleted = 0,
            this.segmentPos = 0,
            this.isSubframeEnabled = subframeEnabled,
            this.segments = [],
            this._idle = !0,
            this._completedLoop = !1,
            this.projectInterface = ProjectInterface(),
            this.imagePreloader = new ImagePreloader,
            this.audioController = audioControllerFactory(),
            this.markers = []
        };
        extendPrototype([BaseEvent], AnimationItem),
        AnimationItem.prototype.setParams = function(e) {
            (e.wrapper || e.container) && (this.wrapper = e.wrapper || e.container);
            var t = "svg";
            switch (e.animType ? t = e.animType : e.renderer && (t = e.renderer),
            t) {
            case "canvas":
                this.renderer = new CanvasRenderer(this,e.rendererSettings);
                break;
            case "svg":
                this.renderer = new SVGRenderer(this,e.rendererSettings);
                break;
            default:
                this.renderer = new HybridRenderer(this,e.rendererSettings)
            }
            this.imagePreloader.setCacheType(t, this.renderer.globalData.defs),
            this.renderer.setProjectInterface(this.projectInterface),
            this.animType = t,
            "" === e.loop || null === e.loop || void 0 === e.loop || !0 === e.loop ? this.loop = !0 : !1 === e.loop ? this.loop = !1 : this.loop = parseInt(e.loop, 10),
            this.autoplay = !("autoplay"in e) || e.autoplay,
            this.name = e.name ? e.name : "",
            this.autoloadSegments = !Object.prototype.hasOwnProperty.call(e, "autoloadSegments") || e.autoloadSegments,
            this.assetsPath = e.assetsPath,
            this.initialSegment = e.initialSegment,
            e.audioFactory && this.audioController.setAudioFactory(e.audioFactory),
            e.animationData ? this.configAnimation(e.animationData) : e.path && (-1 !== e.path.lastIndexOf("\\") ? this.path = e.path.substr(0, e.path.lastIndexOf("\\") + 1) : this.path = e.path.substr(0, e.path.lastIndexOf("/") + 1),
            this.fileName = e.path.substr(e.path.lastIndexOf("/") + 1),
            this.fileName = this.fileName.substr(0, this.fileName.lastIndexOf(".json")),
            assetLoader.load(e.path, this.configAnimation.bind(this), function() {
                this.trigger("data_failed")
            }
            .bind(this)))
        }
        ,
        AnimationItem.prototype.setData = function(e, t) {
            t && "object" !== typeof t && (t = JSON.parse(t));
            var n = {
                wrapper: e,
                animationData: t
            }
              , r = e.attributes;
            n.path = r.getNamedItem("data-animation-path") ? r.getNamedItem("data-animation-path").value : r.getNamedItem("data-bm-path") ? r.getNamedItem("data-bm-path").value : r.getNamedItem("bm-path") ? r.getNamedItem("bm-path").value : "",
            n.animType = r.getNamedItem("data-anim-type") ? r.getNamedItem("data-anim-type").value : r.getNamedItem("data-bm-type") ? r.getNamedItem("data-bm-type").value : r.getNamedItem("bm-type") ? r.getNamedItem("bm-type").value : r.getNamedItem("data-bm-renderer") ? r.getNamedItem("data-bm-renderer").value : r.getNamedItem("bm-renderer") ? r.getNamedItem("bm-renderer").value : "canvas";
            var i = r.getNamedItem("data-anim-loop") ? r.getNamedItem("data-anim-loop").value : r.getNamedItem("data-bm-loop") ? r.getNamedItem("data-bm-loop").value : r.getNamedItem("bm-loop") ? r.getNamedItem("bm-loop").value : "";
            "false" === i ? n.loop = !1 : "true" === i ? n.loop = !0 : "" !== i && (n.loop = parseInt(i, 10));
            var a = r.getNamedItem("data-anim-autoplay") ? r.getNamedItem("data-anim-autoplay").value : r.getNamedItem("data-bm-autoplay") ? r.getNamedItem("data-bm-autoplay").value : !r.getNamedItem("bm-autoplay") || r.getNamedItem("bm-autoplay").value;
            n.autoplay = "false" !== a,
            n.name = r.getNamedItem("data-name") ? r.getNamedItem("data-name").value : r.getNamedItem("data-bm-name") ? r.getNamedItem("data-bm-name").value : r.getNamedItem("bm-name") ? r.getNamedItem("bm-name").value : "",
            "false" === (r.getNamedItem("data-anim-prerender") ? r.getNamedItem("data-anim-prerender").value : r.getNamedItem("data-bm-prerender") ? r.getNamedItem("data-bm-prerender").value : r.getNamedItem("bm-prerender") ? r.getNamedItem("bm-prerender").value : "") && (n.prerender = !1),
            this.setParams(n)
        }
        ,
        AnimationItem.prototype.includeLayers = function(e) {
            e.op > this.animationData.op && (this.animationData.op = e.op,
            this.totalFrames = Math.floor(e.op - this.animationData.ip));
            var t, n, r = this.animationData.layers, i = r.length, a = e.layers, o = a.length;
            for (n = 0; n < o; n += 1)
                for (t = 0; t < i; ) {
                    if (r[t].id === a[n].id) {
                        r[t] = a[n];
                        break
                    }
                    t += 1
                }
            if ((e.chars || e.fonts) && (this.renderer.globalData.fontManager.addChars(e.chars),
            this.renderer.globalData.fontManager.addFonts(e.fonts, this.renderer.globalData.defs)),
            e.assets)
                for (i = e.assets.length,
                t = 0; t < i; t += 1)
                    this.animationData.assets.push(e.assets[t]);
            this.animationData.__complete = !1,
            dataManager.completeData(this.animationData, this.renderer.globalData.fontManager),
            this.renderer.includeLayers(e.layers),
            expressionsPlugin && expressionsPlugin.initExpressions(this),
            this.loadNextSegment()
        }
        ,
        AnimationItem.prototype.loadNextSegment = function() {
            var e = this.animationData.segments;
            if (!e || 0 === e.length || !this.autoloadSegments)
                return this.trigger("data_ready"),
                void (this.timeCompleted = this.totalFrames);
            var t = e.shift();
            this.timeCompleted = t.time * this.frameRate;
            var n = this.path + this.fileName + "_" + this.segmentPos + ".json";
            this.segmentPos += 1,
            assetLoader.load(n, this.includeLayers.bind(this), function() {
                this.trigger("data_failed")
            }
            .bind(this))
        }
        ,
        AnimationItem.prototype.loadSegments = function() {
            this.animationData.segments || (this.timeCompleted = this.totalFrames),
            this.loadNextSegment()
        }
        ,
        AnimationItem.prototype.imagesLoaded = function() {
            this.trigger("loaded_images"),
            this.checkLoaded()
        }
        ,
        AnimationItem.prototype.preloadImages = function() {
            this.imagePreloader.setAssetsPath(this.assetsPath),
            this.imagePreloader.setPath(this.path),
            this.imagePreloader.loadAssets(this.animationData.assets, this.imagesLoaded.bind(this))
        }
        ,
        AnimationItem.prototype.configAnimation = function(e) {
            if (this.renderer)
                try {
                    this.animationData = e,
                    this.initialSegment ? (this.totalFrames = Math.floor(this.initialSegment[1] - this.initialSegment[0]),
                    this.firstFrame = Math.round(this.initialSegment[0])) : (this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip),
                    this.firstFrame = Math.round(this.animationData.ip)),
                    this.renderer.configAnimation(e),
                    e.assets || (e.assets = []),
                    this.assets = this.animationData.assets,
                    this.frameRate = this.animationData.fr,
                    this.frameMult = this.animationData.fr / 1e3,
                    this.renderer.searchExtraCompositions(e.assets),
                    this.markers = markerParser(e.markers || []),
                    this.trigger("config_ready"),
                    this.preloadImages(),
                    this.loadSegments(),
                    this.updaFrameModifier(),
                    this.waitForFontsLoaded(),
                    this.isPaused && this.audioController.pause()
                } catch (t) {
                    this.triggerConfigError(t)
                }
        }
        ,
        AnimationItem.prototype.waitForFontsLoaded = function() {
            this.renderer && (this.renderer.globalData.fontManager.isLoaded ? this.checkLoaded() : setTimeout(this.waitForFontsLoaded.bind(this), 20))
        }
        ,
        AnimationItem.prototype.checkLoaded = function() {
            !this.isLoaded && this.renderer.globalData.fontManager.isLoaded && (this.imagePreloader.loadedImages() || "canvas" !== this.renderer.rendererType) && this.imagePreloader.loadedFootages() && (this.isLoaded = !0,
            dataManager.completeData(this.animationData, this.renderer.globalData.fontManager),
            expressionsPlugin && expressionsPlugin.initExpressions(this),
            this.renderer.initItems(),
            setTimeout(function() {
                this.trigger("DOMLoaded")
            }
            .bind(this), 0),
            this.gotoFrame(),
            this.autoplay && this.play())
        }
        ,
        AnimationItem.prototype.resize = function() {
            this.renderer.updateContainerSize()
        }
        ,
        AnimationItem.prototype.setSubframe = function(e) {
            this.isSubframeEnabled = !!e
        }
        ,
        AnimationItem.prototype.gotoFrame = function() {
            this.currentFrame = this.isSubframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame,
            this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted && (this.currentFrame = this.timeCompleted),
            this.trigger("enterFrame"),
            this.renderFrame()
        }
        ,
        AnimationItem.prototype.renderFrame = function() {
            if (!1 !== this.isLoaded && this.renderer)
                try {
                    this.renderer.renderFrame(this.currentFrame + this.firstFrame)
                } catch (e) {
                    this.triggerRenderFrameError(e)
                }
        }
        ,
        AnimationItem.prototype.play = function(e) {
            e && this.name !== e || !0 === this.isPaused && (this.isPaused = !1,
            this.audioController.resume(),
            this._idle && (this._idle = !1,
            this.trigger("_active")))
        }
        ,
        AnimationItem.prototype.pause = function(e) {
            e && this.name !== e || !1 === this.isPaused && (this.isPaused = !0,
            this._idle = !0,
            this.trigger("_idle"),
            this.audioController.pause())
        }
        ,
        AnimationItem.prototype.togglePause = function(e) {
            e && this.name !== e || (!0 === this.isPaused ? this.play() : this.pause())
        }
        ,
        AnimationItem.prototype.stop = function(e) {
            e && this.name !== e || (this.pause(),
            this.playCount = 0,
            this._completedLoop = !1,
            this.setCurrentRawFrameValue(0))
        }
        ,
        AnimationItem.prototype.getMarkerData = function(e) {
            for (var t, n = 0; n < this.markers.length; n += 1)
                if ((t = this.markers[n]).payload && t.payload.name === e)
                    return t;
            return null
        }
        ,
        AnimationItem.prototype.goToAndStop = function(e, t, n) {
            if (!n || this.name === n) {
                var r = Number(e);
                if (isNaN(r)) {
                    var i = this.getMarkerData(e);
                    i && this.goToAndStop(i.time, !0)
                } else
                    t ? this.setCurrentRawFrameValue(e) : this.setCurrentRawFrameValue(e * this.frameModifier);
                this.pause()
            }
        }
        ,
        AnimationItem.prototype.goToAndPlay = function(e, t, n) {
            if (!n || this.name === n) {
                var r = Number(e);
                if (isNaN(r)) {
                    var i = this.getMarkerData(e);
                    i && (i.duration ? this.playSegments([i.time, i.time + i.duration], !0) : this.goToAndStop(i.time, !0))
                } else
                    this.goToAndStop(r, t, n);
                this.play()
            }
        }
        ,
        AnimationItem.prototype.advanceTime = function(e) {
            if (!0 !== this.isPaused && !1 !== this.isLoaded) {
                var t = this.currentRawFrame + e * this.frameModifier
                  , n = !1;
                t >= this.totalFrames - 1 && this.frameModifier > 0 ? this.loop && this.playCount !== this.loop ? t >= this.totalFrames ? (this.playCount += 1,
                this.checkSegments(t % this.totalFrames) || (this.setCurrentRawFrameValue(t % this.totalFrames),
                this._completedLoop = !0,
                this.trigger("loopComplete"))) : this.setCurrentRawFrameValue(t) : this.checkSegments(t > this.totalFrames ? t % this.totalFrames : 0) || (n = !0,
                t = this.totalFrames - 1) : t < 0 ? this.checkSegments(t % this.totalFrames) || (!this.loop || this.playCount-- <= 0 && !0 !== this.loop ? (n = !0,
                t = 0) : (this.setCurrentRawFrameValue(this.totalFrames + t % this.totalFrames),
                this._completedLoop ? this.trigger("loopComplete") : this._completedLoop = !0)) : this.setCurrentRawFrameValue(t),
                n && (this.setCurrentRawFrameValue(t),
                this.pause(),
                this.trigger("complete"))
            }
        }
        ,
        AnimationItem.prototype.adjustSegment = function(e, t) {
            this.playCount = 0,
            e[1] < e[0] ? (this.frameModifier > 0 && (this.playSpeed < 0 ? this.setSpeed(-this.playSpeed) : this.setDirection(-1)),
            this.totalFrames = e[0] - e[1],
            this.timeCompleted = this.totalFrames,
            this.firstFrame = e[1],
            this.setCurrentRawFrameValue(this.totalFrames - .001 - t)) : e[1] > e[0] && (this.frameModifier < 0 && (this.playSpeed < 0 ? this.setSpeed(-this.playSpeed) : this.setDirection(1)),
            this.totalFrames = e[1] - e[0],
            this.timeCompleted = this.totalFrames,
            this.firstFrame = e[0],
            this.setCurrentRawFrameValue(.001 + t)),
            this.trigger("segmentStart")
        }
        ,
        AnimationItem.prototype.setSegment = function(e, t) {
            var n = -1;
            this.isPaused && (this.currentRawFrame + this.firstFrame < e ? n = e : this.currentRawFrame + this.firstFrame > t && (n = t - e)),
            this.firstFrame = e,
            this.totalFrames = t - e,
            this.timeCompleted = this.totalFrames,
            -1 !== n && this.goToAndStop(n, !0)
        }
        ,
        AnimationItem.prototype.playSegments = function(e, t) {
            if (t && (this.segments.length = 0),
            "object" === typeof e[0]) {
                var n, r = e.length;
                for (n = 0; n < r; n += 1)
                    this.segments.push(e[n])
            } else
                this.segments.push(e);
            this.segments.length && t && this.adjustSegment(this.segments.shift(), 0),
            this.isPaused && this.play()
        }
        ,
        AnimationItem.prototype.resetSegments = function(e) {
            this.segments.length = 0,
            this.segments.push([this.animationData.ip, this.animationData.op]),
            e && this.checkSegments(0)
        }
        ,
        AnimationItem.prototype.checkSegments = function(e) {
            return !!this.segments.length && (this.adjustSegment(this.segments.shift(), e),
            !0)
        }
        ,
        AnimationItem.prototype.destroy = function(e) {
            e && this.name !== e || !this.renderer || (this.renderer.destroy(),
            this.imagePreloader.destroy(),
            this.trigger("destroy"),
            this._cbs = null,
            this.onEnterFrame = null,
            this.onLoopComplete = null,
            this.onComplete = null,
            this.onSegmentStart = null,
            this.onDestroy = null,
            this.renderer = null,
            this.renderer = null,
            this.imagePreloader = null,
            this.projectInterface = null)
        }
        ,
        AnimationItem.prototype.setCurrentRawFrameValue = function(e) {
            this.currentRawFrame = e,
            this.gotoFrame()
        }
        ,
        AnimationItem.prototype.setSpeed = function(e) {
            this.playSpeed = e,
            this.updaFrameModifier()
        }
        ,
        AnimationItem.prototype.setDirection = function(e) {
            this.playDirection = e < 0 ? -1 : 1,
            this.updaFrameModifier()
        }
        ,
        AnimationItem.prototype.setVolume = function(e, t) {
            t && this.name !== t || this.audioController.setVolume(e)
        }
        ,
        AnimationItem.prototype.getVolume = function() {
            return this.audioController.getVolume()
        }
        ,
        AnimationItem.prototype.mute = function(e) {
            e && this.name !== e || this.audioController.mute()
        }
        ,
        AnimationItem.prototype.unmute = function(e) {
            e && this.name !== e || this.audioController.unmute()
        }
        ,
        AnimationItem.prototype.updaFrameModifier = function() {
            this.frameModifier = this.frameMult * this.playSpeed * this.playDirection,
            this.audioController.setRate(this.playSpeed * this.playDirection)
        }
        ,
        AnimationItem.prototype.getPath = function() {
            return this.path
        }
        ,
        AnimationItem.prototype.getAssetsPath = function(e) {
            var t = "";
            if (e.e)
                t = e.p;
            else if (this.assetsPath) {
                var n = e.p;
                -1 !== n.indexOf("images/") && (n = n.split("/")[1]),
                t = this.assetsPath + n
            } else
                t = this.path,
                t += e.u ? e.u : "",
                t += e.p;
            return t
        }
        ,
        AnimationItem.prototype.getAssetData = function(e) {
            for (var t = 0, n = this.assets.length; t < n; ) {
                if (e === this.assets[t].id)
                    return this.assets[t];
                t += 1
            }
            return null
        }
        ,
        AnimationItem.prototype.hide = function() {
            this.renderer.hide()
        }
        ,
        AnimationItem.prototype.show = function() {
            this.renderer.show()
        }
        ,
        AnimationItem.prototype.getDuration = function(e) {
            return e ? this.totalFrames : this.totalFrames / this.frameRate
        }
        ,
        AnimationItem.prototype.trigger = function(e) {
            if (this._cbs && this._cbs[e])
                switch (e) {
                case "enterFrame":
                    this.triggerEvent(e, new BMEnterFrameEvent(e,this.currentFrame,this.totalFrames,this.frameModifier));
                    break;
                case "loopComplete":
                    this.triggerEvent(e, new BMCompleteLoopEvent(e,this.loop,this.playCount,this.frameMult));
                    break;
                case "complete":
                    this.triggerEvent(e, new BMCompleteEvent(e,this.frameMult));
                    break;
                case "segmentStart":
                    this.triggerEvent(e, new BMSegmentStartEvent(e,this.firstFrame,this.totalFrames));
                    break;
                case "destroy":
                    this.triggerEvent(e, new BMDestroyEvent(e,this));
                    break;
                default:
                    this.triggerEvent(e)
                }
            "enterFrame" === e && this.onEnterFrame && this.onEnterFrame.call(this, new BMEnterFrameEvent(e,this.currentFrame,this.totalFrames,this.frameMult)),
            "loopComplete" === e && this.onLoopComplete && this.onLoopComplete.call(this, new BMCompleteLoopEvent(e,this.loop,this.playCount,this.frameMult)),
            "complete" === e && this.onComplete && this.onComplete.call(this, new BMCompleteEvent(e,this.frameMult)),
            "segmentStart" === e && this.onSegmentStart && this.onSegmentStart.call(this, new BMSegmentStartEvent(e,this.firstFrame,this.totalFrames)),
            "destroy" === e && this.onDestroy && this.onDestroy.call(this, new BMDestroyEvent(e,this))
        }
        ,
        AnimationItem.prototype.triggerRenderFrameError = function(e) {
            var t = new BMRenderFrameErrorEvent(e,this.currentFrame);
            this.triggerEvent("error", t),
            this.onError && this.onError.call(this, t)
        }
        ,
        AnimationItem.prototype.triggerConfigError = function(e) {
            var t = new BMConfigErrorEvent(e,this.currentFrame);
            this.triggerEvent("error", t),
            this.onError && this.onError.call(this, t)
        }
        ;
        var Expressions = function() {
            var e = {
                initExpressions: function(e) {
                    var t = 0
                      , n = [];
                    e.renderer.compInterface = CompExpressionInterface(e.renderer),
                    e.renderer.globalData.projectInterface.registerComposition(e.renderer),
                    e.renderer.globalData.pushExpression = function() {
                        t += 1
                    }
                    ,
                    e.renderer.globalData.popExpression = function() {
                        0 === (t -= 1) && function() {
                            var e, t = n.length;
                            for (e = 0; e < t; e += 1)
                                n[e].release();
                            n.length = 0
                        }()
                    }
                    ,
                    e.renderer.globalData.registerExpressionProperty = function(e) {
                        -1 === n.indexOf(e) && n.push(e)
                    }
                }
            };
            return e
        }();
        expressionsPlugin = Expressions;
        var ExpressionManager = function() {
            var ob = {}
              , Math = BMMath
              , window = null
              , document = null
              , XMLHttpRequest = null
              , fetch = null;
            function $bm_isInstanceOfArray(e) {
                return e.constructor === Array || e.constructor === Float32Array
            }
            function isNumerable(e, t) {
                return "number" === e || "boolean" === e || "string" === e || t instanceof Number
            }
            function $bm_neg(e) {
                var t = typeof e;
                if ("number" === t || "boolean" === t || e instanceof Number)
                    return -e;
                if ($bm_isInstanceOfArray(e)) {
                    var n, r = e.length, i = [];
                    for (n = 0; n < r; n += 1)
                        i[n] = -e[n];
                    return i
                }
                return e.propType ? e.v : -e
            }
            var easeInBez = BezierFactory.getBezierEasing(.333, 0, .833, .833, "easeIn").get
              , easeOutBez = BezierFactory.getBezierEasing(.167, .167, .667, 1, "easeOut").get
              , easeInOutBez = BezierFactory.getBezierEasing(.33, 0, .667, 1, "easeInOut").get;
            function sum(e, t) {
                var n = typeof e
                  , r = typeof t;
                if ("string" === n || "string" === r)
                    return e + t;
                if (isNumerable(n, e) && isNumerable(r, t))
                    return e + t;
                if ($bm_isInstanceOfArray(e) && isNumerable(r, t))
                    return (e = e.slice(0))[0] += t,
                    e;
                if (isNumerable(n, e) && $bm_isInstanceOfArray(t))
                    return (t = t.slice(0))[0] = e + t[0],
                    t;
                if ($bm_isInstanceOfArray(e) && $bm_isInstanceOfArray(t)) {
                    for (var i = 0, a = e.length, o = t.length, s = []; i < a || i < o; )
                        ("number" === typeof e[i] || e[i]instanceof Number) && ("number" === typeof t[i] || t[i]instanceof Number) ? s[i] = e[i] + t[i] : s[i] = void 0 === t[i] ? e[i] : e[i] || t[i],
                        i += 1;
                    return s
                }
                return 0
            }
            var add = sum;
            function sub(e, t) {
                var n = typeof e
                  , r = typeof t;
                if (isNumerable(n, e) && isNumerable(r, t))
                    return "string" === n && (e = parseInt(e, 10)),
                    "string" === r && (t = parseInt(t, 10)),
                    e - t;
                if ($bm_isInstanceOfArray(e) && isNumerable(r, t))
                    return (e = e.slice(0))[0] -= t,
                    e;
                if (isNumerable(n, e) && $bm_isInstanceOfArray(t))
                    return (t = t.slice(0))[0] = e - t[0],
                    t;
                if ($bm_isInstanceOfArray(e) && $bm_isInstanceOfArray(t)) {
                    for (var i = 0, a = e.length, o = t.length, s = []; i < a || i < o; )
                        ("number" === typeof e[i] || e[i]instanceof Number) && ("number" === typeof t[i] || t[i]instanceof Number) ? s[i] = e[i] - t[i] : s[i] = void 0 === t[i] ? e[i] : e[i] || t[i],
                        i += 1;
                    return s
                }
                return 0
            }
            function mul(e, t) {
                var n, r, i, a = typeof e, o = typeof t;
                if (isNumerable(a, e) && isNumerable(o, t))
                    return e * t;
                if ($bm_isInstanceOfArray(e) && isNumerable(o, t)) {
                    for (i = e.length,
                    n = createTypedArray("float32", i),
                    r = 0; r < i; r += 1)
                        n[r] = e[r] * t;
                    return n
                }
                if (isNumerable(a, e) && $bm_isInstanceOfArray(t)) {
                    for (i = t.length,
                    n = createTypedArray("float32", i),
                    r = 0; r < i; r += 1)
                        n[r] = e * t[r];
                    return n
                }
                return 0
            }
            function div(e, t) {
                var n, r, i, a = typeof e, o = typeof t;
                if (isNumerable(a, e) && isNumerable(o, t))
                    return e / t;
                if ($bm_isInstanceOfArray(e) && isNumerable(o, t)) {
                    for (i = e.length,
                    n = createTypedArray("float32", i),
                    r = 0; r < i; r += 1)
                        n[r] = e[r] / t;
                    return n
                }
                if (isNumerable(a, e) && $bm_isInstanceOfArray(t)) {
                    for (i = t.length,
                    n = createTypedArray("float32", i),
                    r = 0; r < i; r += 1)
                        n[r] = e / t[r];
                    return n
                }
                return 0
            }
            function mod(e, t) {
                return "string" === typeof e && (e = parseInt(e, 10)),
                "string" === typeof t && (t = parseInt(t, 10)),
                e % t
            }
            var $bm_sum = sum
              , $bm_sub = sub
              , $bm_mul = mul
              , $bm_div = div
              , $bm_mod = mod;
            function clamp(e, t, n) {
                if (t > n) {
                    var r = n;
                    n = t,
                    t = r
                }
                return Math.min(Math.max(e, t), n)
            }
            function radiansToDegrees(e) {
                return e / degToRads
            }
            var radians_to_degrees = radiansToDegrees;
            function degreesToRadians(e) {
                return e * degToRads
            }
            var degrees_to_radians = radiansToDegrees
              , helperLengthArray = [0, 0, 0, 0, 0, 0];
            function length(e, t) {
                if ("number" === typeof e || e instanceof Number)
                    return t = t || 0,
                    Math.abs(e - t);
                var n;
                t || (t = helperLengthArray);
                var r = Math.min(e.length, t.length)
                  , i = 0;
                for (n = 0; n < r; n += 1)
                    i += Math.pow(t[n] - e[n], 2);
                return Math.sqrt(i)
            }
            function normalize(e) {
                return div(e, length(e))
            }
            function rgbToHsl(e) {
                var t, n, r = e[0], i = e[1], a = e[2], o = Math.max(r, i, a), s = Math.min(r, i, a), l = (o + s) / 2;
                if (o === s)
                    t = 0,
                    n = 0;
                else {
                    var u = o - s;
                    switch (n = l > .5 ? u / (2 - o - s) : u / (o + s),
                    o) {
                    case r:
                        t = (i - a) / u + (i < a ? 6 : 0);
                        break;
                    case i:
                        t = (a - r) / u + 2;
                        break;
                    case a:
                        t = (r - i) / u + 4
                    }
                    t /= 6
                }
                return [t, n, l, e[3]]
            }
            function hue2rgb(e, t, n) {
                return n < 0 && (n += 1),
                n > 1 && (n -= 1),
                n < 1 / 6 ? e + 6 * (t - e) * n : n < .5 ? t : n < 2 / 3 ? e + (t - e) * (2 / 3 - n) * 6 : e
            }
            function hslToRgb(e) {
                var t, n, r, i = e[0], a = e[1], o = e[2];
                if (0 === a)
                    t = o,
                    r = o,
                    n = o;
                else {
                    var s = o < .5 ? o * (1 + a) : o + a - o * a
                      , l = 2 * o - s;
                    t = hue2rgb(l, s, i + 1 / 3),
                    n = hue2rgb(l, s, i),
                    r = hue2rgb(l, s, i - 1 / 3)
                }
                return [t, n, r, e[3]]
            }
            function linear(e, t, n, r, i) {
                if (void 0 !== r && void 0 !== i || (r = t,
                i = n,
                t = 0,
                n = 1),
                n < t) {
                    var a = n;
                    n = t,
                    t = a
                }
                if (e <= t)
                    return r;
                if (e >= n)
                    return i;
                var o, s = n === t ? 0 : (e - t) / (n - t);
                if (!r.length)
                    return r + (i - r) * s;
                var l = r.length
                  , u = createTypedArray("float32", l);
                for (o = 0; o < l; o += 1)
                    u[o] = r[o] + (i[o] - r[o]) * s;
                return u
            }
            function random(e, t) {
                if (void 0 === t && (void 0 === e ? (e = 0,
                t = 1) : (t = e,
                e = void 0)),
                t.length) {
                    var n, r = t.length;
                    e || (e = createTypedArray("float32", r));
                    var i = createTypedArray("float32", r)
                      , a = BMMath.random();
                    for (n = 0; n < r; n += 1)
                        i[n] = e[n] + a * (t[n] - e[n]);
                    return i
                }
                return void 0 === e && (e = 0),
                e + BMMath.random() * (t - e)
            }
            function createPath(e, t, n, r) {
                var i, a = e.length, o = shapePool.newElement();
                o.setPathData(!!r, a);
                var s, l, u = [0, 0];
                for (i = 0; i < a; i += 1)
                    s = t && t[i] ? t[i] : u,
                    l = n && n[i] ? n[i] : u,
                    o.setTripleAt(e[i][0], e[i][1], l[0] + e[i][0], l[1] + e[i][1], s[0] + e[i][0], s[1] + e[i][1], i, !0);
                return o
            }
            function initiateExpression(elem, data, property) {
                var val = data.x, needsVelocity = /velocity(?![\w\d])/.test(val), _needsRandom = -1 !== val.indexOf("random"), elemType = elem.data.ty, transform, $bm_transform, content, effect, thisProperty = property;
                thisProperty.valueAtTime = thisProperty.getValueAtTime,
                Object.defineProperty(thisProperty, "value", {
                    get: function() {
                        return thisProperty.v
                    }
                }),
                elem.comp.frameDuration = 1 / elem.comp.globalData.frameRate,
                elem.comp.displayStartTime = 0;
                var inPoint = elem.data.ip / elem.comp.globalData.frameRate, outPoint = elem.data.op / elem.comp.globalData.frameRate, width = elem.data.sw ? elem.data.sw : 0, height = elem.data.sh ? elem.data.sh : 0, name = elem.data.nm, loopIn, loop_in, loopOut, loop_out, smooth, toWorld, fromWorld, fromComp, toComp, fromCompToSurface, position, rotation, anchorPoint, scale, thisLayer, thisComp, mask, valueAtTime, velocityAtTime, scoped_bm_rt, expression_function = eval("[function _expression_function(){" + val + ";scoped_bm_rt=$bm_rt}]")[0], numKeys = property.kf ? data.k.length : 0, active = !this.data || !0 !== this.data.hd, wiggle = function(e, t) {
                    var n, r, i = this.pv.length ? this.pv.length : 1, a = createTypedArray("float32", i), o = Math.floor(5 * time);
                    for (n = 0,
                    r = 0; n < o; ) {
                        for (r = 0; r < i; r += 1)
                            a[r] += -t + 2 * t * BMMath.random();
                        n += 1
                    }
                    var s = 5 * time
                      , l = s - Math.floor(s)
                      , u = createTypedArray("float32", i);
                    if (i > 1) {
                        for (r = 0; r < i; r += 1)
                            u[r] = this.pv[r] + a[r] + (-t + 2 * t * BMMath.random()) * l;
                        return u
                    }
                    return this.pv + a[0] + (-t + 2 * t * BMMath.random()) * l
                }
                .bind(this);
                function loopInDuration(e, t) {
                    return loopIn(e, t, !0)
                }
                function loopOutDuration(e, t) {
                    return loopOut(e, t, !0)
                }
                thisProperty.loopIn && (loopIn = thisProperty.loopIn.bind(thisProperty),
                loop_in = loopIn),
                thisProperty.loopOut && (loopOut = thisProperty.loopOut.bind(thisProperty),
                loop_out = loopOut),
                thisProperty.smooth && (smooth = thisProperty.smooth.bind(thisProperty)),
                this.getValueAtTime && (valueAtTime = this.getValueAtTime.bind(this)),
                this.getVelocityAtTime && (velocityAtTime = this.getVelocityAtTime.bind(this));
                var comp = elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface), time, velocity, value, text, textIndex, textTotal, selectorValue;
                function lookAt(e, t) {
                    var n = [t[0] - e[0], t[1] - e[1], t[2] - e[2]]
                      , r = Math.atan2(n[0], Math.sqrt(n[1] * n[1] + n[2] * n[2])) / degToRads;
                    return [-Math.atan2(n[1], n[2]) / degToRads, r, 0]
                }
                function easeOut(e, t, n, r, i) {
                    return applyEase(easeOutBez, e, t, n, r, i)
                }
                function easeIn(e, t, n, r, i) {
                    return applyEase(easeInBez, e, t, n, r, i)
                }
                function ease(e, t, n, r, i) {
                    return applyEase(easeInOutBez, e, t, n, r, i)
                }
                function applyEase(e, t, n, r, i, a) {
                    void 0 === i ? (i = n,
                    a = r) : t = (t - n) / (r - n),
                    t > 1 ? t = 1 : t < 0 && (t = 0);
                    var o = e(t);
                    if ($bm_isInstanceOfArray(i)) {
                        var s, l = i.length, u = createTypedArray("float32", l);
                        for (s = 0; s < l; s += 1)
                            u[s] = (a[s] - i[s]) * o + i[s];
                        return u
                    }
                    return (a - i) * o + i
                }
                function nearestKey(e) {
                    var t, n, r, i = data.k.length;
                    if (data.k.length && "number" !== typeof data.k[0])
                        if (n = -1,
                        (e *= elem.comp.globalData.frameRate) < data.k[0].t)
                            n = 1,
                            r = data.k[0].t;
                        else {
                            for (t = 0; t < i - 1; t += 1) {
                                if (e === data.k[t].t) {
                                    n = t + 1,
                                    r = data.k[t].t;
                                    break
                                }
                                if (e > data.k[t].t && e < data.k[t + 1].t) {
                                    e - data.k[t].t > data.k[t + 1].t - e ? (n = t + 2,
                                    r = data.k[t + 1].t) : (n = t + 1,
                                    r = data.k[t].t);
                                    break
                                }
                            }
                            -1 === n && (n = t + 1,
                            r = data.k[t].t)
                        }
                    else
                        n = 0,
                        r = 0;
                    var a = {};
                    return a.index = n,
                    a.time = r / elem.comp.globalData.frameRate,
                    a
                }
                function key(e) {
                    var t, n, r;
                    if (!data.k.length || "number" === typeof data.k[0])
                        throw new Error("The property has no keyframe at index " + e);
                    e -= 1,
                    t = {
                        time: data.k[e].t / elem.comp.globalData.frameRate,
                        value: []
                    };
                    var i = Object.prototype.hasOwnProperty.call(data.k[e], "s") ? data.k[e].s : data.k[e - 1].e;
                    for (r = i.length,
                    n = 0; n < r; n += 1)
                        t[n] = i[n],
                        t.value[n] = i[n];
                    return t
                }
                function framesToTime(e, t) {
                    return t || (t = elem.comp.globalData.frameRate),
                    e / t
                }
                function timeToFrames(e, t) {
                    return e || 0 === e || (e = time),
                    t || (t = elem.comp.globalData.frameRate),
                    e * t
                }
                function seedRandom(e) {
                    BMMath.seedrandom(randSeed + e)
                }
                function sourceRectAtTime() {
                    return elem.sourceRectAtTime()
                }
                function substring(e, t) {
                    return "string" === typeof value ? void 0 === t ? value.substring(e) : value.substring(e, t) : ""
                }
                function substr(e, t) {
                    return "string" === typeof value ? void 0 === t ? value.substr(e) : value.substr(e, t) : ""
                }
                function posterizeTime(e) {
                    time = 0 === e ? 0 : Math.floor(time * e) / e,
                    value = valueAtTime(time)
                }
                var index = elem.data.ind, hasParent = !(!elem.hierarchy || !elem.hierarchy.length), parent, randSeed = Math.floor(1e6 * Math.random()), globalData = elem.globalData;
                function executeExpression(e) {
                    return value = e,
                    _needsRandom && seedRandom(randSeed),
                    this.frameExpressionId === elem.globalData.frameId && "textSelector" !== this.propType ? value : ("textSelector" === this.propType && (textIndex = this.textIndex,
                    textTotal = this.textTotal,
                    selectorValue = this.selectorValue),
                    thisLayer || (text = elem.layerInterface.text,
                    thisLayer = elem.layerInterface,
                    thisComp = elem.comp.compInterface,
                    toWorld = thisLayer.toWorld.bind(thisLayer),
                    fromWorld = thisLayer.fromWorld.bind(thisLayer),
                    fromComp = thisLayer.fromComp.bind(thisLayer),
                    toComp = thisLayer.toComp.bind(thisLayer),
                    mask = thisLayer.mask ? thisLayer.mask.bind(thisLayer) : null,
                    fromCompToSurface = fromComp),
                    transform || (transform = elem.layerInterface("ADBE Transform Group"),
                    $bm_transform = transform,
                    transform && (anchorPoint = transform.anchorPoint)),
                    4 !== elemType || content || (content = thisLayer("ADBE Root Vectors Group")),
                    effect || (effect = thisLayer(4)),
                    (hasParent = !(!elem.hierarchy || !elem.hierarchy.length)) && !parent && (parent = elem.hierarchy[0].layerInterface),
                    time = this.comp.renderedFrame / this.comp.globalData.frameRate,
                    needsVelocity && (velocity = velocityAtTime(time)),
                    expression_function(),
                    this.frameExpressionId = elem.globalData.frameId,
                    "shape" === scoped_bm_rt.propType && (scoped_bm_rt = scoped_bm_rt.v),
                    scoped_bm_rt)
                }
                return executeExpression
            }
            return ob.initiateExpression = initiateExpression,
            ob
        }()
          , expressionHelpers = {
            searchExpressions: function(e, t, n) {
                t.x && (n.k = !0,
                n.x = !0,
                n.initiateExpression = ExpressionManager.initiateExpression,
                n.effectsSequence.push(n.initiateExpression(e, t, n).bind(n)))
            },
            getSpeedAtTime: function(e) {
                var t = this.getValueAtTime(e)
                  , n = this.getValueAtTime(e + -.01)
                  , r = 0;
                if (t.length) {
                    var i;
                    for (i = 0; i < t.length; i += 1)
                        r += Math.pow(n[i] - t[i], 2);
                    r = 100 * Math.sqrt(r)
                } else
                    r = 0;
                return r
            },
            getVelocityAtTime: function(e) {
                if (void 0 !== this.vel)
                    return this.vel;
                var t, n, r = this.getValueAtTime(e), i = this.getValueAtTime(e + -.001);
                if (r.length)
                    for (t = createTypedArray("float32", r.length),
                    n = 0; n < r.length; n += 1)
                        t[n] = (i[n] - r[n]) / -.001;
                else
                    t = (i - r) / -.001;
                return t
            },
            getValueAtTime: function(e) {
                return e *= this.elem.globalData.frameRate,
                (e -= this.offsetTime) !== this._cachingAtTime.lastFrame && (this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < e ? this._cachingAtTime.lastIndex : 0,
                this._cachingAtTime.value = this.interpolateValue(e, this._cachingAtTime),
                this._cachingAtTime.lastFrame = e),
                this._cachingAtTime.value
            },
            getStaticValueAtTime: function() {
                return this.pv
            },
            setGroupProperty: function(e) {
                this.propertyGroup = e
            }
        };
        !function() {
            function e(e, t, n) {
                if (!this.k || !this.keyframes)
                    return this.pv;
                e = e ? e.toLowerCase() : "";
                var r, i, a, o, s, l = this.comp.renderedFrame, u = this.keyframes, c = u[u.length - 1].t;
                if (l <= c)
                    return this.pv;
                if (n ? i = c - (r = t ? Math.abs(c - this.elem.comp.globalData.frameRate * t) : Math.max(0, c - this.elem.data.ip)) : ((!t || t > u.length - 1) && (t = u.length - 1),
                r = c - (i = u[u.length - 1 - t].t)),
                "pingpong" === e) {
                    if (Math.floor((l - i) / r) % 2 !== 0)
                        return this.getValueAtTime((r - (l - i) % r + i) / this.comp.globalData.frameRate, 0)
                } else {
                    if ("offset" === e) {
                        var h = this.getValueAtTime(i / this.comp.globalData.frameRate, 0)
                          , p = this.getValueAtTime(c / this.comp.globalData.frameRate, 0)
                          , f = this.getValueAtTime(((l - i) % r + i) / this.comp.globalData.frameRate, 0)
                          , d = Math.floor((l - i) / r);
                        if (this.pv.length) {
                            for (o = (s = new Array(h.length)).length,
                            a = 0; a < o; a += 1)
                                s[a] = (p[a] - h[a]) * d + f[a];
                            return s
                        }
                        return (p - h) * d + f
                    }
                    if ("continue" === e) {
                        var m = this.getValueAtTime(c / this.comp.globalData.frameRate, 0)
                          , g = this.getValueAtTime((c - .001) / this.comp.globalData.frameRate, 0);
                        if (this.pv.length) {
                            for (o = (s = new Array(m.length)).length,
                            a = 0; a < o; a += 1)
                                s[a] = m[a] + (m[a] - g[a]) * ((l - c) / this.comp.globalData.frameRate) / 5e-4;
                            return s
                        }
                        return m + (l - c) / .001 * (m - g)
                    }
                }
                return this.getValueAtTime(((l - i) % r + i) / this.comp.globalData.frameRate, 0)
            }
            function t(e, t, n) {
                if (!this.k)
                    return this.pv;
                e = e ? e.toLowerCase() : "";
                var r, i, a, o, s, l = this.comp.renderedFrame, u = this.keyframes, c = u[0].t;
                if (l >= c)
                    return this.pv;
                if (n ? i = c + (r = t ? Math.abs(this.elem.comp.globalData.frameRate * t) : Math.max(0, this.elem.data.op - c)) : ((!t || t > u.length - 1) && (t = u.length - 1),
                r = (i = u[t].t) - c),
                "pingpong" === e) {
                    if (Math.floor((c - l) / r) % 2 === 0)
                        return this.getValueAtTime(((c - l) % r + c) / this.comp.globalData.frameRate, 0)
                } else {
                    if ("offset" === e) {
                        var h = this.getValueAtTime(c / this.comp.globalData.frameRate, 0)
                          , p = this.getValueAtTime(i / this.comp.globalData.frameRate, 0)
                          , f = this.getValueAtTime((r - (c - l) % r + c) / this.comp.globalData.frameRate, 0)
                          , d = Math.floor((c - l) / r) + 1;
                        if (this.pv.length) {
                            for (o = (s = new Array(h.length)).length,
                            a = 0; a < o; a += 1)
                                s[a] = f[a] - (p[a] - h[a]) * d;
                            return s
                        }
                        return f - (p - h) * d
                    }
                    if ("continue" === e) {
                        var m = this.getValueAtTime(c / this.comp.globalData.frameRate, 0)
                          , g = this.getValueAtTime((c + .001) / this.comp.globalData.frameRate, 0);
                        if (this.pv.length) {
                            for (o = (s = new Array(m.length)).length,
                            a = 0; a < o; a += 1)
                                s[a] = m[a] + (m[a] - g[a]) * (c - l) / .001;
                            return s
                        }
                        return m + (m - g) * (c - l) / .001
                    }
                }
                return this.getValueAtTime((r - ((c - l) % r + c)) / this.comp.globalData.frameRate, 0)
            }
            function n(e, t) {
                if (!this.k)
                    return this.pv;
                if (e = .5 * (e || .4),
                (t = Math.floor(t || 5)) <= 1)
                    return this.pv;
                var n, r, i = this.comp.renderedFrame / this.comp.globalData.frameRate, a = i - e, o = t > 1 ? (i + e - a) / (t - 1) : 1, s = 0, l = 0;
                for (n = this.pv.length ? createTypedArray("float32", this.pv.length) : 0; s < t; ) {
                    if (r = this.getValueAtTime(a + s * o),
                    this.pv.length)
                        for (l = 0; l < this.pv.length; l += 1)
                            n[l] += r[l];
                    else
                        n += r;
                    s += 1
                }
                if (this.pv.length)
                    for (l = 0; l < this.pv.length; l += 1)
                        n[l] /= t;
                else
                    n /= t;
                return n
            }
            function r(e) {
                this._transformCachingAtTime || (this._transformCachingAtTime = {
                    v: new Matrix
                });
                var t = this._transformCachingAtTime.v;
                if (t.cloneFromProps(this.pre.props),
                this.appliedTransformations < 1) {
                    var n = this.a.getValueAtTime(e);
                    t.translate(-n[0] * this.a.mult, -n[1] * this.a.mult, n[2] * this.a.mult)
                }
                if (this.appliedTransformations < 2) {
                    var r = this.s.getValueAtTime(e);
                    t.scale(r[0] * this.s.mult, r[1] * this.s.mult, r[2] * this.s.mult)
                }
                if (this.sk && this.appliedTransformations < 3) {
                    var i = this.sk.getValueAtTime(e)
                      , a = this.sa.getValueAtTime(e);
                    t.skewFromAxis(-i * this.sk.mult, a * this.sa.mult)
                }
                if (this.r && this.appliedTransformations < 4) {
                    var o = this.r.getValueAtTime(e);
                    t.rotate(-o * this.r.mult)
                } else if (!this.r && this.appliedTransformations < 4) {
                    var s = this.rz.getValueAtTime(e)
                      , l = this.ry.getValueAtTime(e)
                      , u = this.rx.getValueAtTime(e)
                      , c = this.or.getValueAtTime(e);
                    t.rotateZ(-s * this.rz.mult).rotateY(l * this.ry.mult).rotateX(u * this.rx.mult).rotateZ(-c[2] * this.or.mult).rotateY(c[1] * this.or.mult).rotateX(c[0] * this.or.mult)
                }
                if (this.data.p && this.data.p.s) {
                    var h = this.px.getValueAtTime(e)
                      , p = this.py.getValueAtTime(e);
                    if (this.data.p.z) {
                        var f = this.pz.getValueAtTime(e);
                        t.translate(h * this.px.mult, p * this.py.mult, -f * this.pz.mult)
                    } else
                        t.translate(h * this.px.mult, p * this.py.mult, 0)
                } else {
                    var d = this.p.getValueAtTime(e);
                    t.translate(d[0] * this.p.mult, d[1] * this.p.mult, -d[2] * this.p.mult)
                }
                return t
            }
            function i() {
                return this.v.clone(new Matrix)
            }
            var a = TransformPropertyFactory.getTransformProperty;
            TransformPropertyFactory.getTransformProperty = function(e, t, n) {
                var o = a(e, t, n);
                return o.dynamicProperties.length ? o.getValueAtTime = r.bind(o) : o.getValueAtTime = i.bind(o),
                o.setGroupProperty = expressionHelpers.setGroupProperty,
                o
            }
            ;
            var o = PropertyFactory.getProp;
            PropertyFactory.getProp = function(r, i, a, s, l) {
                var u = o(r, i, a, s, l);
                u.kf ? u.getValueAtTime = expressionHelpers.getValueAtTime.bind(u) : u.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(u),
                u.setGroupProperty = expressionHelpers.setGroupProperty,
                u.loopOut = e,
                u.loopIn = t,
                u.smooth = n,
                u.getVelocityAtTime = expressionHelpers.getVelocityAtTime.bind(u),
                u.getSpeedAtTime = expressionHelpers.getSpeedAtTime.bind(u),
                u.numKeys = 1 === i.a ? i.k.length : 0,
                u.propertyIndex = i.ix;
                var c = 0;
                return 0 !== a && (c = createTypedArray("float32", 1 === i.a ? i.k[0].s.length : i.k.length)),
                u._cachingAtTime = {
                    lastFrame: initialDefaultFrame,
                    lastIndex: 0,
                    value: c
                },
                expressionHelpers.searchExpressions(r, i, u),
                u.k && l.addDynamicProperty(u),
                u
            }
            ;
            var s = ShapePropertyFactory.getConstructorFunction()
              , l = ShapePropertyFactory.getKeyframedConstructorFunction();
            function u() {}
            u.prototype = {
                vertices: function(e, t) {
                    this.k && this.getValue();
                    var n, r = this.v;
                    void 0 !== t && (r = this.getValueAtTime(t, 0));
                    var i = r._length
                      , a = r[e]
                      , o = r.v
                      , s = createSizedArray(i);
                    for (n = 0; n < i; n += 1)
                        s[n] = "i" === e || "o" === e ? [a[n][0] - o[n][0], a[n][1] - o[n][1]] : [a[n][0], a[n][1]];
                    return s
                },
                points: function(e) {
                    return this.vertices("v", e)
                },
                inTangents: function(e) {
                    return this.vertices("i", e)
                },
                outTangents: function(e) {
                    return this.vertices("o", e)
                },
                isClosed: function() {
                    return this.v.c
                },
                pointOnPath: function(e, t) {
                    var n = this.v;
                    void 0 !== t && (n = this.getValueAtTime(t, 0)),
                    this._segmentsLength || (this._segmentsLength = bez.getSegmentsLength(n));
                    for (var r, i = this._segmentsLength, a = i.lengths, o = i.totalLength * e, s = 0, l = a.length, u = 0; s < l; ) {
                        if (u + a[s].addedLength > o) {
                            var c = s
                              , h = n.c && s === l - 1 ? 0 : s + 1
                              , p = (o - u) / a[s].addedLength;
                            r = bez.getPointInSegment(n.v[c], n.v[h], n.o[c], n.i[h], p, a[s]);
                            break
                        }
                        u += a[s].addedLength,
                        s += 1
                    }
                    return r || (r = n.c ? [n.v[0][0], n.v[0][1]] : [n.v[n._length - 1][0], n.v[n._length - 1][1]]),
                    r
                },
                vectorOnPath: function(e, t, n) {
                    1 == e ? e = this.v.c : 0 == e && (e = .999);
                    var r = this.pointOnPath(e, t)
                      , i = this.pointOnPath(e + .001, t)
                      , a = i[0] - r[0]
                      , o = i[1] - r[1]
                      , s = Math.sqrt(Math.pow(a, 2) + Math.pow(o, 2));
                    return 0 === s ? [0, 0] : "tangent" === n ? [a / s, o / s] : [-o / s, a / s]
                },
                tangentOnPath: function(e, t) {
                    return this.vectorOnPath(e, t, "tangent")
                },
                normalOnPath: function(e, t) {
                    return this.vectorOnPath(e, t, "normal")
                },
                setGroupProperty: expressionHelpers.setGroupProperty,
                getValueAtTime: expressionHelpers.getStaticValueAtTime
            },
            extendPrototype([u], s),
            extendPrototype([u], l),
            l.prototype.getValueAtTime = function(e) {
                return this._cachingAtTime || (this._cachingAtTime = {
                    shapeValue: shapePool.clone(this.pv),
                    lastIndex: 0,
                    lastTime: initialDefaultFrame
                }),
                e *= this.elem.globalData.frameRate,
                (e -= this.offsetTime) !== this._cachingAtTime.lastTime && (this._cachingAtTime.lastIndex = this._cachingAtTime.lastTime < e ? this._caching.lastIndex : 0,
                this._cachingAtTime.lastTime = e,
                this.interpolateShape(e, this._cachingAtTime.shapeValue, this._cachingAtTime)),
                this._cachingAtTime.shapeValue
            }
            ,
            l.prototype.initiateExpression = ExpressionManager.initiateExpression;
            var c = ShapePropertyFactory.getShapeProp;
            ShapePropertyFactory.getShapeProp = function(e, t, n, r, i) {
                var a = c(e, t, n, r, i);
                return a.propertyIndex = t.ix,
                a.lock = !1,
                3 === n ? expressionHelpers.searchExpressions(e, t.pt, a) : 4 === n && expressionHelpers.searchExpressions(e, t.ks, a),
                a.k && e.addDynamicProperty(a),
                a
            }
        }(),
        TextProperty.prototype.getExpressionValue = function(e, t) {
            var n = this.calculateExpression(t);
            if (e.t !== n) {
                var r = {};
                return this.copyData(r, e),
                r.t = n.toString(),
                r.__complete = !1,
                r
            }
            return e
        }
        ,
        TextProperty.prototype.searchProperty = function() {
            var e = this.searchKeyframes()
              , t = this.searchExpressions();
            return this.kf = e || t,
            this.kf
        }
        ,
        TextProperty.prototype.searchExpressions = function() {
            return this.data.d.x ? (this.calculateExpression = ExpressionManager.initiateExpression.bind(this)(this.elem, this.data.d, this),
            this.addEffect(this.getExpressionValue.bind(this)),
            !0) : null
        }
        ;
        var ShapePathInterface = function(e, t, n) {
            var r = t.sh;
            function i(e) {
                return "Shape" === e || "shape" === e || "Path" === e || "path" === e || "ADBE Vector Shape" === e || 2 === e ? i.path : null
            }
            var a = propertyGroupFactory(i, n);
            return r.setGroupProperty(PropertyInterface("Path", a)),
            Object.defineProperties(i, {
                path: {
                    get: function() {
                        return r.k && r.getValue(),
                        r
                    }
                },
                shape: {
                    get: function() {
                        return r.k && r.getValue(),
                        r
                    }
                },
                _name: {
                    value: e.nm
                },
                ix: {
                    value: e.ix
                },
                propertyIndex: {
                    value: e.ix
                },
                mn: {
                    value: e.mn
                },
                propertyGroup: {
                    value: n
                }
            }),
            i
        }
          , propertyGroupFactory = function(e, t) {
            return function(n) {
                return (n = void 0 === n ? 1 : n) <= 0 ? e : t(n - 1)
            }
        }
          , PropertyInterface = function(e, t) {
            var n = {
                _name: e
            };
            return function(e) {
                return (e = void 0 === e ? 1 : e) <= 0 ? n : t(e - 1)
            }
        }
          , ShapeExpressionInterface = function() {
            function e(e, o, p) {
                var f, d = [], m = e ? e.length : 0;
                for (f = 0; f < m; f += 1)
                    "gr" === e[f].ty ? d.push(t(e[f], o[f], p)) : "fl" === e[f].ty ? d.push(n(e[f], o[f], p)) : "st" === e[f].ty ? d.push(i(e[f], o[f], p)) : "tm" === e[f].ty ? d.push(a(e[f], o[f], p)) : "tr" === e[f].ty || ("el" === e[f].ty ? d.push(s(e[f], o[f], p)) : "sr" === e[f].ty ? d.push(l(e[f], o[f], p)) : "sh" === e[f].ty ? d.push(ShapePathInterface(e[f], o[f], p)) : "rc" === e[f].ty ? d.push(u(e[f], o[f], p)) : "rd" === e[f].ty ? d.push(c(e[f], o[f], p)) : "rp" === e[f].ty ? d.push(h(e[f], o[f], p)) : "gf" === e[f].ty ? d.push(r(e[f], o[f], p)) : d.push((e[f],
                    o[f],
                    function() {
                        return null
                    }
                    )));
                return d
            }
            function t(t, n, r) {
                var i = function(e) {
                    switch (e) {
                    case "ADBE Vectors Group":
                    case "Contents":
                    case 2:
                        return i.content;
                    default:
                        return i.transform
                    }
                };
                i.propertyGroup = propertyGroupFactory(i, r);
                var a = function(t, n, r) {
                    var i, a = function(e) {
                        for (var t = 0, n = i.length; t < n; ) {
                            if (i[t]._name === e || i[t].mn === e || i[t].propertyIndex === e || i[t].ix === e || i[t].ind === e)
                                return i[t];
                            t += 1
                        }
                        return "number" === typeof e ? i[e - 1] : null
                    };
                    a.propertyGroup = propertyGroupFactory(a, r),
                    i = e(t.it, n.it, a.propertyGroup),
                    a.numProperties = i.length;
                    var s = o(t.it[t.it.length - 1], n.it[n.it.length - 1], a.propertyGroup);
                    return a.transform = s,
                    a.propertyIndex = t.cix,
                    a._name = t.nm,
                    a
                }(t, n, i.propertyGroup)
                  , s = o(t.it[t.it.length - 1], n.it[n.it.length - 1], i.propertyGroup);
                return i.content = a,
                i.transform = s,
                Object.defineProperty(i, "_name", {
                    get: function() {
                        return t.nm
                    }
                }),
                i.numProperties = t.np,
                i.propertyIndex = t.ix,
                i.nm = t.nm,
                i.mn = t.mn,
                i
            }
            function n(e, t, n) {
                function r(e) {
                    return "Color" === e || "color" === e ? r.color : "Opacity" === e || "opacity" === e ? r.opacity : null
                }
                return Object.defineProperties(r, {
                    color: {
                        get: ExpressionPropertyInterface(t.c)
                    },
                    opacity: {
                        get: ExpressionPropertyInterface(t.o)
                    },
                    _name: {
                        value: e.nm
                    },
                    mn: {
                        value: e.mn
                    }
                }),
                t.c.setGroupProperty(PropertyInterface("Color", n)),
                t.o.setGroupProperty(PropertyInterface("Opacity", n)),
                r
            }
            function r(e, t, n) {
                function r(e) {
                    return "Start Point" === e || "start point" === e ? r.startPoint : "End Point" === e || "end point" === e ? r.endPoint : "Opacity" === e || "opacity" === e ? r.opacity : null
                }
                return Object.defineProperties(r, {
                    startPoint: {
                        get: ExpressionPropertyInterface(t.s)
                    },
                    endPoint: {
                        get: ExpressionPropertyInterface(t.e)
                    },
                    opacity: {
                        get: ExpressionPropertyInterface(t.o)
                    },
                    type: {
                        get: function() {
                            return "a"
                        }
                    },
                    _name: {
                        value: e.nm
                    },
                    mn: {
                        value: e.mn
                    }
                }),
                t.s.setGroupProperty(PropertyInterface("Start Point", n)),
                t.e.setGroupProperty(PropertyInterface("End Point", n)),
                t.o.setGroupProperty(PropertyInterface("Opacity", n)),
                r
            }
            function i(e, t, n) {
                var r, i = propertyGroupFactory(u, n), a = propertyGroupFactory(l, i);
                function o(n) {
                    Object.defineProperty(l, e.d[n].nm, {
                        get: ExpressionPropertyInterface(t.d.dataProps[n].p)
                    })
                }
                var s = e.d ? e.d.length : 0
                  , l = {};
                for (r = 0; r < s; r += 1)
                    o(r),
                    t.d.dataProps[r].p.setGroupProperty(a);
                function u(e) {
                    return "Color" === e || "color" === e ? u.color : "Opacity" === e || "opacity" === e ? u.opacity : "Stroke Width" === e || "stroke width" === e ? u.strokeWidth : null
                }
                return Object.defineProperties(u, {
                    color: {
                        get: ExpressionPropertyInterface(t.c)
                    },
                    opacity: {
                        get: ExpressionPropertyInterface(t.o)
                    },
                    strokeWidth: {
                        get: ExpressionPropertyInterface(t.w)
                    },
                    dash: {
                        get: function() {
                            return l
                        }
                    },
                    _name: {
                        value: e.nm
                    },
                    mn: {
                        value: e.mn
                    }
                }),
                t.c.setGroupProperty(PropertyInterface("Color", i)),
                t.o.setGroupProperty(PropertyInterface("Opacity", i)),
                t.w.setGroupProperty(PropertyInterface("Stroke Width", i)),
                u
            }
            function a(e, t, n) {
                function r(t) {
                    return t === e.e.ix || "End" === t || "end" === t ? r.end : t === e.s.ix ? r.start : t === e.o.ix ? r.offset : null
                }
                var i = propertyGroupFactory(r, n);
                return r.propertyIndex = e.ix,
                t.s.setGroupProperty(PropertyInterface("Start", i)),
                t.e.setGroupProperty(PropertyInterface("End", i)),
                t.o.setGroupProperty(PropertyInterface("Offset", i)),
                r.propertyIndex = e.ix,
                r.propertyGroup = n,
                Object.defineProperties(r, {
                    start: {
                        get: ExpressionPropertyInterface(t.s)
                    },
                    end: {
                        get: ExpressionPropertyInterface(t.e)
                    },
                    offset: {
                        get: ExpressionPropertyInterface(t.o)
                    },
                    _name: {
                        value: e.nm
                    }
                }),
                r.mn = e.mn,
                r
            }
            function o(e, t, n) {
                function r(t) {
                    return e.a.ix === t || "Anchor Point" === t ? r.anchorPoint : e.o.ix === t || "Opacity" === t ? r.opacity : e.p.ix === t || "Position" === t ? r.position : e.r.ix === t || "Rotation" === t || "ADBE Vector Rotation" === t ? r.rotation : e.s.ix === t || "Scale" === t ? r.scale : e.sk && e.sk.ix === t || "Skew" === t ? r.skew : e.sa && e.sa.ix === t || "Skew Axis" === t ? r.skewAxis : null
                }
                var i = propertyGroupFactory(r, n);
                return t.transform.mProps.o.setGroupProperty(PropertyInterface("Opacity", i)),
                t.transform.mProps.p.setGroupProperty(PropertyInterface("Position", i)),
                t.transform.mProps.a.setGroupProperty(PropertyInterface("Anchor Point", i)),
                t.transform.mProps.s.setGroupProperty(PropertyInterface("Scale", i)),
                t.transform.mProps.r.setGroupProperty(PropertyInterface("Rotation", i)),
                t.transform.mProps.sk && (t.transform.mProps.sk.setGroupProperty(PropertyInterface("Skew", i)),
                t.transform.mProps.sa.setGroupProperty(PropertyInterface("Skew Angle", i))),
                t.transform.op.setGroupProperty(PropertyInterface("Opacity", i)),
                Object.defineProperties(r, {
                    opacity: {
                        get: ExpressionPropertyInterface(t.transform.mProps.o)
                    },
                    position: {
                        get: ExpressionPropertyInterface(t.transform.mProps.p)
                    },
                    anchorPoint: {
                        get: ExpressionPropertyInterface(t.transform.mProps.a)
                    },
                    scale: {
                        get: ExpressionPropertyInterface(t.transform.mProps.s)
                    },
                    rotation: {
                        get: ExpressionPropertyInterface(t.transform.mProps.r)
                    },
                    skew: {
                        get: ExpressionPropertyInterface(t.transform.mProps.sk)
                    },
                    skewAxis: {
                        get: ExpressionPropertyInterface(t.transform.mProps.sa)
                    },
                    _name: {
                        value: e.nm
                    }
                }),
                r.ty = "tr",
                r.mn = e.mn,
                r.propertyGroup = n,
                r
            }
            function s(e, t, n) {
                function r(t) {
                    return e.p.ix === t ? r.position : e.s.ix === t ? r.size : null
                }
                var i = propertyGroupFactory(r, n);
                r.propertyIndex = e.ix;
                var a = "tm" === t.sh.ty ? t.sh.prop : t.sh;
                return a.s.setGroupProperty(PropertyInterface("Size", i)),
                a.p.setGroupProperty(PropertyInterface("Position", i)),
                Object.defineProperties(r, {
                    size: {
                        get: ExpressionPropertyInterface(a.s)
                    },
                    position: {
                        get: ExpressionPropertyInterface(a.p)
                    },
                    _name: {
                        value: e.nm
                    }
                }),
                r.mn = e.mn,
                r
            }
            function l(e, t, n) {
                function r(t) {
                    return e.p.ix === t ? r.position : e.r.ix === t ? r.rotation : e.pt.ix === t ? r.points : e.or.ix === t || "ADBE Vector Star Outer Radius" === t ? r.outerRadius : e.os.ix === t ? r.outerRoundness : !e.ir || e.ir.ix !== t && "ADBE Vector Star Inner Radius" !== t ? e.is && e.is.ix === t ? r.innerRoundness : null : r.innerRadius
                }
                var i = propertyGroupFactory(r, n)
                  , a = "tm" === t.sh.ty ? t.sh.prop : t.sh;
                return r.propertyIndex = e.ix,
                a.or.setGroupProperty(PropertyInterface("Outer Radius", i)),
                a.os.setGroupProperty(PropertyInterface("Outer Roundness", i)),
                a.pt.setGroupProperty(PropertyInterface("Points", i)),
                a.p.setGroupProperty(PropertyInterface("Position", i)),
                a.r.setGroupProperty(PropertyInterface("Rotation", i)),
                e.ir && (a.ir.setGroupProperty(PropertyInterface("Inner Radius", i)),
                a.is.setGroupProperty(PropertyInterface("Inner Roundness", i))),
                Object.defineProperties(r, {
                    position: {
                        get: ExpressionPropertyInterface(a.p)
                    },
                    rotation: {
                        get: ExpressionPropertyInterface(a.r)
                    },
                    points: {
                        get: ExpressionPropertyInterface(a.pt)
                    },
                    outerRadius: {
                        get: ExpressionPropertyInterface(a.or)
                    },
                    outerRoundness: {
                        get: ExpressionPropertyInterface(a.os)
                    },
                    innerRadius: {
                        get: ExpressionPropertyInterface(a.ir)
                    },
                    innerRoundness: {
                        get: ExpressionPropertyInterface(a.is)
                    },
                    _name: {
                        value: e.nm
                    }
                }),
                r.mn = e.mn,
                r
            }
            function u(e, t, n) {
                function r(t) {
                    return e.p.ix === t ? r.position : e.r.ix === t ? r.roundness : e.s.ix === t || "Size" === t || "ADBE Vector Rect Size" === t ? r.size : null
                }
                var i = propertyGroupFactory(r, n)
                  , a = "tm" === t.sh.ty ? t.sh.prop : t.sh;
                return r.propertyIndex = e.ix,
                a.p.setGroupProperty(PropertyInterface("Position", i)),
                a.s.setGroupProperty(PropertyInterface("Size", i)),
                a.r.setGroupProperty(PropertyInterface("Rotation", i)),
                Object.defineProperties(r, {
                    position: {
                        get: ExpressionPropertyInterface(a.p)
                    },
                    roundness: {
                        get: ExpressionPropertyInterface(a.r)
                    },
                    size: {
                        get: ExpressionPropertyInterface(a.s)
                    },
                    _name: {
                        value: e.nm
                    }
                }),
                r.mn = e.mn,
                r
            }
            function c(e, t, n) {
                function r(t) {
                    return e.r.ix === t || "Round Corners 1" === t ? r.radius : null
                }
                var i = propertyGroupFactory(r, n)
                  , a = t;
                return r.propertyIndex = e.ix,
                a.rd.setGroupProperty(PropertyInterface("Radius", i)),
                Object.defineProperties(r, {
                    radius: {
                        get: ExpressionPropertyInterface(a.rd)
                    },
                    _name: {
                        value: e.nm
                    }
                }),
                r.mn = e.mn,
                r
            }
            function h(e, t, n) {
                function r(t) {
                    return e.c.ix === t || "Copies" === t ? r.copies : e.o.ix === t || "Offset" === t ? r.offset : null
                }
                var i = propertyGroupFactory(r, n)
                  , a = t;
                return r.propertyIndex = e.ix,
                a.c.setGroupProperty(PropertyInterface("Copies", i)),
                a.o.setGroupProperty(PropertyInterface("Offset", i)),
                Object.defineProperties(r, {
                    copies: {
                        get: ExpressionPropertyInterface(a.c)
                    },
                    offset: {
                        get: ExpressionPropertyInterface(a.o)
                    },
                    _name: {
                        value: e.nm
                    }
                }),
                r.mn = e.mn,
                r
            }
            return function(t, n, r) {
                var i;
                function a(e) {
                    if ("number" === typeof e)
                        return 0 === (e = void 0 === e ? 1 : e) ? r : i[e - 1];
                    for (var t = 0, n = i.length; t < n; ) {
                        if (i[t]._name === e)
                            return i[t];
                        t += 1
                    }
                    return null
                }
                return a.propertyGroup = propertyGroupFactory(a, (function() {
                    return r
                }
                )),
                i = e(t, n, a.propertyGroup),
                a.numProperties = i.length,
                a._name = "Contents",
                a
            }
        }()
          , TextExpressionInterface = function(e) {
            var t;
            function n(e) {
                switch (e) {
                case "ADBE Text Document":
                    return n.sourceText;
                default:
                    return null
                }
            }
            return Object.defineProperty(n, "sourceText", {
                get: function() {
                    e.textProperty.getValue();
                    var n = e.textProperty.currentData.t;
                    return void 0 !== n && (e.textProperty.currentData.t = void 0,
                    (t = new String(n)).value = n || new String(n)),
                    t
                }
            }),
            n
        }
          , LayerExpressionInterface = function() {
            function e(e) {
                var t = new Matrix;
                return void 0 !== e ? this._elem.finalTransform.mProp.getValueAtTime(e).clone(t) : this._elem.finalTransform.mProp.applyToMatrix(t),
                t
            }
            function t(e, t) {
                var n = this.getMatrix(t);
                return n.props[12] = 0,
                n.props[13] = 0,
                n.props[14] = 0,
                this.applyPoint(n, e)
            }
            function n(e, t) {
                var n = this.getMatrix(t);
                return this.applyPoint(n, e)
            }
            function r(e, t) {
                var n = this.getMatrix(t);
                return n.props[12] = 0,
                n.props[13] = 0,
                n.props[14] = 0,
                this.invertPoint(n, e)
            }
            function i(e, t) {
                var n = this.getMatrix(t);
                return this.invertPoint(n, e)
            }
            function a(e, t) {
                if (this._elem.hierarchy && this._elem.hierarchy.length) {
                    var n, r = this._elem.hierarchy.length;
                    for (n = 0; n < r; n += 1)
                        this._elem.hierarchy[n].finalTransform.mProp.applyToMatrix(e)
                }
                return e.applyToPointArray(t[0], t[1], t[2] || 0)
            }
            function o(e, t) {
                if (this._elem.hierarchy && this._elem.hierarchy.length) {
                    var n, r = this._elem.hierarchy.length;
                    for (n = 0; n < r; n += 1)
                        this._elem.hierarchy[n].finalTransform.mProp.applyToMatrix(e)
                }
                return e.inversePoint(t)
            }
            function s(e) {
                var t = new Matrix;
                if (t.reset(),
                this._elem.finalTransform.mProp.applyToMatrix(t),
                this._elem.hierarchy && this._elem.hierarchy.length) {
                    var n, r = this._elem.hierarchy.length;
                    for (n = 0; n < r; n += 1)
                        this._elem.hierarchy[n].finalTransform.mProp.applyToMatrix(t);
                    return t.inversePoint(e)
                }
                return t.inversePoint(e)
            }
            function l() {
                return [1, 1, 1, 1]
            }
            return function(u) {
                var c;
                function h(e) {
                    switch (e) {
                    case "ADBE Root Vectors Group":
                    case "Contents":
                    case 2:
                        return h.shapeInterface;
                    case 1:
                    case 6:
                    case "Transform":
                    case "transform":
                    case "ADBE Transform Group":
                        return c;
                    case 4:
                    case "ADBE Effect Parade":
                    case "effects":
                    case "Effects":
                        return h.effect;
                    case "ADBE Text Properties":
                        return h.textInterface;
                    default:
                        return null
                    }
                }
                h.getMatrix = e,
                h.invertPoint = o,
                h.applyPoint = a,
                h.toWorld = n,
                h.toWorldVec = t,
                h.fromWorld = i,
                h.fromWorldVec = r,
                h.toComp = n,
                h.fromComp = s,
                h.sampleImage = l,
                h.sourceRectAtTime = u.sourceRectAtTime.bind(u),
                h._elem = u;
                var p = getDescriptor(c = TransformExpressionInterface(u.finalTransform.mProp), "anchorPoint");
                return Object.defineProperties(h, {
                    hasParent: {
                        get: function() {
                            return u.hierarchy.length
                        }
                    },
                    parent: {
                        get: function() {
                            return u.hierarchy[0].layerInterface
                        }
                    },
                    rotation: getDescriptor(c, "rotation"),
                    scale: getDescriptor(c, "scale"),
                    position: getDescriptor(c, "position"),
                    opacity: getDescriptor(c, "opacity"),
                    anchorPoint: p,
                    anchor_point: p,
                    transform: {
                        get: function() {
                            return c
                        }
                    },
                    active: {
                        get: function() {
                            return u.isInRange
                        }
                    }
                }),
                h.startTime = u.data.st,
                h.index = u.data.ind,
                h.source = u.data.refId,
                h.height = 0 === u.data.ty ? u.data.h : 100,
                h.width = 0 === u.data.ty ? u.data.w : 100,
                h.inPoint = u.data.ip / u.comp.globalData.frameRate,
                h.outPoint = u.data.op / u.comp.globalData.frameRate,
                h._name = u.data.nm,
                h.registerMaskInterface = function(e) {
                    h.mask = new MaskManagerInterface(e,u)
                }
                ,
                h.registerEffectsInterface = function(e) {
                    h.effect = e
                }
                ,
                h
            }
        }()
          , FootageInterface = function() {
            var e = function(e) {
                function t(e) {
                    return "Outline" === e ? t.outlineInterface() : null
                }
                return t._name = "Outline",
                t.outlineInterface = function(e) {
                    var t = ""
                      , n = e.getFootageData();
                    function r(e) {
                        if (n[e])
                            return t = e,
                            "object" === typeof (n = n[e]) ? r : n;
                        var i = e.indexOf(t);
                        if (-1 !== i) {
                            var a = parseInt(e.substr(i + t.length), 10);
                            return "object" === typeof (n = n[a]) ? r : n
                        }
                        return ""
                    }
                    return function() {
                        return t = "",
                        n = e.getFootageData(),
                        r
                    }
                }(e),
                t
            };
            return function(t) {
                function n(e) {
                    return "Data" === e ? n.dataInterface : null
                }
                return n._name = "Data",
                n.dataInterface = e(t),
                n
            }
        }()
          , CompExpressionInterface = function(e) {
            function t(t) {
                for (var n = 0, r = e.layers.length; n < r; ) {
                    if (e.layers[n].nm === t || e.layers[n].ind === t)
                        return e.elements[n].layerInterface;
                    n += 1
                }
                return null
            }
            return Object.defineProperty(t, "_name", {
                value: e.data.nm
            }),
            t.layer = t,
            t.pixelAspect = 1,
            t.height = e.data.h || e.globalData.compSize.h,
            t.width = e.data.w || e.globalData.compSize.w,
            t.pixelAspect = 1,
            t.frameDuration = 1 / e.globalData.frameRate,
            t.displayStartTime = 0,
            t.numLayers = e.layers.length,
            t
        }
          , TransformExpressionInterface = function(e) {
            function t(e) {
                switch (e) {
                case "scale":
                case "Scale":
                case "ADBE Scale":
                case 6:
                    return t.scale;
                case "rotation":
                case "Rotation":
                case "ADBE Rotation":
                case "ADBE Rotate Z":
                case 10:
                    return t.rotation;
                case "ADBE Rotate X":
                    return t.xRotation;
                case "ADBE Rotate Y":
                    return t.yRotation;
                case "position":
                case "Position":
                case "ADBE Position":
                case 2:
                    return t.position;
                case "ADBE Position_0":
                    return t.xPosition;
                case "ADBE Position_1":
                    return t.yPosition;
                case "ADBE Position_2":
                    return t.zPosition;
                case "anchorPoint":
                case "AnchorPoint":
                case "Anchor Point":
                case "ADBE AnchorPoint":
                case 1:
                    return t.anchorPoint;
                case "opacity":
                case "Opacity":
                case 11:
                    return t.opacity;
                default:
                    return null
                }
            }
            var n, r, i, a;
            return Object.defineProperty(t, "rotation", {
                get: ExpressionPropertyInterface(e.r || e.rz)
            }),
            Object.defineProperty(t, "zRotation", {
                get: ExpressionPropertyInterface(e.rz || e.r)
            }),
            Object.defineProperty(t, "xRotation", {
                get: ExpressionPropertyInterface(e.rx)
            }),
            Object.defineProperty(t, "yRotation", {
                get: ExpressionPropertyInterface(e.ry)
            }),
            Object.defineProperty(t, "scale", {
                get: ExpressionPropertyInterface(e.s)
            }),
            e.p ? a = ExpressionPropertyInterface(e.p) : (n = ExpressionPropertyInterface(e.px),
            r = ExpressionPropertyInterface(e.py),
            e.pz && (i = ExpressionPropertyInterface(e.pz))),
            Object.defineProperty(t, "position", {
                get: function() {
                    return e.p ? a() : [n(), r(), i ? i() : 0]
                }
            }),
            Object.defineProperty(t, "xPosition", {
                get: ExpressionPropertyInterface(e.px)
            }),
            Object.defineProperty(t, "yPosition", {
                get: ExpressionPropertyInterface(e.py)
            }),
            Object.defineProperty(t, "zPosition", {
                get: ExpressionPropertyInterface(e.pz)
            }),
            Object.defineProperty(t, "anchorPoint", {
                get: ExpressionPropertyInterface(e.a)
            }),
            Object.defineProperty(t, "opacity", {
                get: ExpressionPropertyInterface(e.o)
            }),
            Object.defineProperty(t, "skew", {
                get: ExpressionPropertyInterface(e.sk)
            }),
            Object.defineProperty(t, "skewAxis", {
                get: ExpressionPropertyInterface(e.sa)
            }),
            Object.defineProperty(t, "orientation", {
                get: ExpressionPropertyInterface(e.or)
            }),
            t
        }
          , ProjectInterface = function() {
            function e(e) {
                this.compositions.push(e)
            }
            return function() {
                function t(e) {
                    for (var t = 0, n = this.compositions.length; t < n; ) {
                        if (this.compositions[t].data && this.compositions[t].data.nm === e)
                            return this.compositions[t].prepareFrame && this.compositions[t].data.xt && this.compositions[t].prepareFrame(this.currentFrame),
                            this.compositions[t].compInterface;
                        t += 1
                    }
                    return null
                }
                return t.compositions = [],
                t.currentFrame = 0,
                t.registerComposition = e,
                t
            }
        }()
          , EffectsExpressionInterface = function() {
            function e(n, r, i, a) {
                function o(e) {
                    for (var t = n.ef, r = 0, i = t.length; r < i; ) {
                        if (e === t[r].nm || e === t[r].mn || e === t[r].ix)
                            return 5 === t[r].ty ? u[r] : u[r]();
                        r += 1
                    }
                    throw new Error
                }
                var s, l = propertyGroupFactory(o, i), u = [], c = n.ef.length;
                for (s = 0; s < c; s += 1)
                    5 === n.ef[s].ty ? u.push(e(n.ef[s], r.effectElements[s], r.effectElements[s].propertyGroup, a)) : u.push(t(r.effectElements[s], n.ef[s].ty, a, l));
                return "ADBE Color Control" === n.mn && Object.defineProperty(o, "color", {
                    get: function() {
                        return u[0]()
                    }
                }),
                Object.defineProperties(o, {
                    numProperties: {
                        get: function() {
                            return n.np
                        }
                    },
                    _name: {
                        value: n.nm
                    },
                    propertyGroup: {
                        value: l
                    }
                }),
                o.enabled = 0 !== n.en,
                o.active = o.enabled,
                o
            }
            function t(e, t, n, r) {
                var i = ExpressionPropertyInterface(e.p);
                return e.p.setGroupProperty && e.p.setGroupProperty(PropertyInterface("", r)),
                function() {
                    return 10 === t ? n.comp.compInterface(e.p.v) : i()
                }
            }
            return {
                createEffectsInterface: function(t, n) {
                    if (t.effectsManager) {
                        var r, i = [], a = t.data.ef, o = t.effectsManager.effectElements.length;
                        for (r = 0; r < o; r += 1)
                            i.push(e(a[r], t.effectsManager.effectElements[r], n, t));
                        var s = t.data.ef || []
                          , l = function(e) {
                            for (r = 0,
                            o = s.length; r < o; ) {
                                if (e === s[r].nm || e === s[r].mn || e === s[r].ix)
                                    return i[r];
                                r += 1
                            }
                            return null
                        };
                        return Object.defineProperty(l, "numProperties", {
                            get: function() {
                                return s.length
                            }
                        }),
                        l
                    }
                    return null
                }
            }
        }()
          , MaskManagerInterface = function() {
            function e(e, t) {
                this._mask = e,
                this._data = t
            }
            return Object.defineProperty(e.prototype, "maskPath", {
                get: function() {
                    return this._mask.prop.k && this._mask.prop.getValue(),
                    this._mask.prop
                }
            }),
            Object.defineProperty(e.prototype, "maskOpacity", {
                get: function() {
                    return this._mask.op.k && this._mask.op.getValue(),
                    100 * this._mask.op.v
                }
            }),
            function(t) {
                var n, r = createSizedArray(t.viewData.length), i = t.viewData.length;
                for (n = 0; n < i; n += 1)
                    r[n] = new e(t.viewData[n],t.masksProperties[n]);
                return function(e) {
                    for (n = 0; n < i; ) {
                        if (t.masksProperties[n].nm === e)
                            return r[n];
                        n += 1
                    }
                    return null
                }
            }
        }()
          , ExpressionPropertyInterface = function() {
            var e = {
                pv: 0,
                v: 0,
                mult: 1
            }
              , t = {
                pv: [0, 0, 0],
                v: [0, 0, 0],
                mult: 1
            };
            function n(e, t, n) {
                Object.defineProperty(e, "velocity", {
                    get: function() {
                        return t.getVelocityAtTime(t.comp.currentFrame)
                    }
                }),
                e.numKeys = t.keyframes ? t.keyframes.length : 0,
                e.key = function(r) {
                    if (!e.numKeys)
                        return 0;
                    var i = "";
                    i = "s"in t.keyframes[r - 1] ? t.keyframes[r - 1].s : "e"in t.keyframes[r - 2] ? t.keyframes[r - 2].e : t.keyframes[r - 2].s;
                    var a = "unidimensional" === n ? new Number(i) : Object.assign({}, i);
                    return a.time = t.keyframes[r - 1].t / t.elem.comp.globalData.frameRate,
                    a.value = "unidimensional" === n ? i[0] : i,
                    a
                }
                ,
                e.valueAtTime = t.getValueAtTime,
                e.speedAtTime = t.getSpeedAtTime,
                e.velocityAtTime = t.getVelocityAtTime,
                e.propertyGroup = t.propertyGroup
            }
            function r() {
                return e
            }
            return function(i) {
                return i ? "unidimensional" === i.propType ? function(t) {
                    t && "pv"in t || (t = e);
                    var r = 1 / t.mult
                      , i = t.pv * r
                      , a = new Number(i);
                    return a.value = i,
                    n(a, t, "unidimensional"),
                    function() {
                        return t.k && t.getValue(),
                        i = t.v * r,
                        a.value !== i && ((a = new Number(i)).value = i,
                        n(a, t, "unidimensional")),
                        a
                    }
                }(i) : function(e) {
                    e && "pv"in e || (e = t);
                    var r = 1 / e.mult
                      , i = e.data && e.data.l || e.pv.length
                      , a = createTypedArray("float32", i)
                      , o = createTypedArray("float32", i);
                    return a.value = o,
                    n(a, e, "multidimensional"),
                    function() {
                        e.k && e.getValue();
                        for (var t = 0; t < i; t += 1)
                            o[t] = e.v[t] * r,
                            a[t] = o[t];
                        return a
                    }
                }(i) : r
            }
        }();
        function SliderEffect(e, t, n) {
            this.p = PropertyFactory.getProp(t, e.v, 0, 0, n)
        }
        function AngleEffect(e, t, n) {
            this.p = PropertyFactory.getProp(t, e.v, 0, 0, n)
        }
        function ColorEffect(e, t, n) {
            this.p = PropertyFactory.getProp(t, e.v, 1, 0, n)
        }
        function PointEffect(e, t, n) {
            this.p = PropertyFactory.getProp(t, e.v, 1, 0, n)
        }
        function LayerIndexEffect(e, t, n) {
            this.p = PropertyFactory.getProp(t, e.v, 0, 0, n)
        }
        function MaskIndexEffect(e, t, n) {
            this.p = PropertyFactory.getProp(t, e.v, 0, 0, n)
        }
        function CheckboxEffect(e, t, n) {
            this.p = PropertyFactory.getProp(t, e.v, 0, 0, n)
        }
        function NoValueEffect() {
            this.p = {}
        }
        function EffectsManager(e, t) {
            var n, r = e.ef || [];
            this.effectElements = [];
            var i, a = r.length;
            for (n = 0; n < a; n += 1)
                i = new GroupEffect(r[n],t),
                this.effectElements.push(i)
        }
        function GroupEffect(e, t) {
            this.init(e, t)
        }
        !function() {
            var e = TextSelectorProp.getTextSelectorProp;
            TextSelectorProp.getTextSelectorProp = function(t, n, r) {
                return 1 === n.t ? new TextExpressionSelectorPropFactory(t,n,r) : e(t, n, r)
            }
        }(),
        extendPrototype([DynamicPropertyContainer], GroupEffect),
        GroupEffect.prototype.getValue = GroupEffect.prototype.iterateDynamicProperties,
        GroupEffect.prototype.init = function(e, t) {
            var n;
            this.data = e,
            this.effectElements = [],
            this.initDynamicPropertyContainer(t);
            var r, i = this.data.ef.length, a = this.data.ef;
            for (n = 0; n < i; n += 1) {
                switch (r = null,
                a[n].ty) {
                case 0:
                    r = new SliderEffect(a[n],t,this);
                    break;
                case 1:
                    r = new AngleEffect(a[n],t,this);
                    break;
                case 2:
                    r = new ColorEffect(a[n],t,this);
                    break;
                case 3:
                    r = new PointEffect(a[n],t,this);
                    break;
                case 4:
                case 7:
                    r = new CheckboxEffect(a[n],t,this);
                    break;
                case 10:
                    r = new LayerIndexEffect(a[n],t,this);
                    break;
                case 11:
                    r = new MaskIndexEffect(a[n],t,this);
                    break;
                case 5:
                    r = new EffectsManager(a[n],t,this);
                    break;
                default:
                    r = new NoValueEffect(a[n],t,this)
                }
                r && this.effectElements.push(r)
            }
        }
        ;
        var lottie = {};
        function setLocationHref(e) {
            locationHref = e
        }
        function searchAnimations() {
            !0 === standalone ? animationManager.searchAnimations(animationData, standalone, renderer) : animationManager.searchAnimations()
        }
        function setSubframeRendering(e) {
            subframeEnabled = e
        }
        function setIDPrefix(e) {
            idPrefix = e
        }
        function loadAnimation(e) {
            return !0 === standalone && (e.animationData = JSON.parse(animationData)),
            animationManager.loadAnimation(e)
        }
        function setQuality(e) {
            if ("string" === typeof e)
                switch (e) {
                case "high":
                    defaultCurveSegments = 200;
                    break;
                default:
                case "medium":
                    defaultCurveSegments = 50;
                    break;
                case "low":
                    defaultCurveSegments = 10
                }
            else
                !isNaN(e) && e > 1 && (defaultCurveSegments = e);
            roundValues(!(defaultCurveSegments >= 50))
        }
        function inBrowser() {
            return "undefined" !== typeof navigator
        }
        function installPlugin(e, t) {
            "expressions" === e && (expressionsPlugin = t)
        }
        function getFactory(e) {
            switch (e) {
            case "propertyFactory":
                return PropertyFactory;
            case "shapePropertyFactory":
                return ShapePropertyFactory;
            case "matrix":
                return Matrix;
            default:
                return null
            }
        }
        function checkReady() {
            "complete" === document.readyState && (clearInterval(readyStateCheckInterval),
            searchAnimations())
        }
        function getQueryVariable(e) {
            for (var t = queryString.split("&"), n = 0; n < t.length; n += 1) {
                var r = t[n].split("=");
                if (decodeURIComponent(r[0]) == e)
                    return decodeURIComponent(r[1])
            }
            return null
        }
        lottie.play = animationManager.play,
        lottie.pause = animationManager.pause,
        lottie.setLocationHref = setLocationHref,
        lottie.togglePause = animationManager.togglePause,
        lottie.setSpeed = animationManager.setSpeed,
        lottie.setDirection = animationManager.setDirection,
        lottie.stop = animationManager.stop,
        lottie.searchAnimations = searchAnimations,
        lottie.registerAnimation = animationManager.registerAnimation,
        lottie.loadAnimation = loadAnimation,
        lottie.setSubframeRendering = setSubframeRendering,
        lottie.resize = animationManager.resize,
        lottie.goToAndStop = animationManager.goToAndStop,
        lottie.destroy = animationManager.destroy,
        lottie.setQuality = setQuality,
        lottie.inBrowser = inBrowser,
        lottie.installPlugin = installPlugin,
        lottie.freeze = animationManager.freeze,
        lottie.unfreeze = animationManager.unfreeze,
        lottie.setVolume = animationManager.setVolume,
        lottie.mute = animationManager.mute,
        lottie.unmute = animationManager.unmute,
        lottie.getRegisteredAnimations = animationManager.getRegisteredAnimations,
        lottie.setIDPrefix = setIDPrefix,
        lottie.__getFactory = getFactory,
        lottie.version = "5.7.11";
        var standalone = "__[STANDALONE]__", animationData = "__[ANIMATIONDATA]__", renderer = "", queryString;
        if (standalone) {
            var scripts = document.getElementsByTagName("script")
              , index = scripts.length - 1
              , myScript = scripts[index] || {
                src: ""
            };
            queryString = myScript.src.replace(/^[^\?]+\??/, ""),
            renderer = getQueryVariable("renderer")
        }
        var readyStateCheckInterval = setInterval(checkReady, 100);
        return lottie
    }
    ,
    void 0 === (__WEBPACK_AMD_DEFINE_RESULT__ = function() {
        return factory(root)
    }
    .call(exports, __webpack_require__, exports, module)) || (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))
}
, , , , function(e, t, n) {
    "use strict";
    n.d(t, "a", (function() {
        return U
    }
    ));
    var r = n(10)
      , i = n(0)
      , a = n.n(i)
      , o = (n(11),
    n(2));
    function s(e) {
        return "/" === e.charAt(0)
    }
    function l(e, t) {
        for (var n = t, r = n + 1, i = e.length; r < i; n += 1,
        r += 1)
            e[n] = e[r];
        e.pop()
    }
    var u = function(e, t) {
        void 0 === t && (t = "");
        var n, r = e && e.split("/") || [], i = t && t.split("/") || [], a = e && s(e), o = t && s(t), u = a || o;
        if (e && s(e) ? i = r : r.length && (i.pop(),
        i = i.concat(r)),
        !i.length)
            return "/";
        if (i.length) {
            var c = i[i.length - 1];
            n = "." === c || ".." === c || "" === c
        } else
            n = !1;
        for (var h = 0, p = i.length; p >= 0; p--) {
            var f = i[p];
            "." === f ? l(i, p) : ".." === f ? (l(i, p),
            h++) : h && (l(i, p),
            h--)
        }
        if (!u)
            for (; h--; h)
                i.unshift("..");
        !u || "" === i[0] || i[0] && s(i[0]) || i.unshift("");
        var d = i.join("/");
        return n && "/" !== d.substr(-1) && (d += "/"),
        d
    };
    var c = function(e, t) {
        if (!e)
            throw new Error("Invariant failed")
    };
    function h(e) {
        return "/" === e.charAt(0) ? e : "/" + e
    }
    function p(e) {
        return "/" === e.charAt(0) ? e.substr(1) : e
    }
    function f(e, t) {
        return function(e, t) {
            return 0 === e.toLowerCase().indexOf(t.toLowerCase()) && -1 !== "/?#".indexOf(e.charAt(t.length))
        }(e, t) ? e.substr(t.length) : e
    }
    function d(e) {
        return "/" === e.charAt(e.length - 1) ? e.slice(0, -1) : e
    }
    function m(e) {
        var t = e.pathname
          , n = e.search
          , r = e.hash
          , i = t || "/";
        return n && "?" !== n && (i += "?" === n.charAt(0) ? n : "?" + n),
        r && "#" !== r && (i += "#" === r.charAt(0) ? r : "#" + r),
        i
    }
    function g(e, t, n, r) {
        var i;
        "string" === typeof e ? (i = function(e) {
            var t = e || "/"
              , n = ""
              , r = ""
              , i = t.indexOf("#");
            -1 !== i && (r = t.substr(i),
            t = t.substr(0, i));
            var a = t.indexOf("?");
            return -1 !== a && (n = t.substr(a),
            t = t.substr(0, a)),
            {
                pathname: t,
                search: "?" === n ? "" : n,
                hash: "#" === r ? "" : r
            }
        }(e)).state = t : (void 0 === (i = Object(o.a)({}, e)).pathname && (i.pathname = ""),
        i.search ? "?" !== i.search.charAt(0) && (i.search = "?" + i.search) : i.search = "",
        i.hash ? "#" !== i.hash.charAt(0) && (i.hash = "#" + i.hash) : i.hash = "",
        void 0 !== t && void 0 === i.state && (i.state = t));
        try {
            i.pathname = decodeURI(i.pathname)
        } catch (a) {
            throw a instanceof URIError ? new URIError('Pathname "' + i.pathname + '" could not be decoded. This is likely caused by an invalid percent-encoding.') : a
        }
        return n && (i.key = n),
        r ? i.pathname ? "/" !== i.pathname.charAt(0) && (i.pathname = u(i.pathname, r.pathname)) : i.pathname = r.pathname : i.pathname || (i.pathname = "/"),
        i
    }
    function v() {
        var e = null;
        var t = [];
        return {
            setPrompt: function(t) {
                return e = t,
                function() {
                    e === t && (e = null)
                }
            },
            confirmTransitionTo: function(t, n, r, i) {
                if (null != e) {
                    var a = "function" === typeof e ? e(t, n) : e;
                    "string" === typeof a ? "function" === typeof r ? r(a, i) : i(!0) : i(!1 !== a)
                } else
                    i(!0)
            },
            appendListener: function(e) {
                var n = !0;
                function r() {
                    n && e.apply(void 0, arguments)
                }
                return t.push(r),
                function() {
                    n = !1,
                    t = t.filter((function(e) {
                        return e !== r
                    }
                    ))
                }
            },
            notifyListeners: function() {
                for (var e = arguments.length, n = new Array(e), r = 0; r < e; r++)
                    n[r] = arguments[r];
                t.forEach((function(e) {
                    return e.apply(void 0, n)
                }
                ))
            }
        }
    }
    var y = !("undefined" === typeof window || !window.document || !window.document.createElement);
    function b(e, t) {
        t(window.confirm(e))
    }
    function x() {
        try {
            return window.history.state || {}
        } catch (e) {
            return {}
        }
    }
    function w(e) {
        void 0 === e && (e = {}),
        y || c(!1);
        var t = window.history
          , n = function() {
            var e = window.navigator.userAgent;
            return (-1 === e.indexOf("Android 2.") && -1 === e.indexOf("Android 4.0") || -1 === e.indexOf("Mobile Safari") || -1 !== e.indexOf("Chrome") || -1 !== e.indexOf("Windows Phone")) && (window.history && "pushState"in window.history)
        }()
          , r = !(-1 === window.navigator.userAgent.indexOf("Trident"))
          , i = e
          , a = i.forceRefresh
          , s = void 0 !== a && a
          , l = i.getUserConfirmation
          , u = void 0 === l ? b : l
          , p = i.keyLength
          , w = void 0 === p ? 6 : p
          , _ = e.basename ? d(h(e.basename)) : "";
        function S(e) {
            var t = e || {}
              , n = t.key
              , r = t.state
              , i = window.location
              , a = i.pathname + i.search + i.hash;
            return _ && (a = f(a, _)),
            g(a, r, n)
        }
        function E() {
            return Math.random().toString(36).substr(2, w)
        }
        var M = v();
        function T(e) {
            Object(o.a)(B, e),
            B.length = t.length,
            M.notifyListeners(B.location, B.action)
        }
        function A(e) {
            (function(e) {
                return void 0 === e.state && -1 === navigator.userAgent.indexOf("CriOS")
            }
            )(e) || L(S(e.state))
        }
        function P() {
            L(S(x()))
        }
        var C = !1;
        function L(e) {
            if (C)
                C = !1,
                T();
            else {
                M.confirmTransitionTo(e, "POP", u, (function(t) {
                    t ? T({
                        action: "POP",
                        location: e
                    }) : function(e) {
                        var t = B.location
                          , n = k.indexOf(t.key);
                        -1 === n && (n = 0);
                        var r = k.indexOf(e.key);
                        -1 === r && (r = 0);
                        var i = n - r;
                        i && (C = !0,
                        I(i))
                    }(e)
                }
                ))
            }
        }
        var R = S(x())
          , k = [R.key];
        function D(e) {
            return _ + m(e)
        }
        function I(e) {
            t.go(e)
        }
        var O = 0;
        function F(e) {
            1 === (O += e) && 1 === e ? (window.addEventListener("popstate", A),
            r && window.addEventListener("hashchange", P)) : 0 === O && (window.removeEventListener("popstate", A),
            r && window.removeEventListener("hashchange", P))
        }
        var N = !1;
        var B = {
            length: t.length,
            action: "POP",
            location: R,
            createHref: D,
            push: function(e, r) {
                var i = g(e, r, E(), B.location);
                M.confirmTransitionTo(i, "PUSH", u, (function(e) {
                    if (e) {
                        var r = D(i)
                          , a = i.key
                          , o = i.state;
                        if (n)
                            if (t.pushState({
                                key: a,
                                state: o
                            }, null, r),
                            s)
                                window.location.href = r;
                            else {
                                var l = k.indexOf(B.location.key)
                                  , u = k.slice(0, l + 1);
                                u.push(i.key),
                                k = u,
                                T({
                                    action: "PUSH",
                                    location: i
                                })
                            }
                        else
                            window.location.href = r
                    }
                }
                ))
            },
            replace: function(e, r) {
                var i = g(e, r, E(), B.location);
                M.confirmTransitionTo(i, "REPLACE", u, (function(e) {
                    if (e) {
                        var r = D(i)
                          , a = i.key
                          , o = i.state;
                        if (n)
                            if (t.replaceState({
                                key: a,
                                state: o
                            }, null, r),
                            s)
                                window.location.replace(r);
                            else {
                                var l = k.indexOf(B.location.key);
                                -1 !== l && (k[l] = i.key),
                                T({
                                    action: "REPLACE",
                                    location: i
                                })
                            }
                        else
                            window.location.replace(r)
                    }
                }
                ))
            },
            go: I,
            goBack: function() {
                I(-1)
            },
            goForward: function() {
                I(1)
            },
            block: function(e) {
                void 0 === e && (e = !1);
                var t = M.setPrompt(e);
                return N || (F(1),
                N = !0),
                function() {
                    return N && (N = !1,
                    F(-1)),
                    t()
                }
            },
            listen: function(e) {
                var t = M.appendListener(e);
                return F(1),
                function() {
                    F(-1),
                    t()
                }
            }
        };
        return B
    }
    var _ = {
        hashbang: {
            encodePath: function(e) {
                return "!" === e.charAt(0) ? e : "!/" + p(e)
            },
            decodePath: function(e) {
                return "!" === e.charAt(0) ? e.substr(1) : e
            }
        },
        noslash: {
            encodePath: p,
            decodePath: h
        },
        slash: {
            encodePath: h,
            decodePath: h
        }
    };
    function S(e) {
        var t = e.indexOf("#");
        return -1 === t ? e : e.slice(0, t)
    }
    function E() {
        var e = window.location.href
          , t = e.indexOf("#");
        return -1 === t ? "" : e.substring(t + 1)
    }
    function M(e) {
        window.location.replace(S(window.location.href) + "#" + e)
    }
    function T(e) {
        void 0 === e && (e = {}),
        y || c(!1);
        var t = window.history
          , n = (window.navigator.userAgent.indexOf("Firefox"),
        e)
          , r = n.getUserConfirmation
          , i = void 0 === r ? b : r
          , a = n.hashType
          , s = void 0 === a ? "slash" : a
          , l = e.basename ? d(h(e.basename)) : ""
          , u = _[s]
          , p = u.encodePath
          , x = u.decodePath;
        function w() {
            var e = x(E());
            return l && (e = f(e, l)),
            g(e)
        }
        var T = v();
        function A(e) {
            Object(o.a)(z, e),
            z.length = t.length,
            T.notifyListeners(z.location, z.action)
        }
        var P = !1
          , C = null;
        function L() {
            var e, t, n = E(), r = p(n);
            if (n !== r)
                M(r);
            else {
                var a = w()
                  , o = z.location;
                if (!P && (t = a,
                (e = o).pathname === t.pathname && e.search === t.search && e.hash === t.hash))
                    return;
                if (C === m(a))
                    return;
                C = null,
                function(e) {
                    if (P)
                        P = !1,
                        A();
                    else {
                        T.confirmTransitionTo(e, "POP", i, (function(t) {
                            t ? A({
                                action: "POP",
                                location: e
                            }) : function(e) {
                                var t = z.location
                                  , n = I.lastIndexOf(m(t));
                                -1 === n && (n = 0);
                                var r = I.lastIndexOf(m(e));
                                -1 === r && (r = 0);
                                var i = n - r;
                                i && (P = !0,
                                O(i))
                            }(e)
                        }
                        ))
                    }
                }(a)
            }
        }
        var R = E()
          , k = p(R);
        R !== k && M(k);
        var D = w()
          , I = [m(D)];
        function O(e) {
            t.go(e)
        }
        var F = 0;
        function N(e) {
            1 === (F += e) && 1 === e ? window.addEventListener("hashchange", L) : 0 === F && window.removeEventListener("hashchange", L)
        }
        var B = !1;
        var z = {
            length: t.length,
            action: "POP",
            location: D,
            createHref: function(e) {
                var t = document.querySelector("base")
                  , n = "";
                return t && t.getAttribute("href") && (n = S(window.location.href)),
                n + "#" + p(l + m(e))
            },
            push: function(e, t) {
                var n = g(e, void 0, void 0, z.location);
                T.confirmTransitionTo(n, "PUSH", i, (function(e) {
                    if (e) {
                        var t = m(n)
                          , r = p(l + t);
                        if (E() !== r) {
                            C = t,
                            function(e) {
                                window.location.hash = e
                            }(r);
                            var i = I.lastIndexOf(m(z.location))
                              , a = I.slice(0, i + 1);
                            a.push(t),
                            I = a,
                            A({
                                action: "PUSH",
                                location: n
                            })
                        } else
                            A()
                    }
                }
                ))
            },
            replace: function(e, t) {
                var n = g(e, void 0, void 0, z.location);
                T.confirmTransitionTo(n, "REPLACE", i, (function(e) {
                    if (e) {
                        var t = m(n)
                          , r = p(l + t);
                        E() !== r && (C = t,
                        M(r));
                        var i = I.indexOf(m(z.location));
                        -1 !== i && (I[i] = t),
                        A({
                            action: "REPLACE",
                            location: n
                        })
                    }
                }
                ))
            },
            go: O,
            goBack: function() {
                O(-1)
            },
            goForward: function() {
                O(1)
            },
            block: function(e) {
                void 0 === e && (e = !1);
                var t = T.setPrompt(e);
                return B || (N(1),
                B = !0),
                function() {
                    return B && (B = !1,
                    N(-1)),
                    t()
                }
            },
            listen: function(e) {
                var t = T.appendListener(e);
                return N(1),
                function() {
                    N(-1),
                    t()
                }
            }
        };
        return z
    }
    function A(e, t, n) {
        return Math.min(Math.max(e, t), n)
    }
    function P(e) {
        void 0 === e && (e = {});
        var t = e
          , n = t.getUserConfirmation
          , r = t.initialEntries
          , i = void 0 === r ? ["/"] : r
          , a = t.initialIndex
          , s = void 0 === a ? 0 : a
          , l = t.keyLength
          , u = void 0 === l ? 6 : l
          , c = v();
        function h(e) {
            Object(o.a)(x, e),
            x.length = x.entries.length,
            c.notifyListeners(x.location, x.action)
        }
        function p() {
            return Math.random().toString(36).substr(2, u)
        }
        var f = A(s, 0, i.length - 1)
          , d = i.map((function(e) {
            return g(e, void 0, "string" === typeof e ? p() : e.key || p())
        }
        ))
          , y = m;
        function b(e) {
            var t = A(x.index + e, 0, x.entries.length - 1)
              , r = x.entries[t];
            c.confirmTransitionTo(r, "POP", n, (function(e) {
                e ? h({
                    action: "POP",
                    location: r,
                    index: t
                }) : h()
            }
            ))
        }
        var x = {
            length: d.length,
            action: "POP",
            location: d[f],
            index: f,
            entries: d,
            createHref: y,
            push: function(e, t) {
                var r = g(e, t, p(), x.location);
                c.confirmTransitionTo(r, "PUSH", n, (function(e) {
                    if (e) {
                        var t = x.index + 1
                          , n = x.entries.slice(0);
                        n.length > t ? n.splice(t, n.length - t, r) : n.push(r),
                        h({
                            action: "PUSH",
                            location: r,
                            index: t,
                            entries: n
                        })
                    }
                }
                ))
            },
            replace: function(e, t) {
                var r = g(e, t, p(), x.location);
                c.confirmTransitionTo(r, "REPLACE", n, (function(e) {
                    e && (x.entries[x.index] = r,
                    h({
                        action: "REPLACE",
                        location: r
                    }))
                }
                ))
            },
            go: b,
            goBack: function() {
                b(-1)
            },
            goForward: function() {
                b(1)
            },
            canGo: function(e) {
                var t = x.index + e;
                return t >= 0 && t < x.entries.length
            },
            block: function(e) {
                return void 0 === e && (e = !1),
                c.setPrompt(e)
            },
            listen: function(e) {
                return c.appendListener(e)
            }
        };
        return x
    }
    var C = n(25)
      , L = n(26)
      , R = n.n(L)
      , k = (n(73),
    n(9))
      , D = (n(15),
    function(e) {
        var t = Object(C.a)();
        return t.displayName = e,
        t
    }("Router-History"))
      , I = function(e) {
        var t = Object(C.a)();
        return t.displayName = e,
        t
    }("Router")
      , O = function(e) {
        function t(t) {
            var n;
            return (n = e.call(this, t) || this).state = {
                location: t.history.location
            },
            n._isMounted = !1,
            n._pendingLocation = null,
            t.staticContext || (n.unlisten = t.history.listen((function(e) {
                n._isMounted ? n.setState({
                    location: e
                }) : n._pendingLocation = e
            }
            ))),
            n
        }
        Object(r.a)(t, e),
        t.computeRootMatch = function(e) {
            return {
                path: "/",
                url: "/",
                params: {},
                isExact: "/" === e
            }
        }
        ;
        var n = t.prototype;
        return n.componentDidMount = function() {
            this._isMounted = !0,
            this._pendingLocation && this.setState({
                location: this._pendingLocation
            })
        }
        ,
        n.componentWillUnmount = function() {
            this.unlisten && this.unlisten()
        }
        ,
        n.render = function() {
            return a.a.createElement(I.Provider, {
                value: {
                    history: this.props.history,
                    location: this.state.location,
                    match: t.computeRootMatch(this.state.location.pathname),
                    staticContext: this.props.staticContext
                }
            }, a.a.createElement(D.Provider, {
                children: this.props.children || null,
                value: this.props.history
            }))
        }
        ,
        t
    }(a.a.Component);
    a.a.Component;
    a.a.Component;
    var F = {}
      , N = 0;
    function B(e, t) {
        void 0 === t && (t = {}),
        ("string" === typeof t || Array.isArray(t)) && (t = {
            path: t
        });
        var n = t
          , r = n.path
          , i = n.exact
          , a = void 0 !== i && i
          , o = n.strict
          , s = void 0 !== o && o
          , l = n.sensitive
          , u = void 0 !== l && l;
        return [].concat(r).reduce((function(t, n) {
            if (!n && "" !== n)
                return null;
            if (t)
                return t;
            var r = function(e, t) {
                var n = "" + t.end + t.strict + t.sensitive
                  , r = F[n] || (F[n] = {});
                if (r[e])
                    return r[e];
                var i = []
                  , a = {
                    regexp: R()(e, i, t),
                    keys: i
                };
                return N < 1e4 && (r[e] = a,
                N++),
                a
            }(n, {
                end: a,
                strict: s,
                sensitive: u
            })
              , i = r.regexp
              , o = r.keys
              , l = i.exec(e);
            if (!l)
                return null;
            var c = l[0]
              , h = l.slice(1)
              , p = e === c;
            return a && !p ? null : {
                path: n,
                url: "/" === n && "" === c ? "/" : c,
                isExact: p,
                params: o.reduce((function(e, t, n) {
                    return e[t.name] = h[n],
                    e
                }
                ), {})
            }
        }
        ), null)
    }
    a.a.Component;
    function z(e) {
        return "/" === e.charAt(0) ? e : "/" + e
    }
    function G(e, t) {
        if (!e)
            return t;
        var n = z(e);
        return 0 !== t.pathname.indexOf(n) ? t : Object(o.a)({}, t, {
            pathname: t.pathname.substr(n.length)
        })
    }
    function H(e) {
        return "string" === typeof e ? e : m(e)
    }
    function V(e) {
        return function() {
            c(!1)
        }
    }
    function j() {}
    a.a.Component;
    a.a.Component;
    a.a.useContext;
    var U = function(e) {
        function t() {
            for (var t, n = arguments.length, r = new Array(n), i = 0; i < n; i++)
                r[i] = arguments[i];
            return (t = e.call.apply(e, [this].concat(r)) || this).history = w(t.props),
            t
        }
        return Object(r.a)(t, e),
        t.prototype.render = function() {
            return a.a.createElement(O, {
                history: this.history,
                children: this.props.children
            })
        }
        ,
        t
    }(a.a.Component);
    a.a.Component;
    var W = function(e, t) {
        return "function" === typeof e ? e(t) : e
    }
      , q = function(e, t) {
        return "string" === typeof e ? g(e, null, null, t) : e
    }
      , X = function(e) {
        return e
    }
      , Y = a.a.forwardRef;
    "undefined" === typeof Y && (Y = X);
    var Z = Y((function(e, t) {
        var n = e.innerRef
          , r = e.navigate
          , i = e.onClick
          , s = Object(k.a)(e, ["innerRef", "navigate", "onClick"])
          , l = s.target
          , u = Object(o.a)({}, s, {
            onClick: function(e) {
                try {
                    i && i(e)
                } catch (t) {
                    throw e.preventDefault(),
                    t
                }
                e.defaultPrevented || 0 !== e.button || l && "_self" !== l || function(e) {
                    return !!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey)
                }(e) || (e.preventDefault(),
                r())
            }
        });
        return u.ref = X !== Y && t || n,
        a.a.createElement("a", u)
    }
    ));
    var $ = Y((function(e, t) {
        var n = e.component
          , r = void 0 === n ? Z : n
          , i = e.replace
          , s = e.to
          , l = e.innerRef
          , u = Object(k.a)(e, ["component", "replace", "to", "innerRef"]);
        return a.a.createElement(I.Consumer, null, (function(e) {
            e || c(!1);
            var n = e.history
              , h = q(W(s, e.location), e.location)
              , p = h ? n.createHref(h) : ""
              , f = Object(o.a)({}, u, {
                href: p,
                navigate: function() {
                    var t = W(s, e.location);
                    (i ? n.replace : n.push)(t)
                }
            });
            return X !== Y ? f.ref = t || l : f.innerRef = l,
            a.a.createElement(r, f)
        }
        ))
    }
    ))
      , J = function(e) {
        return e
    }
      , K = a.a.forwardRef;
    "undefined" === typeof K && (K = J);
    K((function(e, t) {
        var n = e["aria-current"]
          , r = void 0 === n ? "page" : n
          , i = e.activeClassName
          , s = void 0 === i ? "active" : i
          , l = e.activeStyle
          , u = e.className
          , h = e.exact
          , p = e.isActive
          , f = e.location
          , d = e.sensitive
          , m = e.strict
          , g = e.style
          , v = e.to
          , y = e.innerRef
          , b = Object(k.a)(e, ["aria-current", "activeClassName", "activeStyle", "className", "exact", "isActive", "location", "sensitive", "strict", "style", "to", "innerRef"]);
        return a.a.createElement(I.Consumer, null, (function(e) {
            e || c(!1);
            var n = f || e.location
              , i = q(W(v, n), n)
              , x = i.pathname
              , w = x && x.replace(/([.+*?=^!:${}()[\]|/\\])/g, "\\$1")
              , _ = w ? B(n.pathname, {
                path: w,
                exact: h,
                sensitive: d,
                strict: m
            }) : null
              , S = !!(p ? p(_, n) : _)
              , E = S ? function() {
                for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
                    t[n] = arguments[n];
                return t.filter((function(e) {
                    return e
                }
                )).join(" ")
            }(u, s) : u
              , M = S ? Object(o.a)({}, g, {}, l) : g
              , T = Object(o.a)({
                "aria-current": S && r || null,
                className: E,
                style: M,
                to: i
            }, b);
            return J !== K ? T.ref = t || y : T.innerRef = y,
            a.a.createElement($, T)
        }
        ))
    }
    ))
}
, function(e, t, n) {
    "use strict";
    n.d(t, "a", (function() {
        return j
    }
    ));
    var r = n(1)
      , i = {}
      , a = i;
    function o(e, t) {
        var n, r = e.split("."), i = a;
        !(r[0]in i) && i.execScript && i.execScript("var " + r[0]);
        for (; r.length && (n = r.shift()); )
            r.length || void 0 === t ? i = i[n] ? i[n] : i[n] = {} : i[n] = t
    }
    var s = "undefined" !== typeof Uint8Array && "undefined" !== typeof Uint16Array && "undefined" !== typeof Uint32Array && "undefined" !== typeof DataView;
    function l(e) {
        var t, n, r, i, a, o, l, u, c, h, p = e.length, f = 0, d = Number.POSITIVE_INFINITY;
        for (u = 0; u < p; ++u)
            e[u] > f && (f = e[u]),
            e[u] < d && (d = e[u]);
        for (t = 1 << f,
        n = new (s ? Uint32Array : Array)(t),
        r = 1,
        i = 0,
        a = 2; r <= f; ) {
            for (u = 0; u < p; ++u)
                if (e[u] === r) {
                    for (o = 0,
                    l = i,
                    c = 0; c < r; ++c)
                        o = o << 1 | 1 & l,
                        l >>= 1;
                    for (h = r << 16 | u,
                    c = o; c < t; c += a)
                        n[c] = h;
                    ++i
                }
            ++r,
            i <<= 1,
            a <<= 1
        }
        return [n, f, d]
    }
    function u(e, t) {
        switch (this.g = [],
        this.h = 32768,
        this.d = this.f = this.a = this.l = 0,
        this.input = s ? new Uint8Array(e) : e,
        this.m = !1,
        this.i = h,
        this.r = !1,
        !t && (t = {}) || (t.index && (this.a = t.index),
        t.bufferSize && (this.h = t.bufferSize),
        t.bufferType && (this.i = t.bufferType),
        t.resize && (this.r = t.resize)),
        this.i) {
        case c:
            this.b = 32768,
            this.c = new (s ? Uint8Array : Array)(32768 + this.h + 258);
            break;
        case h:
            this.b = 0,
            this.c = new (s ? Uint8Array : Array)(this.h),
            this.e = this.z,
            this.n = this.v,
            this.j = this.w;
            break;
        default:
            throw Error("invalid inflate mode")
        }
    }
    var c = 0
      , h = 1
      , p = {
        t: c,
        s: h
    };
    u.prototype.k = function() {
        for (; !this.m; ) {
            var e = R(this, 3);
            switch (1 & e && (this.m = !0),
            e >>>= 1) {
            case 0:
                var t = this.input
                  , n = this.a
                  , r = this.c
                  , i = this.b
                  , a = t.length
                  , o = void 0
                  , u = r.length
                  , p = void 0;
                if (this.d = this.f = 0,
                n + 1 >= a)
                    throw Error("invalid uncompressed block header: LEN");
                if (o = t[n++] | t[n++] << 8,
                n + 1 >= a)
                    throw Error("invalid uncompressed block header: NLEN");
                if (o === ~(t[n++] | t[n++] << 8))
                    throw Error("invalid uncompressed block header: length verify");
                if (n + o > t.length)
                    throw Error("input buffer is broken");
                switch (this.i) {
                case c:
                    for (; i + o > r.length; ) {
                        if (o -= p = u - i,
                        s)
                            r.set(t.subarray(n, n + p), i),
                            i += p,
                            n += p;
                        else
                            for (; p--; )
                                r[i++] = t[n++];
                        this.b = i,
                        r = this.e(),
                        i = this.b
                    }
                    break;
                case h:
                    for (; i + o > r.length; )
                        r = this.e({
                            p: 2
                        });
                    break;
                default:
                    throw Error("invalid inflate mode")
                }
                if (s)
                    r.set(t.subarray(n, n + o), i),
                    i += o,
                    n += o;
                else
                    for (; o--; )
                        r[i++] = t[n++];
                this.a = n,
                this.b = i,
                this.c = r;
                break;
            case 1:
                this.j(P, L);
                break;
            case 2:
                var f, d, m, v, y = R(this, 5) + 257, b = R(this, 5) + 1, x = R(this, 4) + 4, w = new (s ? Uint8Array : Array)(g.length), _ = void 0, S = void 0, E = void 0, M = void 0, T = void 0;
                for (T = 0; T < x; ++T)
                    w[g[T]] = R(this, 3);
                if (!s)
                    for (T = x,
                    x = w.length; T < x; ++T)
                        w[g[T]] = 0;
                for (f = l(w),
                _ = new (s ? Uint8Array : Array)(y + b),
                T = 0,
                v = y + b; T < v; )
                    switch (S = k(this, f)) {
                    case 16:
                        for (M = 3 + R(this, 2); M--; )
                            _[T++] = E;
                        break;
                    case 17:
                        for (M = 3 + R(this, 3); M--; )
                            _[T++] = 0;
                        E = 0;
                        break;
                    case 18:
                        for (M = 11 + R(this, 7); M--; )
                            _[T++] = 0;
                        E = 0;
                        break;
                    default:
                        E = _[T++] = S
                    }
                d = l(s ? _.subarray(0, y) : _.slice(0, y)),
                m = l(s ? _.subarray(y) : _.slice(y)),
                this.j(d, m);
                break;
            default:
                throw Error("unknown BTYPE: " + e)
            }
        }
        return this.n()
    }
    ;
    var f, d, m = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], g = s ? new Uint16Array(m) : m, v = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 258, 258], y = s ? new Uint16Array(v) : v, b = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0, 0], x = s ? new Uint8Array(b) : b, w = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577], _ = s ? new Uint16Array(w) : w, S = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13], E = s ? new Uint8Array(S) : S, M = new (s ? Uint8Array : Array)(288);
    for (f = 0,
    d = M.length; f < d; ++f)
        M[f] = 143 >= f ? 8 : 255 >= f ? 9 : 279 >= f ? 7 : 8;
    var T, A, P = l(M), C = new (s ? Uint8Array : Array)(30);
    for (T = 0,
    A = C.length; T < A; ++T)
        C[T] = 5;
    var L = l(C);
    function R(e, t) {
        for (var n, r = e.f, i = e.d, a = e.input, o = e.a, s = a.length; i < t; ) {
            if (o >= s)
                throw Error("input buffer is broken");
            r |= a[o++] << i,
            i += 8
        }
        return n = r & (1 << t) - 1,
        e.f = r >>> t,
        e.d = i - t,
        e.a = o,
        n
    }
    function k(e, t) {
        for (var n, r, i = e.f, a = e.d, o = e.input, s = e.a, l = o.length, u = t[0], c = t[1]; a < c && !(s >= l); )
            i |= o[s++] << a,
            a += 8;
        if ((r = (n = u[i & (1 << c) - 1]) >>> 16) > a)
            throw Error("invalid code length: " + r);
        return e.f = i >> r,
        e.d = a - r,
        e.a = s,
        65535 & n
    }
    function D(e, t) {
        var n, r;
        switch (this.input = e,
        this.a = 0,
        !t && (t = {}) || (t.index && (this.a = t.index),
        t.verify && (this.A = t.verify)),
        n = e[this.a++],
        r = e[this.a++],
        15 & n) {
        case I:
            this.method = I;
            break;
        default:
            throw Error("unsupported compression method")
        }
        if (0 !== ((n << 8) + r) % 31)
            throw Error("invalid fcheck flag:" + ((n << 8) + r) % 31);
        if (32 & r)
            throw Error("fdict flag is not supported");
        this.q = new u(e,{
            index: this.a,
            bufferSize: t.bufferSize,
            bufferType: t.bufferType,
            resize: t.resize
        })
    }
    u.prototype.j = function(e, t) {
        var n = this.c
          , r = this.b;
        this.o = e;
        for (var i, a, o, s, l = n.length - 258; 256 !== (i = k(this, e)); )
            if (256 > i)
                r >= l && (this.b = r,
                n = this.e(),
                r = this.b),
                n[r++] = i;
            else
                for (s = y[a = i - 257],
                0 < x[a] && (s += R(this, x[a])),
                i = k(this, t),
                o = _[i],
                0 < E[i] && (o += R(this, E[i])),
                r >= l && (this.b = r,
                n = this.e(),
                r = this.b); s--; )
                    n[r] = n[r++ - o];
        for (; 8 <= this.d; )
            this.d -= 8,
            this.a--;
        this.b = r
    }
    ,
    u.prototype.w = function(e, t) {
        var n = this.c
          , r = this.b;
        this.o = e;
        for (var i, a, o, s, l = n.length; 256 !== (i = k(this, e)); )
            if (256 > i)
                r >= l && (l = (n = this.e()).length),
                n[r++] = i;
            else
                for (s = y[a = i - 257],
                0 < x[a] && (s += R(this, x[a])),
                i = k(this, t),
                o = _[i],
                0 < E[i] && (o += R(this, E[i])),
                r + s > l && (l = (n = this.e()).length); s--; )
                    n[r] = n[r++ - o];
        for (; 8 <= this.d; )
            this.d -= 8,
            this.a--;
        this.b = r
    }
    ,
    u.prototype.e = function() {
        var e, t, n = new (s ? Uint8Array : Array)(this.b - 32768), r = this.b - 32768, i = this.c;
        if (s)
            n.set(i.subarray(32768, n.length));
        else
            for (e = 0,
            t = n.length; e < t; ++e)
                n[e] = i[e + 32768];
        if (this.g.push(n),
        this.l += n.length,
        s)
            i.set(i.subarray(r, r + 32768));
        else
            for (e = 0; 32768 > e; ++e)
                i[e] = i[r + e];
        return this.b = 32768,
        i
    }
    ,
    u.prototype.z = function(e) {
        var t, n, r, i = this.input.length / this.a + 1 | 0, a = this.input, o = this.c;
        return e && ("number" === typeof e.p && (i = e.p),
        "number" === typeof e.u && (i += e.u)),
        2 > i ? n = (r = (a.length - this.a) / this.o[2] / 2 * 258 | 0) < o.length ? o.length + r : o.length << 1 : n = o.length * i,
        s ? (t = new Uint8Array(n)).set(o) : t = o,
        this.c = t
    }
    ,
    u.prototype.n = function() {
        var e, t, n, r, i, a = 0, o = this.c, l = this.g, u = new (s ? Uint8Array : Array)(this.l + (this.b - 32768));
        if (0 === l.length)
            return s ? this.c.subarray(32768, this.b) : this.c.slice(32768, this.b);
        for (t = 0,
        n = l.length; t < n; ++t)
            for (r = 0,
            i = (e = l[t]).length; r < i; ++r)
                u[a++] = e[r];
        for (t = 32768,
        n = this.b; t < n; ++t)
            u[a++] = o[t];
        return this.g = [],
        this.buffer = u
    }
    ,
    u.prototype.v = function() {
        var e, t = this.b;
        return s ? this.r ? (e = new Uint8Array(t)).set(this.c.subarray(0, t)) : e = this.c.subarray(0, t) : (this.c.length > t && (this.c.length = t),
        e = this.c),
        this.buffer = e
    }
    ,
    D.prototype.k = function() {
        var e, t, n = this.input;
        if (e = this.q.k(),
        this.a = this.q.a,
        this.A) {
            t = (n[this.a++] << 24 | n[this.a++] << 16 | n[this.a++] << 8 | n[this.a++]) >>> 0;
            var r = e;
            if ("string" === typeof r) {
                var i, a, o = r.split("");
                for (i = 0,
                a = o.length; i < a; i++)
                    o[i] = (255 & o[i].charCodeAt(0)) >>> 0;
                r = o
            }
            for (var s, l = 1, u = 0, c = r.length, h = 0; 0 < c; ) {
                c -= s = 1024 < c ? 1024 : c;
                do {
                    u += l += r[h++]
                } while (--s);
                l %= 65521,
                u %= 65521
            }
            if (t !== (u << 16 | l) >>> 0)
                throw Error("invalid adler-32 checksum")
        }
        return e
    }
    ;
    var I = 8;
    o("Zlib.Inflate", D),
    o("Zlib.Inflate.prototype.decompress", D.prototype.k);
    var O, F, N, B, z = {
        ADAPTIVE: p.s,
        BLOCK: p.t
    };
    if (Object.keys)
        O = Object.keys(z);
    else
        for (F in O = [],
        N = 0,
        z)
            O[N++] = F;
    for (N = 0,
    B = O.length; N < B; ++N)
        o("Zlib.Inflate.BufferType." + (F = O[N]), z[F]);
    var G = i.Zlib.Inflate
      , H = {
        findSpan: function(e, t, n) {
            var r = n.length - e - 1;
            if (t >= n[r])
                return r - 1;
            if (t <= n[e])
                return e;
            for (var i = e, a = r, o = Math.floor((i + a) / 2); t < n[o] || t >= n[o + 1]; )
                t < n[o] ? a = o : i = o,
                o = Math.floor((i + a) / 2);
            return o
        },
        calcBasisFunctions: function(e, t, n, r) {
            var i = []
              , a = []
              , o = [];
            i[0] = 1;
            for (var s = 1; s <= n; ++s) {
                a[s] = t - r[e + 1 - s],
                o[s] = r[e + s] - t;
                for (var l = 0, u = 0; u < s; ++u) {
                    var c = o[u + 1]
                      , h = a[s - u]
                      , p = i[u] / (c + h);
                    i[u] = l + c * p,
                    l = h * p
                }
                i[s] = l
            }
            return i
        },
        calcBSplinePoint: function(e, t, n, i) {
            for (var a = this.findSpan(e, i, t), o = this.calcBasisFunctions(a, i, e, t), s = new r.Vector4(0,0,0,0), l = 0; l <= e; ++l) {
                var u = n[a - e + l]
                  , c = o[l]
                  , h = u.w * c;
                s.x += u.x * h,
                s.y += u.y * h,
                s.z += u.z * h,
                s.w += u.w * c
            }
            return s
        },
        calcBasisFunctionDerivatives: function(e, t, n, r, i) {
            for (var a = [], o = 0; o <= n; ++o)
                a[o] = 0;
            var s = [];
            for (o = 0; o <= r; ++o)
                s[o] = a.slice(0);
            var l = [];
            for (o = 0; o <= n; ++o)
                l[o] = a.slice(0);
            l[0][0] = 1;
            for (var u = a.slice(0), c = a.slice(0), h = 1; h <= n; ++h) {
                u[h] = t - i[e + 1 - h],
                c[h] = i[e + h] - t;
                for (var p = 0, f = 0; f < h; ++f) {
                    var d = c[f + 1]
                      , m = u[h - f];
                    l[h][f] = d + m;
                    var g = l[f][h - 1] / l[h][f];
                    l[f][h] = p + d * g,
                    p = m * g
                }
                l[h][h] = p
            }
            for (h = 0; h <= n; ++h)
                s[0][h] = l[h][n];
            for (f = 0; f <= n; ++f) {
                var v = 0
                  , y = 1
                  , b = [];
                for (o = 0; o <= n; ++o)
                    b[o] = a.slice(0);
                b[0][0] = 1;
                for (var x = 1; x <= r; ++x) {
                    var w = 0
                      , _ = f - x
                      , S = n - x;
                    f >= x && (b[y][0] = b[v][0] / l[S + 1][_],
                    w = b[y][0] * l[_][S]);
                    var E = f - 1 <= S ? x - 1 : n - f;
                    for (h = _ >= -1 ? 1 : -_; h <= E; ++h)
                        b[y][h] = (b[v][h] - b[v][h - 1]) / l[S + 1][_ + h],
                        w += b[y][h] * l[_ + h][S];
                    f <= S && (b[y][x] = -b[v][x - 1] / l[S + 1][f],
                    w += b[y][x] * l[f][S]),
                    s[x][f] = w;
                    h = v;
                    v = y,
                    y = h
                }
            }
            for (f = n,
            x = 1; x <= r; ++x) {
                for (h = 0; h <= n; ++h)
                    s[x][h] *= f;
                f *= n - x
            }
            return s
        },
        calcBSplineDerivatives: function(e, t, n, i, a) {
            for (var o = a < e ? a : e, s = [], l = this.findSpan(e, i, t), u = this.calcBasisFunctionDerivatives(l, i, e, o, t), c = [], h = 0; h < n.length; ++h) {
                var p = (d = n[h].clone()).w;
                d.x *= p,
                d.y *= p,
                d.z *= p,
                c[h] = d
            }
            for (var f = 0; f <= o; ++f) {
                for (var d = c[l - e].clone().multiplyScalar(u[f][0]), m = 1; m <= e; ++m)
                    d.add(c[l - e + m].clone().multiplyScalar(u[f][m]));
                s[f] = d
            }
            for (f = o + 1; f <= a + 1; ++f)
                s[f] = new r.Vector4(0,0,0);
            return s
        },
        calcKoverI: function(e, t) {
            for (var n = 1, r = 2; r <= e; ++r)
                n *= r;
            var i = 1;
            for (r = 2; r <= t; ++r)
                i *= r;
            for (r = 2; r <= e - t; ++r)
                i *= r;
            return n / i
        },
        calcRationalCurveDerivatives: function(e) {
            for (var t = e.length, n = [], i = [], a = 0; a < t; ++a) {
                var o = e[a];
                n[a] = new r.Vector3(o.x,o.y,o.z),
                i[a] = o.w
            }
            for (var s = [], l = 0; l < t; ++l) {
                var u = n[l].clone();
                for (a = 1; a <= l; ++a)
                    u.sub(s[l - a].clone().multiplyScalar(this.calcKoverI(l, a) * i[a]));
                s[l] = u.divideScalar(i[0])
            }
            return s
        },
        calcNURBSDerivatives: function(e, t, n, r, i) {
            var a = this.calcBSplineDerivatives(e, t, n, r, i);
            return this.calcRationalCurveDerivatives(a)
        },
        calcSurfacePoint: function(e, t, n, i, a, o, s, l) {
            for (var u = this.findSpan(e, o, n), c = this.findSpan(t, s, i), h = this.calcBasisFunctions(u, o, e, n), p = this.calcBasisFunctions(c, s, t, i), f = [], d = 0; d <= t; ++d) {
                f[d] = new r.Vector4(0,0,0,0);
                for (var m = 0; m <= e; ++m) {
                    var g = a[u - e + m][c - t + d].clone()
                      , v = g.w;
                    g.x *= v,
                    g.y *= v,
                    g.z *= v,
                    f[d].add(g.multiplyScalar(h[m]))
                }
            }
            var y = new r.Vector4(0,0,0,0);
            for (d = 0; d <= t; ++d)
                y.add(f[d].multiplyScalar(p[d]));
            y.divideScalar(y.w),
            l.set(y.x, y.y, y.z)
        }
    }
      , V = function(e, t, n, i, a) {
        r.Curve.call(this),
        this.degree = e,
        this.knots = t,
        this.controlPoints = [],
        this.startKnot = i || 0,
        this.endKnot = a || this.knots.length - 1;
        for (var o = 0; o < n.length; ++o) {
            var s = n[o];
            this.controlPoints[o] = new r.Vector4(s.x,s.y,s.z,s.w)
        }
    };
    (V.prototype = Object.create(r.Curve.prototype)).constructor = V,
    V.prototype.getPoint = function(e, t) {
        var n = t || new r.Vector3
          , i = this.knots[this.startKnot] + e * (this.knots[this.endKnot] - this.knots[this.startKnot])
          , a = H.calcBSplinePoint(this.degree, this.knots, this.controlPoints, i);
        return 1 != a.w && a.divideScalar(a.w),
        n.set(a.x, a.y, a.z)
    }
    ,
    V.prototype.getTangent = function(e, t) {
        var n = t || new r.Vector3
          , i = this.knots[0] + e * (this.knots[this.knots.length - 1] - this.knots[0])
          , a = H.calcNURBSDerivatives(this.degree, this.knots, this.controlPoints, i, 1);
        return n.copy(a[1]).normalize(),
        n
    }
    ;
    var j = function() {
        var e, t, n;
        function i(e) {
            r.Loader.call(this, e)
        }
        function a(e, t) {
            this.textureLoader = e,
            this.manager = t
        }
        function o() {}
        function s() {}
        function l() {}
        function u() {}
        function c(e, t) {
            this.dv = new DataView(e),
            this.offset = 0,
            this.littleEndian = void 0 === t || t
        }
        function h() {}
        function p(e) {
            var t = e.match(/FBXVersion: (\d+)/);
            if (t)
                return parseInt(t[1]);
            throw new Error("THREE.FBXLoader: Cannot find the version number for the file given.")
        }
        function f(e) {
            return e / 46186158e3
        }
        i.prototype = Object.assign(Object.create(r.Loader.prototype), {
            constructor: i,
            load: function(e, t, n, i) {
                var a = this
                  , o = "" === a.path ? r.LoaderUtils.extractUrlBase(e) : a.path
                  , s = new r.FileLoader(this.manager);
                s.setPath(a.path),
                s.setResponseType("arraybuffer"),
                s.setRequestHeader(a.requestHeader),
                s.load(e, (function(n) {
                    try {
                        t(a.parse(n, o))
                    } catch (r) {
                        i ? i(r) : console.error(r),
                        a.manager.itemError(e)
                    }
                }
                ), n, i)
            },
            parse: function(t, n) {
                if (function(e) {
                    var t = "Kaydara FBX Binary  \0";
                    return e.byteLength >= t.length && t === w(e, 0, t.length)
                }(t))
                    e = (new u).parse(t);
                else {
                    var i = w(t);
                    if (!function(e) {
                        var t = ["K", "a", "y", "d", "a", "r", "a", "\\", "F", "B", "X", "\\", "B", "i", "n", "a", "r", "y", "\\", "\\"]
                          , n = 0;
                        function r(t) {
                            var r = e[t - 1];
                            return e = e.slice(n + t),
                            n++,
                            r
                        }
                        for (var i = 0; i < t.length; ++i) {
                            if (r(1) === t[i])
                                return !1
                        }
                        return !0
                    }(i))
                        throw new Error("THREE.FBXLoader: Unknown format.");
                    if (p(i) < 7e3)
                        throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: " + p(i));
                    e = (new l).parse(i)
                }
                return new a(new r.TextureLoader(this.manager).setPath(this.resourcePath || n).setCrossOrigin(this.crossOrigin),this.manager).parse(e)
            }
        }),
        a.prototype = {
            constructor: a,
            parse: function() {
                t = this.parseConnections();
                var e = this.parseImages()
                  , r = this.parseTextures(e)
                  , i = this.parseMaterials(r)
                  , a = this.parseDeformers()
                  , s = (new o).parse(a);
                return this.parseScene(a, s, i),
                n
            },
            parseConnections: function() {
                var t = new Map;
                "Connections"in e && e.Connections.connections.forEach((function(e) {
                    var n = e[0]
                      , r = e[1]
                      , i = e[2];
                    t.has(n) || t.set(n, {
                        parents: [],
                        children: []
                    });
                    var a = {
                        ID: r,
                        relationship: i
                    };
                    t.get(n).parents.push(a),
                    t.has(r) || t.set(r, {
                        parents: [],
                        children: []
                    });
                    var o = {
                        ID: n,
                        relationship: i
                    };
                    t.get(r).children.push(o)
                }
                ));
                return t
            },
            parseImages: function() {
                var t = {}
                  , n = {};
                if ("Video"in e.Objects) {
                    var r = e.Objects.Video;
                    for (var i in r) {
                        var a = r[i];
                        if (t[u = parseInt(i)] = a.RelativeFilename || a.Filename,
                        "Content"in a) {
                            var o = a.Content instanceof ArrayBuffer && a.Content.byteLength > 0
                              , s = "string" === typeof a.Content && "" !== a.Content;
                            if (o || s) {
                                var l = this.parseImage(r[i]);
                                n[a.RelativeFilename || a.Filename] = l
                            }
                        }
                    }
                }
                for (var u in t) {
                    var c = t[u];
                    void 0 !== n[c] ? t[u] = n[c] : t[u] = t[u].split("\\").pop()
                }
                return t
            },
            parseImage: function(e) {
                var t, n = e.Content, r = e.RelativeFilename || e.Filename, i = r.slice(r.lastIndexOf(".") + 1).toLowerCase();
                switch (i) {
                case "bmp":
                    t = "image/bmp";
                    break;
                case "jpg":
                case "jpeg":
                    t = "image/jpeg";
                    break;
                case "png":
                    t = "image/png";
                    break;
                case "tif":
                    t = "image/tiff";
                    break;
                case "tga":
                    null === this.manager.getHandler(".tga") && console.warn("FBXLoader: TGA loader not found, skipping ", r),
                    t = "image/tga";
                    break;
                default:
                    return void console.warn('FBXLoader: Image type "' + i + '" is not supported.')
                }
                if ("string" === typeof n)
                    return "data:" + t + ";base64," + n;
                var a = new Uint8Array(n);
                return window.URL.createObjectURL(new Blob([a],{
                    type: t
                }))
            },
            parseTextures: function(t) {
                var n = new Map;
                if ("Texture"in e.Objects) {
                    var r = e.Objects.Texture;
                    for (var i in r) {
                        var a = this.parseTexture(r[i], t);
                        n.set(parseInt(i), a)
                    }
                }
                return n
            },
            parseTexture: function(e, t) {
                var n = this.loadTexture(e, t);
                n.ID = e.id,
                n.name = e.attrName;
                var i = e.WrapModeU
                  , a = e.WrapModeV
                  , o = void 0 !== i ? i.value : 0
                  , s = void 0 !== a ? a.value : 0;
                if (n.wrapS = 0 === o ? r.RepeatWrapping : r.ClampToEdgeWrapping,
                n.wrapT = 0 === s ? r.RepeatWrapping : r.ClampToEdgeWrapping,
                "Scaling"in e) {
                    var l = e.Scaling.value;
                    n.repeat.x = l[0],
                    n.repeat.y = l[1]
                }
                return n
            },
            loadTexture: function(e, n) {
                var i, a, o = this.textureLoader.path, s = t.get(e.id).children;
                void 0 !== s && s.length > 0 && void 0 !== n[s[0].ID] && (0 !== (i = n[s[0].ID]).indexOf("blob:") && 0 !== i.indexOf("data:") || this.textureLoader.setPath(void 0));
                var l = e.FileName.slice(-3).toLowerCase();
                if ("tga" === l) {
                    var u = this.manager.getHandler(".tga");
                    null === u ? (console.warn("FBXLoader: TGA loader not found, creating placeholder texture for", e.RelativeFilename),
                    a = new r.Texture) : a = u.load(i)
                } else
                    "psd" === l ? (console.warn("FBXLoader: PSD textures are not supported, creating placeholder texture for", e.RelativeFilename),
                    a = new r.Texture) : a = this.textureLoader.load(i);
                return this.textureLoader.setPath(o),
                a
            },
            parseMaterials: function(t) {
                var n = new Map;
                if ("Material"in e.Objects) {
                    var r = e.Objects.Material;
                    for (var i in r) {
                        var a = this.parseMaterial(r[i], t);
                        null !== a && n.set(parseInt(i), a)
                    }
                }
                return n
            },
            parseMaterial: function(e, n) {
                var i = e.id
                  , a = e.attrName
                  , o = e.ShadingModel;
                if ("object" === typeof o && (o = o.value),
                !t.has(i))
                    return null;
                var s, l = this.parseParameters(e, n, i);
                switch (o.toLowerCase()) {
                case "phong":
                    s = new r.MeshPhongMaterial;
                    break;
                case "lambert":
                    s = new r.MeshLambertMaterial;
                    break;
                default:
                    console.warn('THREE.FBXLoader: unknown material type "%s". Defaulting to MeshPhongMaterial.', o),
                    s = new r.MeshPhongMaterial
                }
                return s.setValues(l),
                s.name = a,
                s
            },
            parseParameters: function(e, n, i) {
                var a = {};
                e.BumpFactor && (a.bumpScale = e.BumpFactor.value),
                e.Diffuse ? a.color = (new r.Color).fromArray(e.Diffuse.value) : e.DiffuseColor && "Color" === e.DiffuseColor.type && (a.color = (new r.Color).fromArray(e.DiffuseColor.value)),
                e.DisplacementFactor && (a.displacementScale = e.DisplacementFactor.value),
                e.Emissive ? a.emissive = (new r.Color).fromArray(e.Emissive.value) : e.EmissiveColor && "Color" === e.EmissiveColor.type && (a.emissive = (new r.Color).fromArray(e.EmissiveColor.value)),
                e.EmissiveFactor && (a.emissiveIntensity = parseFloat(e.EmissiveFactor.value)),
                e.Opacity && (a.opacity = parseFloat(e.Opacity.value)),
                a.opacity < 1 && (a.transparent = !0),
                e.ReflectionFactor && (a.reflectivity = e.ReflectionFactor.value),
                e.Shininess && (a.shininess = e.Shininess.value),
                e.Specular ? a.specular = (new r.Color).fromArray(e.Specular.value) : e.SpecularColor && "Color" === e.SpecularColor.type && (a.specular = (new r.Color).fromArray(e.SpecularColor.value));
                var o = this;
                return t.get(i).children.forEach((function(e) {
                    var t = e.relationship;
                    switch (t) {
                    case "Bump":
                        a.bumpMap = o.getTexture(n, e.ID);
                        break;
                    case "Maya|TEX_ao_map":
                        a.aoMap = o.getTexture(n, e.ID);
                        break;
                    case "DiffuseColor":
                    case "Maya|TEX_color_map":
                        a.map = o.getTexture(n, e.ID),
                        a.map.encoding = r.sRGBEncoding;
                        break;
                    case "DisplacementColor":
                        a.displacementMap = o.getTexture(n, e.ID);
                        break;
                    case "EmissiveColor":
                        a.emissiveMap = o.getTexture(n, e.ID),
                        a.emissiveMap.encoding = r.sRGBEncoding;
                        break;
                    case "NormalMap":
                    case "Maya|TEX_normal_map":
                        a.normalMap = o.getTexture(n, e.ID);
                        break;
                    case "ReflectionColor":
                        a.envMap = o.getTexture(n, e.ID),
                        a.envMap.mapping = r.EquirectangularReflectionMapping,
                        a.envMap.encoding = r.sRGBEncoding;
                        break;
                    case "SpecularColor":
                        a.specularMap = o.getTexture(n, e.ID),
                        a.specularMap.encoding = r.sRGBEncoding;
                        break;
                    case "TransparentColor":
                    case "TransparencyFactor":
                        a.alphaMap = o.getTexture(n, e.ID),
                        a.transparent = !0;
                        break;
                    case "AmbientColor":
                    case "ShininessExponent":
                    case "SpecularFactor":
                    case "VectorDisplacementColor":
                    default:
                        console.warn("THREE.FBXLoader: %s map is not supported in three.js, skipping texture.", t)
                    }
                }
                )),
                a
            },
            getTexture: function(n, r) {
                return "LayeredTexture"in e.Objects && r in e.Objects.LayeredTexture && (console.warn("THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer."),
                r = t.get(r).children[0].ID),
                n.get(r)
            },
            parseDeformers: function() {
                var n = {}
                  , r = {};
                if ("Deformer"in e.Objects) {
                    var i = e.Objects.Deformer;
                    for (var a in i) {
                        var o = i[a]
                          , s = t.get(parseInt(a));
                        if ("Skin" === o.attrType) {
                            var l = this.parseSkeleton(s, i);
                            l.ID = a,
                            s.parents.length > 1 && console.warn("THREE.FBXLoader: skeleton attached to more than one geometry is not supported."),
                            l.geometryID = s.parents[0].ID,
                            n[a] = l
                        } else if ("BlendShape" === o.attrType) {
                            var u = {
                                id: a
                            };
                            u.rawTargets = this.parseMorphTargets(s, i),
                            u.id = a,
                            s.parents.length > 1 && console.warn("THREE.FBXLoader: morph target attached to more than one geometry is not supported."),
                            r[a] = u
                        }
                    }
                }
                return {
                    skeletons: n,
                    morphTargets: r
                }
            },
            parseSkeleton: function(e, t) {
                var n = [];
                return e.children.forEach((function(e) {
                    var i = t[e.ID];
                    if ("Cluster" === i.attrType) {
                        var a = {
                            ID: e.ID,
                            indices: [],
                            weights: [],
                            transformLink: (new r.Matrix4).fromArray(i.TransformLink.a)
                        };
                        "Indexes"in i && (a.indices = i.Indexes.a,
                        a.weights = i.Weights.a),
                        n.push(a)
                    }
                }
                )),
                {
                    rawBones: n,
                    bones: []
                }
            },
            parseMorphTargets: function(e, n) {
                for (var r = [], i = 0; i < e.children.length; i++) {
                    var a = e.children[i]
                      , o = n[a.ID]
                      , s = {
                        name: o.attrName,
                        initialWeight: o.DeformPercent,
                        id: o.id,
                        fullWeights: o.FullWeights.a
                    };
                    if ("BlendShapeChannel" !== o.attrType)
                        return;
                    s.geoID = t.get(parseInt(a.ID)).children.filter((function(e) {
                        return void 0 === e.relationship
                    }
                    ))[0].ID,
                    r.push(s)
                }
                return r
            },
            parseScene: function(i, a, o) {
                n = new r.Group;
                var l = this.parseModels(i.skeletons, a, o)
                  , u = e.Objects.Model
                  , c = this;
                l.forEach((function(e) {
                    var r = u[e.ID];
                    c.setLookAtProperties(e, r),
                    t.get(e.ID).parents.forEach((function(t) {
                        var n = l.get(t.ID);
                        void 0 !== n && n.add(e)
                    }
                    )),
                    null === e.parent && n.add(e)
                }
                )),
                this.bindSkeleton(i.skeletons, a, l),
                this.createAmbientLight(),
                this.setupMorphMaterials(),
                n.traverse((function(e) {
                    if (e.userData.transformData) {
                        e.parent && (e.userData.transformData.parentMatrixWorld = e.parent.matrix);
                        var t = y(e.userData.transformData);
                        e.applyMatrix4(t)
                    }
                }
                ));
                var h = (new s).parse();
                1 === n.children.length && n.children[0].isGroup && (n.children[0].animations = h,
                n = n.children[0]),
                n.animations = h
            },
            parseModels: function(n, i, a) {
                var o = new Map
                  , s = e.Objects.Model;
                for (var l in s) {
                    var u = parseInt(l)
                      , c = s[l]
                      , h = t.get(u)
                      , p = this.buildSkeleton(h, n, u, c.attrName);
                    if (!p) {
                        switch (c.attrType) {
                        case "Camera":
                            p = this.createCamera(h);
                            break;
                        case "Light":
                            p = this.createLight(h);
                            break;
                        case "Mesh":
                            p = this.createMesh(h, i, a);
                            break;
                        case "NurbsCurve":
                            p = this.createCurve(h, i);
                            break;
                        case "LimbNode":
                        case "Root":
                            p = new r.Bone;
                            break;
                        case "Null":
                        default:
                            p = new r.Group
                        }
                        p.name = c.attrName ? r.PropertyBinding.sanitizeNodeName(c.attrName) : "",
                        p.ID = u
                    }
                    this.getTransformData(p, c),
                    o.set(u, p)
                }
                return o
            },
            buildSkeleton: function(e, t, n, i) {
                var a = null;
                return e.parents.forEach((function(e) {
                    for (var o in t) {
                        var s = t[o];
                        s.rawBones.forEach((function(t, o) {
                            if (t.ID === e.ID) {
                                var l = a;
                                (a = new r.Bone).matrixWorld.copy(t.transformLink),
                                a.name = i ? r.PropertyBinding.sanitizeNodeName(i) : "",
                                a.ID = n,
                                s.bones[o] = a,
                                null !== l && a.add(l)
                            }
                        }
                        ))
                    }
                }
                )),
                a
            },
            createCamera: function(t) {
                var n, i;
                if (t.children.forEach((function(t) {
                    var n = e.Objects.NodeAttribute[t.ID];
                    void 0 !== n && (i = n)
                }
                )),
                void 0 === i)
                    n = new r.Object3D;
                else {
                    var a = 0;
                    void 0 !== i.CameraProjectionType && 1 === i.CameraProjectionType.value && (a = 1);
                    var o = 1;
                    void 0 !== i.NearPlane && (o = i.NearPlane.value / 1e3);
                    var s = 1e3;
                    void 0 !== i.FarPlane && (s = i.FarPlane.value / 1e3);
                    var l = window.innerWidth
                      , u = window.innerHeight;
                    void 0 !== i.AspectWidth && void 0 !== i.AspectHeight && (l = i.AspectWidth.value,
                    u = i.AspectHeight.value);
                    var c = l / u
                      , h = 45;
                    void 0 !== i.FieldOfView && (h = i.FieldOfView.value);
                    var p = i.FocalLength ? i.FocalLength.value : null;
                    switch (a) {
                    case 0:
                        n = new r.PerspectiveCamera(h,c,o,s),
                        null !== p && n.setFocalLength(p);
                        break;
                    case 1:
                        n = new r.OrthographicCamera(-l / 2,l / 2,u / 2,-u / 2,o,s);
                        break;
                    default:
                        console.warn("THREE.FBXLoader: Unknown camera type " + a + "."),
                        n = new r.Object3D
                    }
                }
                return n
            },
            createLight: function(t) {
                var n, i;
                if (t.children.forEach((function(t) {
                    var n = e.Objects.NodeAttribute[t.ID];
                    void 0 !== n && (i = n)
                }
                )),
                void 0 === i)
                    n = new r.Object3D;
                else {
                    var a;
                    a = void 0 === i.LightType ? 0 : i.LightType.value;
                    var o = 16777215;
                    void 0 !== i.Color && (o = (new r.Color).fromArray(i.Color.value));
                    var s = void 0 === i.Intensity ? 1 : i.Intensity.value / 100;
                    void 0 !== i.CastLightOnObject && 0 === i.CastLightOnObject.value && (s = 0);
                    var l = 0;
                    void 0 !== i.FarAttenuationEnd && (l = void 0 !== i.EnableFarAttenuation && 0 === i.EnableFarAttenuation.value ? 0 : i.FarAttenuationEnd.value);
                    switch (a) {
                    case 0:
                        n = new r.PointLight(o,s,l,1);
                        break;
                    case 1:
                        n = new r.DirectionalLight(o,s);
                        break;
                    case 2:
                        var u = Math.PI / 3;
                        void 0 !== i.InnerAngle && (u = r.MathUtils.degToRad(i.InnerAngle.value));
                        var c = 0;
                        void 0 !== i.OuterAngle && (c = r.MathUtils.degToRad(i.OuterAngle.value),
                        c = Math.max(c, 1)),
                        n = new r.SpotLight(o,s,l,u,c,1);
                        break;
                    default:
                        console.warn("THREE.FBXLoader: Unknown light type " + i.LightType.value + ", defaulting to a PointLight."),
                        n = new r.PointLight(o,s)
                    }
                    void 0 !== i.CastShadows && 1 === i.CastShadows.value && (n.castShadow = !0)
                }
                return n
            },
            createMesh: function(e, t, n) {
                var i, a = null, o = null, s = [];
                return e.children.forEach((function(e) {
                    t.has(e.ID) && (a = t.get(e.ID)),
                    n.has(e.ID) && s.push(n.get(e.ID))
                }
                )),
                s.length > 1 ? o = s : s.length > 0 ? o = s[0] : (o = new r.MeshPhongMaterial({
                    color: 13421772
                }),
                s.push(o)),
                "color"in a.attributes && s.forEach((function(e) {
                    e.vertexColors = !0
                }
                )),
                a.FBX_Deformer ? (s.forEach((function(e) {
                    e.skinning = !0
                }
                )),
                (i = new r.SkinnedMesh(a,o)).normalizeSkinWeights()) : i = new r.Mesh(a,o),
                i
            },
            createCurve: function(e, t) {
                var n = e.children.reduce((function(e, n) {
                    return t.has(n.ID) && (e = t.get(n.ID)),
                    e
                }
                ), null)
                  , i = new r.LineBasicMaterial({
                    color: 3342591,
                    linewidth: 1
                });
                return new r.Line(n,i)
            },
            getTransformData: function(e, t) {
                var n = {};
                "InheritType"in t && (n.inheritType = parseInt(t.InheritType.value)),
                n.eulerOrder = "RotationOrder"in t ? b(t.RotationOrder.value) : "ZYX",
                "Lcl_Translation"in t && (n.translation = t.Lcl_Translation.value),
                "PreRotation"in t && (n.preRotation = t.PreRotation.value),
                "Lcl_Rotation"in t && (n.rotation = t.Lcl_Rotation.value),
                "PostRotation"in t && (n.postRotation = t.PostRotation.value),
                "Lcl_Scaling"in t && (n.scale = t.Lcl_Scaling.value),
                "ScalingOffset"in t && (n.scalingOffset = t.ScalingOffset.value),
                "ScalingPivot"in t && (n.scalingPivot = t.ScalingPivot.value),
                "RotationOffset"in t && (n.rotationOffset = t.RotationOffset.value),
                "RotationPivot"in t && (n.rotationPivot = t.RotationPivot.value),
                e.userData.transformData = n
            },
            setLookAtProperties: function(i, a) {
                "LookAtProperty"in a && t.get(i.ID).children.forEach((function(t) {
                    if ("LookAtProperty" === t.relationship) {
                        var a = e.Objects.Model[t.ID];
                        if ("Lcl_Translation"in a) {
                            var o = a.Lcl_Translation.value;
                            void 0 !== i.target ? (i.target.position.fromArray(o),
                            n.add(i.target)) : i.lookAt((new r.Vector3).fromArray(o))
                        }
                    }
                }
                ))
            },
            bindSkeleton: function(e, n, i) {
                var a = this.parsePoseNodes();
                for (var o in e) {
                    var s = e[o];
                    t.get(parseInt(s.ID)).parents.forEach((function(e) {
                        if (n.has(e.ID)) {
                            var o = e.ID;
                            t.get(o).parents.forEach((function(e) {
                                i.has(e.ID) && i.get(e.ID).bind(new r.Skeleton(s.bones), a[e.ID])
                            }
                            ))
                        }
                    }
                    ))
                }
            },
            parsePoseNodes: function() {
                var t = {};
                if ("Pose"in e.Objects) {
                    var n = e.Objects.Pose;
                    for (var i in n)
                        if ("BindPose" === n[i].attrType) {
                            var a = n[i].PoseNode;
                            Array.isArray(a) ? a.forEach((function(e) {
                                t[e.Node] = (new r.Matrix4).fromArray(e.Matrix.a)
                            }
                            )) : t[a.Node] = (new r.Matrix4).fromArray(a.Matrix.a)
                        }
                }
                return t
            },
            createAmbientLight: function() {
                if ("GlobalSettings"in e && "AmbientColor"in e.GlobalSettings) {
                    var t = e.GlobalSettings.AmbientColor.value
                      , i = t[0]
                      , a = t[1]
                      , o = t[2];
                    if (0 !== i || 0 !== a || 0 !== o) {
                        var s = new r.Color(i,a,o);
                        n.add(new r.AmbientLight(s,1))
                    }
                }
            },
            setupMorphMaterials: function() {
                var e = this;
                n.traverse((function(t) {
                    t.isMesh && t.geometry.morphAttributes.position && t.geometry.morphAttributes.position.length && (Array.isArray(t.material) ? t.material.forEach((function(n, r) {
                        e.setupMorphMaterial(t, n, r)
                    }
                    )) : e.setupMorphMaterial(t, t.material))
                }
                ))
            },
            setupMorphMaterial: function(e, t, r) {
                var i = e.uuid
                  , a = t.uuid
                  , o = !1;
                if (n.traverse((function(e) {
                    e.isMesh && (Array.isArray(e.material) ? e.material.forEach((function(t) {
                        t.uuid === a && e.uuid !== i && (o = !0)
                    }
                    )) : e.material.uuid === a && e.uuid !== i && (o = !0))
                }
                )),
                !0 === o) {
                    var s = t.clone();
                    s.morphTargets = !0,
                    void 0 === r ? e.material = s : e.material[r] = s
                } else
                    t.morphTargets = !0
            }
        },
        o.prototype = {
            constructor: o,
            parse: function(n) {
                var r = new Map;
                if ("Geometry"in e.Objects) {
                    var i = e.Objects.Geometry;
                    for (var a in i) {
                        var o = t.get(parseInt(a))
                          , s = this.parseGeometry(o, i[a], n);
                        r.set(parseInt(a), s)
                    }
                }
                return r
            },
            parseGeometry: function(e, t, n) {
                switch (t.attrType) {
                case "Mesh":
                    return this.parseMeshGeometry(e, t, n);
                case "NurbsCurve":
                    return this.parseNurbsGeometry(t)
                }
            },
            parseMeshGeometry: function(t, n, r) {
                var i = r.skeletons
                  , a = []
                  , o = t.parents.map((function(t) {
                    return e.Objects.Model[t.ID]
                }
                ));
                if (0 !== o.length) {
                    var s = t.children.reduce((function(e, t) {
                        return void 0 !== i[t.ID] && (e = i[t.ID]),
                        e
                    }
                    ), null);
                    t.children.forEach((function(e) {
                        void 0 !== r.morphTargets[e.ID] && a.push(r.morphTargets[e.ID])
                    }
                    ));
                    var l = o[0]
                      , u = {};
                    "RotationOrder"in l && (u.eulerOrder = b(l.RotationOrder.value)),
                    "InheritType"in l && (u.inheritType = parseInt(l.InheritType.value)),
                    "GeometricTranslation"in l && (u.translation = l.GeometricTranslation.value),
                    "GeometricRotation"in l && (u.rotation = l.GeometricRotation.value),
                    "GeometricScaling"in l && (u.scale = l.GeometricScaling.value);
                    var c = y(u);
                    return this.genGeometry(n, s, a, c)
                }
            },
            genGeometry: function(e, t, n, i) {
                var a = new r.BufferGeometry;
                e.attrName && (a.name = e.attrName);
                var o = this.parseGeoNode(e, t)
                  , s = this.genBuffers(o)
                  , l = new r.Float32BufferAttribute(s.vertex,3);
                if (l.applyMatrix4(i),
                a.setAttribute("position", l),
                s.colors.length > 0 && a.setAttribute("color", new r.Float32BufferAttribute(s.colors,3)),
                t && (a.setAttribute("skinIndex", new r.Uint16BufferAttribute(s.weightsIndices,4)),
                a.setAttribute("skinWeight", new r.Float32BufferAttribute(s.vertexWeights,4)),
                a.FBX_Deformer = t),
                s.normal.length > 0) {
                    var u = (new r.Matrix3).getNormalMatrix(i)
                      , c = new r.Float32BufferAttribute(s.normal,3);
                    c.applyNormalMatrix(u),
                    a.setAttribute("normal", c)
                }
                if (s.uvs.forEach((function(e, t) {
                    var n = "uv" + (t + 1).toString();
                    0 === t && (n = "uv"),
                    a.setAttribute(n, new r.Float32BufferAttribute(s.uvs[t],2))
                }
                )),
                o.material && "AllSame" !== o.material.mappingType) {
                    var h = s.materialIndex[0]
                      , p = 0;
                    if (s.materialIndex.forEach((function(e, t) {
                        e !== h && (a.addGroup(p, t - p, h),
                        h = e,
                        p = t)
                    }
                    )),
                    a.groups.length > 0) {
                        var f = a.groups[a.groups.length - 1]
                          , d = f.start + f.count;
                        d !== s.materialIndex.length && a.addGroup(d, s.materialIndex.length - d, h)
                    }
                    0 === a.groups.length && a.addGroup(0, s.materialIndex.length, s.materialIndex[0])
                }
                return this.addMorphTargets(a, e, n, i),
                a
            },
            parseGeoNode: function(e, t) {
                var n = {};
                if (n.vertexPositions = void 0 !== e.Vertices ? e.Vertices.a : [],
                n.vertexIndices = void 0 !== e.PolygonVertexIndex ? e.PolygonVertexIndex.a : [],
                e.LayerElementColor && (n.color = this.parseVertexColors(e.LayerElementColor[0])),
                e.LayerElementMaterial && (n.material = this.parseMaterialIndices(e.LayerElementMaterial[0])),
                e.LayerElementNormal && (n.normal = this.parseNormals(e.LayerElementNormal[0])),
                e.LayerElementUV) {
                    n.uv = [];
                    for (var r = 0; e.LayerElementUV[r]; )
                        e.LayerElementUV[r].UV && n.uv.push(this.parseUVs(e.LayerElementUV[r])),
                        r++
                }
                return n.weightTable = {},
                null !== t && (n.skeleton = t,
                t.rawBones.forEach((function(e, t) {
                    e.indices.forEach((function(r, i) {
                        void 0 === n.weightTable[r] && (n.weightTable[r] = []),
                        n.weightTable[r].push({
                            id: t,
                            weight: e.weights[i]
                        })
                    }
                    ))
                }
                ))),
                n
            },
            genBuffers: function(e) {
                var t = {
                    vertex: [],
                    normal: [],
                    colors: [],
                    uvs: [],
                    materialIndex: [],
                    vertexWeights: [],
                    weightsIndices: []
                }
                  , n = 0
                  , r = 0
                  , i = !1
                  , a = []
                  , o = []
                  , s = []
                  , l = []
                  , u = []
                  , c = []
                  , h = this;
                return e.vertexIndices.forEach((function(p, f) {
                    var d = !1;
                    p < 0 && (p ^= -1,
                    d = !0);
                    var g = []
                      , v = [];
                    if (a.push(3 * p, 3 * p + 1, 3 * p + 2),
                    e.color) {
                        var y = m(f, n, p, e.color);
                        s.push(y[0], y[1], y[2])
                    }
                    if (e.skeleton) {
                        if (void 0 !== e.weightTable[p] && e.weightTable[p].forEach((function(e) {
                            v.push(e.weight),
                            g.push(e.id)
                        }
                        )),
                        v.length > 4) {
                            i || (console.warn("THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights."),
                            i = !0);
                            var b = [0, 0, 0, 0]
                              , x = [0, 0, 0, 0];
                            v.forEach((function(e, t) {
                                var n = e
                                  , r = g[t];
                                x.forEach((function(e, t, i) {
                                    if (n > e) {
                                        i[t] = n,
                                        n = e;
                                        var a = b[t];
                                        b[t] = r,
                                        r = a
                                    }
                                }
                                ))
                            }
                            )),
                            g = b,
                            v = x
                        }
                        for (; v.length < 4; )
                            v.push(0),
                            g.push(0);
                        for (var w = 0; w < 4; ++w)
                            u.push(v[w]),
                            c.push(g[w])
                    }
                    if (e.normal) {
                        y = m(f, n, p, e.normal);
                        o.push(y[0], y[1], y[2])
                    }
                    if (e.material && "AllSame" !== e.material.mappingType)
                        var _ = m(f, n, p, e.material)[0];
                    e.uv && e.uv.forEach((function(e, t) {
                        var r = m(f, n, p, e);
                        void 0 === l[t] && (l[t] = []),
                        l[t].push(r[0]),
                        l[t].push(r[1])
                    }
                    )),
                    r++,
                    d && (h.genFace(t, e, a, _, o, s, l, u, c, r),
                    n++,
                    r = 0,
                    a = [],
                    o = [],
                    s = [],
                    l = [],
                    u = [],
                    c = [])
                }
                )),
                t
            },
            genFace: function(e, t, n, r, i, a, o, s, l, u) {
                for (var c = 2; c < u; c++)
                    e.vertex.push(t.vertexPositions[n[0]]),
                    e.vertex.push(t.vertexPositions[n[1]]),
                    e.vertex.push(t.vertexPositions[n[2]]),
                    e.vertex.push(t.vertexPositions[n[3 * (c - 1)]]),
                    e.vertex.push(t.vertexPositions[n[3 * (c - 1) + 1]]),
                    e.vertex.push(t.vertexPositions[n[3 * (c - 1) + 2]]),
                    e.vertex.push(t.vertexPositions[n[3 * c]]),
                    e.vertex.push(t.vertexPositions[n[3 * c + 1]]),
                    e.vertex.push(t.vertexPositions[n[3 * c + 2]]),
                    t.skeleton && (e.vertexWeights.push(s[0]),
                    e.vertexWeights.push(s[1]),
                    e.vertexWeights.push(s[2]),
                    e.vertexWeights.push(s[3]),
                    e.vertexWeights.push(s[4 * (c - 1)]),
                    e.vertexWeights.push(s[4 * (c - 1) + 1]),
                    e.vertexWeights.push(s[4 * (c - 1) + 2]),
                    e.vertexWeights.push(s[4 * (c - 1) + 3]),
                    e.vertexWeights.push(s[4 * c]),
                    e.vertexWeights.push(s[4 * c + 1]),
                    e.vertexWeights.push(s[4 * c + 2]),
                    e.vertexWeights.push(s[4 * c + 3]),
                    e.weightsIndices.push(l[0]),
                    e.weightsIndices.push(l[1]),
                    e.weightsIndices.push(l[2]),
                    e.weightsIndices.push(l[3]),
                    e.weightsIndices.push(l[4 * (c - 1)]),
                    e.weightsIndices.push(l[4 * (c - 1) + 1]),
                    e.weightsIndices.push(l[4 * (c - 1) + 2]),
                    e.weightsIndices.push(l[4 * (c - 1) + 3]),
                    e.weightsIndices.push(l[4 * c]),
                    e.weightsIndices.push(l[4 * c + 1]),
                    e.weightsIndices.push(l[4 * c + 2]),
                    e.weightsIndices.push(l[4 * c + 3])),
                    t.color && (e.colors.push(a[0]),
                    e.colors.push(a[1]),
                    e.colors.push(a[2]),
                    e.colors.push(a[3 * (c - 1)]),
                    e.colors.push(a[3 * (c - 1) + 1]),
                    e.colors.push(a[3 * (c - 1) + 2]),
                    e.colors.push(a[3 * c]),
                    e.colors.push(a[3 * c + 1]),
                    e.colors.push(a[3 * c + 2])),
                    t.material && "AllSame" !== t.material.mappingType && (e.materialIndex.push(r),
                    e.materialIndex.push(r),
                    e.materialIndex.push(r)),
                    t.normal && (e.normal.push(i[0]),
                    e.normal.push(i[1]),
                    e.normal.push(i[2]),
                    e.normal.push(i[3 * (c - 1)]),
                    e.normal.push(i[3 * (c - 1) + 1]),
                    e.normal.push(i[3 * (c - 1) + 2]),
                    e.normal.push(i[3 * c]),
                    e.normal.push(i[3 * c + 1]),
                    e.normal.push(i[3 * c + 2])),
                    t.uv && t.uv.forEach((function(t, n) {
                        void 0 === e.uvs[n] && (e.uvs[n] = []),
                        e.uvs[n].push(o[n][0]),
                        e.uvs[n].push(o[n][1]),
                        e.uvs[n].push(o[n][2 * (c - 1)]),
                        e.uvs[n].push(o[n][2 * (c - 1) + 1]),
                        e.uvs[n].push(o[n][2 * c]),
                        e.uvs[n].push(o[n][2 * c + 1])
                    }
                    ))
            },
            addMorphTargets: function(t, n, r, i) {
                if (0 !== r.length) {
                    t.morphTargetsRelative = !0,
                    t.morphAttributes.position = [];
                    var a = this;
                    r.forEach((function(r) {
                        r.rawTargets.forEach((function(r) {
                            var o = e.Objects.Geometry[r.geoID];
                            void 0 !== o && a.genMorphGeometry(t, n, o, i, r.name)
                        }
                        ))
                    }
                    ))
                }
            },
            genMorphGeometry: function(e, t, n, i, a) {
                for (var o = void 0 !== t.PolygonVertexIndex ? t.PolygonVertexIndex.a : [], s = void 0 !== n.Vertices ? n.Vertices.a : [], l = void 0 !== n.Indexes ? n.Indexes.a : [], u = 3 * e.attributes.position.count, c = new Float32Array(u), h = 0; h < l.length; h++) {
                    var p = 3 * l[h];
                    c[p] = s[3 * h],
                    c[p + 1] = s[3 * h + 1],
                    c[p + 2] = s[3 * h + 2]
                }
                var f = {
                    vertexIndices: o,
                    vertexPositions: c
                }
                  , d = this.genBuffers(f)
                  , m = new r.Float32BufferAttribute(d.vertex,3);
                m.name = a || n.attrName,
                m.applyMatrix4(i),
                e.morphAttributes.position.push(m)
            },
            parseNormals: function(e) {
                var t = e.MappingInformationType
                  , n = e.ReferenceInformationType
                  , r = e.Normals.a
                  , i = [];
                return "IndexToDirect" === n && ("NormalIndex"in e ? i = e.NormalIndex.a : "NormalsIndex"in e && (i = e.NormalsIndex.a)),
                {
                    dataSize: 3,
                    buffer: r,
                    indices: i,
                    mappingType: t,
                    referenceType: n
                }
            },
            parseUVs: function(e) {
                var t = e.MappingInformationType
                  , n = e.ReferenceInformationType
                  , r = e.UV.a
                  , i = [];
                return "IndexToDirect" === n && (i = e.UVIndex.a),
                {
                    dataSize: 2,
                    buffer: r,
                    indices: i,
                    mappingType: t,
                    referenceType: n
                }
            },
            parseVertexColors: function(e) {
                var t = e.MappingInformationType
                  , n = e.ReferenceInformationType
                  , r = e.Colors.a
                  , i = [];
                return "IndexToDirect" === n && (i = e.ColorIndex.a),
                {
                    dataSize: 4,
                    buffer: r,
                    indices: i,
                    mappingType: t,
                    referenceType: n
                }
            },
            parseMaterialIndices: function(e) {
                var t = e.MappingInformationType
                  , n = e.ReferenceInformationType;
                if ("NoMappingInformation" === t)
                    return {
                        dataSize: 1,
                        buffer: [0],
                        indices: [0],
                        mappingType: "AllSame",
                        referenceType: n
                    };
                for (var r = e.Materials.a, i = [], a = 0; a < r.length; ++a)
                    i.push(a);
                return {
                    dataSize: 1,
                    buffer: r,
                    indices: i,
                    mappingType: t,
                    referenceType: n
                }
            },
            parseNurbsGeometry: function(e) {
                if (void 0 === V)
                    return console.error("THREE.FBXLoader: The loader relies on NURBSCurve for any nurbs present in the model. Nurbs will show up as empty geometry."),
                    new r.BufferGeometry;
                var t = parseInt(e.Order);
                if (isNaN(t))
                    return console.error("THREE.FBXLoader: Invalid Order %s given for geometry ID: %s", e.Order, e.id),
                    new r.BufferGeometry;
                for (var n, i, a = t - 1, o = e.KnotVector.a, s = [], l = e.Points.a, u = 0, c = l.length; u < c; u += 4)
                    s.push((new r.Vector4).fromArray(l, u));
                if ("Closed" === e.Form)
                    s.push(s[0]);
                else if ("Periodic" === e.Form) {
                    n = a,
                    i = o.length - 1 - n;
                    for (u = 0; u < a; ++u)
                        s.push(s[u])
                }
                var h = new V(a,o,s,n,i).getPoints(7 * s.length)
                  , p = new Float32Array(3 * h.length);
                h.forEach((function(e, t) {
                    e.toArray(p, 3 * t)
                }
                ));
                var f = new r.BufferGeometry;
                return f.setAttribute("position", new r.BufferAttribute(p,3)),
                f
            }
        },
        s.prototype = {
            constructor: s,
            parse: function() {
                var e = []
                  , t = this.parseClips();
                if (void 0 !== t)
                    for (var n in t) {
                        var r = t[n]
                          , i = this.addClip(r);
                        e.push(i)
                    }
                return e
            },
            parseClips: function() {
                if (void 0 !== e.Objects.AnimationCurve) {
                    var t = this.parseAnimationCurveNodes();
                    this.parseAnimationCurves(t);
                    var n = this.parseAnimationLayers(t);
                    return this.parseAnimStacks(n)
                }
            },
            parseAnimationCurveNodes: function() {
                var t = e.Objects.AnimationCurveNode
                  , n = new Map;
                for (var r in t) {
                    var i = t[r];
                    if (null !== i.attrName.match(/S|R|T|DeformPercent/)) {
                        var a = {
                            id: i.id,
                            attr: i.attrName,
                            curves: {}
                        };
                        n.set(a.id, a)
                    }
                }
                return n
            },
            parseAnimationCurves: function(n) {
                var r = e.Objects.AnimationCurve;
                for (var i in r) {
                    var a = {
                        id: r[i].id,
                        times: r[i].KeyTime.a.map(f),
                        values: r[i].KeyValueFloat.a
                    }
                      , o = t.get(a.id);
                    if (void 0 !== o) {
                        var s = o.parents[0].ID
                          , l = o.parents[0].relationship;
                        l.match(/X/) ? n.get(s).curves.x = a : l.match(/Y/) ? n.get(s).curves.y = a : l.match(/Z/) ? n.get(s).curves.z = a : l.match(/d|DeformPercent/) && n.has(s) && (n.get(s).curves.morph = a)
                    }
                }
            },
            parseAnimationLayers: function(i) {
                var a = e.Objects.AnimationLayer
                  , o = new Map;
                for (var s in a) {
                    var l = []
                      , u = t.get(parseInt(s));
                    if (void 0 !== u)
                        u.children.forEach((function(a, o) {
                            if (i.has(a.ID)) {
                                var s = i.get(a.ID);
                                if (void 0 !== s.curves.x || void 0 !== s.curves.y || void 0 !== s.curves.z) {
                                    if (void 0 === l[o])
                                        if (void 0 !== (d = t.get(a.ID).parents.filter((function(e) {
                                            return void 0 !== e.relationship
                                        }
                                        ))[0].ID)) {
                                            if (void 0 === (c = e.Objects.Model[d.toString()]))
                                                return void console.warn("THREE.FBXLoader: Encountered a unused curve.", a);
                                            var u = {
                                                modelName: c.attrName ? r.PropertyBinding.sanitizeNodeName(c.attrName) : "",
                                                ID: c.id,
                                                initialPosition: [0, 0, 0],
                                                initialRotation: [0, 0, 0],
                                                initialScale: [1, 1, 1]
                                            };
                                            n.traverse((function(e) {
                                                e.ID === c.id && (u.transform = e.matrix,
                                                e.userData.transformData && (u.eulerOrder = e.userData.transformData.eulerOrder))
                                            }
                                            )),
                                            u.transform || (u.transform = new r.Matrix4),
                                            "PreRotation"in c && (u.preRotation = c.PreRotation.value),
                                            "PostRotation"in c && (u.postRotation = c.PostRotation.value),
                                            l[o] = u
                                        }
                                    l[o] && (l[o][s.attr] = s)
                                } else if (void 0 !== s.curves.morph) {
                                    if (void 0 === l[o]) {
                                        var c, h = t.get(a.ID).parents.filter((function(e) {
                                            return void 0 !== e.relationship
                                        }
                                        ))[0].ID, p = t.get(h).parents[0].ID, f = t.get(p).parents[0].ID, d = t.get(f).parents[0].ID;
                                        u = {
                                            modelName: (c = e.Objects.Model[d]).attrName ? r.PropertyBinding.sanitizeNodeName(c.attrName) : "",
                                            morphName: e.Objects.Deformer[h].attrName
                                        };
                                        l[o] = u
                                    }
                                    l[o][s.attr] = s
                                }
                            }
                        }
                        )),
                        o.set(parseInt(s), l)
                }
                return o
            },
            parseAnimStacks: function(n) {
                var r = e.Objects.AnimationStack
                  , i = {};
                for (var a in r) {
                    var o = t.get(parseInt(a)).children;
                    o.length > 1 && console.warn("THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.");
                    var s = n.get(o[0].ID);
                    i[a] = {
                        name: r[a].attrName,
                        layer: s
                    }
                }
                return i
            },
            addClip: function(e) {
                var t = []
                  , n = this;
                return e.layer.forEach((function(e) {
                    t = t.concat(n.generateTracks(e))
                }
                )),
                new r.AnimationClip(e.name,-1,t)
            },
            generateTracks: function(e) {
                var t = []
                  , n = new r.Vector3
                  , i = new r.Quaternion
                  , a = new r.Vector3;
                if (e.transform && e.transform.decompose(n, i, a),
                n = n.toArray(),
                i = (new r.Euler).setFromQuaternion(i, e.eulerOrder).toArray(),
                a = a.toArray(),
                void 0 !== e.T && Object.keys(e.T.curves).length > 0) {
                    var o = this.generateVectorTrack(e.modelName, e.T.curves, n, "position");
                    void 0 !== o && t.push(o)
                }
                if (void 0 !== e.R && Object.keys(e.R.curves).length > 0) {
                    var s = this.generateRotationTrack(e.modelName, e.R.curves, i, e.preRotation, e.postRotation, e.eulerOrder);
                    void 0 !== s && t.push(s)
                }
                if (void 0 !== e.S && Object.keys(e.S.curves).length > 0) {
                    var l = this.generateVectorTrack(e.modelName, e.S.curves, a, "scale");
                    void 0 !== l && t.push(l)
                }
                if (void 0 !== e.DeformPercent) {
                    var u = this.generateMorphTrack(e);
                    void 0 !== u && t.push(u)
                }
                return t
            },
            generateVectorTrack: function(e, t, n, i) {
                var a = this.getTimesForAllAxes(t)
                  , o = this.getKeyframeTrackValues(a, t, n);
                return new r.VectorKeyframeTrack(e + "." + i,a,o)
            },
            generateRotationTrack: function(e, t, n, i, a, o) {
                void 0 !== t.x && (this.interpolateRotations(t.x),
                t.x.values = t.x.values.map(r.MathUtils.degToRad)),
                void 0 !== t.y && (this.interpolateRotations(t.y),
                t.y.values = t.y.values.map(r.MathUtils.degToRad)),
                void 0 !== t.z && (this.interpolateRotations(t.z),
                t.z.values = t.z.values.map(r.MathUtils.degToRad));
                var s = this.getTimesForAllAxes(t)
                  , l = this.getKeyframeTrackValues(s, t, n);
                void 0 !== i && ((i = i.map(r.MathUtils.degToRad)).push(o),
                i = (new r.Euler).fromArray(i),
                i = (new r.Quaternion).setFromEuler(i)),
                void 0 !== a && ((a = a.map(r.MathUtils.degToRad)).push(o),
                a = (new r.Euler).fromArray(a),
                a = (new r.Quaternion).setFromEuler(a).inverse());
                for (var u = new r.Quaternion, c = new r.Euler, h = [], p = 0; p < l.length; p += 3)
                    c.set(l[p], l[p + 1], l[p + 2], o),
                    u.setFromEuler(c),
                    void 0 !== i && u.premultiply(i),
                    void 0 !== a && u.multiply(a),
                    u.toArray(h, p / 3 * 4);
                return new r.QuaternionKeyframeTrack(e + ".quaternion",s,h)
            },
            generateMorphTrack: function(e) {
                var t = e.DeformPercent.curves.morph
                  , i = t.values.map((function(e) {
                    return e / 100
                }
                ))
                  , a = n.getObjectByName(e.modelName).morphTargetDictionary[e.morphName];
                return new r.NumberKeyframeTrack(e.modelName + ".morphTargetInfluences[" + a + "]",t.times,i)
            },
            getTimesForAllAxes: function(e) {
                var t = [];
                return void 0 !== e.x && (t = t.concat(e.x.times)),
                void 0 !== e.y && (t = t.concat(e.y.times)),
                void 0 !== e.z && (t = t.concat(e.z.times)),
                t = t.sort((function(e, t) {
                    return e - t
                }
                )).filter((function(e, t, n) {
                    return n.indexOf(e) == t
                }
                ))
            },
            getKeyframeTrackValues: function(e, t, n) {
                var r = n
                  , i = []
                  , a = -1
                  , o = -1
                  , s = -1;
                return e.forEach((function(e) {
                    if (t.x && (a = t.x.times.indexOf(e)),
                    t.y && (o = t.y.times.indexOf(e)),
                    t.z && (s = t.z.times.indexOf(e)),
                    -1 !== a) {
                        var n = t.x.values[a];
                        i.push(n),
                        r[0] = n
                    } else
                        i.push(r[0]);
                    if (-1 !== o) {
                        var l = t.y.values[o];
                        i.push(l),
                        r[1] = l
                    } else
                        i.push(r[1]);
                    if (-1 !== s) {
                        var u = t.z.values[s];
                        i.push(u),
                        r[2] = u
                    } else
                        i.push(r[2])
                }
                )),
                i
            },
            interpolateRotations: function(e) {
                for (var t = 1; t < e.values.length; t++) {
                    var n = e.values[t - 1]
                      , r = e.values[t] - n
                      , i = Math.abs(r);
                    if (i >= 180) {
                        for (var a = i / 180, o = r / a, s = n + o, l = e.times[t - 1], u = (e.times[t] - l) / a, c = l + u, h = [], p = []; c < e.times[t]; )
                            h.push(c),
                            c += u,
                            p.push(s),
                            s += o;
                        e.times = _(e.times, t, h),
                        e.values = _(e.values, t, p)
                    }
                }
            }
        },
        l.prototype = {
            constructor: l,
            getPrevNode: function() {
                return this.nodeStack[this.currentIndent - 2]
            },
            getCurrentNode: function() {
                return this.nodeStack[this.currentIndent - 1]
            },
            getCurrentProp: function() {
                return this.currentProp
            },
            pushStack: function(e) {
                this.nodeStack.push(e),
                this.currentIndent += 1
            },
            popStack: function() {
                this.nodeStack.pop(),
                this.currentIndent -= 1
            },
            setCurrentProp: function(e, t) {
                this.currentProp = e,
                this.currentPropName = t
            },
            parse: function(e) {
                this.currentIndent = 0,
                this.allNodes = new h,
                this.nodeStack = [],
                this.currentProp = [],
                this.currentPropName = "";
                var t = this
                  , n = e.split(/[\r\n]+/);
                return n.forEach((function(e, r) {
                    var i = e.match(/^[\s\t]*;/)
                      , a = e.match(/^[\s\t]*$/);
                    if (!i && !a) {
                        var o = e.match("^\\t{" + t.currentIndent + "}(\\w+):(.*){", "")
                          , s = e.match("^\\t{" + t.currentIndent + "}(\\w+):[\\s\\t\\r\\n](.*)")
                          , l = e.match("^\\t{" + (t.currentIndent - 1) + "}}");
                        o ? t.parseNodeBegin(e, o) : s ? t.parseNodeProperty(e, s, n[++r]) : l ? t.popStack() : e.match(/^[^\s\t}]/) && t.parseNodePropertyContinued(e)
                    }
                }
                )),
                this.allNodes
            },
            parseNodeBegin: function(e, t) {
                var n = t[1].trim().replace(/^"/, "").replace(/"$/, "")
                  , r = t[2].split(",").map((function(e) {
                    return e.trim().replace(/^"/, "").replace(/"$/, "")
                }
                ))
                  , i = {
                    name: n
                }
                  , a = this.parseNodeAttr(r)
                  , o = this.getCurrentNode();
                0 === this.currentIndent ? this.allNodes.add(n, i) : n in o ? ("PoseNode" === n ? o.PoseNode.push(i) : void 0 !== o[n].id && (o[n] = {},
                o[n][o[n].id] = o[n]),
                "" !== a.id && (o[n][a.id] = i)) : "number" === typeof a.id ? (o[n] = {},
                o[n][a.id] = i) : "Properties70" !== n && (o[n] = "PoseNode" === n ? [i] : i),
                "number" === typeof a.id && (i.id = a.id),
                "" !== a.name && (i.attrName = a.name),
                "" !== a.type && (i.attrType = a.type),
                this.pushStack(i)
            },
            parseNodeAttr: function(e) {
                var t = e[0];
                "" !== e[0] && (t = parseInt(e[0]),
                isNaN(t) && (t = e[0]));
                var n = ""
                  , r = "";
                return e.length > 1 && (n = e[1].replace(/^(\w+)::/, ""),
                r = e[2]),
                {
                    id: t,
                    name: n,
                    type: r
                }
            },
            parseNodeProperty: function(e, t, n) {
                var r = t[1].replace(/^"/, "").replace(/"$/, "").trim()
                  , i = t[2].replace(/^"/, "").replace(/"$/, "").trim();
                "Content" === r && "," === i && (i = n.replace(/"/g, "").replace(/,$/, "").trim());
                var a = this.getCurrentNode();
                if ("Properties70" !== a.name) {
                    if ("C" === r) {
                        var o = i.split(",").slice(1)
                          , s = parseInt(o[0])
                          , l = parseInt(o[1])
                          , u = i.split(",").slice(3);
                        r = "connections",
                        function(e, t) {
                            for (var n = 0, r = e.length, i = t.length; n < i; n++,
                            r++)
                                e[r] = t[n]
                        }(i = [s, l], u = u.map((function(e) {
                            return e.trim().replace(/^"/, "")
                        }
                        ))),
                        void 0 === a[r] && (a[r] = [])
                    }
                    "Node" === r && (a.id = i),
                    r in a && Array.isArray(a[r]) ? a[r].push(i) : "a" !== r ? a[r] = i : a.a = i,
                    this.setCurrentProp(a, r),
                    "a" === r && "," !== i.slice(-1) && (a.a = x(i))
                } else
                    this.parseNodeSpecialProperty(e, r, i)
            },
            parseNodePropertyContinued: function(e) {
                var t = this.getCurrentNode();
                t.a += e,
                "," !== e.slice(-1) && (t.a = x(t.a))
            },
            parseNodeSpecialProperty: function(e, t, n) {
                var r = n.split('",').map((function(e) {
                    return e.trim().replace(/^\"/, "").replace(/\s/, "_")
                }
                ))
                  , i = r[0]
                  , a = r[1]
                  , o = r[2]
                  , s = r[3]
                  , l = r[4];
                switch (a) {
                case "int":
                case "enum":
                case "bool":
                case "ULongLong":
                case "double":
                case "Number":
                case "FieldOfView":
                    l = parseFloat(l);
                    break;
                case "Color":
                case "ColorRGB":
                case "Vector3D":
                case "Lcl_Translation":
                case "Lcl_Rotation":
                case "Lcl_Scaling":
                    l = x(l)
                }
                this.getPrevNode()[i] = {
                    type: a,
                    type2: o,
                    flag: s,
                    value: l
                },
                this.setCurrentProp(this.getPrevNode(), i)
            }
        },
        u.prototype = {
            constructor: u,
            parse: function(e) {
                var t = new c(e);
                t.skip(23);
                var n = t.getUint32();
                if (n < 6400)
                    throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: " + n);
                for (var r = new h; !this.endOfContent(t); ) {
                    var i = this.parseNode(t, n);
                    null !== i && r.add(i.name, i)
                }
                return r
            },
            endOfContent: function(e) {
                return e.size() % 16 === 0 ? (e.getOffset() + 160 + 16 & -16) >= e.size() : e.getOffset() + 160 + 16 >= e.size()
            },
            parseNode: function(e, t) {
                var n = {}
                  , r = t >= 7500 ? e.getUint64() : e.getUint32()
                  , i = t >= 7500 ? e.getUint64() : e.getUint32();
                t >= 7500 ? e.getUint64() : e.getUint32();
                var a = e.getUint8()
                  , o = e.getString(a);
                if (0 === r)
                    return null;
                for (var s = [], l = 0; l < i; l++)
                    s.push(this.parseProperty(e));
                var u = s.length > 0 ? s[0] : ""
                  , c = s.length > 1 ? s[1] : ""
                  , h = s.length > 2 ? s[2] : "";
                for (n.singleProperty = 1 === i && e.getOffset() === r; r > e.getOffset(); ) {
                    var p = this.parseNode(e, t);
                    null !== p && this.parseSubNode(o, n, p)
                }
                return n.propertyList = s,
                "number" === typeof u && (n.id = u),
                "" !== c && (n.attrName = c),
                "" !== h && (n.attrType = h),
                "" !== o && (n.name = o),
                n
            },
            parseSubNode: function(e, t, n) {
                if (!0 === n.singleProperty) {
                    var r = n.propertyList[0];
                    Array.isArray(r) ? (t[n.name] = n,
                    n.a = r) : t[n.name] = r
                } else if ("Connections" === e && "C" === n.name) {
                    var i = [];
                    n.propertyList.forEach((function(e, t) {
                        0 !== t && i.push(e)
                    }
                    )),
                    void 0 === t.connections && (t.connections = []),
                    t.connections.push(i)
                } else if ("Properties70" === n.name) {
                    Object.keys(n).forEach((function(e) {
                        t[e] = n[e]
                    }
                    ))
                } else if ("Properties70" === e && "P" === n.name) {
                    var a, o = n.propertyList[0], s = n.propertyList[1], l = n.propertyList[2], u = n.propertyList[3];
                    0 === o.indexOf("Lcl ") && (o = o.replace("Lcl ", "Lcl_")),
                    0 === s.indexOf("Lcl ") && (s = s.replace("Lcl ", "Lcl_")),
                    a = "Color" === s || "ColorRGB" === s || "Vector" === s || "Vector3D" === s || 0 === s.indexOf("Lcl_") ? [n.propertyList[4], n.propertyList[5], n.propertyList[6]] : n.propertyList[4],
                    t[o] = {
                        type: s,
                        type2: l,
                        flag: u,
                        value: a
                    }
                } else
                    void 0 === t[n.name] ? "number" === typeof n.id ? (t[n.name] = {},
                    t[n.name][n.id] = n) : t[n.name] = n : "PoseNode" === n.name ? (Array.isArray(t[n.name]) || (t[n.name] = [t[n.name]]),
                    t[n.name].push(n)) : void 0 === t[n.name][n.id] && (t[n.name][n.id] = n)
            },
            parseProperty: function(e) {
                var t = e.getString(1);
                switch (t) {
                case "C":
                    return e.getBoolean();
                case "D":
                    return e.getFloat64();
                case "F":
                    return e.getFloat32();
                case "I":
                    return e.getInt32();
                case "L":
                    return e.getInt64();
                case "R":
                    var n = e.getUint32();
                    return e.getArrayBuffer(n);
                case "S":
                    n = e.getUint32();
                    return e.getString(n);
                case "Y":
                    return e.getInt16();
                case "b":
                case "c":
                case "d":
                case "f":
                case "i":
                case "l":
                    var r = e.getUint32()
                      , i = e.getUint32()
                      , a = e.getUint32();
                    if (0 === i)
                        switch (t) {
                        case "b":
                        case "c":
                            return e.getBooleanArray(r);
                        case "d":
                            return e.getFloat64Array(r);
                        case "f":
                            return e.getFloat32Array(r);
                        case "i":
                            return e.getInt32Array(r);
                        case "l":
                            return e.getInt64Array(r)
                        }
                    "undefined" === typeof G && console.error("THREE.FBXLoader: External library Inflate.min.js required, obtain or import from https://github.com/imaya/zlib.js");
                    var o = new c(new G(new Uint8Array(e.getArrayBuffer(a))).decompress().buffer);
                    switch (t) {
                    case "b":
                    case "c":
                        return o.getBooleanArray(r);
                    case "d":
                        return o.getFloat64Array(r);
                    case "f":
                        return o.getFloat32Array(r);
                    case "i":
                        return o.getInt32Array(r);
                    case "l":
                        return o.getInt64Array(r)
                    }
                default:
                    throw new Error("THREE.FBXLoader: Unknown property type " + t)
                }
            }
        },
        c.prototype = {
            constructor: c,
            getOffset: function() {
                return this.offset
            },
            size: function() {
                return this.dv.buffer.byteLength
            },
            skip: function(e) {
                this.offset += e
            },
            getBoolean: function() {
                return 1 === (1 & this.getUint8())
            },
            getBooleanArray: function(e) {
                for (var t = [], n = 0; n < e; n++)
                    t.push(this.getBoolean());
                return t
            },
            getUint8: function() {
                var e = this.dv.getUint8(this.offset);
                return this.offset += 1,
                e
            },
            getInt16: function() {
                var e = this.dv.getInt16(this.offset, this.littleEndian);
                return this.offset += 2,
                e
            },
            getInt32: function() {
                var e = this.dv.getInt32(this.offset, this.littleEndian);
                return this.offset += 4,
                e
            },
            getInt32Array: function(e) {
                for (var t = [], n = 0; n < e; n++)
                    t.push(this.getInt32());
                return t
            },
            getUint32: function() {
                var e = this.dv.getUint32(this.offset, this.littleEndian);
                return this.offset += 4,
                e
            },
            getInt64: function() {
                var e, t;
                return this.littleEndian ? (e = this.getUint32(),
                t = this.getUint32()) : (t = this.getUint32(),
                e = this.getUint32()),
                2147483648 & t ? (t = 4294967295 & ~t,
                4294967295 === (e = 4294967295 & ~e) && (t = t + 1 & 4294967295),
                -(4294967296 * t + (e = e + 1 & 4294967295))) : 4294967296 * t + e
            },
            getInt64Array: function(e) {
                for (var t = [], n = 0; n < e; n++)
                    t.push(this.getInt64());
                return t
            },
            getUint64: function() {
                var e, t;
                return this.littleEndian ? (e = this.getUint32(),
                t = this.getUint32()) : (t = this.getUint32(),
                e = this.getUint32()),
                4294967296 * t + e
            },
            getFloat32: function() {
                var e = this.dv.getFloat32(this.offset, this.littleEndian);
                return this.offset += 4,
                e
            },
            getFloat32Array: function(e) {
                for (var t = [], n = 0; n < e; n++)
                    t.push(this.getFloat32());
                return t
            },
            getFloat64: function() {
                var e = this.dv.getFloat64(this.offset, this.littleEndian);
                return this.offset += 8,
                e
            },
            getFloat64Array: function(e) {
                for (var t = [], n = 0; n < e; n++)
                    t.push(this.getFloat64());
                return t
            },
            getArrayBuffer: function(e) {
                var t = this.dv.buffer.slice(this.offset, this.offset + e);
                return this.offset += e,
                t
            },
            getString: function(e) {
                for (var t = [], n = 0; n < e; n++)
                    t[n] = this.getUint8();
                var i = t.indexOf(0);
                return i >= 0 && (t = t.slice(0, i)),
                r.LoaderUtils.decodeText(new Uint8Array(t))
            }
        },
        h.prototype = {
            constructor: h,
            add: function(e, t) {
                this[e] = t
            }
        };
        var d = [];
        function m(e, t, n, r) {
            var i;
            switch (r.mappingType) {
            case "ByPolygonVertex":
                i = e;
                break;
            case "ByPolygon":
                i = t;
                break;
            case "ByVertice":
                i = n;
                break;
            case "AllSame":
                i = r.indices[0];
                break;
            default:
                console.warn("THREE.FBXLoader: unknown attribute mapping type " + r.mappingType)
            }
            "IndexToDirect" === r.referenceType && (i = r.indices[i]);
            var a = i * r.dataSize
              , o = a + r.dataSize;
            return function(e, t, n, r) {
                for (var i = n, a = 0; i < r; i++,
                a++)
                    e[a] = t[i];
                return e
            }(d, r.buffer, a, o)
        }
        var g = new r.Euler
          , v = new r.Vector3;
        function y(e) {
            var t, n = new r.Matrix4, i = new r.Matrix4, a = new r.Matrix4, o = new r.Matrix4, s = new r.Matrix4, l = new r.Matrix4, u = new r.Matrix4, c = new r.Matrix4, h = new r.Matrix4, p = new r.Matrix4, f = new r.Matrix4, d = e.inheritType ? e.inheritType : 0;
            (e.translation && n.setPosition(v.fromArray(e.translation)),
            e.preRotation) && ((t = e.preRotation.map(r.MathUtils.degToRad)).push(e.eulerOrder),
            i.makeRotationFromEuler(g.fromArray(t)));
            e.rotation && ((t = e.rotation.map(r.MathUtils.degToRad)).push(e.eulerOrder),
            a.makeRotationFromEuler(g.fromArray(t)));
            e.postRotation && ((t = e.postRotation.map(r.MathUtils.degToRad)).push(e.eulerOrder),
            o.makeRotationFromEuler(g.fromArray(t)));
            e.scale && s.scale(v.fromArray(e.scale)),
            e.scalingOffset && u.setPosition(v.fromArray(e.scalingOffset)),
            e.scalingPivot && l.setPosition(v.fromArray(e.scalingPivot)),
            e.rotationOffset && c.setPosition(v.fromArray(e.rotationOffset)),
            e.rotationPivot && h.setPosition(v.fromArray(e.rotationPivot)),
            e.parentMatrixWorld && (p = e.parentMatrixWorld);
            var m = i.multiply(a).multiply(o)
              , y = new r.Matrix4;
            p.extractRotation(y),
            (new r.Matrix4).copyPosition(p);
            var b = new r.Matrix4;
            b.getInverse(y).multiply(p);
            var x = new r.Matrix4;
            if (0 === d)
                x.copy(y).multiply(m).multiply(b).multiply(s);
            else if (1 === d)
                x.copy(y).multiply(b).multiply(m).multiply(s);
            else {
                var w = (new r.Matrix4).getInverse(s)
                  , _ = (new r.Matrix4).multiply(b).multiply(w);
                x.copy(y).multiply(m).multiply(_).multiply(s)
            }
            var S = (new r.Matrix4).getInverse(h)
              , E = (new r.Matrix4).getInverse(l)
              , M = new r.Matrix4;
            M.copy(n).multiply(c).multiply(h).multiply(i).multiply(a).multiply(o).multiply(S).multiply(u).multiply(l).multiply(s).multiply(E);
            var T = (new r.Matrix4).copyPosition(M)
              , A = (new r.Matrix4).copy(p).multiply(T);
            return f.copyPosition(A),
            M = (new r.Matrix4).multiply(f).multiply(x)
        }
        function b(e) {
            var t = ["ZYX", "YZX", "XZY", "ZXY", "YXZ", "XYZ"];
            return 6 === (e = e || 0) ? (console.warn("THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect."),
            t[0]) : t[e]
        }
        function x(e) {
            return e.split(",").map((function(e) {
                return parseFloat(e)
            }
            ))
        }
        function w(e, t, n) {
            return void 0 === t && (t = 0),
            void 0 === n && (n = e.byteLength),
            r.LoaderUtils.decodeText(new Uint8Array(e,t,n))
        }
        function _(e, t, n) {
            return e.slice(0, t).concat(n).concat(e.slice(t))
        }
        return i
    }()
}
, function(e, t, n) {
    "use strict";
    n.d(t, "a", (function() {
        return l
    }
    ));
    n(16);
    function r(e) {
        return "Minified Redux error #" + e + "; visit https://redux.js.org/Errors?code=" + e + " for the full message or use the non-minified dev environment for full errors. "
    }
    var i = "function" === typeof Symbol && Symbol.observable || "@@observable"
      , a = function() {
        return Math.random().toString(36).substring(7).split("").join(".")
    }
      , o = {
        INIT: "@@redux/INIT" + a(),
        REPLACE: "@@redux/REPLACE" + a(),
        PROBE_UNKNOWN_ACTION: function() {
            return "@@redux/PROBE_UNKNOWN_ACTION" + a()
        }
    };
    function s(e) {
        if ("object" !== typeof e || null === e)
            return !1;
        for (var t = e; null !== Object.getPrototypeOf(t); )
            t = Object.getPrototypeOf(t);
        return Object.getPrototypeOf(e) === t
    }
    function l(e, t, n) {
        var a;
        if ("function" === typeof t && "function" === typeof n || "function" === typeof n && "function" === typeof arguments[3])
            throw new Error(r(0));
        if ("function" === typeof t && "undefined" === typeof n && (n = t,
        t = void 0),
        "undefined" !== typeof n) {
            if ("function" !== typeof n)
                throw new Error(r(1));
            return n(l)(e, t)
        }
        if ("function" !== typeof e)
            throw new Error(r(2));
        var u = e
          , c = t
          , h = []
          , p = h
          , f = !1;
        function d() {
            p === h && (p = h.slice())
        }
        function m() {
            if (f)
                throw new Error(r(3));
            return c
        }
        function g(e) {
            if ("function" !== typeof e)
                throw new Error(r(4));
            if (f)
                throw new Error(r(5));
            var t = !0;
            return d(),
            p.push(e),
            function() {
                if (t) {
                    if (f)
                        throw new Error(r(6));
                    t = !1,
                    d();
                    var n = p.indexOf(e);
                    p.splice(n, 1),
                    h = null
                }
            }
        }
        function v(e) {
            if (!s(e))
                throw new Error(r(7));
            if ("undefined" === typeof e.type)
                throw new Error(r(8));
            if (f)
                throw new Error(r(9));
            try {
                f = !0,
                c = u(c, e)
            } finally {
                f = !1
            }
            for (var t = h = p, n = 0; n < t.length; n++) {
                (0,
                t[n])()
            }
            return e
        }
        function y(e) {
            if ("function" !== typeof e)
                throw new Error(r(10));
            u = e,
            v({
                type: o.REPLACE
            })
        }
        function b() {
            var e, t = g;
            return (e = {
                subscribe: function(e) {
                    if ("object" !== typeof e || null === e)
                        throw new Error(r(11));
                    function n() {
                        e.next && e.next(m())
                    }
                    return n(),
                    {
                        unsubscribe: t(n)
                    }
                }
            })[i] = function() {
                return this
            }
            ,
            e
        }
        return v({
            type: o.INIT
        }),
        (a = {
            dispatch: v,
            subscribe: g,
            getState: m,
            replaceReducer: y
        })[i] = b,
        a
    }
}
, , , function(e, t, n) {
    "use strict";
    var r = n(27)
      , i = "function" === typeof Symbol && Symbol.for
      , a = i ? Symbol.for("react.element") : 60103
      , o = i ? Symbol.for("react.portal") : 60106
      , s = i ? Symbol.for("react.fragment") : 60107
      , l = i ? Symbol.for("react.strict_mode") : 60108
      , u = i ? Symbol.for("react.profiler") : 60114
      , c = i ? Symbol.for("react.provider") : 60109
      , h = i ? Symbol.for("react.context") : 60110
      , p = i ? Symbol.for("react.forward_ref") : 60112
      , f = i ? Symbol.for("react.suspense") : 60113
      , d = i ? Symbol.for("react.memo") : 60115
      , m = i ? Symbol.for("react.lazy") : 60116
      , g = "function" === typeof Symbol && Symbol.iterator;
    function v(e) {
        for (var t = "https://reactjs.org/docs/error-decoder.html?invariant=" + e, n = 1; n < arguments.length; n++)
            t += "&args[]=" + encodeURIComponent(arguments[n]);
        return "Minified React error #" + e + "; visit " + t + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
    }
    var y = {
        isMounted: function() {
            return !1
        },
        enqueueForceUpdate: function() {},
        enqueueReplaceState: function() {},
        enqueueSetState: function() {}
    }
      , b = {};
    function x(e, t, n) {
        this.props = e,
        this.context = t,
        this.refs = b,
        this.updater = n || y
    }
    function w() {}
    function _(e, t, n) {
        this.props = e,
        this.context = t,
        this.refs = b,
        this.updater = n || y
    }
    x.prototype.isReactComponent = {},
    x.prototype.setState = function(e, t) {
        if ("object" !== typeof e && "function" !== typeof e && null != e)
            throw Error(v(85));
        this.updater.enqueueSetState(this, e, t, "setState")
    }
    ,
    x.prototype.forceUpdate = function(e) {
        this.updater.enqueueForceUpdate(this, e, "forceUpdate")
    }
    ,
    w.prototype = x.prototype;
    var S = _.prototype = new w;
    S.constructor = _,
    r(S, x.prototype),
    S.isPureReactComponent = !0;
    var E = {
        current: null
    }
      , M = Object.prototype.hasOwnProperty
      , T = {
        key: !0,
        ref: !0,
        __self: !0,
        __source: !0
    };
    function A(e, t, n) {
        var r, i = {}, o = null, s = null;
        if (null != t)
            for (r in void 0 !== t.ref && (s = t.ref),
            void 0 !== t.key && (o = "" + t.key),
            t)
                M.call(t, r) && !T.hasOwnProperty(r) && (i[r] = t[r]);
        var l = arguments.length - 2;
        if (1 === l)
            i.children = n;
        else if (1 < l) {
            for (var u = Array(l), c = 0; c < l; c++)
                u[c] = arguments[c + 2];
            i.children = u
        }
        if (e && e.defaultProps)
            for (r in l = e.defaultProps)
                void 0 === i[r] && (i[r] = l[r]);
        return {
            $$typeof: a,
            type: e,
            key: o,
            ref: s,
            props: i,
            _owner: E.current
        }
    }
    function P(e) {
        return "object" === typeof e && null !== e && e.$$typeof === a
    }
    var C = /\/+/g
      , L = [];
    function R(e, t, n, r) {
        if (L.length) {
            var i = L.pop();
            return i.result = e,
            i.keyPrefix = t,
            i.func = n,
            i.context = r,
            i.count = 0,
            i
        }
        return {
            result: e,
            keyPrefix: t,
            func: n,
            context: r,
            count: 0
        }
    }
    function k(e) {
        e.result = null,
        e.keyPrefix = null,
        e.func = null,
        e.context = null,
        e.count = 0,
        10 > L.length && L.push(e)
    }
    function D(e, t, n) {
        return null == e ? 0 : function e(t, n, r, i) {
            var s = typeof t;
            "undefined" !== s && "boolean" !== s || (t = null);
            var l = !1;
            if (null === t)
                l = !0;
            else
                switch (s) {
                case "string":
                case "number":
                    l = !0;
                    break;
                case "object":
                    switch (t.$$typeof) {
                    case a:
                    case o:
                        l = !0
                    }
                }
            if (l)
                return r(i, t, "" === n ? "." + I(t, 0) : n),
                1;
            if (l = 0,
            n = "" === n ? "." : n + ":",
            Array.isArray(t))
                for (var u = 0; u < t.length; u++) {
                    var c = n + I(s = t[u], u);
                    l += e(s, c, r, i)
                }
            else if (null === t || "object" !== typeof t ? c = null : c = "function" === typeof (c = g && t[g] || t["@@iterator"]) ? c : null,
            "function" === typeof c)
                for (t = c.call(t),
                u = 0; !(s = t.next()).done; )
                    l += e(s = s.value, c = n + I(s, u++), r, i);
            else if ("object" === s)
                throw r = "" + t,
                Error(v(31, "[object Object]" === r ? "object with keys {" + Object.keys(t).join(", ") + "}" : r, ""));
            return l
        }(e, "", t, n)
    }
    function I(e, t) {
        return "object" === typeof e && null !== e && null != e.key ? function(e) {
            var t = {
                "=": "=0",
                ":": "=2"
            };
            return "$" + ("" + e).replace(/[=:]/g, (function(e) {
                return t[e]
            }
            ))
        }(e.key) : t.toString(36)
    }
    function O(e, t) {
        e.func.call(e.context, t, e.count++)
    }
    function F(e, t, n) {
        var r = e.result
          , i = e.keyPrefix;
        e = e.func.call(e.context, t, e.count++),
        Array.isArray(e) ? N(e, r, n, (function(e) {
            return e
        }
        )) : null != e && (P(e) && (e = function(e, t) {
            return {
                $$typeof: a,
                type: e.type,
                key: t,
                ref: e.ref,
                props: e.props,
                _owner: e._owner
            }
        }(e, i + (!e.key || t && t.key === e.key ? "" : ("" + e.key).replace(C, "$&/") + "/") + n)),
        r.push(e))
    }
    function N(e, t, n, r, i) {
        var a = "";
        null != n && (a = ("" + n).replace(C, "$&/") + "/"),
        D(e, F, t = R(t, a, r, i)),
        k(t)
    }
    var B = {
        current: null
    };
    function z() {
        var e = B.current;
        if (null === e)
            throw Error(v(321));
        return e
    }
    var G = {
        ReactCurrentDispatcher: B,
        ReactCurrentBatchConfig: {
            suspense: null
        },
        ReactCurrentOwner: E,
        IsSomeRendererActing: {
            current: !1
        },
        assign: r
    };
    t.Children = {
        map: function(e, t, n) {
            if (null == e)
                return e;
            var r = [];
            return N(e, r, null, t, n),
            r
        },
        forEach: function(e, t, n) {
            if (null == e)
                return e;
            D(e, O, t = R(null, null, t, n)),
            k(t)
        },
        count: function(e) {
            return D(e, (function() {
                return null
            }
            ), null)
        },
        toArray: function(e) {
            var t = [];
            return N(e, t, null, (function(e) {
                return e
            }
            )),
            t
        },
        only: function(e) {
            if (!P(e))
                throw Error(v(143));
            return e
        }
    },
    t.Component = x,
    t.Fragment = s,
    t.Profiler = u,
    t.PureComponent = _,
    t.StrictMode = l,
    t.Suspense = f,
    t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = G,
    t.cloneElement = function(e, t, n) {
        if (null === e || void 0 === e)
            throw Error(v(267, e));
        var i = r({}, e.props)
          , o = e.key
          , s = e.ref
          , l = e._owner;
        if (null != t) {
            if (void 0 !== t.ref && (s = t.ref,
            l = E.current),
            void 0 !== t.key && (o = "" + t.key),
            e.type && e.type.defaultProps)
                var u = e.type.defaultProps;
            for (c in t)
                M.call(t, c) && !T.hasOwnProperty(c) && (i[c] = void 0 === t[c] && void 0 !== u ? u[c] : t[c])
        }
        var c = arguments.length - 2;
        if (1 === c)
            i.children = n;
        else if (1 < c) {
            u = Array(c);
            for (var h = 0; h < c; h++)
                u[h] = arguments[h + 2];
            i.children = u
        }
        return {
            $$typeof: a,
            type: e.type,
            key: o,
            ref: s,
            props: i,
            _owner: l
        }
    }
    ,
    t.createContext = function(e, t) {
        return void 0 === t && (t = null),
        (e = {
            $$typeof: h,
            _calculateChangedBits: t,
            _currentValue: e,
            _currentValue2: e,
            _threadCount: 0,
            Provider: null,
            Consumer: null
        }).Provider = {
            $$typeof: c,
            _context: e
        },
        e.Consumer = e
    }
    ,
    t.createElement = A,
    t.createFactory = function(e) {
        var t = A.bind(null, e);
        return t.type = e,
        t
    }
    ,
    t.createRef = function() {
        return {
            current: null
        }
    }
    ,
    t.forwardRef = function(e) {
        return {
            $$typeof: p,
            render: e
        }
    }
    ,
    t.isValidElement = P,
    t.lazy = function(e) {
        return {
            $$typeof: m,
            _ctor: e,
            _status: -1,
            _result: null
        }
    }
    ,
    t.memo = function(e, t) {
        return {
            $$typeof: d,
            type: e,
            compare: void 0 === t ? null : t
        }
    }
    ,
    t.useCallback = function(e, t) {
        return z().useCallback(e, t)
    }
    ,
    t.useContext = function(e, t) {
        return z().useContext(e, t)
    }
    ,
    t.useDebugValue = function() {}
    ,
    t.useEffect = function(e, t) {
        return z().useEffect(e, t)
    }
    ,
    t.useImperativeHandle = function(e, t, n) {
        return z().useImperativeHandle(e, t, n)
    }
    ,
    t.useLayoutEffect = function(e, t) {
        return z().useLayoutEffect(e, t)
    }
    ,
    t.useMemo = function(e, t) {
        return z().useMemo(e, t)
    }
    ,
    t.useReducer = function(e, t, n) {
        return z().useReducer(e, t, n)
    }
    ,
    t.useRef = function(e) {
        return z().useRef(e)
    }
    ,
    t.useState = function(e) {
        return z().useState(e)
    }
    ,
    t.version = "16.14.0"
}
, function(e, t, n) {
    "use strict";
    var r = n(0)
      , i = n(27)
      , a = n(50);
    function o(e) {
        for (var t = "https://reactjs.org/docs/error-decoder.html?invariant=" + e, n = 1; n < arguments.length; n++)
            t += "&args[]=" + encodeURIComponent(arguments[n]);
        return "Minified React error #" + e + "; visit " + t + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
    }
    if (!r)
        throw Error(o(227));
    function s(e, t, n, r, i, a, o, s, l) {
        var u = Array.prototype.slice.call(arguments, 3);
        try {
            t.apply(n, u)
        } catch (c) {
            this.onError(c)
        }
    }
    var l = !1
      , u = null
      , c = !1
      , h = null
      , p = {
        onError: function(e) {
            l = !0,
            u = e
        }
    };
    function f(e, t, n, r, i, a, o, c, h) {
        l = !1,
        u = null,
        s.apply(p, arguments)
    }
    var d = null
      , m = null
      , g = null;
    function v(e, t, n) {
        var r = e.type || "unknown-event";
        e.currentTarget = g(n),
        function(e, t, n, r, i, a, s, p, d) {
            if (f.apply(this, arguments),
            l) {
                if (!l)
                    throw Error(o(198));
                var m = u;
                l = !1,
                u = null,
                c || (c = !0,
                h = m)
            }
        }(r, t, void 0, e),
        e.currentTarget = null
    }
    var y = null
      , b = {};
    function x() {
        if (y)
            for (var e in b) {
                var t = b[e]
                  , n = y.indexOf(e);
                if (!(-1 < n))
                    throw Error(o(96, e));
                if (!_[n]) {
                    if (!t.extractEvents)
                        throw Error(o(97, e));
                    for (var r in _[n] = t,
                    n = t.eventTypes) {
                        var i = void 0
                          , a = n[r]
                          , s = t
                          , l = r;
                        if (S.hasOwnProperty(l))
                            throw Error(o(99, l));
                        S[l] = a;
                        var u = a.phasedRegistrationNames;
                        if (u) {
                            for (i in u)
                                u.hasOwnProperty(i) && w(u[i], s, l);
                            i = !0
                        } else
                            a.registrationName ? (w(a.registrationName, s, l),
                            i = !0) : i = !1;
                        if (!i)
                            throw Error(o(98, r, e))
                    }
                }
            }
    }
    function w(e, t, n) {
        if (E[e])
            throw Error(o(100, e));
        E[e] = t,
        M[e] = t.eventTypes[n].dependencies
    }
    var _ = []
      , S = {}
      , E = {}
      , M = {};
    function T(e) {
        var t, n = !1;
        for (t in e)
            if (e.hasOwnProperty(t)) {
                var r = e[t];
                if (!b.hasOwnProperty(t) || b[t] !== r) {
                    if (b[t])
                        throw Error(o(102, t));
                    b[t] = r,
                    n = !0
                }
            }
        n && x()
    }
    var A = !("undefined" === typeof window || "undefined" === typeof window.document || "undefined" === typeof window.document.createElement)
      , P = null
      , C = null
      , L = null;
    function R(e) {
        if (e = m(e)) {
            if ("function" !== typeof P)
                throw Error(o(280));
            var t = e.stateNode;
            t && (t = d(t),
            P(e.stateNode, e.type, t))
        }
    }
    function k(e) {
        C ? L ? L.push(e) : L = [e] : C = e
    }
    function D() {
        if (C) {
            var e = C
              , t = L;
            if (L = C = null,
            R(e),
            t)
                for (e = 0; e < t.length; e++)
                    R(t[e])
        }
    }
    function I(e, t) {
        return e(t)
    }
    function O(e, t, n, r, i) {
        return e(t, n, r, i)
    }
    function F() {}
    var N = I
      , B = !1
      , z = !1;
    function G() {
        null === C && null === L || (F(),
        D())
    }
    function H(e, t, n) {
        if (z)
            return e(t, n);
        z = !0;
        try {
            return N(e, t, n)
        } finally {
            z = !1,
            G()
        }
    }
    var V = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/
      , j = Object.prototype.hasOwnProperty
      , U = {}
      , W = {};
    function q(e, t, n, r, i, a) {
        this.acceptsBooleans = 2 === t || 3 === t || 4 === t,
        this.attributeName = r,
        this.attributeNamespace = i,
        this.mustUseProperty = n,
        this.propertyName = e,
        this.type = t,
        this.sanitizeURL = a
    }
    var X = {};
    "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e) {
        X[e] = new q(e,0,!1,e,null,!1)
    }
    )),
    [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach((function(e) {
        var t = e[0];
        X[t] = new q(t,1,!1,e[1],null,!1)
    }
    )),
    ["contentEditable", "draggable", "spellCheck", "value"].forEach((function(e) {
        X[e] = new q(e,2,!1,e.toLowerCase(),null,!1)
    }
    )),
    ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach((function(e) {
        X[e] = new q(e,2,!1,e,null,!1)
    }
    )),
    "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e) {
        X[e] = new q(e,3,!1,e.toLowerCase(),null,!1)
    }
    )),
    ["checked", "multiple", "muted", "selected"].forEach((function(e) {
        X[e] = new q(e,3,!0,e,null,!1)
    }
    )),
    ["capture", "download"].forEach((function(e) {
        X[e] = new q(e,4,!1,e,null,!1)
    }
    )),
    ["cols", "rows", "size", "span"].forEach((function(e) {
        X[e] = new q(e,6,!1,e,null,!1)
    }
    )),
    ["rowSpan", "start"].forEach((function(e) {
        X[e] = new q(e,5,!1,e.toLowerCase(),null,!1)
    }
    ));
    var Y = /[\-:]([a-z])/g;
    function Z(e) {
        return e[1].toUpperCase()
    }
    "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e) {
        var t = e.replace(Y, Z);
        X[t] = new q(t,1,!1,e,null,!1)
    }
    )),
    "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e) {
        var t = e.replace(Y, Z);
        X[t] = new q(t,1,!1,e,"http://www.w3.org/1999/xlink",!1)
    }
    )),
    ["xml:base", "xml:lang", "xml:space"].forEach((function(e) {
        var t = e.replace(Y, Z);
        X[t] = new q(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)
    }
    )),
    ["tabIndex", "crossOrigin"].forEach((function(e) {
        X[e] = new q(e,1,!1,e.toLowerCase(),null,!1)
    }
    )),
    X.xlinkHref = new q("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),
    ["src", "href", "action", "formAction"].forEach((function(e) {
        X[e] = new q(e,1,!1,e.toLowerCase(),null,!0)
    }
    ));
    var $ = r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    function J(e, t, n, r) {
        var i = X.hasOwnProperty(t) ? X[t] : null;
        (null !== i ? 0 === i.type : !r && (2 < t.length && ("o" === t[0] || "O" === t[0]) && ("n" === t[1] || "N" === t[1]))) || (function(e, t, n, r) {
            if (null === t || "undefined" === typeof t || function(e, t, n, r) {
                if (null !== n && 0 === n.type)
                    return !1;
                switch (typeof t) {
                case "function":
                case "symbol":
                    return !0;
                case "boolean":
                    return !r && (null !== n ? !n.acceptsBooleans : "data-" !== (e = e.toLowerCase().slice(0, 5)) && "aria-" !== e);
                default:
                    return !1
                }
            }(e, t, n, r))
                return !0;
            if (r)
                return !1;
            if (null !== n)
                switch (n.type) {
                case 3:
                    return !t;
                case 4:
                    return !1 === t;
                case 5:
                    return isNaN(t);
                case 6:
                    return isNaN(t) || 1 > t
                }
            return !1
        }(t, n, i, r) && (n = null),
        r || null === i ? function(e) {
            return !!j.call(W, e) || !j.call(U, e) && (V.test(e) ? W[e] = !0 : (U[e] = !0,
            !1))
        }(t) && (null === n ? e.removeAttribute(t) : e.setAttribute(t, "" + n)) : i.mustUseProperty ? e[i.propertyName] = null === n ? 3 !== i.type && "" : n : (t = i.attributeName,
        r = i.attributeNamespace,
        null === n ? e.removeAttribute(t) : (n = 3 === (i = i.type) || 4 === i && !0 === n ? "" : "" + n,
        r ? e.setAttributeNS(r, t, n) : e.setAttribute(t, n))))
    }
    $.hasOwnProperty("ReactCurrentDispatcher") || ($.ReactCurrentDispatcher = {
        current: null
    }),
    $.hasOwnProperty("ReactCurrentBatchConfig") || ($.ReactCurrentBatchConfig = {
        suspense: null
    });
    var K = /^(.*)[\\\/]/
      , Q = "function" === typeof Symbol && Symbol.for
      , ee = Q ? Symbol.for("react.element") : 60103
      , te = Q ? Symbol.for("react.portal") : 60106
      , ne = Q ? Symbol.for("react.fragment") : 60107
      , re = Q ? Symbol.for("react.strict_mode") : 60108
      , ie = Q ? Symbol.for("react.profiler") : 60114
      , ae = Q ? Symbol.for("react.provider") : 60109
      , oe = Q ? Symbol.for("react.context") : 60110
      , se = Q ? Symbol.for("react.concurrent_mode") : 60111
      , le = Q ? Symbol.for("react.forward_ref") : 60112
      , ue = Q ? Symbol.for("react.suspense") : 60113
      , ce = Q ? Symbol.for("react.suspense_list") : 60120
      , he = Q ? Symbol.for("react.memo") : 60115
      , pe = Q ? Symbol.for("react.lazy") : 60116
      , fe = Q ? Symbol.for("react.block") : 60121
      , de = "function" === typeof Symbol && Symbol.iterator;
    function me(e) {
        return null === e || "object" !== typeof e ? null : "function" === typeof (e = de && e[de] || e["@@iterator"]) ? e : null
    }
    function ge(e) {
        if (null == e)
            return null;
        if ("function" === typeof e)
            return e.displayName || e.name || null;
        if ("string" === typeof e)
            return e;
        switch (e) {
        case ne:
            return "Fragment";
        case te:
            return "Portal";
        case ie:
            return "Profiler";
        case re:
            return "StrictMode";
        case ue:
            return "Suspense";
        case ce:
            return "SuspenseList"
        }
        if ("object" === typeof e)
            switch (e.$$typeof) {
            case oe:
                return "Context.Consumer";
            case ae:
                return "Context.Provider";
            case le:
                var t = e.render;
                return t = t.displayName || t.name || "",
                e.displayName || ("" !== t ? "ForwardRef(" + t + ")" : "ForwardRef");
            case he:
                return ge(e.type);
            case fe:
                return ge(e.render);
            case pe:
                if (e = 1 === e._status ? e._result : null)
                    return ge(e)
            }
        return null
    }
    function ve(e) {
        var t = "";
        do {
            e: switch (e.tag) {
            case 3:
            case 4:
            case 6:
            case 7:
            case 10:
            case 9:
                var n = "";
                break e;
            default:
                var r = e._debugOwner
                  , i = e._debugSource
                  , a = ge(e.type);
                n = null,
                r && (n = ge(r.type)),
                r = a,
                a = "",
                i ? a = " (at " + i.fileName.replace(K, "") + ":" + i.lineNumber + ")" : n && (a = " (created by " + n + ")"),
                n = "\n    in " + (r || "Unknown") + a
            }
            t += n,
            e = e.return
        } while (e);
        return t
    }
    function ye(e) {
        switch (typeof e) {
        case "boolean":
        case "number":
        case "object":
        case "string":
        case "undefined":
            return e;
        default:
            return ""
        }
    }
    function be(e) {
        var t = e.type;
        return (e = e.nodeName) && "input" === e.toLowerCase() && ("checkbox" === t || "radio" === t)
    }
    function xe(e) {
        e._valueTracker || (e._valueTracker = function(e) {
            var t = be(e) ? "checked" : "value"
              , n = Object.getOwnPropertyDescriptor(e.constructor.prototype, t)
              , r = "" + e[t];
            if (!e.hasOwnProperty(t) && "undefined" !== typeof n && "function" === typeof n.get && "function" === typeof n.set) {
                var i = n.get
                  , a = n.set;
                return Object.defineProperty(e, t, {
                    configurable: !0,
                    get: function() {
                        return i.call(this)
                    },
                    set: function(e) {
                        r = "" + e,
                        a.call(this, e)
                    }
                }),
                Object.defineProperty(e, t, {
                    enumerable: n.enumerable
                }),
                {
                    getValue: function() {
                        return r
                    },
                    setValue: function(e) {
                        r = "" + e
                    },
                    stopTracking: function() {
                        e._valueTracker = null,
                        delete e[t]
                    }
                }
            }
        }(e))
    }
    function we(e) {
        if (!e)
            return !1;
        var t = e._valueTracker;
        if (!t)
            return !0;
        var n = t.getValue()
          , r = "";
        return e && (r = be(e) ? e.checked ? "true" : "false" : e.value),
        (e = r) !== n && (t.setValue(e),
        !0)
    }
    function _e(e, t) {
        var n = t.checked;
        return i({}, t, {
            defaultChecked: void 0,
            defaultValue: void 0,
            value: void 0,
            checked: null != n ? n : e._wrapperState.initialChecked
        })
    }
    function Se(e, t) {
        var n = null == t.defaultValue ? "" : t.defaultValue
          , r = null != t.checked ? t.checked : t.defaultChecked;
        n = ye(null != t.value ? t.value : n),
        e._wrapperState = {
            initialChecked: r,
            initialValue: n,
            controlled: "checkbox" === t.type || "radio" === t.type ? null != t.checked : null != t.value
        }
    }
    function Ee(e, t) {
        null != (t = t.checked) && J(e, "checked", t, !1)
    }
    function Me(e, t) {
        Ee(e, t);
        var n = ye(t.value)
          , r = t.type;
        if (null != n)
            "number" === r ? (0 === n && "" === e.value || e.value != n) && (e.value = "" + n) : e.value !== "" + n && (e.value = "" + n);
        else if ("submit" === r || "reset" === r)
            return void e.removeAttribute("value");
        t.hasOwnProperty("value") ? Ae(e, t.type, n) : t.hasOwnProperty("defaultValue") && Ae(e, t.type, ye(t.defaultValue)),
        null == t.checked && null != t.defaultChecked && (e.defaultChecked = !!t.defaultChecked)
    }
    function Te(e, t, n) {
        if (t.hasOwnProperty("value") || t.hasOwnProperty("defaultValue")) {
            var r = t.type;
            if (!("submit" !== r && "reset" !== r || void 0 !== t.value && null !== t.value))
                return;
            t = "" + e._wrapperState.initialValue,
            n || t === e.value || (e.value = t),
            e.defaultValue = t
        }
        "" !== (n = e.name) && (e.name = ""),
        e.defaultChecked = !!e._wrapperState.initialChecked,
        "" !== n && (e.name = n)
    }
    function Ae(e, t, n) {
        "number" === t && e.ownerDocument.activeElement === e || (null == n ? e.defaultValue = "" + e._wrapperState.initialValue : e.defaultValue !== "" + n && (e.defaultValue = "" + n))
    }
    function Pe(e, t) {
        return e = i({
            children: void 0
        }, t),
        (t = function(e) {
            var t = "";
            return r.Children.forEach(e, (function(e) {
                null != e && (t += e)
            }
            )),
            t
        }(t.children)) && (e.children = t),
        e
    }
    function Ce(e, t, n, r) {
        if (e = e.options,
        t) {
            t = {};
            for (var i = 0; i < n.length; i++)
                t["$" + n[i]] = !0;
            for (n = 0; n < e.length; n++)
                i = t.hasOwnProperty("$" + e[n].value),
                e[n].selected !== i && (e[n].selected = i),
                i && r && (e[n].defaultSelected = !0)
        } else {
            for (n = "" + ye(n),
            t = null,
            i = 0; i < e.length; i++) {
                if (e[i].value === n)
                    return e[i].selected = !0,
                    void (r && (e[i].defaultSelected = !0));
                null !== t || e[i].disabled || (t = e[i])
            }
            null !== t && (t.selected = !0)
        }
    }
    function Le(e, t) {
        if (null != t.dangerouslySetInnerHTML)
            throw Error(o(91));
        return i({}, t, {
            value: void 0,
            defaultValue: void 0,
            children: "" + e._wrapperState.initialValue
        })
    }
    function Re(e, t) {
        var n = t.value;
        if (null == n) {
            if (n = t.children,
            t = t.defaultValue,
            null != n) {
                if (null != t)
                    throw Error(o(92));
                if (Array.isArray(n)) {
                    if (!(1 >= n.length))
                        throw Error(o(93));
                    n = n[0]
                }
                t = n
            }
            null == t && (t = ""),
            n = t
        }
        e._wrapperState = {
            initialValue: ye(n)
        }
    }
    function ke(e, t) {
        var n = ye(t.value)
          , r = ye(t.defaultValue);
        null != n && ((n = "" + n) !== e.value && (e.value = n),
        null == t.defaultValue && e.defaultValue !== n && (e.defaultValue = n)),
        null != r && (e.defaultValue = "" + r)
    }
    function De(e) {
        var t = e.textContent;
        t === e._wrapperState.initialValue && "" !== t && null !== t && (e.value = t)
    }
    var Ie = "http://www.w3.org/1999/xhtml"
      , Oe = "http://www.w3.org/2000/svg";
    function Fe(e) {
        switch (e) {
        case "svg":
            return "http://www.w3.org/2000/svg";
        case "math":
            return "http://www.w3.org/1998/Math/MathML";
        default:
            return "http://www.w3.org/1999/xhtml"
        }
    }
    function Ne(e, t) {
        return null == e || "http://www.w3.org/1999/xhtml" === e ? Fe(t) : "http://www.w3.org/2000/svg" === e && "foreignObject" === t ? "http://www.w3.org/1999/xhtml" : e
    }
    var Be, ze = function(e) {
        return "undefined" !== typeof MSApp && MSApp.execUnsafeLocalFunction ? function(t, n, r, i) {
            MSApp.execUnsafeLocalFunction((function() {
                return e(t, n)
            }
            ))
        }
        : e
    }((function(e, t) {
        if (e.namespaceURI !== Oe || "innerHTML"in e)
            e.innerHTML = t;
        else {
            for ((Be = Be || document.createElement("div")).innerHTML = "<svg>" + t.valueOf().toString() + "</svg>",
            t = Be.firstChild; e.firstChild; )
                e.removeChild(e.firstChild);
            for (; t.firstChild; )
                e.appendChild(t.firstChild)
        }
    }
    ));
    function Ge(e, t) {
        if (t) {
            var n = e.firstChild;
            if (n && n === e.lastChild && 3 === n.nodeType)
                return void (n.nodeValue = t)
        }
        e.textContent = t
    }
    function He(e, t) {
        var n = {};
        return n[e.toLowerCase()] = t.toLowerCase(),
        n["Webkit" + e] = "webkit" + t,
        n["Moz" + e] = "moz" + t,
        n
    }
    var Ve = {
        animationend: He("Animation", "AnimationEnd"),
        animationiteration: He("Animation", "AnimationIteration"),
        animationstart: He("Animation", "AnimationStart"),
        transitionend: He("Transition", "TransitionEnd")
    }
      , je = {}
      , Ue = {};
    function We(e) {
        if (je[e])
            return je[e];
        if (!Ve[e])
            return e;
        var t, n = Ve[e];
        for (t in n)
            if (n.hasOwnProperty(t) && t in Ue)
                return je[e] = n[t];
        return e
    }
    A && (Ue = document.createElement("div").style,
    "AnimationEvent"in window || (delete Ve.animationend.animation,
    delete Ve.animationiteration.animation,
    delete Ve.animationstart.animation),
    "TransitionEvent"in window || delete Ve.transitionend.transition);
    var qe = We("animationend")
      , Xe = We("animationiteration")
      , Ye = We("animationstart")
      , Ze = We("transitionend")
      , $e = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" ")
      , Je = new ("function" === typeof WeakMap ? WeakMap : Map);
    function Ke(e) {
        var t = Je.get(e);
        return void 0 === t && (t = new Map,
        Je.set(e, t)),
        t
    }
    function Qe(e) {
        var t = e
          , n = e;
        if (e.alternate)
            for (; t.return; )
                t = t.return;
        else {
            e = t;
            do {
                0 !== (1026 & (t = e).effectTag) && (n = t.return),
                e = t.return
            } while (e)
        }
        return 3 === t.tag ? n : null
    }
    function et(e) {
        if (13 === e.tag) {
            var t = e.memoizedState;
            if (null === t && (null !== (e = e.alternate) && (t = e.memoizedState)),
            null !== t)
                return t.dehydrated
        }
        return null
    }
    function tt(e) {
        if (Qe(e) !== e)
            throw Error(o(188))
    }
    function nt(e) {
        if (!(e = function(e) {
            var t = e.alternate;
            if (!t) {
                if (null === (t = Qe(e)))
                    throw Error(o(188));
                return t !== e ? null : e
            }
            for (var n = e, r = t; ; ) {
                var i = n.return;
                if (null === i)
                    break;
                var a = i.alternate;
                if (null === a) {
                    if (null !== (r = i.return)) {
                        n = r;
                        continue
                    }
                    break
                }
                if (i.child === a.child) {
                    for (a = i.child; a; ) {
                        if (a === n)
                            return tt(i),
                            e;
                        if (a === r)
                            return tt(i),
                            t;
                        a = a.sibling
                    }
                    throw Error(o(188))
                }
                if (n.return !== r.return)
                    n = i,
                    r = a;
                else {
                    for (var s = !1, l = i.child; l; ) {
                        if (l === n) {
                            s = !0,
                            n = i,
                            r = a;
                            break
                        }
                        if (l === r) {
                            s = !0,
                            r = i,
                            n = a;
                            break
                        }
                        l = l.sibling
                    }
                    if (!s) {
                        for (l = a.child; l; ) {
                            if (l === n) {
                                s = !0,
                                n = a,
                                r = i;
                                break
                            }
                            if (l === r) {
                                s = !0,
                                r = a,
                                n = i;
                                break
                            }
                            l = l.sibling
                        }
                        if (!s)
                            throw Error(o(189))
                    }
                }
                if (n.alternate !== r)
                    throw Error(o(190))
            }
            if (3 !== n.tag)
                throw Error(o(188));
            return n.stateNode.current === n ? e : t
        }(e)))
            return null;
        for (var t = e; ; ) {
            if (5 === t.tag || 6 === t.tag)
                return t;
            if (t.child)
                t.child.return = t,
                t = t.child;
            else {
                if (t === e)
                    break;
                for (; !t.sibling; ) {
                    if (!t.return || t.return === e)
                        return null;
                    t = t.return
                }
                t.sibling.return = t.return,
                t = t.sibling
            }
        }
        return null
    }
    function rt(e, t) {
        if (null == t)
            throw Error(o(30));
        return null == e ? t : Array.isArray(e) ? Array.isArray(t) ? (e.push.apply(e, t),
        e) : (e.push(t),
        e) : Array.isArray(t) ? [e].concat(t) : [e, t]
    }
    function it(e, t, n) {
        Array.isArray(e) ? e.forEach(t, n) : e && t.call(n, e)
    }
    var at = null;
    function ot(e) {
        if (e) {
            var t = e._dispatchListeners
              , n = e._dispatchInstances;
            if (Array.isArray(t))
                for (var r = 0; r < t.length && !e.isPropagationStopped(); r++)
                    v(e, t[r], n[r]);
            else
                t && v(e, t, n);
            e._dispatchListeners = null,
            e._dispatchInstances = null,
            e.isPersistent() || e.constructor.release(e)
        }
    }
    function st(e) {
        if (null !== e && (at = rt(at, e)),
        e = at,
        at = null,
        e) {
            if (it(e, ot),
            at)
                throw Error(o(95));
            if (c)
                throw e = h,
                c = !1,
                h = null,
                e
        }
    }
    function lt(e) {
        return (e = e.target || e.srcElement || window).correspondingUseElement && (e = e.correspondingUseElement),
        3 === e.nodeType ? e.parentNode : e
    }
    function ut(e) {
        if (!A)
            return !1;
        var t = (e = "on" + e)in document;
        return t || ((t = document.createElement("div")).setAttribute(e, "return;"),
        t = "function" === typeof t[e]),
        t
    }
    var ct = [];
    function ht(e) {
        e.topLevelType = null,
        e.nativeEvent = null,
        e.targetInst = null,
        e.ancestors.length = 0,
        10 > ct.length && ct.push(e)
    }
    function pt(e, t, n, r) {
        if (ct.length) {
            var i = ct.pop();
            return i.topLevelType = e,
            i.eventSystemFlags = r,
            i.nativeEvent = t,
            i.targetInst = n,
            i
        }
        return {
            topLevelType: e,
            eventSystemFlags: r,
            nativeEvent: t,
            targetInst: n,
            ancestors: []
        }
    }
    function ft(e) {
        var t = e.targetInst
          , n = t;
        do {
            if (!n) {
                e.ancestors.push(n);
                break
            }
            var r = n;
            if (3 === r.tag)
                r = r.stateNode.containerInfo;
            else {
                for (; r.return; )
                    r = r.return;
                r = 3 !== r.tag ? null : r.stateNode.containerInfo
            }
            if (!r)
                break;
            5 !== (t = n.tag) && 6 !== t || e.ancestors.push(n),
            n = An(r)
        } while (n);
        for (n = 0; n < e.ancestors.length; n++) {
            t = e.ancestors[n];
            var i = lt(e.nativeEvent);
            r = e.topLevelType;
            var a = e.nativeEvent
              , o = e.eventSystemFlags;
            0 === n && (o |= 64);
            for (var s = null, l = 0; l < _.length; l++) {
                var u = _[l];
                u && (u = u.extractEvents(r, t, a, i, o)) && (s = rt(s, u))
            }
            st(s)
        }
    }
    function dt(e, t, n) {
        if (!n.has(e)) {
            switch (e) {
            case "scroll":
                Yt(t, "scroll", !0);
                break;
            case "focus":
            case "blur":
                Yt(t, "focus", !0),
                Yt(t, "blur", !0),
                n.set("blur", null),
                n.set("focus", null);
                break;
            case "cancel":
            case "close":
                ut(e) && Yt(t, e, !0);
                break;
            case "invalid":
            case "submit":
            case "reset":
                break;
            default:
                -1 === $e.indexOf(e) && Xt(e, t)
            }
            n.set(e, null)
        }
    }
    var mt, gt, vt, yt = !1, bt = [], xt = null, wt = null, _t = null, St = new Map, Et = new Map, Mt = [], Tt = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "), At = "focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");
    function Pt(e, t, n, r, i) {
        return {
            blockedOn: e,
            topLevelType: t,
            eventSystemFlags: 32 | n,
            nativeEvent: i,
            container: r
        }
    }
    function Ct(e, t) {
        switch (e) {
        case "focus":
        case "blur":
            xt = null;
            break;
        case "dragenter":
        case "dragleave":
            wt = null;
            break;
        case "mouseover":
        case "mouseout":
            _t = null;
            break;
        case "pointerover":
        case "pointerout":
            St.delete(t.pointerId);
            break;
        case "gotpointercapture":
        case "lostpointercapture":
            Et.delete(t.pointerId)
        }
    }
    function Lt(e, t, n, r, i, a) {
        return null === e || e.nativeEvent !== a ? (e = Pt(t, n, r, i, a),
        null !== t && (null !== (t = Pn(t)) && gt(t)),
        e) : (e.eventSystemFlags |= r,
        e)
    }
    function Rt(e) {
        var t = An(e.target);
        if (null !== t) {
            var n = Qe(t);
            if (null !== n)
                if (13 === (t = n.tag)) {
                    if (null !== (t = et(n)))
                        return e.blockedOn = t,
                        void a.unstable_runWithPriority(e.priority, (function() {
                            vt(n)
                        }
                        ))
                } else if (3 === t && n.stateNode.hydrate)
                    return void (e.blockedOn = 3 === n.tag ? n.stateNode.containerInfo : null)
        }
        e.blockedOn = null
    }
    function kt(e) {
        if (null !== e.blockedOn)
            return !1;
        var t = Kt(e.topLevelType, e.eventSystemFlags, e.container, e.nativeEvent);
        if (null !== t) {
            var n = Pn(t);
            return null !== n && gt(n),
            e.blockedOn = t,
            !1
        }
        return !0
    }
    function Dt(e, t, n) {
        kt(e) && n.delete(t)
    }
    function It() {
        for (yt = !1; 0 < bt.length; ) {
            var e = bt[0];
            if (null !== e.blockedOn) {
                null !== (e = Pn(e.blockedOn)) && mt(e);
                break
            }
            var t = Kt(e.topLevelType, e.eventSystemFlags, e.container, e.nativeEvent);
            null !== t ? e.blockedOn = t : bt.shift()
        }
        null !== xt && kt(xt) && (xt = null),
        null !== wt && kt(wt) && (wt = null),
        null !== _t && kt(_t) && (_t = null),
        St.forEach(Dt),
        Et.forEach(Dt)
    }
    function Ot(e, t) {
        e.blockedOn === t && (e.blockedOn = null,
        yt || (yt = !0,
        a.unstable_scheduleCallback(a.unstable_NormalPriority, It)))
    }
    function Ft(e) {
        function t(t) {
            return Ot(t, e)
        }
        if (0 < bt.length) {
            Ot(bt[0], e);
            for (var n = 1; n < bt.length; n++) {
                var r = bt[n];
                r.blockedOn === e && (r.blockedOn = null)
            }
        }
        for (null !== xt && Ot(xt, e),
        null !== wt && Ot(wt, e),
        null !== _t && Ot(_t, e),
        St.forEach(t),
        Et.forEach(t),
        n = 0; n < Mt.length; n++)
            (r = Mt[n]).blockedOn === e && (r.blockedOn = null);
        for (; 0 < Mt.length && null === (n = Mt[0]).blockedOn; )
            Rt(n),
            null === n.blockedOn && Mt.shift()
    }
    var Nt = {}
      , Bt = new Map
      , zt = new Map
      , Gt = ["abort", "abort", qe, "animationEnd", Xe, "animationIteration", Ye, "animationStart", "canplay", "canPlay", "canplaythrough", "canPlayThrough", "durationchange", "durationChange", "emptied", "emptied", "encrypted", "encrypted", "ended", "ended", "error", "error", "gotpointercapture", "gotPointerCapture", "load", "load", "loadeddata", "loadedData", "loadedmetadata", "loadedMetadata", "loadstart", "loadStart", "lostpointercapture", "lostPointerCapture", "playing", "playing", "progress", "progress", "seeking", "seeking", "stalled", "stalled", "suspend", "suspend", "timeupdate", "timeUpdate", Ze, "transitionEnd", "waiting", "waiting"];
    function Ht(e, t) {
        for (var n = 0; n < e.length; n += 2) {
            var r = e[n]
              , i = e[n + 1]
              , a = "on" + (i[0].toUpperCase() + i.slice(1));
            a = {
                phasedRegistrationNames: {
                    bubbled: a,
                    captured: a + "Capture"
                },
                dependencies: [r],
                eventPriority: t
            },
            zt.set(r, t),
            Bt.set(r, a),
            Nt[i] = a
        }
    }
    Ht("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "), 0),
    Ht("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "), 1),
    Ht(Gt, 2);
    for (var Vt = "change selectionchange textInput compositionstart compositionend compositionupdate".split(" "), jt = 0; jt < Vt.length; jt++)
        zt.set(Vt[jt], 0);
    var Ut = a.unstable_UserBlockingPriority
      , Wt = a.unstable_runWithPriority
      , qt = !0;
    function Xt(e, t) {
        Yt(t, e, !1)
    }
    function Yt(e, t, n) {
        var r = zt.get(t);
        switch (void 0 === r ? 2 : r) {
        case 0:
            r = Zt.bind(null, t, 1, e);
            break;
        case 1:
            r = $t.bind(null, t, 1, e);
            break;
        default:
            r = Jt.bind(null, t, 1, e)
        }
        n ? e.addEventListener(t, r, !0) : e.addEventListener(t, r, !1)
    }
    function Zt(e, t, n, r) {
        B || F();
        var i = Jt
          , a = B;
        B = !0;
        try {
            O(i, e, t, n, r)
        } finally {
            (B = a) || G()
        }
    }
    function $t(e, t, n, r) {
        Wt(Ut, Jt.bind(null, e, t, n, r))
    }
    function Jt(e, t, n, r) {
        if (qt)
            if (0 < bt.length && -1 < Tt.indexOf(e))
                e = Pt(null, e, t, n, r),
                bt.push(e);
            else {
                var i = Kt(e, t, n, r);
                if (null === i)
                    Ct(e, r);
                else if (-1 < Tt.indexOf(e))
                    e = Pt(i, e, t, n, r),
                    bt.push(e);
                else if (!function(e, t, n, r, i) {
                    switch (t) {
                    case "focus":
                        return xt = Lt(xt, e, t, n, r, i),
                        !0;
                    case "dragenter":
                        return wt = Lt(wt, e, t, n, r, i),
                        !0;
                    case "mouseover":
                        return _t = Lt(_t, e, t, n, r, i),
                        !0;
                    case "pointerover":
                        var a = i.pointerId;
                        return St.set(a, Lt(St.get(a) || null, e, t, n, r, i)),
                        !0;
                    case "gotpointercapture":
                        return a = i.pointerId,
                        Et.set(a, Lt(Et.get(a) || null, e, t, n, r, i)),
                        !0
                    }
                    return !1
                }(i, e, t, n, r)) {
                    Ct(e, r),
                    e = pt(e, r, null, t);
                    try {
                        H(ft, e)
                    } finally {
                        ht(e)
                    }
                }
            }
    }
    function Kt(e, t, n, r) {
        if (null !== (n = An(n = lt(r)))) {
            var i = Qe(n);
            if (null === i)
                n = null;
            else {
                var a = i.tag;
                if (13 === a) {
                    if (null !== (n = et(i)))
                        return n;
                    n = null
                } else if (3 === a) {
                    if (i.stateNode.hydrate)
                        return 3 === i.tag ? i.stateNode.containerInfo : null;
                    n = null
                } else
                    i !== n && (n = null)
            }
        }
        e = pt(e, r, n, t);
        try {
            H(ft, e)
        } finally {
            ht(e)
        }
        return null
    }
    var Qt = {
        animationIterationCount: !0,
        borderImageOutset: !0,
        borderImageSlice: !0,
        borderImageWidth: !0,
        boxFlex: !0,
        boxFlexGroup: !0,
        boxOrdinalGroup: !0,
        columnCount: !0,
        columns: !0,
        flex: !0,
        flexGrow: !0,
        flexPositive: !0,
        flexShrink: !0,
        flexNegative: !0,
        flexOrder: !0,
        gridArea: !0,
        gridRow: !0,
        gridRowEnd: !0,
        gridRowSpan: !0,
        gridRowStart: !0,
        gridColumn: !0,
        gridColumnEnd: !0,
        gridColumnSpan: !0,
        gridColumnStart: !0,
        fontWeight: !0,
        lineClamp: !0,
        lineHeight: !0,
        opacity: !0,
        order: !0,
        orphans: !0,
        tabSize: !0,
        widows: !0,
        zIndex: !0,
        zoom: !0,
        fillOpacity: !0,
        floodOpacity: !0,
        stopOpacity: !0,
        strokeDasharray: !0,
        strokeDashoffset: !0,
        strokeMiterlimit: !0,
        strokeOpacity: !0,
        strokeWidth: !0
    }
      , en = ["Webkit", "ms", "Moz", "O"];
    function tn(e, t, n) {
        return null == t || "boolean" === typeof t || "" === t ? "" : n || "number" !== typeof t || 0 === t || Qt.hasOwnProperty(e) && Qt[e] ? ("" + t).trim() : t + "px"
    }
    function nn(e, t) {
        for (var n in e = e.style,
        t)
            if (t.hasOwnProperty(n)) {
                var r = 0 === n.indexOf("--")
                  , i = tn(n, t[n], r);
                "float" === n && (n = "cssFloat"),
                r ? e.setProperty(n, i) : e[n] = i
            }
    }
    Object.keys(Qt).forEach((function(e) {
        en.forEach((function(t) {
            t = t + e.charAt(0).toUpperCase() + e.substring(1),
            Qt[t] = Qt[e]
        }
        ))
    }
    ));
    var rn = i({
        menuitem: !0
    }, {
        area: !0,
        base: !0,
        br: !0,
        col: !0,
        embed: !0,
        hr: !0,
        img: !0,
        input: !0,
        keygen: !0,
        link: !0,
        meta: !0,
        param: !0,
        source: !0,
        track: !0,
        wbr: !0
    });
    function an(e, t) {
        if (t) {
            if (rn[e] && (null != t.children || null != t.dangerouslySetInnerHTML))
                throw Error(o(137, e, ""));
            if (null != t.dangerouslySetInnerHTML) {
                if (null != t.children)
                    throw Error(o(60));
                if ("object" !== typeof t.dangerouslySetInnerHTML || !("__html"in t.dangerouslySetInnerHTML))
                    throw Error(o(61))
            }
            if (null != t.style && "object" !== typeof t.style)
                throw Error(o(62, ""))
        }
    }
    function on(e, t) {
        if (-1 === e.indexOf("-"))
            return "string" === typeof t.is;
        switch (e) {
        case "annotation-xml":
        case "color-profile":
        case "font-face":
        case "font-face-src":
        case "font-face-uri":
        case "font-face-format":
        case "font-face-name":
        case "missing-glyph":
            return !1;
        default:
            return !0
        }
    }
    var sn = Ie;
    function ln(e, t) {
        var n = Ke(e = 9 === e.nodeType || 11 === e.nodeType ? e : e.ownerDocument);
        t = M[t];
        for (var r = 0; r < t.length; r++)
            dt(t[r], e, n)
    }
    function un() {}
    function cn(e) {
        if ("undefined" === typeof (e = e || ("undefined" !== typeof document ? document : void 0)))
            return null;
        try {
            return e.activeElement || e.body
        } catch (t) {
            return e.body
        }
    }
    function hn(e) {
        for (; e && e.firstChild; )
            e = e.firstChild;
        return e
    }
    function pn(e, t) {
        var n, r = hn(e);
        for (e = 0; r; ) {
            if (3 === r.nodeType) {
                if (n = e + r.textContent.length,
                e <= t && n >= t)
                    return {
                        node: r,
                        offset: t - e
                    };
                e = n
            }
            e: {
                for (; r; ) {
                    if (r.nextSibling) {
                        r = r.nextSibling;
                        break e
                    }
                    r = r.parentNode
                }
                r = void 0
            }
            r = hn(r)
        }
    }
    function fn() {
        for (var e = window, t = cn(); t instanceof e.HTMLIFrameElement; ) {
            try {
                var n = "string" === typeof t.contentWindow.location.href
            } catch (r) {
                n = !1
            }
            if (!n)
                break;
            t = cn((e = t.contentWindow).document)
        }
        return t
    }
    function dn(e) {
        var t = e && e.nodeName && e.nodeName.toLowerCase();
        return t && ("input" === t && ("text" === e.type || "search" === e.type || "tel" === e.type || "url" === e.type || "password" === e.type) || "textarea" === t || "true" === e.contentEditable)
    }
    var mn = null
      , gn = null;
    function vn(e, t) {
        switch (e) {
        case "button":
        case "input":
        case "select":
        case "textarea":
            return !!t.autoFocus
        }
        return !1
    }
    function yn(e, t) {
        return "textarea" === e || "option" === e || "noscript" === e || "string" === typeof t.children || "number" === typeof t.children || "object" === typeof t.dangerouslySetInnerHTML && null !== t.dangerouslySetInnerHTML && null != t.dangerouslySetInnerHTML.__html
    }
    var bn = "function" === typeof setTimeout ? setTimeout : void 0
      , xn = "function" === typeof clearTimeout ? clearTimeout : void 0;
    function wn(e) {
        for (; null != e; e = e.nextSibling) {
            var t = e.nodeType;
            if (1 === t || 3 === t)
                break
        }
        return e
    }
    function _n(e) {
        e = e.previousSibling;
        for (var t = 0; e; ) {
            if (8 === e.nodeType) {
                var n = e.data;
                if ("$" === n || "$!" === n || "$?" === n) {
                    if (0 === t)
                        return e;
                    t--
                } else
                    "/$" === n && t++
            }
            e = e.previousSibling
        }
        return null
    }
    var Sn = Math.random().toString(36).slice(2)
      , En = "__reactInternalInstance$" + Sn
      , Mn = "__reactEventHandlers$" + Sn
      , Tn = "__reactContainere$" + Sn;
    function An(e) {
        var t = e[En];
        if (t)
            return t;
        for (var n = e.parentNode; n; ) {
            if (t = n[Tn] || n[En]) {
                if (n = t.alternate,
                null !== t.child || null !== n && null !== n.child)
                    for (e = _n(e); null !== e; ) {
                        if (n = e[En])
                            return n;
                        e = _n(e)
                    }
                return t
            }
            n = (e = n).parentNode
        }
        return null
    }
    function Pn(e) {
        return !(e = e[En] || e[Tn]) || 5 !== e.tag && 6 !== e.tag && 13 !== e.tag && 3 !== e.tag ? null : e
    }
    function Cn(e) {
        if (5 === e.tag || 6 === e.tag)
            return e.stateNode;
        throw Error(o(33))
    }
    function Ln(e) {
        return e[Mn] || null
    }
    function Rn(e) {
        do {
            e = e.return
        } while (e && 5 !== e.tag);
        return e || null
    }
    function kn(e, t) {
        var n = e.stateNode;
        if (!n)
            return null;
        var r = d(n);
        if (!r)
            return null;
        n = r[t];
        e: switch (t) {
        case "onClick":
        case "onClickCapture":
        case "onDoubleClick":
        case "onDoubleClickCapture":
        case "onMouseDown":
        case "onMouseDownCapture":
        case "onMouseMove":
        case "onMouseMoveCapture":
        case "onMouseUp":
        case "onMouseUpCapture":
        case "onMouseEnter":
            (r = !r.disabled) || (r = !("button" === (e = e.type) || "input" === e || "select" === e || "textarea" === e)),
            e = !r;
            break e;
        default:
            e = !1
        }
        if (e)
            return null;
        if (n && "function" !== typeof n)
            throw Error(o(231, t, typeof n));
        return n
    }
    function Dn(e, t, n) {
        (t = kn(e, n.dispatchConfig.phasedRegistrationNames[t])) && (n._dispatchListeners = rt(n._dispatchListeners, t),
        n._dispatchInstances = rt(n._dispatchInstances, e))
    }
    function In(e) {
        if (e && e.dispatchConfig.phasedRegistrationNames) {
            for (var t = e._targetInst, n = []; t; )
                n.push(t),
                t = Rn(t);
            for (t = n.length; 0 < t--; )
                Dn(n[t], "captured", e);
            for (t = 0; t < n.length; t++)
                Dn(n[t], "bubbled", e)
        }
    }
    function On(e, t, n) {
        e && n && n.dispatchConfig.registrationName && (t = kn(e, n.dispatchConfig.registrationName)) && (n._dispatchListeners = rt(n._dispatchListeners, t),
        n._dispatchInstances = rt(n._dispatchInstances, e))
    }
    function Fn(e) {
        e && e.dispatchConfig.registrationName && On(e._targetInst, null, e)
    }
    function Nn(e) {
        it(e, In)
    }
    var Bn = null
      , zn = null
      , Gn = null;
    function Hn() {
        if (Gn)
            return Gn;
        var e, t, n = zn, r = n.length, i = "value"in Bn ? Bn.value : Bn.textContent, a = i.length;
        for (e = 0; e < r && n[e] === i[e]; e++)
            ;
        var o = r - e;
        for (t = 1; t <= o && n[r - t] === i[a - t]; t++)
            ;
        return Gn = i.slice(e, 1 < t ? 1 - t : void 0)
    }
    function Vn() {
        return !0
    }
    function jn() {
        return !1
    }
    function Un(e, t, n, r) {
        for (var i in this.dispatchConfig = e,
        this._targetInst = t,
        this.nativeEvent = n,
        e = this.constructor.Interface)
            e.hasOwnProperty(i) && ((t = e[i]) ? this[i] = t(n) : "target" === i ? this.target = r : this[i] = n[i]);
        return this.isDefaultPrevented = (null != n.defaultPrevented ? n.defaultPrevented : !1 === n.returnValue) ? Vn : jn,
        this.isPropagationStopped = jn,
        this
    }
    function Wn(e, t, n, r) {
        if (this.eventPool.length) {
            var i = this.eventPool.pop();
            return this.call(i, e, t, n, r),
            i
        }
        return new this(e,t,n,r)
    }
    function qn(e) {
        if (!(e instanceof this))
            throw Error(o(279));
        e.destructor(),
        10 > this.eventPool.length && this.eventPool.push(e)
    }
    function Xn(e) {
        e.eventPool = [],
        e.getPooled = Wn,
        e.release = qn
    }
    i(Un.prototype, {
        preventDefault: function() {
            this.defaultPrevented = !0;
            var e = this.nativeEvent;
            e && (e.preventDefault ? e.preventDefault() : "unknown" !== typeof e.returnValue && (e.returnValue = !1),
            this.isDefaultPrevented = Vn)
        },
        stopPropagation: function() {
            var e = this.nativeEvent;
            e && (e.stopPropagation ? e.stopPropagation() : "unknown" !== typeof e.cancelBubble && (e.cancelBubble = !0),
            this.isPropagationStopped = Vn)
        },
        persist: function() {
            this.isPersistent = Vn
        },
        isPersistent: jn,
        destructor: function() {
            var e, t = this.constructor.Interface;
            for (e in t)
                this[e] = null;
            this.nativeEvent = this._targetInst = this.dispatchConfig = null,
            this.isPropagationStopped = this.isDefaultPrevented = jn,
            this._dispatchInstances = this._dispatchListeners = null
        }
    }),
    Un.Interface = {
        type: null,
        target: null,
        currentTarget: function() {
            return null
        },
        eventPhase: null,
        bubbles: null,
        cancelable: null,
        timeStamp: function(e) {
            return e.timeStamp || Date.now()
        },
        defaultPrevented: null,
        isTrusted: null
    },
    Un.extend = function(e) {
        function t() {}
        function n() {
            return r.apply(this, arguments)
        }
        var r = this;
        t.prototype = r.prototype;
        var a = new t;
        return i(a, n.prototype),
        n.prototype = a,
        n.prototype.constructor = n,
        n.Interface = i({}, r.Interface, e),
        n.extend = r.extend,
        Xn(n),
        n
    }
    ,
    Xn(Un);
    var Yn = Un.extend({
        data: null
    })
      , Zn = Un.extend({
        data: null
    })
      , $n = [9, 13, 27, 32]
      , Jn = A && "CompositionEvent"in window
      , Kn = null;
    A && "documentMode"in document && (Kn = document.documentMode);
    var Qn = A && "TextEvent"in window && !Kn
      , er = A && (!Jn || Kn && 8 < Kn && 11 >= Kn)
      , tr = String.fromCharCode(32)
      , nr = {
        beforeInput: {
            phasedRegistrationNames: {
                bubbled: "onBeforeInput",
                captured: "onBeforeInputCapture"
            },
            dependencies: ["compositionend", "keypress", "textInput", "paste"]
        },
        compositionEnd: {
            phasedRegistrationNames: {
                bubbled: "onCompositionEnd",
                captured: "onCompositionEndCapture"
            },
            dependencies: "blur compositionend keydown keypress keyup mousedown".split(" ")
        },
        compositionStart: {
            phasedRegistrationNames: {
                bubbled: "onCompositionStart",
                captured: "onCompositionStartCapture"
            },
            dependencies: "blur compositionstart keydown keypress keyup mousedown".split(" ")
        },
        compositionUpdate: {
            phasedRegistrationNames: {
                bubbled: "onCompositionUpdate",
                captured: "onCompositionUpdateCapture"
            },
            dependencies: "blur compositionupdate keydown keypress keyup mousedown".split(" ")
        }
    }
      , rr = !1;
    function ir(e, t) {
        switch (e) {
        case "keyup":
            return -1 !== $n.indexOf(t.keyCode);
        case "keydown":
            return 229 !== t.keyCode;
        case "keypress":
        case "mousedown":
        case "blur":
            return !0;
        default:
            return !1
        }
    }
    function ar(e) {
        return "object" === typeof (e = e.detail) && "data"in e ? e.data : null
    }
    var or = !1;
    var sr = {
        eventTypes: nr,
        extractEvents: function(e, t, n, r) {
            var i;
            if (Jn)
                e: {
                    switch (e) {
                    case "compositionstart":
                        var a = nr.compositionStart;
                        break e;
                    case "compositionend":
                        a = nr.compositionEnd;
                        break e;
                    case "compositionupdate":
                        a = nr.compositionUpdate;
                        break e
                    }
                    a = void 0
                }
            else
                or ? ir(e, n) && (a = nr.compositionEnd) : "keydown" === e && 229 === n.keyCode && (a = nr.compositionStart);
            return a ? (er && "ko" !== n.locale && (or || a !== nr.compositionStart ? a === nr.compositionEnd && or && (i = Hn()) : (zn = "value"in (Bn = r) ? Bn.value : Bn.textContent,
            or = !0)),
            a = Yn.getPooled(a, t, n, r),
            i ? a.data = i : null !== (i = ar(n)) && (a.data = i),
            Nn(a),
            i = a) : i = null,
            (e = Qn ? function(e, t) {
                switch (e) {
                case "compositionend":
                    return ar(t);
                case "keypress":
                    return 32 !== t.which ? null : (rr = !0,
                    tr);
                case "textInput":
                    return (e = t.data) === tr && rr ? null : e;
                default:
                    return null
                }
            }(e, n) : function(e, t) {
                if (or)
                    return "compositionend" === e || !Jn && ir(e, t) ? (e = Hn(),
                    Gn = zn = Bn = null,
                    or = !1,
                    e) : null;
                switch (e) {
                case "paste":
                    return null;
                case "keypress":
                    if (!(t.ctrlKey || t.altKey || t.metaKey) || t.ctrlKey && t.altKey) {
                        if (t.char && 1 < t.char.length)
                            return t.char;
                        if (t.which)
                            return String.fromCharCode(t.which)
                    }
                    return null;
                case "compositionend":
                    return er && "ko" !== t.locale ? null : t.data;
                default:
                    return null
                }
            }(e, n)) ? ((t = Zn.getPooled(nr.beforeInput, t, n, r)).data = e,
            Nn(t)) : t = null,
            null === i ? t : null === t ? i : [i, t]
        }
    }
      , lr = {
        color: !0,
        date: !0,
        datetime: !0,
        "datetime-local": !0,
        email: !0,
        month: !0,
        number: !0,
        password: !0,
        range: !0,
        search: !0,
        tel: !0,
        text: !0,
        time: !0,
        url: !0,
        week: !0
    };
    function ur(e) {
        var t = e && e.nodeName && e.nodeName.toLowerCase();
        return "input" === t ? !!lr[e.type] : "textarea" === t
    }
    var cr = {
        change: {
            phasedRegistrationNames: {
                bubbled: "onChange",
                captured: "onChangeCapture"
            },
            dependencies: "blur change click focus input keydown keyup selectionchange".split(" ")
        }
    };
    function hr(e, t, n) {
        return (e = Un.getPooled(cr.change, e, t, n)).type = "change",
        k(n),
        Nn(e),
        e
    }
    var pr = null
      , fr = null;
    function dr(e) {
        st(e)
    }
    function mr(e) {
        if (we(Cn(e)))
            return e
    }
    function gr(e, t) {
        if ("change" === e)
            return t
    }
    var vr = !1;
    function yr() {
        pr && (pr.detachEvent("onpropertychange", br),
        fr = pr = null)
    }
    function br(e) {
        if ("value" === e.propertyName && mr(fr))
            if (e = hr(fr, e, lt(e)),
            B)
                st(e);
            else {
                B = !0;
                try {
                    I(dr, e)
                } finally {
                    B = !1,
                    G()
                }
            }
    }
    function xr(e, t, n) {
        "focus" === e ? (yr(),
        fr = n,
        (pr = t).attachEvent("onpropertychange", br)) : "blur" === e && yr()
    }
    function wr(e) {
        if ("selectionchange" === e || "keyup" === e || "keydown" === e)
            return mr(fr)
    }
    function _r(e, t) {
        if ("click" === e)
            return mr(t)
    }
    function Sr(e, t) {
        if ("input" === e || "change" === e)
            return mr(t)
    }
    A && (vr = ut("input") && (!document.documentMode || 9 < document.documentMode));
    var Er = {
        eventTypes: cr,
        _isInputEventSupported: vr,
        extractEvents: function(e, t, n, r) {
            var i = t ? Cn(t) : window
              , a = i.nodeName && i.nodeName.toLowerCase();
            if ("select" === a || "input" === a && "file" === i.type)
                var o = gr;
            else if (ur(i))
                if (vr)
                    o = Sr;
                else {
                    o = wr;
                    var s = xr
                }
            else
                (a = i.nodeName) && "input" === a.toLowerCase() && ("checkbox" === i.type || "radio" === i.type) && (o = _r);
            if (o && (o = o(e, t)))
                return hr(o, n, r);
            s && s(e, i, t),
            "blur" === e && (e = i._wrapperState) && e.controlled && "number" === i.type && Ae(i, "number", i.value)
        }
    }
      , Mr = Un.extend({
        view: null,
        detail: null
    })
      , Tr = {
        Alt: "altKey",
        Control: "ctrlKey",
        Meta: "metaKey",
        Shift: "shiftKey"
    };
    function Ar(e) {
        var t = this.nativeEvent;
        return t.getModifierState ? t.getModifierState(e) : !!(e = Tr[e]) && !!t[e]
    }
    function Pr() {
        return Ar
    }
    var Cr = 0
      , Lr = 0
      , Rr = !1
      , kr = !1
      , Dr = Mr.extend({
        screenX: null,
        screenY: null,
        clientX: null,
        clientY: null,
        pageX: null,
        pageY: null,
        ctrlKey: null,
        shiftKey: null,
        altKey: null,
        metaKey: null,
        getModifierState: Pr,
        button: null,
        buttons: null,
        relatedTarget: function(e) {
            return e.relatedTarget || (e.fromElement === e.srcElement ? e.toElement : e.fromElement)
        },
        movementX: function(e) {
            if ("movementX"in e)
                return e.movementX;
            var t = Cr;
            return Cr = e.screenX,
            Rr ? "mousemove" === e.type ? e.screenX - t : 0 : (Rr = !0,
            0)
        },
        movementY: function(e) {
            if ("movementY"in e)
                return e.movementY;
            var t = Lr;
            return Lr = e.screenY,
            kr ? "mousemove" === e.type ? e.screenY - t : 0 : (kr = !0,
            0)
        }
    })
      , Ir = Dr.extend({
        pointerId: null,
        width: null,
        height: null,
        pressure: null,
        tangentialPressure: null,
        tiltX: null,
        tiltY: null,
        twist: null,
        pointerType: null,
        isPrimary: null
    })
      , Or = {
        mouseEnter: {
            registrationName: "onMouseEnter",
            dependencies: ["mouseout", "mouseover"]
        },
        mouseLeave: {
            registrationName: "onMouseLeave",
            dependencies: ["mouseout", "mouseover"]
        },
        pointerEnter: {
            registrationName: "onPointerEnter",
            dependencies: ["pointerout", "pointerover"]
        },
        pointerLeave: {
            registrationName: "onPointerLeave",
            dependencies: ["pointerout", "pointerover"]
        }
    }
      , Fr = {
        eventTypes: Or,
        extractEvents: function(e, t, n, r, i) {
            var a = "mouseover" === e || "pointerover" === e
              , o = "mouseout" === e || "pointerout" === e;
            if (a && 0 === (32 & i) && (n.relatedTarget || n.fromElement) || !o && !a)
                return null;
            (a = r.window === r ? r : (a = r.ownerDocument) ? a.defaultView || a.parentWindow : window,
            o) ? (o = t,
            null !== (t = (t = n.relatedTarget || n.toElement) ? An(t) : null) && (t !== Qe(t) || 5 !== t.tag && 6 !== t.tag) && (t = null)) : o = null;
            if (o === t)
                return null;
            if ("mouseout" === e || "mouseover" === e)
                var s = Dr
                  , l = Or.mouseLeave
                  , u = Or.mouseEnter
                  , c = "mouse";
            else
                "pointerout" !== e && "pointerover" !== e || (s = Ir,
                l = Or.pointerLeave,
                u = Or.pointerEnter,
                c = "pointer");
            if (e = null == o ? a : Cn(o),
            a = null == t ? a : Cn(t),
            (l = s.getPooled(l, o, n, r)).type = c + "leave",
            l.target = e,
            l.relatedTarget = a,
            (n = s.getPooled(u, t, n, r)).type = c + "enter",
            n.target = a,
            n.relatedTarget = e,
            c = t,
            (r = o) && c)
                e: {
                    for (u = c,
                    o = 0,
                    e = s = r; e; e = Rn(e))
                        o++;
                    for (e = 0,
                    t = u; t; t = Rn(t))
                        e++;
                    for (; 0 < o - e; )
                        s = Rn(s),
                        o--;
                    for (; 0 < e - o; )
                        u = Rn(u),
                        e--;
                    for (; o--; ) {
                        if (s === u || s === u.alternate)
                            break e;
                        s = Rn(s),
                        u = Rn(u)
                    }
                    s = null
                }
            else
                s = null;
            for (u = s,
            s = []; r && r !== u && (null === (o = r.alternate) || o !== u); )
                s.push(r),
                r = Rn(r);
            for (r = []; c && c !== u && (null === (o = c.alternate) || o !== u); )
                r.push(c),
                c = Rn(c);
            for (c = 0; c < s.length; c++)
                On(s[c], "bubbled", l);
            for (c = r.length; 0 < c--; )
                On(r[c], "captured", n);
            return 0 === (64 & i) ? [l] : [l, n]
        }
    };
    var Nr = "function" === typeof Object.is ? Object.is : function(e, t) {
        return e === t && (0 !== e || 1 / e === 1 / t) || e !== e && t !== t
    }
      , Br = Object.prototype.hasOwnProperty;
    function zr(e, t) {
        if (Nr(e, t))
            return !0;
        if ("object" !== typeof e || null === e || "object" !== typeof t || null === t)
            return !1;
        var n = Object.keys(e)
          , r = Object.keys(t);
        if (n.length !== r.length)
            return !1;
        for (r = 0; r < n.length; r++)
            if (!Br.call(t, n[r]) || !Nr(e[n[r]], t[n[r]]))
                return !1;
        return !0
    }
    var Gr = A && "documentMode"in document && 11 >= document.documentMode
      , Hr = {
        select: {
            phasedRegistrationNames: {
                bubbled: "onSelect",
                captured: "onSelectCapture"
            },
            dependencies: "blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")
        }
    }
      , Vr = null
      , jr = null
      , Ur = null
      , Wr = !1;
    function qr(e, t) {
        var n = t.window === t ? t.document : 9 === t.nodeType ? t : t.ownerDocument;
        return Wr || null == Vr || Vr !== cn(n) ? null : ("selectionStart"in (n = Vr) && dn(n) ? n = {
            start: n.selectionStart,
            end: n.selectionEnd
        } : n = {
            anchorNode: (n = (n.ownerDocument && n.ownerDocument.defaultView || window).getSelection()).anchorNode,
            anchorOffset: n.anchorOffset,
            focusNode: n.focusNode,
            focusOffset: n.focusOffset
        },
        Ur && zr(Ur, n) ? null : (Ur = n,
        (e = Un.getPooled(Hr.select, jr, e, t)).type = "select",
        e.target = Vr,
        Nn(e),
        e))
    }
    var Xr = {
        eventTypes: Hr,
        extractEvents: function(e, t, n, r, i, a) {
            if (!(a = !(i = a || (r.window === r ? r.document : 9 === r.nodeType ? r : r.ownerDocument)))) {
                e: {
                    i = Ke(i),
                    a = M.onSelect;
                    for (var o = 0; o < a.length; o++)
                        if (!i.has(a[o])) {
                            i = !1;
                            break e
                        }
                    i = !0
                }
                a = !i
            }
            if (a)
                return null;
            switch (i = t ? Cn(t) : window,
            e) {
            case "focus":
                (ur(i) || "true" === i.contentEditable) && (Vr = i,
                jr = t,
                Ur = null);
                break;
            case "blur":
                Ur = jr = Vr = null;
                break;
            case "mousedown":
                Wr = !0;
                break;
            case "contextmenu":
            case "mouseup":
            case "dragend":
                return Wr = !1,
                qr(n, r);
            case "selectionchange":
                if (Gr)
                    break;
            case "keydown":
            case "keyup":
                return qr(n, r)
            }
            return null
        }
    }
      , Yr = Un.extend({
        animationName: null,
        elapsedTime: null,
        pseudoElement: null
    })
      , Zr = Un.extend({
        clipboardData: function(e) {
            return "clipboardData"in e ? e.clipboardData : window.clipboardData
        }
    })
      , $r = Mr.extend({
        relatedTarget: null
    });
    function Jr(e) {
        var t = e.keyCode;
        return "charCode"in e ? 0 === (e = e.charCode) && 13 === t && (e = 13) : e = t,
        10 === e && (e = 13),
        32 <= e || 13 === e ? e : 0
    }
    var Kr = {
        Esc: "Escape",
        Spacebar: " ",
        Left: "ArrowLeft",
        Up: "ArrowUp",
        Right: "ArrowRight",
        Down: "ArrowDown",
        Del: "Delete",
        Win: "OS",
        Menu: "ContextMenu",
        Apps: "ContextMenu",
        Scroll: "ScrollLock",
        MozPrintableKey: "Unidentified"
    }
      , Qr = {
        8: "Backspace",
        9: "Tab",
        12: "Clear",
        13: "Enter",
        16: "Shift",
        17: "Control",
        18: "Alt",
        19: "Pause",
        20: "CapsLock",
        27: "Escape",
        32: " ",
        33: "PageUp",
        34: "PageDown",
        35: "End",
        36: "Home",
        37: "ArrowLeft",
        38: "ArrowUp",
        39: "ArrowRight",
        40: "ArrowDown",
        45: "Insert",
        46: "Delete",
        112: "F1",
        113: "F2",
        114: "F3",
        115: "F4",
        116: "F5",
        117: "F6",
        118: "F7",
        119: "F8",
        120: "F9",
        121: "F10",
        122: "F11",
        123: "F12",
        144: "NumLock",
        145: "ScrollLock",
        224: "Meta"
    }
      , ei = Mr.extend({
        key: function(e) {
            if (e.key) {
                var t = Kr[e.key] || e.key;
                if ("Unidentified" !== t)
                    return t
            }
            return "keypress" === e.type ? 13 === (e = Jr(e)) ? "Enter" : String.fromCharCode(e) : "keydown" === e.type || "keyup" === e.type ? Qr[e.keyCode] || "Unidentified" : ""
        },
        location: null,
        ctrlKey: null,
        shiftKey: null,
        altKey: null,
        metaKey: null,
        repeat: null,
        locale: null,
        getModifierState: Pr,
        charCode: function(e) {
            return "keypress" === e.type ? Jr(e) : 0
        },
        keyCode: function(e) {
            return "keydown" === e.type || "keyup" === e.type ? e.keyCode : 0
        },
        which: function(e) {
            return "keypress" === e.type ? Jr(e) : "keydown" === e.type || "keyup" === e.type ? e.keyCode : 0
        }
    })
      , ti = Dr.extend({
        dataTransfer: null
    })
      , ni = Mr.extend({
        touches: null,
        targetTouches: null,
        changedTouches: null,
        altKey: null,
        metaKey: null,
        ctrlKey: null,
        shiftKey: null,
        getModifierState: Pr
    })
      , ri = Un.extend({
        propertyName: null,
        elapsedTime: null,
        pseudoElement: null
    })
      , ii = Dr.extend({
        deltaX: function(e) {
            return "deltaX"in e ? e.deltaX : "wheelDeltaX"in e ? -e.wheelDeltaX : 0
        },
        deltaY: function(e) {
            return "deltaY"in e ? e.deltaY : "wheelDeltaY"in e ? -e.wheelDeltaY : "wheelDelta"in e ? -e.wheelDelta : 0
        },
        deltaZ: null,
        deltaMode: null
    })
      , ai = {
        eventTypes: Nt,
        extractEvents: function(e, t, n, r) {
            var i = Bt.get(e);
            if (!i)
                return null;
            switch (e) {
            case "keypress":
                if (0 === Jr(n))
                    return null;
            case "keydown":
            case "keyup":
                e = ei;
                break;
            case "blur":
            case "focus":
                e = $r;
                break;
            case "click":
                if (2 === n.button)
                    return null;
            case "auxclick":
            case "dblclick":
            case "mousedown":
            case "mousemove":
            case "mouseup":
            case "mouseout":
            case "mouseover":
            case "contextmenu":
                e = Dr;
                break;
            case "drag":
            case "dragend":
            case "dragenter":
            case "dragexit":
            case "dragleave":
            case "dragover":
            case "dragstart":
            case "drop":
                e = ti;
                break;
            case "touchcancel":
            case "touchend":
            case "touchmove":
            case "touchstart":
                e = ni;
                break;
            case qe:
            case Xe:
            case Ye:
                e = Yr;
                break;
            case Ze:
                e = ri;
                break;
            case "scroll":
                e = Mr;
                break;
            case "wheel":
                e = ii;
                break;
            case "copy":
            case "cut":
            case "paste":
                e = Zr;
                break;
            case "gotpointercapture":
            case "lostpointercapture":
            case "pointercancel":
            case "pointerdown":
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "pointerup":
                e = Ir;
                break;
            default:
                e = Un
            }
            return Nn(t = e.getPooled(i, t, n, r)),
            t
        }
    };
    if (y)
        throw Error(o(101));
    y = Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),
    x(),
    d = Ln,
    m = Pn,
    g = Cn,
    T({
        SimpleEventPlugin: ai,
        EnterLeaveEventPlugin: Fr,
        ChangeEventPlugin: Er,
        SelectEventPlugin: Xr,
        BeforeInputEventPlugin: sr
    });
    var oi = []
      , si = -1;
    function li(e) {
        0 > si || (e.current = oi[si],
        oi[si] = null,
        si--)
    }
    function ui(e, t) {
        si++,
        oi[si] = e.current,
        e.current = t
    }
    var ci = {}
      , hi = {
        current: ci
    }
      , pi = {
        current: !1
    }
      , fi = ci;
    function di(e, t) {
        var n = e.type.contextTypes;
        if (!n)
            return ci;
        var r = e.stateNode;
        if (r && r.__reactInternalMemoizedUnmaskedChildContext === t)
            return r.__reactInternalMemoizedMaskedChildContext;
        var i, a = {};
        for (i in n)
            a[i] = t[i];
        return r && ((e = e.stateNode).__reactInternalMemoizedUnmaskedChildContext = t,
        e.__reactInternalMemoizedMaskedChildContext = a),
        a
    }
    function mi(e) {
        return null !== (e = e.childContextTypes) && void 0 !== e
    }
    function gi() {
        li(pi),
        li(hi)
    }
    function vi(e, t, n) {
        if (hi.current !== ci)
            throw Error(o(168));
        ui(hi, t),
        ui(pi, n)
    }
    function yi(e, t, n) {
        var r = e.stateNode;
        if (e = t.childContextTypes,
        "function" !== typeof r.getChildContext)
            return n;
        for (var a in r = r.getChildContext())
            if (!(a in e))
                throw Error(o(108, ge(t) || "Unknown", a));
        return i({}, n, {}, r)
    }
    function bi(e) {
        return e = (e = e.stateNode) && e.__reactInternalMemoizedMergedChildContext || ci,
        fi = hi.current,
        ui(hi, e),
        ui(pi, pi.current),
        !0
    }
    function xi(e, t, n) {
        var r = e.stateNode;
        if (!r)
            throw Error(o(169));
        n ? (e = yi(e, t, fi),
        r.__reactInternalMemoizedMergedChildContext = e,
        li(pi),
        li(hi),
        ui(hi, e)) : li(pi),
        ui(pi, n)
    }
    var wi = a.unstable_runWithPriority
      , _i = a.unstable_scheduleCallback
      , Si = a.unstable_cancelCallback
      , Ei = a.unstable_requestPaint
      , Mi = a.unstable_now
      , Ti = a.unstable_getCurrentPriorityLevel
      , Ai = a.unstable_ImmediatePriority
      , Pi = a.unstable_UserBlockingPriority
      , Ci = a.unstable_NormalPriority
      , Li = a.unstable_LowPriority
      , Ri = a.unstable_IdlePriority
      , ki = {}
      , Di = a.unstable_shouldYield
      , Ii = void 0 !== Ei ? Ei : function() {}
      , Oi = null
      , Fi = null
      , Ni = !1
      , Bi = Mi()
      , zi = 1e4 > Bi ? Mi : function() {
        return Mi() - Bi
    }
    ;
    function Gi() {
        switch (Ti()) {
        case Ai:
            return 99;
        case Pi:
            return 98;
        case Ci:
            return 97;
        case Li:
            return 96;
        case Ri:
            return 95;
        default:
            throw Error(o(332))
        }
    }
    function Hi(e) {
        switch (e) {
        case 99:
            return Ai;
        case 98:
            return Pi;
        case 97:
            return Ci;
        case 96:
            return Li;
        case 95:
            return Ri;
        default:
            throw Error(o(332))
        }
    }
    function Vi(e, t) {
        return e = Hi(e),
        wi(e, t)
    }
    function ji(e, t, n) {
        return e = Hi(e),
        _i(e, t, n)
    }
    function Ui(e) {
        return null === Oi ? (Oi = [e],
        Fi = _i(Ai, qi)) : Oi.push(e),
        ki
    }
    function Wi() {
        if (null !== Fi) {
            var e = Fi;
            Fi = null,
            Si(e)
        }
        qi()
    }
    function qi() {
        if (!Ni && null !== Oi) {
            Ni = !0;
            var e = 0;
            try {
                var t = Oi;
                Vi(99, (function() {
                    for (; e < t.length; e++) {
                        var n = t[e];
                        do {
                            n = n(!0)
                        } while (null !== n)
                    }
                }
                )),
                Oi = null
            } catch (n) {
                throw null !== Oi && (Oi = Oi.slice(e + 1)),
                _i(Ai, Wi),
                n
            } finally {
                Ni = !1
            }
        }
    }
    function Xi(e, t, n) {
        return 1073741821 - (1 + ((1073741821 - e + t / 10) / (n /= 10) | 0)) * n
    }
    function Yi(e, t) {
        if (e && e.defaultProps)
            for (var n in t = i({}, t),
            e = e.defaultProps)
                void 0 === t[n] && (t[n] = e[n]);
        return t
    }
    var Zi = {
        current: null
    }
      , $i = null
      , Ji = null
      , Ki = null;
    function Qi() {
        Ki = Ji = $i = null
    }
    function ea(e) {
        var t = Zi.current;
        li(Zi),
        e.type._context._currentValue = t
    }
    function ta(e, t) {
        for (; null !== e; ) {
            var n = e.alternate;
            if (e.childExpirationTime < t)
                e.childExpirationTime = t,
                null !== n && n.childExpirationTime < t && (n.childExpirationTime = t);
            else {
                if (!(null !== n && n.childExpirationTime < t))
                    break;
                n.childExpirationTime = t
            }
            e = e.return
        }
    }
    function na(e, t) {
        $i = e,
        Ki = Ji = null,
        null !== (e = e.dependencies) && null !== e.firstContext && (e.expirationTime >= t && (Lo = !0),
        e.firstContext = null)
    }
    function ra(e, t) {
        if (Ki !== e && !1 !== t && 0 !== t)
            if ("number" === typeof t && 1073741823 !== t || (Ki = e,
            t = 1073741823),
            t = {
                context: e,
                observedBits: t,
                next: null
            },
            null === Ji) {
                if (null === $i)
                    throw Error(o(308));
                Ji = t,
                $i.dependencies = {
                    expirationTime: 0,
                    firstContext: t,
                    responders: null
                }
            } else
                Ji = Ji.next = t;
        return e._currentValue
    }
    var ia = !1;
    function aa(e) {
        e.updateQueue = {
            baseState: e.memoizedState,
            baseQueue: null,
            shared: {
                pending: null
            },
            effects: null
        }
    }
    function oa(e, t) {
        e = e.updateQueue,
        t.updateQueue === e && (t.updateQueue = {
            baseState: e.baseState,
            baseQueue: e.baseQueue,
            shared: e.shared,
            effects: e.effects
        })
    }
    function sa(e, t) {
        return (e = {
            expirationTime: e,
            suspenseConfig: t,
            tag: 0,
            payload: null,
            callback: null,
            next: null
        }).next = e
    }
    function la(e, t) {
        if (null !== (e = e.updateQueue)) {
            var n = (e = e.shared).pending;
            null === n ? t.next = t : (t.next = n.next,
            n.next = t),
            e.pending = t
        }
    }
    function ua(e, t) {
        var n = e.alternate;
        null !== n && oa(n, e),
        null === (n = (e = e.updateQueue).baseQueue) ? (e.baseQueue = t.next = t,
        t.next = t) : (t.next = n.next,
        n.next = t)
    }
    function ca(e, t, n, r) {
        var a = e.updateQueue;
        ia = !1;
        var o = a.baseQueue
          , s = a.shared.pending;
        if (null !== s) {
            if (null !== o) {
                var l = o.next;
                o.next = s.next,
                s.next = l
            }
            o = s,
            a.shared.pending = null,
            null !== (l = e.alternate) && (null !== (l = l.updateQueue) && (l.baseQueue = s))
        }
        if (null !== o) {
            l = o.next;
            var u = a.baseState
              , c = 0
              , h = null
              , p = null
              , f = null;
            if (null !== l)
                for (var d = l; ; ) {
                    if ((s = d.expirationTime) < r) {
                        var m = {
                            expirationTime: d.expirationTime,
                            suspenseConfig: d.suspenseConfig,
                            tag: d.tag,
                            payload: d.payload,
                            callback: d.callback,
                            next: null
                        };
                        null === f ? (p = f = m,
                        h = u) : f = f.next = m,
                        s > c && (c = s)
                    } else {
                        null !== f && (f = f.next = {
                            expirationTime: 1073741823,
                            suspenseConfig: d.suspenseConfig,
                            tag: d.tag,
                            payload: d.payload,
                            callback: d.callback,
                            next: null
                        }),
                        al(s, d.suspenseConfig);
                        e: {
                            var g = e
                              , v = d;
                            switch (s = t,
                            m = n,
                            v.tag) {
                            case 1:
                                if ("function" === typeof (g = v.payload)) {
                                    u = g.call(m, u, s);
                                    break e
                                }
                                u = g;
                                break e;
                            case 3:
                                g.effectTag = -4097 & g.effectTag | 64;
                            case 0:
                                if (null === (s = "function" === typeof (g = v.payload) ? g.call(m, u, s) : g) || void 0 === s)
                                    break e;
                                u = i({}, u, s);
                                break e;
                            case 2:
                                ia = !0
                            }
                        }
                        null !== d.callback && (e.effectTag |= 32,
                        null === (s = a.effects) ? a.effects = [d] : s.push(d))
                    }
                    if (null === (d = d.next) || d === l) {
                        if (null === (s = a.shared.pending))
                            break;
                        d = o.next = s.next,
                        s.next = l,
                        a.baseQueue = o = s,
                        a.shared.pending = null
                    }
                }
            null === f ? h = u : f.next = p,
            a.baseState = h,
            a.baseQueue = f,
            ol(c),
            e.expirationTime = c,
            e.memoizedState = u
        }
    }
    function ha(e, t, n) {
        if (e = t.effects,
        t.effects = null,
        null !== e)
            for (t = 0; t < e.length; t++) {
                var r = e[t]
                  , i = r.callback;
                if (null !== i) {
                    if (r.callback = null,
                    r = i,
                    i = n,
                    "function" !== typeof r)
                        throw Error(o(191, r));
                    r.call(i)
                }
            }
    }
    var pa = $.ReactCurrentBatchConfig
      , fa = (new r.Component).refs;
    function da(e, t, n, r) {
        n = null === (n = n(r, t = e.memoizedState)) || void 0 === n ? t : i({}, t, n),
        e.memoizedState = n,
        0 === e.expirationTime && (e.updateQueue.baseState = n)
    }
    var ma = {
        isMounted: function(e) {
            return !!(e = e._reactInternalFiber) && Qe(e) === e
        },
        enqueueSetState: function(e, t, n) {
            e = e._reactInternalFiber;
            var r = qs()
              , i = pa.suspense;
            (i = sa(r = Xs(r, e, i), i)).payload = t,
            void 0 !== n && null !== n && (i.callback = n),
            la(e, i),
            Ys(e, r)
        },
        enqueueReplaceState: function(e, t, n) {
            e = e._reactInternalFiber;
            var r = qs()
              , i = pa.suspense;
            (i = sa(r = Xs(r, e, i), i)).tag = 1,
            i.payload = t,
            void 0 !== n && null !== n && (i.callback = n),
            la(e, i),
            Ys(e, r)
        },
        enqueueForceUpdate: function(e, t) {
            e = e._reactInternalFiber;
            var n = qs()
              , r = pa.suspense;
            (r = sa(n = Xs(n, e, r), r)).tag = 2,
            void 0 !== t && null !== t && (r.callback = t),
            la(e, r),
            Ys(e, n)
        }
    };
    function ga(e, t, n, r, i, a, o) {
        return "function" === typeof (e = e.stateNode).shouldComponentUpdate ? e.shouldComponentUpdate(r, a, o) : !t.prototype || !t.prototype.isPureReactComponent || (!zr(n, r) || !zr(i, a))
    }
    function va(e, t, n) {
        var r = !1
          , i = ci
          , a = t.contextType;
        return "object" === typeof a && null !== a ? a = ra(a) : (i = mi(t) ? fi : hi.current,
        a = (r = null !== (r = t.contextTypes) && void 0 !== r) ? di(e, i) : ci),
        t = new t(n,a),
        e.memoizedState = null !== t.state && void 0 !== t.state ? t.state : null,
        t.updater = ma,
        e.stateNode = t,
        t._reactInternalFiber = e,
        r && ((e = e.stateNode).__reactInternalMemoizedUnmaskedChildContext = i,
        e.__reactInternalMemoizedMaskedChildContext = a),
        t
    }
    function ya(e, t, n, r) {
        e = t.state,
        "function" === typeof t.componentWillReceiveProps && t.componentWillReceiveProps(n, r),
        "function" === typeof t.UNSAFE_componentWillReceiveProps && t.UNSAFE_componentWillReceiveProps(n, r),
        t.state !== e && ma.enqueueReplaceState(t, t.state, null)
    }
    function ba(e, t, n, r) {
        var i = e.stateNode;
        i.props = n,
        i.state = e.memoizedState,
        i.refs = fa,
        aa(e);
        var a = t.contextType;
        "object" === typeof a && null !== a ? i.context = ra(a) : (a = mi(t) ? fi : hi.current,
        i.context = di(e, a)),
        ca(e, n, i, r),
        i.state = e.memoizedState,
        "function" === typeof (a = t.getDerivedStateFromProps) && (da(e, t, a, n),
        i.state = e.memoizedState),
        "function" === typeof t.getDerivedStateFromProps || "function" === typeof i.getSnapshotBeforeUpdate || "function" !== typeof i.UNSAFE_componentWillMount && "function" !== typeof i.componentWillMount || (t = i.state,
        "function" === typeof i.componentWillMount && i.componentWillMount(),
        "function" === typeof i.UNSAFE_componentWillMount && i.UNSAFE_componentWillMount(),
        t !== i.state && ma.enqueueReplaceState(i, i.state, null),
        ca(e, n, i, r),
        i.state = e.memoizedState),
        "function" === typeof i.componentDidMount && (e.effectTag |= 4)
    }
    var xa = Array.isArray;
    function wa(e, t, n) {
        if (null !== (e = n.ref) && "function" !== typeof e && "object" !== typeof e) {
            if (n._owner) {
                if (n = n._owner) {
                    if (1 !== n.tag)
                        throw Error(o(309));
                    var r = n.stateNode
                }
                if (!r)
                    throw Error(o(147, e));
                var i = "" + e;
                return null !== t && null !== t.ref && "function" === typeof t.ref && t.ref._stringRef === i ? t.ref : ((t = function(e) {
                    var t = r.refs;
                    t === fa && (t = r.refs = {}),
                    null === e ? delete t[i] : t[i] = e
                }
                )._stringRef = i,
                t)
            }
            if ("string" !== typeof e)
                throw Error(o(284));
            if (!n._owner)
                throw Error(o(290, e))
        }
        return e
    }
    function _a(e, t) {
        if ("textarea" !== e.type)
            throw Error(o(31, "[object Object]" === Object.prototype.toString.call(t) ? "object with keys {" + Object.keys(t).join(", ") + "}" : t, ""))
    }
    function Sa(e) {
        function t(t, n) {
            if (e) {
                var r = t.lastEffect;
                null !== r ? (r.nextEffect = n,
                t.lastEffect = n) : t.firstEffect = t.lastEffect = n,
                n.nextEffect = null,
                n.effectTag = 8
            }
        }
        function n(n, r) {
            if (!e)
                return null;
            for (; null !== r; )
                t(n, r),
                r = r.sibling;
            return null
        }
        function r(e, t) {
            for (e = new Map; null !== t; )
                null !== t.key ? e.set(t.key, t) : e.set(t.index, t),
                t = t.sibling;
            return e
        }
        function i(e, t) {
            return (e = Tl(e, t)).index = 0,
            e.sibling = null,
            e
        }
        function a(t, n, r) {
            return t.index = r,
            e ? null !== (r = t.alternate) ? (r = r.index) < n ? (t.effectTag = 2,
            n) : r : (t.effectTag = 2,
            n) : n
        }
        function s(t) {
            return e && null === t.alternate && (t.effectTag = 2),
            t
        }
        function l(e, t, n, r) {
            return null === t || 6 !== t.tag ? ((t = Cl(n, e.mode, r)).return = e,
            t) : ((t = i(t, n)).return = e,
            t)
        }
        function u(e, t, n, r) {
            return null !== t && t.elementType === n.type ? ((r = i(t, n.props)).ref = wa(e, t, n),
            r.return = e,
            r) : ((r = Al(n.type, n.key, n.props, null, e.mode, r)).ref = wa(e, t, n),
            r.return = e,
            r)
        }
        function c(e, t, n, r) {
            return null === t || 4 !== t.tag || t.stateNode.containerInfo !== n.containerInfo || t.stateNode.implementation !== n.implementation ? ((t = Ll(n, e.mode, r)).return = e,
            t) : ((t = i(t, n.children || [])).return = e,
            t)
        }
        function h(e, t, n, r, a) {
            return null === t || 7 !== t.tag ? ((t = Pl(n, e.mode, r, a)).return = e,
            t) : ((t = i(t, n)).return = e,
            t)
        }
        function p(e, t, n) {
            if ("string" === typeof t || "number" === typeof t)
                return (t = Cl("" + t, e.mode, n)).return = e,
                t;
            if ("object" === typeof t && null !== t) {
                switch (t.$$typeof) {
                case ee:
                    return (n = Al(t.type, t.key, t.props, null, e.mode, n)).ref = wa(e, null, t),
                    n.return = e,
                    n;
                case te:
                    return (t = Ll(t, e.mode, n)).return = e,
                    t
                }
                if (xa(t) || me(t))
                    return (t = Pl(t, e.mode, n, null)).return = e,
                    t;
                _a(e, t)
            }
            return null
        }
        function f(e, t, n, r) {
            var i = null !== t ? t.key : null;
            if ("string" === typeof n || "number" === typeof n)
                return null !== i ? null : l(e, t, "" + n, r);
            if ("object" === typeof n && null !== n) {
                switch (n.$$typeof) {
                case ee:
                    return n.key === i ? n.type === ne ? h(e, t, n.props.children, r, i) : u(e, t, n, r) : null;
                case te:
                    return n.key === i ? c(e, t, n, r) : null
                }
                if (xa(n) || me(n))
                    return null !== i ? null : h(e, t, n, r, null);
                _a(e, n)
            }
            return null
        }
        function d(e, t, n, r, i) {
            if ("string" === typeof r || "number" === typeof r)
                return l(t, e = e.get(n) || null, "" + r, i);
            if ("object" === typeof r && null !== r) {
                switch (r.$$typeof) {
                case ee:
                    return e = e.get(null === r.key ? n : r.key) || null,
                    r.type === ne ? h(t, e, r.props.children, i, r.key) : u(t, e, r, i);
                case te:
                    return c(t, e = e.get(null === r.key ? n : r.key) || null, r, i)
                }
                if (xa(r) || me(r))
                    return h(t, e = e.get(n) || null, r, i, null);
                _a(t, r)
            }
            return null
        }
        function m(i, o, s, l) {
            for (var u = null, c = null, h = o, m = o = 0, g = null; null !== h && m < s.length; m++) {
                h.index > m ? (g = h,
                h = null) : g = h.sibling;
                var v = f(i, h, s[m], l);
                if (null === v) {
                    null === h && (h = g);
                    break
                }
                e && h && null === v.alternate && t(i, h),
                o = a(v, o, m),
                null === c ? u = v : c.sibling = v,
                c = v,
                h = g
            }
            if (m === s.length)
                return n(i, h),
                u;
            if (null === h) {
                for (; m < s.length; m++)
                    null !== (h = p(i, s[m], l)) && (o = a(h, o, m),
                    null === c ? u = h : c.sibling = h,
                    c = h);
                return u
            }
            for (h = r(i, h); m < s.length; m++)
                null !== (g = d(h, i, m, s[m], l)) && (e && null !== g.alternate && h.delete(null === g.key ? m : g.key),
                o = a(g, o, m),
                null === c ? u = g : c.sibling = g,
                c = g);
            return e && h.forEach((function(e) {
                return t(i, e)
            }
            )),
            u
        }
        function g(i, s, l, u) {
            var c = me(l);
            if ("function" !== typeof c)
                throw Error(o(150));
            if (null == (l = c.call(l)))
                throw Error(o(151));
            for (var h = c = null, m = s, g = s = 0, v = null, y = l.next(); null !== m && !y.done; g++,
            y = l.next()) {
                m.index > g ? (v = m,
                m = null) : v = m.sibling;
                var b = f(i, m, y.value, u);
                if (null === b) {
                    null === m && (m = v);
                    break
                }
                e && m && null === b.alternate && t(i, m),
                s = a(b, s, g),
                null === h ? c = b : h.sibling = b,
                h = b,
                m = v
            }
            if (y.done)
                return n(i, m),
                c;
            if (null === m) {
                for (; !y.done; g++,
                y = l.next())
                    null !== (y = p(i, y.value, u)) && (s = a(y, s, g),
                    null === h ? c = y : h.sibling = y,
                    h = y);
                return c
            }
            for (m = r(i, m); !y.done; g++,
            y = l.next())
                null !== (y = d(m, i, g, y.value, u)) && (e && null !== y.alternate && m.delete(null === y.key ? g : y.key),
                s = a(y, s, g),
                null === h ? c = y : h.sibling = y,
                h = y);
            return e && m.forEach((function(e) {
                return t(i, e)
            }
            )),
            c
        }
        return function(e, r, a, l) {
            var u = "object" === typeof a && null !== a && a.type === ne && null === a.key;
            u && (a = a.props.children);
            var c = "object" === typeof a && null !== a;
            if (c)
                switch (a.$$typeof) {
                case ee:
                    e: {
                        for (c = a.key,
                        u = r; null !== u; ) {
                            if (u.key === c) {
                                switch (u.tag) {
                                case 7:
                                    if (a.type === ne) {
                                        n(e, u.sibling),
                                        (r = i(u, a.props.children)).return = e,
                                        e = r;
                                        break e
                                    }
                                    break;
                                default:
                                    if (u.elementType === a.type) {
                                        n(e, u.sibling),
                                        (r = i(u, a.props)).ref = wa(e, u, a),
                                        r.return = e,
                                        e = r;
                                        break e
                                    }
                                }
                                n(e, u);
                                break
                            }
                            t(e, u),
                            u = u.sibling
                        }
                        a.type === ne ? ((r = Pl(a.props.children, e.mode, l, a.key)).return = e,
                        e = r) : ((l = Al(a.type, a.key, a.props, null, e.mode, l)).ref = wa(e, r, a),
                        l.return = e,
                        e = l)
                    }
                    return s(e);
                case te:
                    e: {
                        for (u = a.key; null !== r; ) {
                            if (r.key === u) {
                                if (4 === r.tag && r.stateNode.containerInfo === a.containerInfo && r.stateNode.implementation === a.implementation) {
                                    n(e, r.sibling),
                                    (r = i(r, a.children || [])).return = e,
                                    e = r;
                                    break e
                                }
                                n(e, r);
                                break
                            }
                            t(e, r),
                            r = r.sibling
                        }
                        (r = Ll(a, e.mode, l)).return = e,
                        e = r
                    }
                    return s(e)
                }
            if ("string" === typeof a || "number" === typeof a)
                return a = "" + a,
                null !== r && 6 === r.tag ? (n(e, r.sibling),
                (r = i(r, a)).return = e,
                e = r) : (n(e, r),
                (r = Cl(a, e.mode, l)).return = e,
                e = r),
                s(e);
            if (xa(a))
                return m(e, r, a, l);
            if (me(a))
                return g(e, r, a, l);
            if (c && _a(e, a),
            "undefined" === typeof a && !u)
                switch (e.tag) {
                case 1:
                case 0:
                    throw e = e.type,
                    Error(o(152, e.displayName || e.name || "Component"))
                }
            return n(e, r)
        }
    }
    var Ea = Sa(!0)
      , Ma = Sa(!1)
      , Ta = {}
      , Aa = {
        current: Ta
    }
      , Pa = {
        current: Ta
    }
      , Ca = {
        current: Ta
    };
    function La(e) {
        if (e === Ta)
            throw Error(o(174));
        return e
    }
    function Ra(e, t) {
        switch (ui(Ca, t),
        ui(Pa, e),
        ui(Aa, Ta),
        e = t.nodeType) {
        case 9:
        case 11:
            t = (t = t.documentElement) ? t.namespaceURI : Ne(null, "");
            break;
        default:
            t = Ne(t = (e = 8 === e ? t.parentNode : t).namespaceURI || null, e = e.tagName)
        }
        li(Aa),
        ui(Aa, t)
    }
    function ka() {
        li(Aa),
        li(Pa),
        li(Ca)
    }
    function Da(e) {
        La(Ca.current);
        var t = La(Aa.current)
          , n = Ne(t, e.type);
        t !== n && (ui(Pa, e),
        ui(Aa, n))
    }
    function Ia(e) {
        Pa.current === e && (li(Aa),
        li(Pa))
    }
    var Oa = {
        current: 0
    };
    function Fa(e) {
        for (var t = e; null !== t; ) {
            if (13 === t.tag) {
                var n = t.memoizedState;
                if (null !== n && (null === (n = n.dehydrated) || "$?" === n.data || "$!" === n.data))
                    return t
            } else if (19 === t.tag && void 0 !== t.memoizedProps.revealOrder) {
                if (0 !== (64 & t.effectTag))
                    return t
            } else if (null !== t.child) {
                t.child.return = t,
                t = t.child;
                continue
            }
            if (t === e)
                break;
            for (; null === t.sibling; ) {
                if (null === t.return || t.return === e)
                    return null;
                t = t.return
            }
            t.sibling.return = t.return,
            t = t.sibling
        }
        return null
    }
    function Na(e, t) {
        return {
            responder: e,
            props: t
        }
    }
    var Ba = $.ReactCurrentDispatcher
      , za = $.ReactCurrentBatchConfig
      , Ga = 0
      , Ha = null
      , Va = null
      , ja = null
      , Ua = !1;
    function Wa() {
        throw Error(o(321))
    }
    function qa(e, t) {
        if (null === t)
            return !1;
        for (var n = 0; n < t.length && n < e.length; n++)
            if (!Nr(e[n], t[n]))
                return !1;
        return !0
    }
    function Xa(e, t, n, r, i, a) {
        if (Ga = a,
        Ha = t,
        t.memoizedState = null,
        t.updateQueue = null,
        t.expirationTime = 0,
        Ba.current = null === e || null === e.memoizedState ? vo : yo,
        e = n(r, i),
        t.expirationTime === Ga) {
            a = 0;
            do {
                if (t.expirationTime = 0,
                !(25 > a))
                    throw Error(o(301));
                a += 1,
                ja = Va = null,
                t.updateQueue = null,
                Ba.current = bo,
                e = n(r, i)
            } while (t.expirationTime === Ga)
        }
        if (Ba.current = go,
        t = null !== Va && null !== Va.next,
        Ga = 0,
        ja = Va = Ha = null,
        Ua = !1,
        t)
            throw Error(o(300));
        return e
    }
    function Ya() {
        var e = {
            memoizedState: null,
            baseState: null,
            baseQueue: null,
            queue: null,
            next: null
        };
        return null === ja ? Ha.memoizedState = ja = e : ja = ja.next = e,
        ja
    }
    function Za() {
        if (null === Va) {
            var e = Ha.alternate;
            e = null !== e ? e.memoizedState : null
        } else
            e = Va.next;
        var t = null === ja ? Ha.memoizedState : ja.next;
        if (null !== t)
            ja = t,
            Va = e;
        else {
            if (null === e)
                throw Error(o(310));
            e = {
                memoizedState: (Va = e).memoizedState,
                baseState: Va.baseState,
                baseQueue: Va.baseQueue,
                queue: Va.queue,
                next: null
            },
            null === ja ? Ha.memoizedState = ja = e : ja = ja.next = e
        }
        return ja
    }
    function $a(e, t) {
        return "function" === typeof t ? t(e) : t
    }
    function Ja(e) {
        var t = Za()
          , n = t.queue;
        if (null === n)
            throw Error(o(311));
        n.lastRenderedReducer = e;
        var r = Va
          , i = r.baseQueue
          , a = n.pending;
        if (null !== a) {
            if (null !== i) {
                var s = i.next;
                i.next = a.next,
                a.next = s
            }
            r.baseQueue = i = a,
            n.pending = null
        }
        if (null !== i) {
            i = i.next,
            r = r.baseState;
            var l = s = a = null
              , u = i;
            do {
                var c = u.expirationTime;
                if (c < Ga) {
                    var h = {
                        expirationTime: u.expirationTime,
                        suspenseConfig: u.suspenseConfig,
                        action: u.action,
                        eagerReducer: u.eagerReducer,
                        eagerState: u.eagerState,
                        next: null
                    };
                    null === l ? (s = l = h,
                    a = r) : l = l.next = h,
                    c > Ha.expirationTime && (Ha.expirationTime = c,
                    ol(c))
                } else
                    null !== l && (l = l.next = {
                        expirationTime: 1073741823,
                        suspenseConfig: u.suspenseConfig,
                        action: u.action,
                        eagerReducer: u.eagerReducer,
                        eagerState: u.eagerState,
                        next: null
                    }),
                    al(c, u.suspenseConfig),
                    r = u.eagerReducer === e ? u.eagerState : e(r, u.action);
                u = u.next
            } while (null !== u && u !== i);
            null === l ? a = r : l.next = s,
            Nr(r, t.memoizedState) || (Lo = !0),
            t.memoizedState = r,
            t.baseState = a,
            t.baseQueue = l,
            n.lastRenderedState = r
        }
        return [t.memoizedState, n.dispatch]
    }
    function Ka(e) {
        var t = Za()
          , n = t.queue;
        if (null === n)
            throw Error(o(311));
        n.lastRenderedReducer = e;
        var r = n.dispatch
          , i = n.pending
          , a = t.memoizedState;
        if (null !== i) {
            n.pending = null;
            var s = i = i.next;
            do {
                a = e(a, s.action),
                s = s.next
            } while (s !== i);
            Nr(a, t.memoizedState) || (Lo = !0),
            t.memoizedState = a,
            null === t.baseQueue && (t.baseState = a),
            n.lastRenderedState = a
        }
        return [a, r]
    }
    function Qa(e) {
        var t = Ya();
        return "function" === typeof e && (e = e()),
        t.memoizedState = t.baseState = e,
        e = (e = t.queue = {
            pending: null,
            dispatch: null,
            lastRenderedReducer: $a,
            lastRenderedState: e
        }).dispatch = mo.bind(null, Ha, e),
        [t.memoizedState, e]
    }
    function eo(e, t, n, r) {
        return e = {
            tag: e,
            create: t,
            destroy: n,
            deps: r,
            next: null
        },
        null === (t = Ha.updateQueue) ? (t = {
            lastEffect: null
        },
        Ha.updateQueue = t,
        t.lastEffect = e.next = e) : null === (n = t.lastEffect) ? t.lastEffect = e.next = e : (r = n.next,
        n.next = e,
        e.next = r,
        t.lastEffect = e),
        e
    }
    function to() {
        return Za().memoizedState
    }
    function no(e, t, n, r) {
        var i = Ya();
        Ha.effectTag |= e,
        i.memoizedState = eo(1 | t, n, void 0, void 0 === r ? null : r)
    }
    function ro(e, t, n, r) {
        var i = Za();
        r = void 0 === r ? null : r;
        var a = void 0;
        if (null !== Va) {
            var o = Va.memoizedState;
            if (a = o.destroy,
            null !== r && qa(r, o.deps))
                return void eo(t, n, a, r)
        }
        Ha.effectTag |= e,
        i.memoizedState = eo(1 | t, n, a, r)
    }
    function io(e, t) {
        return no(516, 4, e, t)
    }
    function ao(e, t) {
        return ro(516, 4, e, t)
    }
    function oo(e, t) {
        return ro(4, 2, e, t)
    }
    function so(e, t) {
        return "function" === typeof t ? (e = e(),
        t(e),
        function() {
            t(null)
        }
        ) : null !== t && void 0 !== t ? (e = e(),
        t.current = e,
        function() {
            t.current = null
        }
        ) : void 0
    }
    function lo(e, t, n) {
        return n = null !== n && void 0 !== n ? n.concat([e]) : null,
        ro(4, 2, so.bind(null, t, e), n)
    }
    function uo() {}
    function co(e, t) {
        return Ya().memoizedState = [e, void 0 === t ? null : t],
        e
    }
    function ho(e, t) {
        var n = Za();
        t = void 0 === t ? null : t;
        var r = n.memoizedState;
        return null !== r && null !== t && qa(t, r[1]) ? r[0] : (n.memoizedState = [e, t],
        e)
    }
    function po(e, t) {
        var n = Za();
        t = void 0 === t ? null : t;
        var r = n.memoizedState;
        return null !== r && null !== t && qa(t, r[1]) ? r[0] : (e = e(),
        n.memoizedState = [e, t],
        e)
    }
    function fo(e, t, n) {
        var r = Gi();
        Vi(98 > r ? 98 : r, (function() {
            e(!0)
        }
        )),
        Vi(97 < r ? 97 : r, (function() {
            var r = za.suspense;
            za.suspense = void 0 === t ? null : t;
            try {
                e(!1),
                n()
            } finally {
                za.suspense = r
            }
        }
        ))
    }
    function mo(e, t, n) {
        var r = qs()
          , i = pa.suspense;
        i = {
            expirationTime: r = Xs(r, e, i),
            suspenseConfig: i,
            action: n,
            eagerReducer: null,
            eagerState: null,
            next: null
        };
        var a = t.pending;
        if (null === a ? i.next = i : (i.next = a.next,
        a.next = i),
        t.pending = i,
        a = e.alternate,
        e === Ha || null !== a && a === Ha)
            Ua = !0,
            i.expirationTime = Ga,
            Ha.expirationTime = Ga;
        else {
            if (0 === e.expirationTime && (null === a || 0 === a.expirationTime) && null !== (a = t.lastRenderedReducer))
                try {
                    var o = t.lastRenderedState
                      , s = a(o, n);
                    if (i.eagerReducer = a,
                    i.eagerState = s,
                    Nr(s, o))
                        return
                } catch (l) {}
            Ys(e, r)
        }
    }
    var go = {
        readContext: ra,
        useCallback: Wa,
        useContext: Wa,
        useEffect: Wa,
        useImperativeHandle: Wa,
        useLayoutEffect: Wa,
        useMemo: Wa,
        useReducer: Wa,
        useRef: Wa,
        useState: Wa,
        useDebugValue: Wa,
        useResponder: Wa,
        useDeferredValue: Wa,
        useTransition: Wa
    }
      , vo = {
        readContext: ra,
        useCallback: co,
        useContext: ra,
        useEffect: io,
        useImperativeHandle: function(e, t, n) {
            return n = null !== n && void 0 !== n ? n.concat([e]) : null,
            no(4, 2, so.bind(null, t, e), n)
        },
        useLayoutEffect: function(e, t) {
            return no(4, 2, e, t)
        },
        useMemo: function(e, t) {
            var n = Ya();
            return t = void 0 === t ? null : t,
            e = e(),
            n.memoizedState = [e, t],
            e
        },
        useReducer: function(e, t, n) {
            var r = Ya();
            return t = void 0 !== n ? n(t) : t,
            r.memoizedState = r.baseState = t,
            e = (e = r.queue = {
                pending: null,
                dispatch: null,
                lastRenderedReducer: e,
                lastRenderedState: t
            }).dispatch = mo.bind(null, Ha, e),
            [r.memoizedState, e]
        },
        useRef: function(e) {
            return e = {
                current: e
            },
            Ya().memoizedState = e
        },
        useState: Qa,
        useDebugValue: uo,
        useResponder: Na,
        useDeferredValue: function(e, t) {
            var n = Qa(e)
              , r = n[0]
              , i = n[1];
            return io((function() {
                var n = za.suspense;
                za.suspense = void 0 === t ? null : t;
                try {
                    i(e)
                } finally {
                    za.suspense = n
                }
            }
            ), [e, t]),
            r
        },
        useTransition: function(e) {
            var t = Qa(!1)
              , n = t[0];
            return t = t[1],
            [co(fo.bind(null, t, e), [t, e]), n]
        }
    }
      , yo = {
        readContext: ra,
        useCallback: ho,
        useContext: ra,
        useEffect: ao,
        useImperativeHandle: lo,
        useLayoutEffect: oo,
        useMemo: po,
        useReducer: Ja,
        useRef: to,
        useState: function() {
            return Ja($a)
        },
        useDebugValue: uo,
        useResponder: Na,
        useDeferredValue: function(e, t) {
            var n = Ja($a)
              , r = n[0]
              , i = n[1];
            return ao((function() {
                var n = za.suspense;
                za.suspense = void 0 === t ? null : t;
                try {
                    i(e)
                } finally {
                    za.suspense = n
                }
            }
            ), [e, t]),
            r
        },
        useTransition: function(e) {
            var t = Ja($a)
              , n = t[0];
            return t = t[1],
            [ho(fo.bind(null, t, e), [t, e]), n]
        }
    }
      , bo = {
        readContext: ra,
        useCallback: ho,
        useContext: ra,
        useEffect: ao,
        useImperativeHandle: lo,
        useLayoutEffect: oo,
        useMemo: po,
        useReducer: Ka,
        useRef: to,
        useState: function() {
            return Ka($a)
        },
        useDebugValue: uo,
        useResponder: Na,
        useDeferredValue: function(e, t) {
            var n = Ka($a)
              , r = n[0]
              , i = n[1];
            return ao((function() {
                var n = za.suspense;
                za.suspense = void 0 === t ? null : t;
                try {
                    i(e)
                } finally {
                    za.suspense = n
                }
            }
            ), [e, t]),
            r
        },
        useTransition: function(e) {
            var t = Ka($a)
              , n = t[0];
            return t = t[1],
            [ho(fo.bind(null, t, e), [t, e]), n]
        }
    }
      , xo = null
      , wo = null
      , _o = !1;
    function So(e, t) {
        var n = El(5, null, null, 0);
        n.elementType = "DELETED",
        n.type = "DELETED",
        n.stateNode = t,
        n.return = e,
        n.effectTag = 8,
        null !== e.lastEffect ? (e.lastEffect.nextEffect = n,
        e.lastEffect = n) : e.firstEffect = e.lastEffect = n
    }
    function Eo(e, t) {
        switch (e.tag) {
        case 5:
            var n = e.type;
            return null !== (t = 1 !== t.nodeType || n.toLowerCase() !== t.nodeName.toLowerCase() ? null : t) && (e.stateNode = t,
            !0);
        case 6:
            return null !== (t = "" === e.pendingProps || 3 !== t.nodeType ? null : t) && (e.stateNode = t,
            !0);
        case 13:
        default:
            return !1
        }
    }
    function Mo(e) {
        if (_o) {
            var t = wo;
            if (t) {
                var n = t;
                if (!Eo(e, t)) {
                    if (!(t = wn(n.nextSibling)) || !Eo(e, t))
                        return e.effectTag = -1025 & e.effectTag | 2,
                        _o = !1,
                        void (xo = e);
                    So(xo, n)
                }
                xo = e,
                wo = wn(t.firstChild)
            } else
                e.effectTag = -1025 & e.effectTag | 2,
                _o = !1,
                xo = e
        }
    }
    function To(e) {
        for (e = e.return; null !== e && 5 !== e.tag && 3 !== e.tag && 13 !== e.tag; )
            e = e.return;
        xo = e
    }
    function Ao(e) {
        if (e !== xo)
            return !1;
        if (!_o)
            return To(e),
            _o = !0,
            !1;
        var t = e.type;
        if (5 !== e.tag || "head" !== t && "body" !== t && !yn(t, e.memoizedProps))
            for (t = wo; t; )
                So(e, t),
                t = wn(t.nextSibling);
        if (To(e),
        13 === e.tag) {
            if (!(e = null !== (e = e.memoizedState) ? e.dehydrated : null))
                throw Error(o(317));
            e: {
                for (e = e.nextSibling,
                t = 0; e; ) {
                    if (8 === e.nodeType) {
                        var n = e.data;
                        if ("/$" === n) {
                            if (0 === t) {
                                wo = wn(e.nextSibling);
                                break e
                            }
                            t--
                        } else
                            "$" !== n && "$!" !== n && "$?" !== n || t++
                    }
                    e = e.nextSibling
                }
                wo = null
            }
        } else
            wo = xo ? wn(e.stateNode.nextSibling) : null;
        return !0
    }
    function Po() {
        wo = xo = null,
        _o = !1
    }
    var Co = $.ReactCurrentOwner
      , Lo = !1;
    function Ro(e, t, n, r) {
        t.child = null === e ? Ma(t, null, n, r) : Ea(t, e.child, n, r)
    }
    function ko(e, t, n, r, i) {
        n = n.render;
        var a = t.ref;
        return na(t, i),
        r = Xa(e, t, n, r, a, i),
        null === e || Lo ? (t.effectTag |= 1,
        Ro(e, t, r, i),
        t.child) : (t.updateQueue = e.updateQueue,
        t.effectTag &= -517,
        e.expirationTime <= i && (e.expirationTime = 0),
        Yo(e, t, i))
    }
    function Do(e, t, n, r, i, a) {
        if (null === e) {
            var o = n.type;
            return "function" !== typeof o || Ml(o) || void 0 !== o.defaultProps || null !== n.compare || void 0 !== n.defaultProps ? ((e = Al(n.type, null, r, null, t.mode, a)).ref = t.ref,
            e.return = t,
            t.child = e) : (t.tag = 15,
            t.type = o,
            Io(e, t, o, r, i, a))
        }
        return o = e.child,
        i < a && (i = o.memoizedProps,
        (n = null !== (n = n.compare) ? n : zr)(i, r) && e.ref === t.ref) ? Yo(e, t, a) : (t.effectTag |= 1,
        (e = Tl(o, r)).ref = t.ref,
        e.return = t,
        t.child = e)
    }
    function Io(e, t, n, r, i, a) {
        return null !== e && zr(e.memoizedProps, r) && e.ref === t.ref && (Lo = !1,
        i < a) ? (t.expirationTime = e.expirationTime,
        Yo(e, t, a)) : Fo(e, t, n, r, a)
    }
    function Oo(e, t) {
        var n = t.ref;
        (null === e && null !== n || null !== e && e.ref !== n) && (t.effectTag |= 128)
    }
    function Fo(e, t, n, r, i) {
        var a = mi(n) ? fi : hi.current;
        return a = di(t, a),
        na(t, i),
        n = Xa(e, t, n, r, a, i),
        null === e || Lo ? (t.effectTag |= 1,
        Ro(e, t, n, i),
        t.child) : (t.updateQueue = e.updateQueue,
        t.effectTag &= -517,
        e.expirationTime <= i && (e.expirationTime = 0),
        Yo(e, t, i))
    }
    function No(e, t, n, r, i) {
        if (mi(n)) {
            var a = !0;
            bi(t)
        } else
            a = !1;
        if (na(t, i),
        null === t.stateNode)
            null !== e && (e.alternate = null,
            t.alternate = null,
            t.effectTag |= 2),
            va(t, n, r),
            ba(t, n, r, i),
            r = !0;
        else if (null === e) {
            var o = t.stateNode
              , s = t.memoizedProps;
            o.props = s;
            var l = o.context
              , u = n.contextType;
            "object" === typeof u && null !== u ? u = ra(u) : u = di(t, u = mi(n) ? fi : hi.current);
            var c = n.getDerivedStateFromProps
              , h = "function" === typeof c || "function" === typeof o.getSnapshotBeforeUpdate;
            h || "function" !== typeof o.UNSAFE_componentWillReceiveProps && "function" !== typeof o.componentWillReceiveProps || (s !== r || l !== u) && ya(t, o, r, u),
            ia = !1;
            var p = t.memoizedState;
            o.state = p,
            ca(t, r, o, i),
            l = t.memoizedState,
            s !== r || p !== l || pi.current || ia ? ("function" === typeof c && (da(t, n, c, r),
            l = t.memoizedState),
            (s = ia || ga(t, n, s, r, p, l, u)) ? (h || "function" !== typeof o.UNSAFE_componentWillMount && "function" !== typeof o.componentWillMount || ("function" === typeof o.componentWillMount && o.componentWillMount(),
            "function" === typeof o.UNSAFE_componentWillMount && o.UNSAFE_componentWillMount()),
            "function" === typeof o.componentDidMount && (t.effectTag |= 4)) : ("function" === typeof o.componentDidMount && (t.effectTag |= 4),
            t.memoizedProps = r,
            t.memoizedState = l),
            o.props = r,
            o.state = l,
            o.context = u,
            r = s) : ("function" === typeof o.componentDidMount && (t.effectTag |= 4),
            r = !1)
        } else
            o = t.stateNode,
            oa(e, t),
            s = t.memoizedProps,
            o.props = t.type === t.elementType ? s : Yi(t.type, s),
            l = o.context,
            "object" === typeof (u = n.contextType) && null !== u ? u = ra(u) : u = di(t, u = mi(n) ? fi : hi.current),
            (h = "function" === typeof (c = n.getDerivedStateFromProps) || "function" === typeof o.getSnapshotBeforeUpdate) || "function" !== typeof o.UNSAFE_componentWillReceiveProps && "function" !== typeof o.componentWillReceiveProps || (s !== r || l !== u) && ya(t, o, r, u),
            ia = !1,
            l = t.memoizedState,
            o.state = l,
            ca(t, r, o, i),
            p = t.memoizedState,
            s !== r || l !== p || pi.current || ia ? ("function" === typeof c && (da(t, n, c, r),
            p = t.memoizedState),
            (c = ia || ga(t, n, s, r, l, p, u)) ? (h || "function" !== typeof o.UNSAFE_componentWillUpdate && "function" !== typeof o.componentWillUpdate || ("function" === typeof o.componentWillUpdate && o.componentWillUpdate(r, p, u),
            "function" === typeof o.UNSAFE_componentWillUpdate && o.UNSAFE_componentWillUpdate(r, p, u)),
            "function" === typeof o.componentDidUpdate && (t.effectTag |= 4),
            "function" === typeof o.getSnapshotBeforeUpdate && (t.effectTag |= 256)) : ("function" !== typeof o.componentDidUpdate || s === e.memoizedProps && l === e.memoizedState || (t.effectTag |= 4),
            "function" !== typeof o.getSnapshotBeforeUpdate || s === e.memoizedProps && l === e.memoizedState || (t.effectTag |= 256),
            t.memoizedProps = r,
            t.memoizedState = p),
            o.props = r,
            o.state = p,
            o.context = u,
            r = c) : ("function" !== typeof o.componentDidUpdate || s === e.memoizedProps && l === e.memoizedState || (t.effectTag |= 4),
            "function" !== typeof o.getSnapshotBeforeUpdate || s === e.memoizedProps && l === e.memoizedState || (t.effectTag |= 256),
            r = !1);
        return Bo(e, t, n, r, a, i)
    }
    function Bo(e, t, n, r, i, a) {
        Oo(e, t);
        var o = 0 !== (64 & t.effectTag);
        if (!r && !o)
            return i && xi(t, n, !1),
            Yo(e, t, a);
        r = t.stateNode,
        Co.current = t;
        var s = o && "function" !== typeof n.getDerivedStateFromError ? null : r.render();
        return t.effectTag |= 1,
        null !== e && o ? (t.child = Ea(t, e.child, null, a),
        t.child = Ea(t, null, s, a)) : Ro(e, t, s, a),
        t.memoizedState = r.state,
        i && xi(t, n, !0),
        t.child
    }
    function zo(e) {
        var t = e.stateNode;
        t.pendingContext ? vi(0, t.pendingContext, t.pendingContext !== t.context) : t.context && vi(0, t.context, !1),
        Ra(e, t.containerInfo)
    }
    var Go, Ho, Vo, jo = {
        dehydrated: null,
        retryTime: 0
    };
    function Uo(e, t, n) {
        var r, i = t.mode, a = t.pendingProps, o = Oa.current, s = !1;
        if ((r = 0 !== (64 & t.effectTag)) || (r = 0 !== (2 & o) && (null === e || null !== e.memoizedState)),
        r ? (s = !0,
        t.effectTag &= -65) : null !== e && null === e.memoizedState || void 0 === a.fallback || !0 === a.unstable_avoidThisFallback || (o |= 1),
        ui(Oa, 1 & o),
        null === e) {
            if (void 0 !== a.fallback && Mo(t),
            s) {
                if (s = a.fallback,
                (a = Pl(null, i, 0, null)).return = t,
                0 === (2 & t.mode))
                    for (e = null !== t.memoizedState ? t.child.child : t.child,
                    a.child = e; null !== e; )
                        e.return = a,
                        e = e.sibling;
                return (n = Pl(s, i, n, null)).return = t,
                a.sibling = n,
                t.memoizedState = jo,
                t.child = a,
                n
            }
            return i = a.children,
            t.memoizedState = null,
            t.child = Ma(t, null, i, n)
        }
        if (null !== e.memoizedState) {
            if (i = (e = e.child).sibling,
            s) {
                if (a = a.fallback,
                (n = Tl(e, e.pendingProps)).return = t,
                0 === (2 & t.mode) && (s = null !== t.memoizedState ? t.child.child : t.child) !== e.child)
                    for (n.child = s; null !== s; )
                        s.return = n,
                        s = s.sibling;
                return (i = Tl(i, a)).return = t,
                n.sibling = i,
                n.childExpirationTime = 0,
                t.memoizedState = jo,
                t.child = n,
                i
            }
            return n = Ea(t, e.child, a.children, n),
            t.memoizedState = null,
            t.child = n
        }
        if (e = e.child,
        s) {
            if (s = a.fallback,
            (a = Pl(null, i, 0, null)).return = t,
            a.child = e,
            null !== e && (e.return = a),
            0 === (2 & t.mode))
                for (e = null !== t.memoizedState ? t.child.child : t.child,
                a.child = e; null !== e; )
                    e.return = a,
                    e = e.sibling;
            return (n = Pl(s, i, n, null)).return = t,
            a.sibling = n,
            n.effectTag |= 2,
            a.childExpirationTime = 0,
            t.memoizedState = jo,
            t.child = a,
            n
        }
        return t.memoizedState = null,
        t.child = Ea(t, e, a.children, n)
    }
    function Wo(e, t) {
        e.expirationTime < t && (e.expirationTime = t);
        var n = e.alternate;
        null !== n && n.expirationTime < t && (n.expirationTime = t),
        ta(e.return, t)
    }
    function qo(e, t, n, r, i, a) {
        var o = e.memoizedState;
        null === o ? e.memoizedState = {
            isBackwards: t,
            rendering: null,
            renderingStartTime: 0,
            last: r,
            tail: n,
            tailExpiration: 0,
            tailMode: i,
            lastEffect: a
        } : (o.isBackwards = t,
        o.rendering = null,
        o.renderingStartTime = 0,
        o.last = r,
        o.tail = n,
        o.tailExpiration = 0,
        o.tailMode = i,
        o.lastEffect = a)
    }
    function Xo(e, t, n) {
        var r = t.pendingProps
          , i = r.revealOrder
          , a = r.tail;
        if (Ro(e, t, r.children, n),
        0 !== (2 & (r = Oa.current)))
            r = 1 & r | 2,
            t.effectTag |= 64;
        else {
            if (null !== e && 0 !== (64 & e.effectTag))
                e: for (e = t.child; null !== e; ) {
                    if (13 === e.tag)
                        null !== e.memoizedState && Wo(e, n);
                    else if (19 === e.tag)
                        Wo(e, n);
                    else if (null !== e.child) {
                        e.child.return = e,
                        e = e.child;
                        continue
                    }
                    if (e === t)
                        break e;
                    for (; null === e.sibling; ) {
                        if (null === e.return || e.return === t)
                            break e;
                        e = e.return
                    }
                    e.sibling.return = e.return,
                    e = e.sibling
                }
            r &= 1
        }
        if (ui(Oa, r),
        0 === (2 & t.mode))
            t.memoizedState = null;
        else
            switch (i) {
            case "forwards":
                for (n = t.child,
                i = null; null !== n; )
                    null !== (e = n.alternate) && null === Fa(e) && (i = n),
                    n = n.sibling;
                null === (n = i) ? (i = t.child,
                t.child = null) : (i = n.sibling,
                n.sibling = null),
                qo(t, !1, i, n, a, t.lastEffect);
                break;
            case "backwards":
                for (n = null,
                i = t.child,
                t.child = null; null !== i; ) {
                    if (null !== (e = i.alternate) && null === Fa(e)) {
                        t.child = i;
                        break
                    }
                    e = i.sibling,
                    i.sibling = n,
                    n = i,
                    i = e
                }
                qo(t, !0, n, null, a, t.lastEffect);
                break;
            case "together":
                qo(t, !1, null, null, void 0, t.lastEffect);
                break;
            default:
                t.memoizedState = null
            }
        return t.child
    }
    function Yo(e, t, n) {
        null !== e && (t.dependencies = e.dependencies);
        var r = t.expirationTime;
        if (0 !== r && ol(r),
        t.childExpirationTime < n)
            return null;
        if (null !== e && t.child !== e.child)
            throw Error(o(153));
        if (null !== t.child) {
            for (n = Tl(e = t.child, e.pendingProps),
            t.child = n,
            n.return = t; null !== e.sibling; )
                e = e.sibling,
                (n = n.sibling = Tl(e, e.pendingProps)).return = t;
            n.sibling = null
        }
        return t.child
    }
    function Zo(e, t) {
        switch (e.tailMode) {
        case "hidden":
            t = e.tail;
            for (var n = null; null !== t; )
                null !== t.alternate && (n = t),
                t = t.sibling;
            null === n ? e.tail = null : n.sibling = null;
            break;
        case "collapsed":
            n = e.tail;
            for (var r = null; null !== n; )
                null !== n.alternate && (r = n),
                n = n.sibling;
            null === r ? t || null === e.tail ? e.tail = null : e.tail.sibling = null : r.sibling = null
        }
    }
    function $o(e, t, n) {
        var r = t.pendingProps;
        switch (t.tag) {
        case 2:
        case 16:
        case 15:
        case 0:
        case 11:
        case 7:
        case 8:
        case 12:
        case 9:
        case 14:
            return null;
        case 1:
            return mi(t.type) && gi(),
            null;
        case 3:
            return ka(),
            li(pi),
            li(hi),
            (n = t.stateNode).pendingContext && (n.context = n.pendingContext,
            n.pendingContext = null),
            null !== e && null !== e.child || !Ao(t) || (t.effectTag |= 4),
            null;
        case 5:
            Ia(t),
            n = La(Ca.current);
            var a = t.type;
            if (null !== e && null != t.stateNode)
                Ho(e, t, a, r, n),
                e.ref !== t.ref && (t.effectTag |= 128);
            else {
                if (!r) {
                    if (null === t.stateNode)
                        throw Error(o(166));
                    return null
                }
                if (e = La(Aa.current),
                Ao(t)) {
                    r = t.stateNode,
                    a = t.type;
                    var s = t.memoizedProps;
                    switch (r[En] = t,
                    r[Mn] = s,
                    a) {
                    case "iframe":
                    case "object":
                    case "embed":
                        Xt("load", r);
                        break;
                    case "video":
                    case "audio":
                        for (e = 0; e < $e.length; e++)
                            Xt($e[e], r);
                        break;
                    case "source":
                        Xt("error", r);
                        break;
                    case "img":
                    case "image":
                    case "link":
                        Xt("error", r),
                        Xt("load", r);
                        break;
                    case "form":
                        Xt("reset", r),
                        Xt("submit", r);
                        break;
                    case "details":
                        Xt("toggle", r);
                        break;
                    case "input":
                        Se(r, s),
                        Xt("invalid", r),
                        ln(n, "onChange");
                        break;
                    case "select":
                        r._wrapperState = {
                            wasMultiple: !!s.multiple
                        },
                        Xt("invalid", r),
                        ln(n, "onChange");
                        break;
                    case "textarea":
                        Re(r, s),
                        Xt("invalid", r),
                        ln(n, "onChange")
                    }
                    for (var l in an(a, s),
                    e = null,
                    s)
                        if (s.hasOwnProperty(l)) {
                            var u = s[l];
                            "children" === l ? "string" === typeof u ? r.textContent !== u && (e = ["children", u]) : "number" === typeof u && r.textContent !== "" + u && (e = ["children", "" + u]) : E.hasOwnProperty(l) && null != u && ln(n, l)
                        }
                    switch (a) {
                    case "input":
                        xe(r),
                        Te(r, s, !0);
                        break;
                    case "textarea":
                        xe(r),
                        De(r);
                        break;
                    case "select":
                    case "option":
                        break;
                    default:
                        "function" === typeof s.onClick && (r.onclick = un)
                    }
                    n = e,
                    t.updateQueue = n,
                    null !== n && (t.effectTag |= 4)
                } else {
                    switch (l = 9 === n.nodeType ? n : n.ownerDocument,
                    e === sn && (e = Fe(a)),
                    e === sn ? "script" === a ? ((e = l.createElement("div")).innerHTML = "<script><\/script>",
                    e = e.removeChild(e.firstChild)) : "string" === typeof r.is ? e = l.createElement(a, {
                        is: r.is
                    }) : (e = l.createElement(a),
                    "select" === a && (l = e,
                    r.multiple ? l.multiple = !0 : r.size && (l.size = r.size))) : e = l.createElementNS(e, a),
                    e[En] = t,
                    e[Mn] = r,
                    Go(e, t),
                    t.stateNode = e,
                    l = on(a, r),
                    a) {
                    case "iframe":
                    case "object":
                    case "embed":
                        Xt("load", e),
                        u = r;
                        break;
                    case "video":
                    case "audio":
                        for (u = 0; u < $e.length; u++)
                            Xt($e[u], e);
                        u = r;
                        break;
                    case "source":
                        Xt("error", e),
                        u = r;
                        break;
                    case "img":
                    case "image":
                    case "link":
                        Xt("error", e),
                        Xt("load", e),
                        u = r;
                        break;
                    case "form":
                        Xt("reset", e),
                        Xt("submit", e),
                        u = r;
                        break;
                    case "details":
                        Xt("toggle", e),
                        u = r;
                        break;
                    case "input":
                        Se(e, r),
                        u = _e(e, r),
                        Xt("invalid", e),
                        ln(n, "onChange");
                        break;
                    case "option":
                        u = Pe(e, r);
                        break;
                    case "select":
                        e._wrapperState = {
                            wasMultiple: !!r.multiple
                        },
                        u = i({}, r, {
                            value: void 0
                        }),
                        Xt("invalid", e),
                        ln(n, "onChange");
                        break;
                    case "textarea":
                        Re(e, r),
                        u = Le(e, r),
                        Xt("invalid", e),
                        ln(n, "onChange");
                        break;
                    default:
                        u = r
                    }
                    an(a, u);
                    var c = u;
                    for (s in c)
                        if (c.hasOwnProperty(s)) {
                            var h = c[s];
                            "style" === s ? nn(e, h) : "dangerouslySetInnerHTML" === s ? null != (h = h ? h.__html : void 0) && ze(e, h) : "children" === s ? "string" === typeof h ? ("textarea" !== a || "" !== h) && Ge(e, h) : "number" === typeof h && Ge(e, "" + h) : "suppressContentEditableWarning" !== s && "suppressHydrationWarning" !== s && "autoFocus" !== s && (E.hasOwnProperty(s) ? null != h && ln(n, s) : null != h && J(e, s, h, l))
                        }
                    switch (a) {
                    case "input":
                        xe(e),
                        Te(e, r, !1);
                        break;
                    case "textarea":
                        xe(e),
                        De(e);
                        break;
                    case "option":
                        null != r.value && e.setAttribute("value", "" + ye(r.value));
                        break;
                    case "select":
                        e.multiple = !!r.multiple,
                        null != (n = r.value) ? Ce(e, !!r.multiple, n, !1) : null != r.defaultValue && Ce(e, !!r.multiple, r.defaultValue, !0);
                        break;
                    default:
                        "function" === typeof u.onClick && (e.onclick = un)
                    }
                    vn(a, r) && (t.effectTag |= 4)
                }
                null !== t.ref && (t.effectTag |= 128)
            }
            return null;
        case 6:
            if (e && null != t.stateNode)
                Vo(0, t, e.memoizedProps, r);
            else {
                if ("string" !== typeof r && null === t.stateNode)
                    throw Error(o(166));
                n = La(Ca.current),
                La(Aa.current),
                Ao(t) ? (n = t.stateNode,
                r = t.memoizedProps,
                n[En] = t,
                n.nodeValue !== r && (t.effectTag |= 4)) : ((n = (9 === n.nodeType ? n : n.ownerDocument).createTextNode(r))[En] = t,
                t.stateNode = n)
            }
            return null;
        case 13:
            return li(Oa),
            r = t.memoizedState,
            0 !== (64 & t.effectTag) ? (t.expirationTime = n,
            t) : (n = null !== r,
            r = !1,
            null === e ? void 0 !== t.memoizedProps.fallback && Ao(t) : (r = null !== (a = e.memoizedState),
            n || null === a || null !== (a = e.child.sibling) && (null !== (s = t.firstEffect) ? (t.firstEffect = a,
            a.nextEffect = s) : (t.firstEffect = t.lastEffect = a,
            a.nextEffect = null),
            a.effectTag = 8)),
            n && !r && 0 !== (2 & t.mode) && (null === e && !0 !== t.memoizedProps.unstable_avoidThisFallback || 0 !== (1 & Oa.current) ? As === xs && (As = ws) : (As !== xs && As !== ws || (As = _s),
            0 !== ks && null !== Es && (Dl(Es, Ts),
            Il(Es, ks)))),
            (n || r) && (t.effectTag |= 4),
            null);
        case 4:
            return ka(),
            null;
        case 10:
            return ea(t),
            null;
        case 17:
            return mi(t.type) && gi(),
            null;
        case 19:
            if (li(Oa),
            null === (r = t.memoizedState))
                return null;
            if (a = 0 !== (64 & t.effectTag),
            null === (s = r.rendering)) {
                if (a)
                    Zo(r, !1);
                else if (As !== xs || null !== e && 0 !== (64 & e.effectTag))
                    for (s = t.child; null !== s; ) {
                        if (null !== (e = Fa(s))) {
                            for (t.effectTag |= 64,
                            Zo(r, !1),
                            null !== (a = e.updateQueue) && (t.updateQueue = a,
                            t.effectTag |= 4),
                            null === r.lastEffect && (t.firstEffect = null),
                            t.lastEffect = r.lastEffect,
                            r = t.child; null !== r; )
                                s = n,
                                (a = r).effectTag &= 2,
                                a.nextEffect = null,
                                a.firstEffect = null,
                                a.lastEffect = null,
                                null === (e = a.alternate) ? (a.childExpirationTime = 0,
                                a.expirationTime = s,
                                a.child = null,
                                a.memoizedProps = null,
                                a.memoizedState = null,
                                a.updateQueue = null,
                                a.dependencies = null) : (a.childExpirationTime = e.childExpirationTime,
                                a.expirationTime = e.expirationTime,
                                a.child = e.child,
                                a.memoizedProps = e.memoizedProps,
                                a.memoizedState = e.memoizedState,
                                a.updateQueue = e.updateQueue,
                                s = e.dependencies,
                                a.dependencies = null === s ? null : {
                                    expirationTime: s.expirationTime,
                                    firstContext: s.firstContext,
                                    responders: s.responders
                                }),
                                r = r.sibling;
                            return ui(Oa, 1 & Oa.current | 2),
                            t.child
                        }
                        s = s.sibling
                    }
            } else {
                if (!a)
                    if (null !== (e = Fa(s))) {
                        if (t.effectTag |= 64,
                        a = !0,
                        null !== (n = e.updateQueue) && (t.updateQueue = n,
                        t.effectTag |= 4),
                        Zo(r, !0),
                        null === r.tail && "hidden" === r.tailMode && !s.alternate)
                            return null !== (t = t.lastEffect = r.lastEffect) && (t.nextEffect = null),
                            null
                    } else
                        2 * zi() - r.renderingStartTime > r.tailExpiration && 1 < n && (t.effectTag |= 64,
                        a = !0,
                        Zo(r, !1),
                        t.expirationTime = t.childExpirationTime = n - 1);
                r.isBackwards ? (s.sibling = t.child,
                t.child = s) : (null !== (n = r.last) ? n.sibling = s : t.child = s,
                r.last = s)
            }
            return null !== r.tail ? (0 === r.tailExpiration && (r.tailExpiration = zi() + 500),
            n = r.tail,
            r.rendering = n,
            r.tail = n.sibling,
            r.lastEffect = t.lastEffect,
            r.renderingStartTime = zi(),
            n.sibling = null,
            t = Oa.current,
            ui(Oa, a ? 1 & t | 2 : 1 & t),
            n) : null
        }
        throw Error(o(156, t.tag))
    }
    function Jo(e) {
        switch (e.tag) {
        case 1:
            mi(e.type) && gi();
            var t = e.effectTag;
            return 4096 & t ? (e.effectTag = -4097 & t | 64,
            e) : null;
        case 3:
            if (ka(),
            li(pi),
            li(hi),
            0 !== (64 & (t = e.effectTag)))
                throw Error(o(285));
            return e.effectTag = -4097 & t | 64,
            e;
        case 5:
            return Ia(e),
            null;
        case 13:
            return li(Oa),
            4096 & (t = e.effectTag) ? (e.effectTag = -4097 & t | 64,
            e) : null;
        case 19:
            return li(Oa),
            null;
        case 4:
            return ka(),
            null;
        case 10:
            return ea(e),
            null;
        default:
            return null
        }
    }
    function Ko(e, t) {
        return {
            value: e,
            source: t,
            stack: ve(t)
        }
    }
    Go = function(e, t) {
        for (var n = t.child; null !== n; ) {
            if (5 === n.tag || 6 === n.tag)
                e.appendChild(n.stateNode);
            else if (4 !== n.tag && null !== n.child) {
                n.child.return = n,
                n = n.child;
                continue
            }
            if (n === t)
                break;
            for (; null === n.sibling; ) {
                if (null === n.return || n.return === t)
                    return;
                n = n.return
            }
            n.sibling.return = n.return,
            n = n.sibling
        }
    }
    ,
    Ho = function(e, t, n, r, a) {
        var o = e.memoizedProps;
        if (o !== r) {
            var s, l, u = t.stateNode;
            switch (La(Aa.current),
            e = null,
            n) {
            case "input":
                o = _e(u, o),
                r = _e(u, r),
                e = [];
                break;
            case "option":
                o = Pe(u, o),
                r = Pe(u, r),
                e = [];
                break;
            case "select":
                o = i({}, o, {
                    value: void 0
                }),
                r = i({}, r, {
                    value: void 0
                }),
                e = [];
                break;
            case "textarea":
                o = Le(u, o),
                r = Le(u, r),
                e = [];
                break;
            default:
                "function" !== typeof o.onClick && "function" === typeof r.onClick && (u.onclick = un)
            }
            for (s in an(n, r),
            n = null,
            o)
                if (!r.hasOwnProperty(s) && o.hasOwnProperty(s) && null != o[s])
                    if ("style" === s)
                        for (l in u = o[s])
                            u.hasOwnProperty(l) && (n || (n = {}),
                            n[l] = "");
                    else
                        "dangerouslySetInnerHTML" !== s && "children" !== s && "suppressContentEditableWarning" !== s && "suppressHydrationWarning" !== s && "autoFocus" !== s && (E.hasOwnProperty(s) ? e || (e = []) : (e = e || []).push(s, null));
            for (s in r) {
                var c = r[s];
                if (u = null != o ? o[s] : void 0,
                r.hasOwnProperty(s) && c !== u && (null != c || null != u))
                    if ("style" === s)
                        if (u) {
                            for (l in u)
                                !u.hasOwnProperty(l) || c && c.hasOwnProperty(l) || (n || (n = {}),
                                n[l] = "");
                            for (l in c)
                                c.hasOwnProperty(l) && u[l] !== c[l] && (n || (n = {}),
                                n[l] = c[l])
                        } else
                            n || (e || (e = []),
                            e.push(s, n)),
                            n = c;
                    else
                        "dangerouslySetInnerHTML" === s ? (c = c ? c.__html : void 0,
                        u = u ? u.__html : void 0,
                        null != c && u !== c && (e = e || []).push(s, c)) : "children" === s ? u === c || "string" !== typeof c && "number" !== typeof c || (e = e || []).push(s, "" + c) : "suppressContentEditableWarning" !== s && "suppressHydrationWarning" !== s && (E.hasOwnProperty(s) ? (null != c && ln(a, s),
                        e || u === c || (e = [])) : (e = e || []).push(s, c))
            }
            n && (e = e || []).push("style", n),
            a = e,
            (t.updateQueue = a) && (t.effectTag |= 4)
        }
    }
    ,
    Vo = function(e, t, n, r) {
        n !== r && (t.effectTag |= 4)
    }
    ;
    var Qo = "function" === typeof WeakSet ? WeakSet : Set;
    function es(e, t) {
        var n = t.source
          , r = t.stack;
        null === r && null !== n && (r = ve(n)),
        null !== n && ge(n.type),
        t = t.value,
        null !== e && 1 === e.tag && ge(e.type);
        try {
            console.error(t)
        } catch (i) {
            setTimeout((function() {
                throw i
            }
            ))
        }
    }
    function ts(e) {
        var t = e.ref;
        if (null !== t)
            if ("function" === typeof t)
                try {
                    t(null)
                } catch (n) {
                    yl(e, n)
                }
            else
                t.current = null
    }
    function ns(e, t) {
        switch (t.tag) {
        case 0:
        case 11:
        case 15:
        case 22:
            return;
        case 1:
            if (256 & t.effectTag && null !== e) {
                var n = e.memoizedProps
                  , r = e.memoizedState;
                t = (e = t.stateNode).getSnapshotBeforeUpdate(t.elementType === t.type ? n : Yi(t.type, n), r),
                e.__reactInternalSnapshotBeforeUpdate = t
            }
            return;
        case 3:
        case 5:
        case 6:
        case 4:
        case 17:
            return
        }
        throw Error(o(163))
    }
    function rs(e, t) {
        if (null !== (t = null !== (t = t.updateQueue) ? t.lastEffect : null)) {
            var n = t = t.next;
            do {
                if ((n.tag & e) === e) {
                    var r = n.destroy;
                    n.destroy = void 0,
                    void 0 !== r && r()
                }
                n = n.next
            } while (n !== t)
        }
    }
    function is(e, t) {
        if (null !== (t = null !== (t = t.updateQueue) ? t.lastEffect : null)) {
            var n = t = t.next;
            do {
                if ((n.tag & e) === e) {
                    var r = n.create;
                    n.destroy = r()
                }
                n = n.next
            } while (n !== t)
        }
    }
    function as(e, t, n) {
        switch (n.tag) {
        case 0:
        case 11:
        case 15:
        case 22:
            return void is(3, n);
        case 1:
            if (e = n.stateNode,
            4 & n.effectTag)
                if (null === t)
                    e.componentDidMount();
                else {
                    var r = n.elementType === n.type ? t.memoizedProps : Yi(n.type, t.memoizedProps);
                    e.componentDidUpdate(r, t.memoizedState, e.__reactInternalSnapshotBeforeUpdate)
                }
            return void (null !== (t = n.updateQueue) && ha(n, t, e));
        case 3:
            if (null !== (t = n.updateQueue)) {
                if (e = null,
                null !== n.child)
                    switch (n.child.tag) {
                    case 5:
                        e = n.child.stateNode;
                        break;
                    case 1:
                        e = n.child.stateNode
                    }
                ha(n, t, e)
            }
            return;
        case 5:
            return e = n.stateNode,
            void (null === t && 4 & n.effectTag && vn(n.type, n.memoizedProps) && e.focus());
        case 6:
        case 4:
        case 12:
            return;
        case 13:
            return void (null === n.memoizedState && (n = n.alternate,
            null !== n && (n = n.memoizedState,
            null !== n && (n = n.dehydrated,
            null !== n && Ft(n)))));
        case 19:
        case 17:
        case 20:
        case 21:
            return
        }
        throw Error(o(163))
    }
    function os(e, t, n) {
        switch ("function" === typeof _l && _l(t),
        t.tag) {
        case 0:
        case 11:
        case 14:
        case 15:
        case 22:
            if (null !== (e = t.updateQueue) && null !== (e = e.lastEffect)) {
                var r = e.next;
                Vi(97 < n ? 97 : n, (function() {
                    var e = r;
                    do {
                        var n = e.destroy;
                        if (void 0 !== n) {
                            var i = t;
                            try {
                                n()
                            } catch (a) {
                                yl(i, a)
                            }
                        }
                        e = e.next
                    } while (e !== r)
                }
                ))
            }
            break;
        case 1:
            ts(t),
            "function" === typeof (n = t.stateNode).componentWillUnmount && function(e, t) {
                try {
                    t.props = e.memoizedProps,
                    t.state = e.memoizedState,
                    t.componentWillUnmount()
                } catch (n) {
                    yl(e, n)
                }
            }(t, n);
            break;
        case 5:
            ts(t);
            break;
        case 4:
            cs(e, t, n)
        }
    }
    function ss(e) {
        var t = e.alternate;
        e.return = null,
        e.child = null,
        e.memoizedState = null,
        e.updateQueue = null,
        e.dependencies = null,
        e.alternate = null,
        e.firstEffect = null,
        e.lastEffect = null,
        e.pendingProps = null,
        e.memoizedProps = null,
        e.stateNode = null,
        null !== t && ss(t)
    }
    function ls(e) {
        return 5 === e.tag || 3 === e.tag || 4 === e.tag
    }
    function us(e) {
        e: {
            for (var t = e.return; null !== t; ) {
                if (ls(t)) {
                    var n = t;
                    break e
                }
                t = t.return
            }
            throw Error(o(160))
        }
        switch (t = n.stateNode,
        n.tag) {
        case 5:
            var r = !1;
            break;
        case 3:
        case 4:
            t = t.containerInfo,
            r = !0;
            break;
        default:
            throw Error(o(161))
        }
        16 & n.effectTag && (Ge(t, ""),
        n.effectTag &= -17);
        e: t: for (n = e; ; ) {
            for (; null === n.sibling; ) {
                if (null === n.return || ls(n.return)) {
                    n = null;
                    break e
                }
                n = n.return
            }
            for (n.sibling.return = n.return,
            n = n.sibling; 5 !== n.tag && 6 !== n.tag && 18 !== n.tag; ) {
                if (2 & n.effectTag)
                    continue t;
                if (null === n.child || 4 === n.tag)
                    continue t;
                n.child.return = n,
                n = n.child
            }
            if (!(2 & n.effectTag)) {
                n = n.stateNode;
                break e
            }
        }
        r ? function e(t, n, r) {
            var i = t.tag
              , a = 5 === i || 6 === i;
            if (a)
                t = a ? t.stateNode : t.stateNode.instance,
                n ? 8 === r.nodeType ? r.parentNode.insertBefore(t, n) : r.insertBefore(t, n) : (8 === r.nodeType ? (n = r.parentNode).insertBefore(t, r) : (n = r).appendChild(t),
                null !== (r = r._reactRootContainer) && void 0 !== r || null !== n.onclick || (n.onclick = un));
            else if (4 !== i && null !== (t = t.child))
                for (e(t, n, r),
                t = t.sibling; null !== t; )
                    e(t, n, r),
                    t = t.sibling
        }(e, n, t) : function e(t, n, r) {
            var i = t.tag
              , a = 5 === i || 6 === i;
            if (a)
                t = a ? t.stateNode : t.stateNode.instance,
                n ? r.insertBefore(t, n) : r.appendChild(t);
            else if (4 !== i && null !== (t = t.child))
                for (e(t, n, r),
                t = t.sibling; null !== t; )
                    e(t, n, r),
                    t = t.sibling
        }(e, n, t)
    }
    function cs(e, t, n) {
        for (var r, i, a = t, s = !1; ; ) {
            if (!s) {
                s = a.return;
                e: for (; ; ) {
                    if (null === s)
                        throw Error(o(160));
                    switch (r = s.stateNode,
                    s.tag) {
                    case 5:
                        i = !1;
                        break e;
                    case 3:
                    case 4:
                        r = r.containerInfo,
                        i = !0;
                        break e
                    }
                    s = s.return
                }
                s = !0
            }
            if (5 === a.tag || 6 === a.tag) {
                e: for (var l = e, u = a, c = n, h = u; ; )
                    if (os(l, h, c),
                    null !== h.child && 4 !== h.tag)
                        h.child.return = h,
                        h = h.child;
                    else {
                        if (h === u)
                            break e;
                        for (; null === h.sibling; ) {
                            if (null === h.return || h.return === u)
                                break e;
                            h = h.return
                        }
                        h.sibling.return = h.return,
                        h = h.sibling
                    }
                i ? (l = r,
                u = a.stateNode,
                8 === l.nodeType ? l.parentNode.removeChild(u) : l.removeChild(u)) : r.removeChild(a.stateNode)
            } else if (4 === a.tag) {
                if (null !== a.child) {
                    r = a.stateNode.containerInfo,
                    i = !0,
                    a.child.return = a,
                    a = a.child;
                    continue
                }
            } else if (os(e, a, n),
            null !== a.child) {
                a.child.return = a,
                a = a.child;
                continue
            }
            if (a === t)
                break;
            for (; null === a.sibling; ) {
                if (null === a.return || a.return === t)
                    return;
                4 === (a = a.return).tag && (s = !1)
            }
            a.sibling.return = a.return,
            a = a.sibling
        }
    }
    function hs(e, t) {
        switch (t.tag) {
        case 0:
        case 11:
        case 14:
        case 15:
        case 22:
            return void rs(3, t);
        case 1:
            return;
        case 5:
            var n = t.stateNode;
            if (null != n) {
                var r = t.memoizedProps
                  , i = null !== e ? e.memoizedProps : r;
                e = t.type;
                var a = t.updateQueue;
                if (t.updateQueue = null,
                null !== a) {
                    for (n[Mn] = r,
                    "input" === e && "radio" === r.type && null != r.name && Ee(n, r),
                    on(e, i),
                    t = on(e, r),
                    i = 0; i < a.length; i += 2) {
                        var s = a[i]
                          , l = a[i + 1];
                        "style" === s ? nn(n, l) : "dangerouslySetInnerHTML" === s ? ze(n, l) : "children" === s ? Ge(n, l) : J(n, s, l, t)
                    }
                    switch (e) {
                    case "input":
                        Me(n, r);
                        break;
                    case "textarea":
                        ke(n, r);
                        break;
                    case "select":
                        t = n._wrapperState.wasMultiple,
                        n._wrapperState.wasMultiple = !!r.multiple,
                        null != (e = r.value) ? Ce(n, !!r.multiple, e, !1) : t !== !!r.multiple && (null != r.defaultValue ? Ce(n, !!r.multiple, r.defaultValue, !0) : Ce(n, !!r.multiple, r.multiple ? [] : "", !1))
                    }
                }
            }
            return;
        case 6:
            if (null === t.stateNode)
                throw Error(o(162));
            return void (t.stateNode.nodeValue = t.memoizedProps);
        case 3:
            return void ((t = t.stateNode).hydrate && (t.hydrate = !1,
            Ft(t.containerInfo)));
        case 12:
            return;
        case 13:
            if (n = t,
            null === t.memoizedState ? r = !1 : (r = !0,
            n = t.child,
            Is = zi()),
            null !== n)
                e: for (e = n; ; ) {
                    if (5 === e.tag)
                        a = e.stateNode,
                        r ? "function" === typeof (a = a.style).setProperty ? a.setProperty("display", "none", "important") : a.display = "none" : (a = e.stateNode,
                        i = void 0 !== (i = e.memoizedProps.style) && null !== i && i.hasOwnProperty("display") ? i.display : null,
                        a.style.display = tn("display", i));
                    else if (6 === e.tag)
                        e.stateNode.nodeValue = r ? "" : e.memoizedProps;
                    else {
                        if (13 === e.tag && null !== e.memoizedState && null === e.memoizedState.dehydrated) {
                            (a = e.child.sibling).return = e,
                            e = a;
                            continue
                        }
                        if (null !== e.child) {
                            e.child.return = e,
                            e = e.child;
                            continue
                        }
                    }
                    if (e === n)
                        break;
                    for (; null === e.sibling; ) {
                        if (null === e.return || e.return === n)
                            break e;
                        e = e.return
                    }
                    e.sibling.return = e.return,
                    e = e.sibling
                }
            return void ps(t);
        case 19:
            return void ps(t);
        case 17:
            return
        }
        throw Error(o(163))
    }
    function ps(e) {
        var t = e.updateQueue;
        if (null !== t) {
            e.updateQueue = null;
            var n = e.stateNode;
            null === n && (n = e.stateNode = new Qo),
            t.forEach((function(t) {
                var r = xl.bind(null, e, t);
                n.has(t) || (n.add(t),
                t.then(r, r))
            }
            ))
        }
    }
    var fs = "function" === typeof WeakMap ? WeakMap : Map;
    function ds(e, t, n) {
        (n = sa(n, null)).tag = 3,
        n.payload = {
            element: null
        };
        var r = t.value;
        return n.callback = function() {
            Fs || (Fs = !0,
            Ns = r),
            es(e, t)
        }
        ,
        n
    }
    function ms(e, t, n) {
        (n = sa(n, null)).tag = 3;
        var r = e.type.getDerivedStateFromError;
        if ("function" === typeof r) {
            var i = t.value;
            n.payload = function() {
                return es(e, t),
                r(i)
            }
        }
        var a = e.stateNode;
        return null !== a && "function" === typeof a.componentDidCatch && (n.callback = function() {
            "function" !== typeof r && (null === Bs ? Bs = new Set([this]) : Bs.add(this),
            es(e, t));
            var n = t.stack;
            this.componentDidCatch(t.value, {
                componentStack: null !== n ? n : ""
            })
        }
        ),
        n
    }
    var gs, vs = Math.ceil, ys = $.ReactCurrentDispatcher, bs = $.ReactCurrentOwner, xs = 0, ws = 3, _s = 4, Ss = 0, Es = null, Ms = null, Ts = 0, As = xs, Ps = null, Cs = 1073741823, Ls = 1073741823, Rs = null, ks = 0, Ds = !1, Is = 0, Os = null, Fs = !1, Ns = null, Bs = null, zs = !1, Gs = null, Hs = 90, Vs = null, js = 0, Us = null, Ws = 0;
    function qs() {
        return 0 !== (48 & Ss) ? 1073741821 - (zi() / 10 | 0) : 0 !== Ws ? Ws : Ws = 1073741821 - (zi() / 10 | 0)
    }
    function Xs(e, t, n) {
        if (0 === (2 & (t = t.mode)))
            return 1073741823;
        var r = Gi();
        if (0 === (4 & t))
            return 99 === r ? 1073741823 : 1073741822;
        if (0 !== (16 & Ss))
            return Ts;
        if (null !== n)
            e = Xi(e, 0 | n.timeoutMs || 5e3, 250);
        else
            switch (r) {
            case 99:
                e = 1073741823;
                break;
            case 98:
                e = Xi(e, 150, 100);
                break;
            case 97:
            case 96:
                e = Xi(e, 5e3, 250);
                break;
            case 95:
                e = 2;
                break;
            default:
                throw Error(o(326))
            }
        return null !== Es && e === Ts && --e,
        e
    }
    function Ys(e, t) {
        if (50 < js)
            throw js = 0,
            Us = null,
            Error(o(185));
        if (null !== (e = Zs(e, t))) {
            var n = Gi();
            1073741823 === t ? 0 !== (8 & Ss) && 0 === (48 & Ss) ? Qs(e) : (Js(e),
            0 === Ss && Wi()) : Js(e),
            0 === (4 & Ss) || 98 !== n && 99 !== n || (null === Vs ? Vs = new Map([[e, t]]) : (void 0 === (n = Vs.get(e)) || n > t) && Vs.set(e, t))
        }
    }
    function Zs(e, t) {
        e.expirationTime < t && (e.expirationTime = t);
        var n = e.alternate;
        null !== n && n.expirationTime < t && (n.expirationTime = t);
        var r = e.return
          , i = null;
        if (null === r && 3 === e.tag)
            i = e.stateNode;
        else
            for (; null !== r; ) {
                if (n = r.alternate,
                r.childExpirationTime < t && (r.childExpirationTime = t),
                null !== n && n.childExpirationTime < t && (n.childExpirationTime = t),
                null === r.return && 3 === r.tag) {
                    i = r.stateNode;
                    break
                }
                r = r.return
            }
        return null !== i && (Es === i && (ol(t),
        As === _s && Dl(i, Ts)),
        Il(i, t)),
        i
    }
    function $s(e) {
        var t = e.lastExpiredTime;
        if (0 !== t)
            return t;
        if (!kl(e, t = e.firstPendingTime))
            return t;
        var n = e.lastPingedTime;
        return 2 >= (e = n > (e = e.nextKnownPendingLevel) ? n : e) && t !== e ? 0 : e
    }
    function Js(e) {
        if (0 !== e.lastExpiredTime)
            e.callbackExpirationTime = 1073741823,
            e.callbackPriority = 99,
            e.callbackNode = Ui(Qs.bind(null, e));
        else {
            var t = $s(e)
              , n = e.callbackNode;
            if (0 === t)
                null !== n && (e.callbackNode = null,
                e.callbackExpirationTime = 0,
                e.callbackPriority = 90);
            else {
                var r = qs();
                if (1073741823 === t ? r = 99 : 1 === t || 2 === t ? r = 95 : r = 0 >= (r = 10 * (1073741821 - t) - 10 * (1073741821 - r)) ? 99 : 250 >= r ? 98 : 5250 >= r ? 97 : 95,
                null !== n) {
                    var i = e.callbackPriority;
                    if (e.callbackExpirationTime === t && i >= r)
                        return;
                    n !== ki && Si(n)
                }
                e.callbackExpirationTime = t,
                e.callbackPriority = r,
                t = 1073741823 === t ? Ui(Qs.bind(null, e)) : ji(r, Ks.bind(null, e), {
                    timeout: 10 * (1073741821 - t) - zi()
                }),
                e.callbackNode = t
            }
        }
    }
    function Ks(e, t) {
        if (Ws = 0,
        t)
            return Ol(e, t = qs()),
            Js(e),
            null;
        var n = $s(e);
        if (0 !== n) {
            if (t = e.callbackNode,
            0 !== (48 & Ss))
                throw Error(o(327));
            if (ml(),
            e === Es && n === Ts || nl(e, n),
            null !== Ms) {
                var r = Ss;
                Ss |= 16;
                for (var i = il(); ; )
                    try {
                        ll();
                        break
                    } catch (l) {
                        rl(e, l)
                    }
                if (Qi(),
                Ss = r,
                ys.current = i,
                1 === As)
                    throw t = Ps,
                    nl(e, n),
                    Dl(e, n),
                    Js(e),
                    t;
                if (null === Ms)
                    switch (i = e.finishedWork = e.current.alternate,
                    e.finishedExpirationTime = n,
                    r = As,
                    Es = null,
                    r) {
                    case xs:
                    case 1:
                        throw Error(o(345));
                    case 2:
                        Ol(e, 2 < n ? 2 : n);
                        break;
                    case ws:
                        if (Dl(e, n),
                        n === (r = e.lastSuspendedTime) && (e.nextKnownPendingLevel = hl(i)),
                        1073741823 === Cs && 10 < (i = Is + 500 - zi())) {
                            if (Ds) {
                                var a = e.lastPingedTime;
                                if (0 === a || a >= n) {
                                    e.lastPingedTime = n,
                                    nl(e, n);
                                    break
                                }
                            }
                            if (0 !== (a = $s(e)) && a !== n)
                                break;
                            if (0 !== r && r !== n) {
                                e.lastPingedTime = r;
                                break
                            }
                            e.timeoutHandle = bn(pl.bind(null, e), i);
                            break
                        }
                        pl(e);
                        break;
                    case _s:
                        if (Dl(e, n),
                        n === (r = e.lastSuspendedTime) && (e.nextKnownPendingLevel = hl(i)),
                        Ds && (0 === (i = e.lastPingedTime) || i >= n)) {
                            e.lastPingedTime = n,
                            nl(e, n);
                            break
                        }
                        if (0 !== (i = $s(e)) && i !== n)
                            break;
                        if (0 !== r && r !== n) {
                            e.lastPingedTime = r;
                            break
                        }
                        if (1073741823 !== Ls ? r = 10 * (1073741821 - Ls) - zi() : 1073741823 === Cs ? r = 0 : (r = 10 * (1073741821 - Cs) - 5e3,
                        0 > (r = (i = zi()) - r) && (r = 0),
                        (n = 10 * (1073741821 - n) - i) < (r = (120 > r ? 120 : 480 > r ? 480 : 1080 > r ? 1080 : 1920 > r ? 1920 : 3e3 > r ? 3e3 : 4320 > r ? 4320 : 1960 * vs(r / 1960)) - r) && (r = n)),
                        10 < r) {
                            e.timeoutHandle = bn(pl.bind(null, e), r);
                            break
                        }
                        pl(e);
                        break;
                    case 5:
                        if (1073741823 !== Cs && null !== Rs) {
                            a = Cs;
                            var s = Rs;
                            if (0 >= (r = 0 | s.busyMinDurationMs) ? r = 0 : (i = 0 | s.busyDelayMs,
                            r = (a = zi() - (10 * (1073741821 - a) - (0 | s.timeoutMs || 5e3))) <= i ? 0 : i + r - a),
                            10 < r) {
                                Dl(e, n),
                                e.timeoutHandle = bn(pl.bind(null, e), r);
                                break
                            }
                        }
                        pl(e);
                        break;
                    default:
                        throw Error(o(329))
                    }
                if (Js(e),
                e.callbackNode === t)
                    return Ks.bind(null, e)
            }
        }
        return null
    }
    function Qs(e) {
        var t = e.lastExpiredTime;
        if (t = 0 !== t ? t : 1073741823,
        0 !== (48 & Ss))
            throw Error(o(327));
        if (ml(),
        e === Es && t === Ts || nl(e, t),
        null !== Ms) {
            var n = Ss;
            Ss |= 16;
            for (var r = il(); ; )
                try {
                    sl();
                    break
                } catch (i) {
                    rl(e, i)
                }
            if (Qi(),
            Ss = n,
            ys.current = r,
            1 === As)
                throw n = Ps,
                nl(e, t),
                Dl(e, t),
                Js(e),
                n;
            if (null !== Ms)
                throw Error(o(261));
            e.finishedWork = e.current.alternate,
            e.finishedExpirationTime = t,
            Es = null,
            pl(e),
            Js(e)
        }
        return null
    }
    function el(e, t) {
        var n = Ss;
        Ss |= 1;
        try {
            return e(t)
        } finally {
            0 === (Ss = n) && Wi()
        }
    }
    function tl(e, t) {
        var n = Ss;
        Ss &= -2,
        Ss |= 8;
        try {
            return e(t)
        } finally {
            0 === (Ss = n) && Wi()
        }
    }
    function nl(e, t) {
        e.finishedWork = null,
        e.finishedExpirationTime = 0;
        var n = e.timeoutHandle;
        if (-1 !== n && (e.timeoutHandle = -1,
        xn(n)),
        null !== Ms)
            for (n = Ms.return; null !== n; ) {
                var r = n;
                switch (r.tag) {
                case 1:
                    null !== (r = r.type.childContextTypes) && void 0 !== r && gi();
                    break;
                case 3:
                    ka(),
                    li(pi),
                    li(hi);
                    break;
                case 5:
                    Ia(r);
                    break;
                case 4:
                    ka();
                    break;
                case 13:
                case 19:
                    li(Oa);
                    break;
                case 10:
                    ea(r)
                }
                n = n.return
            }
        Es = e,
        Ms = Tl(e.current, null),
        Ts = t,
        As = xs,
        Ps = null,
        Ls = Cs = 1073741823,
        Rs = null,
        ks = 0,
        Ds = !1
    }
    function rl(e, t) {
        for (; ; ) {
            try {
                if (Qi(),
                Ba.current = go,
                Ua)
                    for (var n = Ha.memoizedState; null !== n; ) {
                        var r = n.queue;
                        null !== r && (r.pending = null),
                        n = n.next
                    }
                if (Ga = 0,
                ja = Va = Ha = null,
                Ua = !1,
                null === Ms || null === Ms.return)
                    return As = 1,
                    Ps = t,
                    Ms = null;
                e: {
                    var i = e
                      , a = Ms.return
                      , o = Ms
                      , s = t;
                    if (t = Ts,
                    o.effectTag |= 2048,
                    o.firstEffect = o.lastEffect = null,
                    null !== s && "object" === typeof s && "function" === typeof s.then) {
                        var l = s;
                        if (0 === (2 & o.mode)) {
                            var u = o.alternate;
                            u ? (o.updateQueue = u.updateQueue,
                            o.memoizedState = u.memoizedState,
                            o.expirationTime = u.expirationTime) : (o.updateQueue = null,
                            o.memoizedState = null)
                        }
                        var c = 0 !== (1 & Oa.current)
                          , h = a;
                        do {
                            var p;
                            if (p = 13 === h.tag) {
                                var f = h.memoizedState;
                                if (null !== f)
                                    p = null !== f.dehydrated;
                                else {
                                    var d = h.memoizedProps;
                                    p = void 0 !== d.fallback && (!0 !== d.unstable_avoidThisFallback || !c)
                                }
                            }
                            if (p) {
                                var m = h.updateQueue;
                                if (null === m) {
                                    var g = new Set;
                                    g.add(l),
                                    h.updateQueue = g
                                } else
                                    m.add(l);
                                if (0 === (2 & h.mode)) {
                                    if (h.effectTag |= 64,
                                    o.effectTag &= -2981,
                                    1 === o.tag)
                                        if (null === o.alternate)
                                            o.tag = 17;
                                        else {
                                            var v = sa(1073741823, null);
                                            v.tag = 2,
                                            la(o, v)
                                        }
                                    o.expirationTime = 1073741823;
                                    break e
                                }
                                s = void 0,
                                o = t;
                                var y = i.pingCache;
                                if (null === y ? (y = i.pingCache = new fs,
                                s = new Set,
                                y.set(l, s)) : void 0 === (s = y.get(l)) && (s = new Set,
                                y.set(l, s)),
                                !s.has(o)) {
                                    s.add(o);
                                    var b = bl.bind(null, i, l, o);
                                    l.then(b, b)
                                }
                                h.effectTag |= 4096,
                                h.expirationTime = t;
                                break e
                            }
                            h = h.return
                        } while (null !== h);
                        s = Error((ge(o.type) || "A React component") + " suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display." + ve(o))
                    }
                    5 !== As && (As = 2),
                    s = Ko(s, o),
                    h = a;
                    do {
                        switch (h.tag) {
                        case 3:
                            l = s,
                            h.effectTag |= 4096,
                            h.expirationTime = t,
                            ua(h, ds(h, l, t));
                            break e;
                        case 1:
                            l = s;
                            var x = h.type
                              , w = h.stateNode;
                            if (0 === (64 & h.effectTag) && ("function" === typeof x.getDerivedStateFromError || null !== w && "function" === typeof w.componentDidCatch && (null === Bs || !Bs.has(w)))) {
                                h.effectTag |= 4096,
                                h.expirationTime = t,
                                ua(h, ms(h, l, t));
                                break e
                            }
                        }
                        h = h.return
                    } while (null !== h)
                }
                Ms = cl(Ms)
            } catch (_) {
                t = _;
                continue
            }
            break
        }
    }
    function il() {
        var e = ys.current;
        return ys.current = go,
        null === e ? go : e
    }
    function al(e, t) {
        e < Cs && 2 < e && (Cs = e),
        null !== t && e < Ls && 2 < e && (Ls = e,
        Rs = t)
    }
    function ol(e) {
        e > ks && (ks = e)
    }
    function sl() {
        for (; null !== Ms; )
            Ms = ul(Ms)
    }
    function ll() {
        for (; null !== Ms && !Di(); )
            Ms = ul(Ms)
    }
    function ul(e) {
        var t = gs(e.alternate, e, Ts);
        return e.memoizedProps = e.pendingProps,
        null === t && (t = cl(e)),
        bs.current = null,
        t
    }
    function cl(e) {
        Ms = e;
        do {
            var t = Ms.alternate;
            if (e = Ms.return,
            0 === (2048 & Ms.effectTag)) {
                if (t = $o(t, Ms, Ts),
                1 === Ts || 1 !== Ms.childExpirationTime) {
                    for (var n = 0, r = Ms.child; null !== r; ) {
                        var i = r.expirationTime
                          , a = r.childExpirationTime;
                        i > n && (n = i),
                        a > n && (n = a),
                        r = r.sibling
                    }
                    Ms.childExpirationTime = n
                }
                if (null !== t)
                    return t;
                null !== e && 0 === (2048 & e.effectTag) && (null === e.firstEffect && (e.firstEffect = Ms.firstEffect),
                null !== Ms.lastEffect && (null !== e.lastEffect && (e.lastEffect.nextEffect = Ms.firstEffect),
                e.lastEffect = Ms.lastEffect),
                1 < Ms.effectTag && (null !== e.lastEffect ? e.lastEffect.nextEffect = Ms : e.firstEffect = Ms,
                e.lastEffect = Ms))
            } else {
                if (null !== (t = Jo(Ms)))
                    return t.effectTag &= 2047,
                    t;
                null !== e && (e.firstEffect = e.lastEffect = null,
                e.effectTag |= 2048)
            }
            if (null !== (t = Ms.sibling))
                return t;
            Ms = e
        } while (null !== Ms);
        return As === xs && (As = 5),
        null
    }
    function hl(e) {
        var t = e.expirationTime;
        return t > (e = e.childExpirationTime) ? t : e
    }
    function pl(e) {
        var t = Gi();
        return Vi(99, fl.bind(null, e, t)),
        null
    }
    function fl(e, t) {
        do {
            ml()
        } while (null !== Gs);
        if (0 !== (48 & Ss))
            throw Error(o(327));
        var n = e.finishedWork
          , r = e.finishedExpirationTime;
        if (null === n)
            return null;
        if (e.finishedWork = null,
        e.finishedExpirationTime = 0,
        n === e.current)
            throw Error(o(177));
        e.callbackNode = null,
        e.callbackExpirationTime = 0,
        e.callbackPriority = 90,
        e.nextKnownPendingLevel = 0;
        var i = hl(n);
        if (e.firstPendingTime = i,
        r <= e.lastSuspendedTime ? e.firstSuspendedTime = e.lastSuspendedTime = e.nextKnownPendingLevel = 0 : r <= e.firstSuspendedTime && (e.firstSuspendedTime = r - 1),
        r <= e.lastPingedTime && (e.lastPingedTime = 0),
        r <= e.lastExpiredTime && (e.lastExpiredTime = 0),
        e === Es && (Ms = Es = null,
        Ts = 0),
        1 < n.effectTag ? null !== n.lastEffect ? (n.lastEffect.nextEffect = n,
        i = n.firstEffect) : i = n : i = n.firstEffect,
        null !== i) {
            var a = Ss;
            Ss |= 32,
            bs.current = null,
            mn = qt;
            var s = fn();
            if (dn(s)) {
                if ("selectionStart"in s)
                    var l = {
                        start: s.selectionStart,
                        end: s.selectionEnd
                    };
                else
                    e: {
                        var u = (l = (l = s.ownerDocument) && l.defaultView || window).getSelection && l.getSelection();
                        if (u && 0 !== u.rangeCount) {
                            l = u.anchorNode;
                            var c = u.anchorOffset
                              , h = u.focusNode;
                            u = u.focusOffset;
                            try {
                                l.nodeType,
                                h.nodeType
                            } catch (T) {
                                l = null;
                                break e
                            }
                            var p = 0
                              , f = -1
                              , d = -1
                              , m = 0
                              , g = 0
                              , v = s
                              , y = null;
                            t: for (; ; ) {
                                for (var b; v !== l || 0 !== c && 3 !== v.nodeType || (f = p + c),
                                v !== h || 0 !== u && 3 !== v.nodeType || (d = p + u),
                                3 === v.nodeType && (p += v.nodeValue.length),
                                null !== (b = v.firstChild); )
                                    y = v,
                                    v = b;
                                for (; ; ) {
                                    if (v === s)
                                        break t;
                                    if (y === l && ++m === c && (f = p),
                                    y === h && ++g === u && (d = p),
                                    null !== (b = v.nextSibling))
                                        break;
                                    y = (v = y).parentNode
                                }
                                v = b
                            }
                            l = -1 === f || -1 === d ? null : {
                                start: f,
                                end: d
                            }
                        } else
                            l = null
                    }
                l = l || {
                    start: 0,
                    end: 0
                }
            } else
                l = null;
            gn = {
                activeElementDetached: null,
                focusedElem: s,
                selectionRange: l
            },
            qt = !1,
            Os = i;
            do {
                try {
                    dl()
                } catch (T) {
                    if (null === Os)
                        throw Error(o(330));
                    yl(Os, T),
                    Os = Os.nextEffect
                }
            } while (null !== Os);
            Os = i;
            do {
                try {
                    for (s = e,
                    l = t; null !== Os; ) {
                        var x = Os.effectTag;
                        if (16 & x && Ge(Os.stateNode, ""),
                        128 & x) {
                            var w = Os.alternate;
                            if (null !== w) {
                                var _ = w.ref;
                                null !== _ && ("function" === typeof _ ? _(null) : _.current = null)
                            }
                        }
                        switch (1038 & x) {
                        case 2:
                            us(Os),
                            Os.effectTag &= -3;
                            break;
                        case 6:
                            us(Os),
                            Os.effectTag &= -3,
                            hs(Os.alternate, Os);
                            break;
                        case 1024:
                            Os.effectTag &= -1025;
                            break;
                        case 1028:
                            Os.effectTag &= -1025,
                            hs(Os.alternate, Os);
                            break;
                        case 4:
                            hs(Os.alternate, Os);
                            break;
                        case 8:
                            cs(s, c = Os, l),
                            ss(c)
                        }
                        Os = Os.nextEffect
                    }
                } catch (T) {
                    if (null === Os)
                        throw Error(o(330));
                    yl(Os, T),
                    Os = Os.nextEffect
                }
            } while (null !== Os);
            if (_ = gn,
            w = fn(),
            x = _.focusedElem,
            l = _.selectionRange,
            w !== x && x && x.ownerDocument && function e(t, n) {
                return !(!t || !n) && (t === n || (!t || 3 !== t.nodeType) && (n && 3 === n.nodeType ? e(t, n.parentNode) : "contains"in t ? t.contains(n) : !!t.compareDocumentPosition && !!(16 & t.compareDocumentPosition(n))))
            }(x.ownerDocument.documentElement, x)) {
                null !== l && dn(x) && (w = l.start,
                void 0 === (_ = l.end) && (_ = w),
                "selectionStart"in x ? (x.selectionStart = w,
                x.selectionEnd = Math.min(_, x.value.length)) : (_ = (w = x.ownerDocument || document) && w.defaultView || window).getSelection && (_ = _.getSelection(),
                c = x.textContent.length,
                s = Math.min(l.start, c),
                l = void 0 === l.end ? s : Math.min(l.end, c),
                !_.extend && s > l && (c = l,
                l = s,
                s = c),
                c = pn(x, s),
                h = pn(x, l),
                c && h && (1 !== _.rangeCount || _.anchorNode !== c.node || _.anchorOffset !== c.offset || _.focusNode !== h.node || _.focusOffset !== h.offset) && ((w = w.createRange()).setStart(c.node, c.offset),
                _.removeAllRanges(),
                s > l ? (_.addRange(w),
                _.extend(h.node, h.offset)) : (w.setEnd(h.node, h.offset),
                _.addRange(w))))),
                w = [];
                for (_ = x; _ = _.parentNode; )
                    1 === _.nodeType && w.push({
                        element: _,
                        left: _.scrollLeft,
                        top: _.scrollTop
                    });
                for ("function" === typeof x.focus && x.focus(),
                x = 0; x < w.length; x++)
                    (_ = w[x]).element.scrollLeft = _.left,
                    _.element.scrollTop = _.top
            }
            qt = !!mn,
            gn = mn = null,
            e.current = n,
            Os = i;
            do {
                try {
                    for (x = e; null !== Os; ) {
                        var S = Os.effectTag;
                        if (36 & S && as(x, Os.alternate, Os),
                        128 & S) {
                            w = void 0;
                            var E = Os.ref;
                            if (null !== E) {
                                var M = Os.stateNode;
                                switch (Os.tag) {
                                case 5:
                                    w = M;
                                    break;
                                default:
                                    w = M
                                }
                                "function" === typeof E ? E(w) : E.current = w
                            }
                        }
                        Os = Os.nextEffect
                    }
                } catch (T) {
                    if (null === Os)
                        throw Error(o(330));
                    yl(Os, T),
                    Os = Os.nextEffect
                }
            } while (null !== Os);
            Os = null,
            Ii(),
            Ss = a
        } else
            e.current = n;
        if (zs)
            zs = !1,
            Gs = e,
            Hs = t;
        else
            for (Os = i; null !== Os; )
                t = Os.nextEffect,
                Os.nextEffect = null,
                Os = t;
        if (0 === (t = e.firstPendingTime) && (Bs = null),
        1073741823 === t ? e === Us ? js++ : (js = 0,
        Us = e) : js = 0,
        "function" === typeof wl && wl(n.stateNode, r),
        Js(e),
        Fs)
            throw Fs = !1,
            e = Ns,
            Ns = null,
            e;
        return 0 !== (8 & Ss) || Wi(),
        null
    }
    function dl() {
        for (; null !== Os; ) {
            var e = Os.effectTag;
            0 !== (256 & e) && ns(Os.alternate, Os),
            0 === (512 & e) || zs || (zs = !0,
            ji(97, (function() {
                return ml(),
                null
            }
            ))),
            Os = Os.nextEffect
        }
    }
    function ml() {
        if (90 !== Hs) {
            var e = 97 < Hs ? 97 : Hs;
            return Hs = 90,
            Vi(e, gl)
        }
    }
    function gl() {
        if (null === Gs)
            return !1;
        var e = Gs;
        if (Gs = null,
        0 !== (48 & Ss))
            throw Error(o(331));
        var t = Ss;
        for (Ss |= 32,
        e = e.current.firstEffect; null !== e; ) {
            try {
                var n = e;
                if (0 !== (512 & n.effectTag))
                    switch (n.tag) {
                    case 0:
                    case 11:
                    case 15:
                    case 22:
                        rs(5, n),
                        is(5, n)
                    }
            } catch (r) {
                if (null === e)
                    throw Error(o(330));
                yl(e, r)
            }
            n = e.nextEffect,
            e.nextEffect = null,
            e = n
        }
        return Ss = t,
        Wi(),
        !0
    }
    function vl(e, t, n) {
        la(e, t = ds(e, t = Ko(n, t), 1073741823)),
        null !== (e = Zs(e, 1073741823)) && Js(e)
    }
    function yl(e, t) {
        if (3 === e.tag)
            vl(e, e, t);
        else
            for (var n = e.return; null !== n; ) {
                if (3 === n.tag) {
                    vl(n, e, t);
                    break
                }
                if (1 === n.tag) {
                    var r = n.stateNode;
                    if ("function" === typeof n.type.getDerivedStateFromError || "function" === typeof r.componentDidCatch && (null === Bs || !Bs.has(r))) {
                        la(n, e = ms(n, e = Ko(t, e), 1073741823)),
                        null !== (n = Zs(n, 1073741823)) && Js(n);
                        break
                    }
                }
                n = n.return
            }
    }
    function bl(e, t, n) {
        var r = e.pingCache;
        null !== r && r.delete(t),
        Es === e && Ts === n ? As === _s || As === ws && 1073741823 === Cs && zi() - Is < 500 ? nl(e, Ts) : Ds = !0 : kl(e, n) && (0 !== (t = e.lastPingedTime) && t < n || (e.lastPingedTime = n,
        Js(e)))
    }
    function xl(e, t) {
        var n = e.stateNode;
        null !== n && n.delete(t),
        0 === (t = 0) && (t = Xs(t = qs(), e, null)),
        null !== (e = Zs(e, t)) && Js(e)
    }
    gs = function(e, t, n) {
        var r = t.expirationTime;
        if (null !== e) {
            var i = t.pendingProps;
            if (e.memoizedProps !== i || pi.current)
                Lo = !0;
            else {
                if (r < n) {
                    switch (Lo = !1,
                    t.tag) {
                    case 3:
                        zo(t),
                        Po();
                        break;
                    case 5:
                        if (Da(t),
                        4 & t.mode && 1 !== n && i.hidden)
                            return t.expirationTime = t.childExpirationTime = 1,
                            null;
                        break;
                    case 1:
                        mi(t.type) && bi(t);
                        break;
                    case 4:
                        Ra(t, t.stateNode.containerInfo);
                        break;
                    case 10:
                        r = t.memoizedProps.value,
                        i = t.type._context,
                        ui(Zi, i._currentValue),
                        i._currentValue = r;
                        break;
                    case 13:
                        if (null !== t.memoizedState)
                            return 0 !== (r = t.child.childExpirationTime) && r >= n ? Uo(e, t, n) : (ui(Oa, 1 & Oa.current),
                            null !== (t = Yo(e, t, n)) ? t.sibling : null);
                        ui(Oa, 1 & Oa.current);
                        break;
                    case 19:
                        if (r = t.childExpirationTime >= n,
                        0 !== (64 & e.effectTag)) {
                            if (r)
                                return Xo(e, t, n);
                            t.effectTag |= 64
                        }
                        if (null !== (i = t.memoizedState) && (i.rendering = null,
                        i.tail = null),
                        ui(Oa, Oa.current),
                        !r)
                            return null
                    }
                    return Yo(e, t, n)
                }
                Lo = !1
            }
        } else
            Lo = !1;
        switch (t.expirationTime = 0,
        t.tag) {
        case 2:
            if (r = t.type,
            null !== e && (e.alternate = null,
            t.alternate = null,
            t.effectTag |= 2),
            e = t.pendingProps,
            i = di(t, hi.current),
            na(t, n),
            i = Xa(null, t, r, e, i, n),
            t.effectTag |= 1,
            "object" === typeof i && null !== i && "function" === typeof i.render && void 0 === i.$$typeof) {
                if (t.tag = 1,
                t.memoizedState = null,
                t.updateQueue = null,
                mi(r)) {
                    var a = !0;
                    bi(t)
                } else
                    a = !1;
                t.memoizedState = null !== i.state && void 0 !== i.state ? i.state : null,
                aa(t);
                var s = r.getDerivedStateFromProps;
                "function" === typeof s && da(t, r, s, e),
                i.updater = ma,
                t.stateNode = i,
                i._reactInternalFiber = t,
                ba(t, r, e, n),
                t = Bo(null, t, r, !0, a, n)
            } else
                t.tag = 0,
                Ro(null, t, i, n),
                t = t.child;
            return t;
        case 16:
            e: {
                if (i = t.elementType,
                null !== e && (e.alternate = null,
                t.alternate = null,
                t.effectTag |= 2),
                e = t.pendingProps,
                function(e) {
                    if (-1 === e._status) {
                        e._status = 0;
                        var t = e._ctor;
                        t = t(),
                        e._result = t,
                        t.then((function(t) {
                            0 === e._status && (t = t.default,
                            e._status = 1,
                            e._result = t)
                        }
                        ), (function(t) {
                            0 === e._status && (e._status = 2,
                            e._result = t)
                        }
                        ))
                    }
                }(i),
                1 !== i._status)
                    throw i._result;
                switch (i = i._result,
                t.type = i,
                a = t.tag = function(e) {
                    if ("function" === typeof e)
                        return Ml(e) ? 1 : 0;
                    if (void 0 !== e && null !== e) {
                        if ((e = e.$$typeof) === le)
                            return 11;
                        if (e === he)
                            return 14
                    }
                    return 2
                }(i),
                e = Yi(i, e),
                a) {
                case 0:
                    t = Fo(null, t, i, e, n);
                    break e;
                case 1:
                    t = No(null, t, i, e, n);
                    break e;
                case 11:
                    t = ko(null, t, i, e, n);
                    break e;
                case 14:
                    t = Do(null, t, i, Yi(i.type, e), r, n);
                    break e
                }
                throw Error(o(306, i, ""))
            }
            return t;
        case 0:
            return r = t.type,
            i = t.pendingProps,
            Fo(e, t, r, i = t.elementType === r ? i : Yi(r, i), n);
        case 1:
            return r = t.type,
            i = t.pendingProps,
            No(e, t, r, i = t.elementType === r ? i : Yi(r, i), n);
        case 3:
            if (zo(t),
            r = t.updateQueue,
            null === e || null === r)
                throw Error(o(282));
            if (r = t.pendingProps,
            i = null !== (i = t.memoizedState) ? i.element : null,
            oa(e, t),
            ca(t, r, null, n),
            (r = t.memoizedState.element) === i)
                Po(),
                t = Yo(e, t, n);
            else {
                if ((i = t.stateNode.hydrate) && (wo = wn(t.stateNode.containerInfo.firstChild),
                xo = t,
                i = _o = !0),
                i)
                    for (n = Ma(t, null, r, n),
                    t.child = n; n; )
                        n.effectTag = -3 & n.effectTag | 1024,
                        n = n.sibling;
                else
                    Ro(e, t, r, n),
                    Po();
                t = t.child
            }
            return t;
        case 5:
            return Da(t),
            null === e && Mo(t),
            r = t.type,
            i = t.pendingProps,
            a = null !== e ? e.memoizedProps : null,
            s = i.children,
            yn(r, i) ? s = null : null !== a && yn(r, a) && (t.effectTag |= 16),
            Oo(e, t),
            4 & t.mode && 1 !== n && i.hidden ? (t.expirationTime = t.childExpirationTime = 1,
            t = null) : (Ro(e, t, s, n),
            t = t.child),
            t;
        case 6:
            return null === e && Mo(t),
            null;
        case 13:
            return Uo(e, t, n);
        case 4:
            return Ra(t, t.stateNode.containerInfo),
            r = t.pendingProps,
            null === e ? t.child = Ea(t, null, r, n) : Ro(e, t, r, n),
            t.child;
        case 11:
            return r = t.type,
            i = t.pendingProps,
            ko(e, t, r, i = t.elementType === r ? i : Yi(r, i), n);
        case 7:
            return Ro(e, t, t.pendingProps, n),
            t.child;
        case 8:
        case 12:
            return Ro(e, t, t.pendingProps.children, n),
            t.child;
        case 10:
            e: {
                r = t.type._context,
                i = t.pendingProps,
                s = t.memoizedProps,
                a = i.value;
                var l = t.type._context;
                if (ui(Zi, l._currentValue),
                l._currentValue = a,
                null !== s)
                    if (l = s.value,
                    0 === (a = Nr(l, a) ? 0 : 0 | ("function" === typeof r._calculateChangedBits ? r._calculateChangedBits(l, a) : 1073741823))) {
                        if (s.children === i.children && !pi.current) {
                            t = Yo(e, t, n);
                            break e
                        }
                    } else
                        for (null !== (l = t.child) && (l.return = t); null !== l; ) {
                            var u = l.dependencies;
                            if (null !== u) {
                                s = l.child;
                                for (var c = u.firstContext; null !== c; ) {
                                    if (c.context === r && 0 !== (c.observedBits & a)) {
                                        1 === l.tag && ((c = sa(n, null)).tag = 2,
                                        la(l, c)),
                                        l.expirationTime < n && (l.expirationTime = n),
                                        null !== (c = l.alternate) && c.expirationTime < n && (c.expirationTime = n),
                                        ta(l.return, n),
                                        u.expirationTime < n && (u.expirationTime = n);
                                        break
                                    }
                                    c = c.next
                                }
                            } else
                                s = 10 === l.tag && l.type === t.type ? null : l.child;
                            if (null !== s)
                                s.return = l;
                            else
                                for (s = l; null !== s; ) {
                                    if (s === t) {
                                        s = null;
                                        break
                                    }
                                    if (null !== (l = s.sibling)) {
                                        l.return = s.return,
                                        s = l;
                                        break
                                    }
                                    s = s.return
                                }
                            l = s
                        }
                Ro(e, t, i.children, n),
                t = t.child
            }
            return t;
        case 9:
            return i = t.type,
            r = (a = t.pendingProps).children,
            na(t, n),
            r = r(i = ra(i, a.unstable_observedBits)),
            t.effectTag |= 1,
            Ro(e, t, r, n),
            t.child;
        case 14:
            return a = Yi(i = t.type, t.pendingProps),
            Do(e, t, i, a = Yi(i.type, a), r, n);
        case 15:
            return Io(e, t, t.type, t.pendingProps, r, n);
        case 17:
            return r = t.type,
            i = t.pendingProps,
            i = t.elementType === r ? i : Yi(r, i),
            null !== e && (e.alternate = null,
            t.alternate = null,
            t.effectTag |= 2),
            t.tag = 1,
            mi(r) ? (e = !0,
            bi(t)) : e = !1,
            na(t, n),
            va(t, r, i),
            ba(t, r, i, n),
            Bo(null, t, r, !0, e, n);
        case 19:
            return Xo(e, t, n)
        }
        throw Error(o(156, t.tag))
    }
    ;
    var wl = null
      , _l = null;
    function Sl(e, t, n, r) {
        this.tag = e,
        this.key = n,
        this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null,
        this.index = 0,
        this.ref = null,
        this.pendingProps = t,
        this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null,
        this.mode = r,
        this.effectTag = 0,
        this.lastEffect = this.firstEffect = this.nextEffect = null,
        this.childExpirationTime = this.expirationTime = 0,
        this.alternate = null
    }
    function El(e, t, n, r) {
        return new Sl(e,t,n,r)
    }
    function Ml(e) {
        return !(!(e = e.prototype) || !e.isReactComponent)
    }
    function Tl(e, t) {
        var n = e.alternate;
        return null === n ? ((n = El(e.tag, t, e.key, e.mode)).elementType = e.elementType,
        n.type = e.type,
        n.stateNode = e.stateNode,
        n.alternate = e,
        e.alternate = n) : (n.pendingProps = t,
        n.effectTag = 0,
        n.nextEffect = null,
        n.firstEffect = null,
        n.lastEffect = null),
        n.childExpirationTime = e.childExpirationTime,
        n.expirationTime = e.expirationTime,
        n.child = e.child,
        n.memoizedProps = e.memoizedProps,
        n.memoizedState = e.memoizedState,
        n.updateQueue = e.updateQueue,
        t = e.dependencies,
        n.dependencies = null === t ? null : {
            expirationTime: t.expirationTime,
            firstContext: t.firstContext,
            responders: t.responders
        },
        n.sibling = e.sibling,
        n.index = e.index,
        n.ref = e.ref,
        n
    }
    function Al(e, t, n, r, i, a) {
        var s = 2;
        if (r = e,
        "function" === typeof e)
            Ml(e) && (s = 1);
        else if ("string" === typeof e)
            s = 5;
        else
            e: switch (e) {
            case ne:
                return Pl(n.children, i, a, t);
            case se:
                s = 8,
                i |= 7;
                break;
            case re:
                s = 8,
                i |= 1;
                break;
            case ie:
                return (e = El(12, n, t, 8 | i)).elementType = ie,
                e.type = ie,
                e.expirationTime = a,
                e;
            case ue:
                return (e = El(13, n, t, i)).type = ue,
                e.elementType = ue,
                e.expirationTime = a,
                e;
            case ce:
                return (e = El(19, n, t, i)).elementType = ce,
                e.expirationTime = a,
                e;
            default:
                if ("object" === typeof e && null !== e)
                    switch (e.$$typeof) {
                    case ae:
                        s = 10;
                        break e;
                    case oe:
                        s = 9;
                        break e;
                    case le:
                        s = 11;
                        break e;
                    case he:
                        s = 14;
                        break e;
                    case pe:
                        s = 16,
                        r = null;
                        break e;
                    case fe:
                        s = 22;
                        break e
                    }
                throw Error(o(130, null == e ? e : typeof e, ""))
            }
        return (t = El(s, n, t, i)).elementType = e,
        t.type = r,
        t.expirationTime = a,
        t
    }
    function Pl(e, t, n, r) {
        return (e = El(7, e, r, t)).expirationTime = n,
        e
    }
    function Cl(e, t, n) {
        return (e = El(6, e, null, t)).expirationTime = n,
        e
    }
    function Ll(e, t, n) {
        return (t = El(4, null !== e.children ? e.children : [], e.key, t)).expirationTime = n,
        t.stateNode = {
            containerInfo: e.containerInfo,
            pendingChildren: null,
            implementation: e.implementation
        },
        t
    }
    function Rl(e, t, n) {
        this.tag = t,
        this.current = null,
        this.containerInfo = e,
        this.pingCache = this.pendingChildren = null,
        this.finishedExpirationTime = 0,
        this.finishedWork = null,
        this.timeoutHandle = -1,
        this.pendingContext = this.context = null,
        this.hydrate = n,
        this.callbackNode = null,
        this.callbackPriority = 90,
        this.lastExpiredTime = this.lastPingedTime = this.nextKnownPendingLevel = this.lastSuspendedTime = this.firstSuspendedTime = this.firstPendingTime = 0
    }
    function kl(e, t) {
        var n = e.firstSuspendedTime;
        return e = e.lastSuspendedTime,
        0 !== n && n >= t && e <= t
    }
    function Dl(e, t) {
        var n = e.firstSuspendedTime
          , r = e.lastSuspendedTime;
        n < t && (e.firstSuspendedTime = t),
        (r > t || 0 === n) && (e.lastSuspendedTime = t),
        t <= e.lastPingedTime && (e.lastPingedTime = 0),
        t <= e.lastExpiredTime && (e.lastExpiredTime = 0)
    }
    function Il(e, t) {
        t > e.firstPendingTime && (e.firstPendingTime = t);
        var n = e.firstSuspendedTime;
        0 !== n && (t >= n ? e.firstSuspendedTime = e.lastSuspendedTime = e.nextKnownPendingLevel = 0 : t >= e.lastSuspendedTime && (e.lastSuspendedTime = t + 1),
        t > e.nextKnownPendingLevel && (e.nextKnownPendingLevel = t))
    }
    function Ol(e, t) {
        var n = e.lastExpiredTime;
        (0 === n || n > t) && (e.lastExpiredTime = t)
    }
    function Fl(e, t, n, r) {
        var i = t.current
          , a = qs()
          , s = pa.suspense;
        a = Xs(a, i, s);
        e: if (n) {
            t: {
                if (Qe(n = n._reactInternalFiber) !== n || 1 !== n.tag)
                    throw Error(o(170));
                var l = n;
                do {
                    switch (l.tag) {
                    case 3:
                        l = l.stateNode.context;
                        break t;
                    case 1:
                        if (mi(l.type)) {
                            l = l.stateNode.__reactInternalMemoizedMergedChildContext;
                            break t
                        }
                    }
                    l = l.return
                } while (null !== l);
                throw Error(o(171))
            }
            if (1 === n.tag) {
                var u = n.type;
                if (mi(u)) {
                    n = yi(n, u, l);
                    break e
                }
            }
            n = l
        } else
            n = ci;
        return null === t.context ? t.context = n : t.pendingContext = n,
        (t = sa(a, s)).payload = {
            element: e
        },
        null !== (r = void 0 === r ? null : r) && (t.callback = r),
        la(i, t),
        Ys(i, a),
        a
    }
    function Nl(e) {
        if (!(e = e.current).child)
            return null;
        switch (e.child.tag) {
        case 5:
        default:
            return e.child.stateNode
        }
    }
    function Bl(e, t) {
        null !== (e = e.memoizedState) && null !== e.dehydrated && e.retryTime < t && (e.retryTime = t)
    }
    function zl(e, t) {
        Bl(e, t),
        (e = e.alternate) && Bl(e, t)
    }
    function Gl(e, t, n) {
        var r = new Rl(e,t,n = null != n && !0 === n.hydrate)
          , i = El(3, null, null, 2 === t ? 7 : 1 === t ? 3 : 0);
        r.current = i,
        i.stateNode = r,
        aa(i),
        e[Tn] = r.current,
        n && 0 !== t && function(e, t) {
            var n = Ke(t);
            Tt.forEach((function(e) {
                dt(e, t, n)
            }
            )),
            At.forEach((function(e) {
                dt(e, t, n)
            }
            ))
        }(0, 9 === e.nodeType ? e : e.ownerDocument),
        this._internalRoot = r
    }
    function Hl(e) {
        return !(!e || 1 !== e.nodeType && 9 !== e.nodeType && 11 !== e.nodeType && (8 !== e.nodeType || " react-mount-point-unstable " !== e.nodeValue))
    }
    function Vl(e, t, n, r, i) {
        var a = n._reactRootContainer;
        if (a) {
            var o = a._internalRoot;
            if ("function" === typeof i) {
                var s = i;
                i = function() {
                    var e = Nl(o);
                    s.call(e)
                }
            }
            Fl(t, o, e, i)
        } else {
            if (a = n._reactRootContainer = function(e, t) {
                if (t || (t = !(!(t = e ? 9 === e.nodeType ? e.documentElement : e.firstChild : null) || 1 !== t.nodeType || !t.hasAttribute("data-reactroot"))),
                !t)
                    for (var n; n = e.lastChild; )
                        e.removeChild(n);
                return new Gl(e,0,t ? {
                    hydrate: !0
                } : void 0)
            }(n, r),
            o = a._internalRoot,
            "function" === typeof i) {
                var l = i;
                i = function() {
                    var e = Nl(o);
                    l.call(e)
                }
            }
            tl((function() {
                Fl(t, o, e, i)
            }
            ))
        }
        return Nl(o)
    }
    function jl(e, t, n) {
        var r = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
        return {
            $$typeof: te,
            key: null == r ? null : "" + r,
            children: e,
            containerInfo: t,
            implementation: n
        }
    }
    function Ul(e, t) {
        var n = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
        if (!Hl(t))
            throw Error(o(200));
        return jl(e, t, null, n)
    }
    Gl.prototype.render = function(e) {
        Fl(e, this._internalRoot, null, null)
    }
    ,
    Gl.prototype.unmount = function() {
        var e = this._internalRoot
          , t = e.containerInfo;
        Fl(null, e, null, (function() {
            t[Tn] = null
        }
        ))
    }
    ,
    mt = function(e) {
        if (13 === e.tag) {
            var t = Xi(qs(), 150, 100);
            Ys(e, t),
            zl(e, t)
        }
    }
    ,
    gt = function(e) {
        13 === e.tag && (Ys(e, 3),
        zl(e, 3))
    }
    ,
    vt = function(e) {
        if (13 === e.tag) {
            var t = qs();
            Ys(e, t = Xs(t, e, null)),
            zl(e, t)
        }
    }
    ,
    P = function(e, t, n) {
        switch (t) {
        case "input":
            if (Me(e, n),
            t = n.name,
            "radio" === n.type && null != t) {
                for (n = e; n.parentNode; )
                    n = n.parentNode;
                for (n = n.querySelectorAll("input[name=" + JSON.stringify("" + t) + '][type="radio"]'),
                t = 0; t < n.length; t++) {
                    var r = n[t];
                    if (r !== e && r.form === e.form) {
                        var i = Ln(r);
                        if (!i)
                            throw Error(o(90));
                        we(r),
                        Me(r, i)
                    }
                }
            }
            break;
        case "textarea":
            ke(e, n);
            break;
        case "select":
            null != (t = n.value) && Ce(e, !!n.multiple, t, !1)
        }
    }
    ,
    I = el,
    O = function(e, t, n, r, i) {
        var a = Ss;
        Ss |= 4;
        try {
            return Vi(98, e.bind(null, t, n, r, i))
        } finally {
            0 === (Ss = a) && Wi()
        }
    }
    ,
    F = function() {
        0 === (49 & Ss) && (function() {
            if (null !== Vs) {
                var e = Vs;
                Vs = null,
                e.forEach((function(e, t) {
                    Ol(t, e),
                    Js(t)
                }
                )),
                Wi()
            }
        }(),
        ml())
    }
    ,
    N = function(e, t) {
        var n = Ss;
        Ss |= 2;
        try {
            return e(t)
        } finally {
            0 === (Ss = n) && Wi()
        }
    }
    ;
    var Wl = {
        Events: [Pn, Cn, Ln, T, S, Nn, function(e) {
            it(e, Fn)
        }
        , k, D, Jt, st, ml, {
            current: !1
        }]
    };
    !function(e) {
        var t = e.findFiberByHostInstance;
        (function(e) {
            if ("undefined" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)
                return !1;
            var t = __REACT_DEVTOOLS_GLOBAL_HOOK__;
            if (t.isDisabled || !t.supportsFiber)
                return !0;
            try {
                var n = t.inject(e);
                wl = function(e) {
                    try {
                        t.onCommitFiberRoot(n, e, void 0, 64 === (64 & e.current.effectTag))
                    } catch (r) {}
                }
                ,
                _l = function(e) {
                    try {
                        t.onCommitFiberUnmount(n, e)
                    } catch (r) {}
                }
            } catch (r) {}
        }
        )(i({}, e, {
            overrideHookState: null,
            overrideProps: null,
            setSuspenseHandler: null,
            scheduleUpdate: null,
            currentDispatcherRef: $.ReactCurrentDispatcher,
            findHostInstanceByFiber: function(e) {
                return null === (e = nt(e)) ? null : e.stateNode
            },
            findFiberByHostInstance: function(e) {
                return t ? t(e) : null
            },
            findHostInstancesForRefresh: null,
            scheduleRefresh: null,
            scheduleRoot: null,
            setRefreshHandler: null,
            getCurrentFiber: null
        }))
    }({
        findFiberByHostInstance: An,
        bundleType: 0,
        version: "16.14.0",
        rendererPackageName: "react-dom"
    }),
    t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Wl,
    t.createPortal = Ul,
    t.findDOMNode = function(e) {
        if (null == e)
            return null;
        if (1 === e.nodeType)
            return e;
        var t = e._reactInternalFiber;
        if (void 0 === t) {
            if ("function" === typeof e.render)
                throw Error(o(188));
            throw Error(o(268, Object.keys(e)))
        }
        return e = null === (e = nt(t)) ? null : e.stateNode
    }
    ,
    t.flushSync = function(e, t) {
        if (0 !== (48 & Ss))
            throw Error(o(187));
        var n = Ss;
        Ss |= 1;
        try {
            return Vi(99, e.bind(null, t))
        } finally {
            Ss = n,
            Wi()
        }
    }
    ,
    t.hydrate = function(e, t, n) {
        if (!Hl(t))
            throw Error(o(200));
        return Vl(null, e, t, !0, n)
    }
    ,
    t.render = function(e, t, n) {
        if (!Hl(t))
            throw Error(o(200));
        return Vl(null, e, t, !1, n)
    }
    ,
    t.unmountComponentAtNode = function(e) {
        if (!Hl(e))
            throw Error(o(40));
        return !!e._reactRootContainer && (tl((function() {
            Vl(null, null, e, !1, (function() {
                e._reactRootContainer = null,
                e[Tn] = null
            }
            ))
        }
        )),
        !0)
    }
    ,
    t.unstable_batchedUpdates = el,
    t.unstable_createPortal = function(e, t) {
        return Ul(e, t, 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null)
    }
    ,
    t.unstable_renderSubtreeIntoContainer = function(e, t, n, r) {
        if (!Hl(n))
            throw Error(o(200));
        if (null == e || void 0 === e._reactInternalFiber)
            throw Error(o(38));
        return Vl(e, t, n, !1, r)
    }
    ,
    t.version = "16.14.0"
}
, function(e, t, n) {
    "use strict";
    e.exports = n(51)
}
, function(e, t, n) {
    "use strict";
    var r, i, a, o, s;
    if ("undefined" === typeof window || "function" !== typeof MessageChannel) {
        var l = null
          , u = null
          , c = function e() {
            if (null !== l)
                try {
                    var n = t.unstable_now();
                    l(!0, n),
                    l = null
                } catch (r) {
                    throw setTimeout(e, 0),
                    r
                }
        }
          , h = Date.now();
        t.unstable_now = function() {
            return Date.now() - h
        }
        ,
        r = function(e) {
            null !== l ? setTimeout(r, 0, e) : (l = e,
            setTimeout(c, 0))
        }
        ,
        i = function(e, t) {
            u = setTimeout(e, t)
        }
        ,
        a = function() {
            clearTimeout(u)
        }
        ,
        o = function() {
            return !1
        }
        ,
        s = t.unstable_forceFrameRate = function() {}
    } else {
        var p = window.performance
          , f = window.Date
          , d = window.setTimeout
          , m = window.clearTimeout;
        if ("undefined" !== typeof console) {
            var g = window.cancelAnimationFrame;
            "function" !== typeof window.requestAnimationFrame && console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),
            "function" !== typeof g && console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")
        }
        if ("object" === typeof p && "function" === typeof p.now)
            t.unstable_now = function() {
                return p.now()
            }
            ;
        else {
            var v = f.now();
            t.unstable_now = function() {
                return f.now() - v
            }
        }
        var y = !1
          , b = null
          , x = -1
          , w = 5
          , _ = 0;
        o = function() {
            return t.unstable_now() >= _
        }
        ,
        s = function() {}
        ,
        t.unstable_forceFrameRate = function(e) {
            0 > e || 125 < e ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported") : w = 0 < e ? Math.floor(1e3 / e) : 5
        }
        ;
        var S = new MessageChannel
          , E = S.port2;
        S.port1.onmessage = function() {
            if (null !== b) {
                var e = t.unstable_now();
                _ = e + w;
                try {
                    b(!0, e) ? E.postMessage(null) : (y = !1,
                    b = null)
                } catch (n) {
                    throw E.postMessage(null),
                    n
                }
            } else
                y = !1
        }
        ,
        r = function(e) {
            b = e,
            y || (y = !0,
            E.postMessage(null))
        }
        ,
        i = function(e, n) {
            x = d((function() {
                e(t.unstable_now())
            }
            ), n)
        }
        ,
        a = function() {
            m(x),
            x = -1
        }
    }
    function M(e, t) {
        var n = e.length;
        e.push(t);
        e: for (; ; ) {
            var r = n - 1 >>> 1
              , i = e[r];
            if (!(void 0 !== i && 0 < P(i, t)))
                break e;
            e[r] = t,
            e[n] = i,
            n = r
        }
    }
    function T(e) {
        return void 0 === (e = e[0]) ? null : e
    }
    function A(e) {
        var t = e[0];
        if (void 0 !== t) {
            var n = e.pop();
            if (n !== t) {
                e[0] = n;
                e: for (var r = 0, i = e.length; r < i; ) {
                    var a = 2 * (r + 1) - 1
                      , o = e[a]
                      , s = a + 1
                      , l = e[s];
                    if (void 0 !== o && 0 > P(o, n))
                        void 0 !== l && 0 > P(l, o) ? (e[r] = l,
                        e[s] = n,
                        r = s) : (e[r] = o,
                        e[a] = n,
                        r = a);
                    else {
                        if (!(void 0 !== l && 0 > P(l, n)))
                            break e;
                        e[r] = l,
                        e[s] = n,
                        r = s
                    }
                }
            }
            return t
        }
        return null
    }
    function P(e, t) {
        var n = e.sortIndex - t.sortIndex;
        return 0 !== n ? n : e.id - t.id
    }
    var C = []
      , L = []
      , R = 1
      , k = null
      , D = 3
      , I = !1
      , O = !1
      , F = !1;
    function N(e) {
        for (var t = T(L); null !== t; ) {
            if (null === t.callback)
                A(L);
            else {
                if (!(t.startTime <= e))
                    break;
                A(L),
                t.sortIndex = t.expirationTime,
                M(C, t)
            }
            t = T(L)
        }
    }
    function B(e) {
        if (F = !1,
        N(e),
        !O)
            if (null !== T(C))
                O = !0,
                r(z);
            else {
                var t = T(L);
                null !== t && i(B, t.startTime - e)
            }
    }
    function z(e, n) {
        O = !1,
        F && (F = !1,
        a()),
        I = !0;
        var r = D;
        try {
            for (N(n),
            k = T(C); null !== k && (!(k.expirationTime > n) || e && !o()); ) {
                var s = k.callback;
                if (null !== s) {
                    k.callback = null,
                    D = k.priorityLevel;
                    var l = s(k.expirationTime <= n);
                    n = t.unstable_now(),
                    "function" === typeof l ? k.callback = l : k === T(C) && A(C),
                    N(n)
                } else
                    A(C);
                k = T(C)
            }
            if (null !== k)
                var u = !0;
            else {
                var c = T(L);
                null !== c && i(B, c.startTime - n),
                u = !1
            }
            return u
        } finally {
            k = null,
            D = r,
            I = !1
        }
    }
    function G(e) {
        switch (e) {
        case 1:
            return -1;
        case 2:
            return 250;
        case 5:
            return 1073741823;
        case 4:
            return 1e4;
        default:
            return 5e3
        }
    }
    var H = s;
    t.unstable_IdlePriority = 5,
    t.unstable_ImmediatePriority = 1,
    t.unstable_LowPriority = 4,
    t.unstable_NormalPriority = 3,
    t.unstable_Profiling = null,
    t.unstable_UserBlockingPriority = 2,
    t.unstable_cancelCallback = function(e) {
        e.callback = null
    }
    ,
    t.unstable_continueExecution = function() {
        O || I || (O = !0,
        r(z))
    }
    ,
    t.unstable_getCurrentPriorityLevel = function() {
        return D
    }
    ,
    t.unstable_getFirstCallbackNode = function() {
        return T(C)
    }
    ,
    t.unstable_next = function(e) {
        switch (D) {
        case 1:
        case 2:
        case 3:
            var t = 3;
            break;
        default:
            t = D
        }
        var n = D;
        D = t;
        try {
            return e()
        } finally {
            D = n
        }
    }
    ,
    t.unstable_pauseExecution = function() {}
    ,
    t.unstable_requestPaint = H,
    t.unstable_runWithPriority = function(e, t) {
        switch (e) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
            break;
        default:
            e = 3
        }
        var n = D;
        D = e;
        try {
            return t()
        } finally {
            D = n
        }
    }
    ,
    t.unstable_scheduleCallback = function(e, n, o) {
        var s = t.unstable_now();
        if ("object" === typeof o && null !== o) {
            var l = o.delay;
            l = "number" === typeof l && 0 < l ? s + l : s,
            o = "number" === typeof o.timeout ? o.timeout : G(e)
        } else
            o = G(e),
            l = s;
        return e = {
            id: R++,
            callback: n,
            priorityLevel: e,
            startTime: l,
            expirationTime: o = l + o,
            sortIndex: -1
        },
        l > s ? (e.sortIndex = l,
        M(L, e),
        null === T(C) && e === T(L) && (F ? a() : F = !0,
        i(B, l - s))) : (e.sortIndex = o,
        M(C, e),
        O || I || (O = !0,
        r(z))),
        e
    }
    ,
    t.unstable_shouldYield = function() {
        var e = t.unstable_now();
        N(e);
        var n = T(C);
        return n !== k && null !== k && null !== n && null !== n.callback && n.startTime <= e && n.expirationTime < k.expirationTime || o()
    }
    ,
    t.unstable_wrapCallback = function(e) {
        var t = D;
        return function() {
            var n = D;
            D = t;
            try {
                return e.apply(this, arguments)
            } finally {
                D = n
            }
        }
    }
}
, , , function(e, t, n) {
    var r = function(e) {
        "use strict";
        var t = Object.prototype
          , n = t.hasOwnProperty
          , r = "function" === typeof Symbol ? Symbol : {}
          , i = r.iterator || "@@iterator"
          , a = r.asyncIterator || "@@asyncIterator"
          , o = r.toStringTag || "@@toStringTag";
        function s(e, t, n) {
            return Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }),
            e[t]
        }
        try {
            s({}, "")
        } catch (T) {
            s = function(e, t, n) {
                return e[t] = n
            }
        }
        function l(e, t, n, r) {
            var i = t && t.prototype instanceof h ? t : h
              , a = Object.create(i.prototype)
              , o = new S(r || []);
            return a._invoke = function(e, t, n) {
                var r = "suspendedStart";
                return function(i, a) {
                    if ("executing" === r)
                        throw new Error("Generator is already running");
                    if ("completed" === r) {
                        if ("throw" === i)
                            throw a;
                        return M()
                    }
                    for (n.method = i,
                    n.arg = a; ; ) {
                        var o = n.delegate;
                        if (o) {
                            var s = x(o, n);
                            if (s) {
                                if (s === c)
                                    continue;
                                return s
                            }
                        }
                        if ("next" === n.method)
                            n.sent = n._sent = n.arg;
                        else if ("throw" === n.method) {
                            if ("suspendedStart" === r)
                                throw r = "completed",
                                n.arg;
                            n.dispatchException(n.arg)
                        } else
                            "return" === n.method && n.abrupt("return", n.arg);
                        r = "executing";
                        var l = u(e, t, n);
                        if ("normal" === l.type) {
                            if (r = n.done ? "completed" : "suspendedYield",
                            l.arg === c)
                                continue;
                            return {
                                value: l.arg,
                                done: n.done
                            }
                        }
                        "throw" === l.type && (r = "completed",
                        n.method = "throw",
                        n.arg = l.arg)
                    }
                }
            }(e, n, o),
            a
        }
        function u(e, t, n) {
            try {
                return {
                    type: "normal",
                    arg: e.call(t, n)
                }
            } catch (T) {
                return {
                    type: "throw",
                    arg: T
                }
            }
        }
        e.wrap = l;
        var c = {};
        function h() {}
        function p() {}
        function f() {}
        var d = {};
        d[i] = function() {
            return this
        }
        ;
        var m = Object.getPrototypeOf
          , g = m && m(m(E([])));
        g && g !== t && n.call(g, i) && (d = g);
        var v = f.prototype = h.prototype = Object.create(d);
        function y(e) {
            ["next", "throw", "return"].forEach((function(t) {
                s(e, t, (function(e) {
                    return this._invoke(t, e)
                }
                ))
            }
            ))
        }
        function b(e, t) {
            var r;
            this._invoke = function(i, a) {
                function o() {
                    return new t((function(r, o) {
                        !function r(i, a, o, s) {
                            var l = u(e[i], e, a);
                            if ("throw" !== l.type) {
                                var c = l.arg
                                  , h = c.value;
                                return h && "object" === typeof h && n.call(h, "__await") ? t.resolve(h.__await).then((function(e) {
                                    r("next", e, o, s)
                                }
                                ), (function(e) {
                                    r("throw", e, o, s)
                                }
                                )) : t.resolve(h).then((function(e) {
                                    c.value = e,
                                    o(c)
                                }
                                ), (function(e) {
                                    return r("throw", e, o, s)
                                }
                                ))
                            }
                            s(l.arg)
                        }(i, a, r, o)
                    }
                    ))
                }
                return r = r ? r.then(o, o) : o()
            }
        }
        function x(e, t) {
            var n = e.iterator[t.method];
            if (void 0 === n) {
                if (t.delegate = null,
                "throw" === t.method) {
                    if (e.iterator.return && (t.method = "return",
                    t.arg = void 0,
                    x(e, t),
                    "throw" === t.method))
                        return c;
                    t.method = "throw",
                    t.arg = new TypeError("The iterator does not provide a 'throw' method")
                }
                return c
            }
            var r = u(n, e.iterator, t.arg);
            if ("throw" === r.type)
                return t.method = "throw",
                t.arg = r.arg,
                t.delegate = null,
                c;
            var i = r.arg;
            return i ? i.done ? (t[e.resultName] = i.value,
            t.next = e.nextLoc,
            "return" !== t.method && (t.method = "next",
            t.arg = void 0),
            t.delegate = null,
            c) : i : (t.method = "throw",
            t.arg = new TypeError("iterator result is not an object"),
            t.delegate = null,
            c)
        }
        function w(e) {
            var t = {
                tryLoc: e[0]
            };
            1 in e && (t.catchLoc = e[1]),
            2 in e && (t.finallyLoc = e[2],
            t.afterLoc = e[3]),
            this.tryEntries.push(t)
        }
        function _(e) {
            var t = e.completion || {};
            t.type = "normal",
            delete t.arg,
            e.completion = t
        }
        function S(e) {
            this.tryEntries = [{
                tryLoc: "root"
            }],
            e.forEach(w, this),
            this.reset(!0)
        }
        function E(e) {
            if (e) {
                var t = e[i];
                if (t)
                    return t.call(e);
                if ("function" === typeof e.next)
                    return e;
                if (!isNaN(e.length)) {
                    var r = -1
                      , a = function t() {
                        for (; ++r < e.length; )
                            if (n.call(e, r))
                                return t.value = e[r],
                                t.done = !1,
                                t;
                        return t.value = void 0,
                        t.done = !0,
                        t
                    };
                    return a.next = a
                }
            }
            return {
                next: M
            }
        }
        function M() {
            return {
                value: void 0,
                done: !0
            }
        }
        return p.prototype = v.constructor = f,
        f.constructor = p,
        p.displayName = s(f, o, "GeneratorFunction"),
        e.isGeneratorFunction = function(e) {
            var t = "function" === typeof e && e.constructor;
            return !!t && (t === p || "GeneratorFunction" === (t.displayName || t.name))
        }
        ,
        e.mark = function(e) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(e, f) : (e.__proto__ = f,
            s(e, o, "GeneratorFunction")),
            e.prototype = Object.create(v),
            e
        }
        ,
        e.awrap = function(e) {
            return {
                __await: e
            }
        }
        ,
        y(b.prototype),
        b.prototype[a] = function() {
            return this
        }
        ,
        e.AsyncIterator = b,
        e.async = function(t, n, r, i, a) {
            void 0 === a && (a = Promise);
            var o = new b(l(t, n, r, i),a);
            return e.isGeneratorFunction(n) ? o : o.next().then((function(e) {
                return e.done ? e.value : o.next()
            }
            ))
        }
        ,
        y(v),
        s(v, o, "Generator"),
        v[i] = function() {
            return this
        }
        ,
        v.toString = function() {
            return "[object Generator]"
        }
        ,
        e.keys = function(e) {
            var t = [];
            for (var n in e)
                t.push(n);
            return t.reverse(),
            function n() {
                for (; t.length; ) {
                    var r = t.pop();
                    if (r in e)
                        return n.value = r,
                        n.done = !1,
                        n
                }
                return n.done = !0,
                n
            }
        }
        ,
        e.values = E,
        S.prototype = {
            constructor: S,
            reset: function(e) {
                if (this.prev = 0,
                this.next = 0,
                this.sent = this._sent = void 0,
                this.done = !1,
                this.delegate = null,
                this.method = "next",
                this.arg = void 0,
                this.tryEntries.forEach(_),
                !e)
                    for (var t in this)
                        "t" === t.charAt(0) && n.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0)
            },
            stop: function() {
                this.done = !0;
                var e = this.tryEntries[0].completion;
                if ("throw" === e.type)
                    throw e.arg;
                return this.rval
            },
            dispatchException: function(e) {
                if (this.done)
                    throw e;
                var t = this;
                function r(n, r) {
                    return o.type = "throw",
                    o.arg = e,
                    t.next = n,
                    r && (t.method = "next",
                    t.arg = void 0),
                    !!r
                }
                for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                    var a = this.tryEntries[i]
                      , o = a.completion;
                    if ("root" === a.tryLoc)
                        return r("end");
                    if (a.tryLoc <= this.prev) {
                        var s = n.call(a, "catchLoc")
                          , l = n.call(a, "finallyLoc");
                        if (s && l) {
                            if (this.prev < a.catchLoc)
                                return r(a.catchLoc, !0);
                            if (this.prev < a.finallyLoc)
                                return r(a.finallyLoc)
                        } else if (s) {
                            if (this.prev < a.catchLoc)
                                return r(a.catchLoc, !0)
                        } else {
                            if (!l)
                                throw new Error("try statement without catch or finally");
                            if (this.prev < a.finallyLoc)
                                return r(a.finallyLoc)
                        }
                    }
                }
            },
            abrupt: function(e, t) {
                for (var r = this.tryEntries.length - 1; r >= 0; --r) {
                    var i = this.tryEntries[r];
                    if (i.tryLoc <= this.prev && n.call(i, "finallyLoc") && this.prev < i.finallyLoc) {
                        var a = i;
                        break
                    }
                }
                a && ("break" === e || "continue" === e) && a.tryLoc <= t && t <= a.finallyLoc && (a = null);
                var o = a ? a.completion : {};
                return o.type = e,
                o.arg = t,
                a ? (this.method = "next",
                this.next = a.finallyLoc,
                c) : this.complete(o)
            },
            complete: function(e, t) {
                if ("throw" === e.type)
                    throw e.arg;
                return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg,
                this.method = "return",
                this.next = "end") : "normal" === e.type && t && (this.next = t),
                c
            },
            finish: function(e) {
                for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                    var n = this.tryEntries[t];
                    if (n.finallyLoc === e)
                        return this.complete(n.completion, n.afterLoc),
                        _(n),
                        c
                }
            },
            catch: function(e) {
                for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                    var n = this.tryEntries[t];
                    if (n.tryLoc === e) {
                        var r = n.completion;
                        if ("throw" === r.type) {
                            var i = r.arg;
                            _(n)
                        }
                        return i
                    }
                }
                throw new Error("illegal catch attempt")
            },
            delegateYield: function(e, t, n) {
                return this.delegate = {
                    iterator: E(e),
                    resultName: t,
                    nextLoc: n
                },
                "next" === this.method && (this.arg = void 0),
                c
            }
        },
        e
    }(e.exports);
    try {
        regeneratorRuntime = r
    } catch (i) {
        Function("r", "regeneratorRuntime = r")(r)
    }
}
, function(e, t, n) {
    "use strict";
    var r = n(56);
    function i() {}
    function a() {}
    a.resetWarningCache = i,
    e.exports = function() {
        function e(e, t, n, i, a, o) {
            if (o !== r) {
                var s = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");
                throw s.name = "Invariant Violation",
                s
            }
        }
        function t() {
            return e
        }
        e.isRequired = e;
        var n = {
            array: e,
            bool: e,
            func: e,
            number: e,
            object: e,
            string: e,
            symbol: e,
            any: e,
            arrayOf: t,
            element: e,
            elementType: e,
            instanceOf: t,
            node: e,
            objectOf: t,
            oneOf: t,
            oneOfType: t,
            shape: t,
            exact: t,
            checkPropTypes: a,
            resetWarningCache: i
        };
        return n.PropTypes = n,
        n
    }
}
, function(e, t, n) {
    "use strict";
    e.exports = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"
}
, function(e, t, n) {
    "use strict";
    e.exports = n(58)
}
, function(e, t, n) {
    "use strict";
    var r = "function" === typeof Symbol && Symbol.for
      , i = r ? Symbol.for("react.element") : 60103
      , a = r ? Symbol.for("react.portal") : 60106
      , o = r ? Symbol.for("react.fragment") : 60107
      , s = r ? Symbol.for("react.strict_mode") : 60108
      , l = r ? Symbol.for("react.profiler") : 60114
      , u = r ? Symbol.for("react.provider") : 60109
      , c = r ? Symbol.for("react.context") : 60110
      , h = r ? Symbol.for("react.async_mode") : 60111
      , p = r ? Symbol.for("react.concurrent_mode") : 60111
      , f = r ? Symbol.for("react.forward_ref") : 60112
      , d = r ? Symbol.for("react.suspense") : 60113
      , m = r ? Symbol.for("react.suspense_list") : 60120
      , g = r ? Symbol.for("react.memo") : 60115
      , v = r ? Symbol.for("react.lazy") : 60116
      , y = r ? Symbol.for("react.block") : 60121
      , b = r ? Symbol.for("react.fundamental") : 60117
      , x = r ? Symbol.for("react.responder") : 60118
      , w = r ? Symbol.for("react.scope") : 60119;
    function _(e) {
        if ("object" === typeof e && null !== e) {
            var t = e.$$typeof;
            switch (t) {
            case i:
                switch (e = e.type) {
                case h:
                case p:
                case o:
                case l:
                case s:
                case d:
                    return e;
                default:
                    switch (e = e && e.$$typeof) {
                    case c:
                    case f:
                    case v:
                    case g:
                    case u:
                        return e;
                    default:
                        return t
                    }
                }
            case a:
                return t
            }
        }
    }
    function S(e) {
        return _(e) === p
    }
    t.AsyncMode = h,
    t.ConcurrentMode = p,
    t.ContextConsumer = c,
    t.ContextProvider = u,
    t.Element = i,
    t.ForwardRef = f,
    t.Fragment = o,
    t.Lazy = v,
    t.Memo = g,
    t.Portal = a,
    t.Profiler = l,
    t.StrictMode = s,
    t.Suspense = d,
    t.isAsyncMode = function(e) {
        return S(e) || _(e) === h
    }
    ,
    t.isConcurrentMode = S,
    t.isContextConsumer = function(e) {
        return _(e) === c
    }
    ,
    t.isContextProvider = function(e) {
        return _(e) === u
    }
    ,
    t.isElement = function(e) {
        return "object" === typeof e && null !== e && e.$$typeof === i
    }
    ,
    t.isForwardRef = function(e) {
        return _(e) === f
    }
    ,
    t.isFragment = function(e) {
        return _(e) === o
    }
    ,
    t.isLazy = function(e) {
        return _(e) === v
    }
    ,
    t.isMemo = function(e) {
        return _(e) === g
    }
    ,
    t.isPortal = function(e) {
        return _(e) === a
    }
    ,
    t.isProfiler = function(e) {
        return _(e) === l
    }
    ,
    t.isStrictMode = function(e) {
        return _(e) === s
    }
    ,
    t.isSuspense = function(e) {
        return _(e) === d
    }
    ,
    t.isValidElementType = function(e) {
        return "string" === typeof e || "function" === typeof e || e === o || e === p || e === l || e === s || e === d || e === m || "object" === typeof e && null !== e && (e.$$typeof === v || e.$$typeof === g || e.$$typeof === u || e.$$typeof === c || e.$$typeof === f || e.$$typeof === b || e.$$typeof === x || e.$$typeof === w || e.$$typeof === y)
    }
    ,
    t.typeOf = _
}
, function(e, t, n) {
    "use strict";
    var r = "function" === typeof Symbol && Symbol.for
      , i = r ? Symbol.for("react.element") : 60103
      , a = r ? Symbol.for("react.portal") : 60106
      , o = r ? Symbol.for("react.fragment") : 60107
      , s = r ? Symbol.for("react.strict_mode") : 60108
      , l = r ? Symbol.for("react.profiler") : 60114
      , u = r ? Symbol.for("react.provider") : 60109
      , c = r ? Symbol.for("react.context") : 60110
      , h = r ? Symbol.for("react.async_mode") : 60111
      , p = r ? Symbol.for("react.concurrent_mode") : 60111
      , f = r ? Symbol.for("react.forward_ref") : 60112
      , d = r ? Symbol.for("react.suspense") : 60113
      , m = r ? Symbol.for("react.suspense_list") : 60120
      , g = r ? Symbol.for("react.memo") : 60115
      , v = r ? Symbol.for("react.lazy") : 60116
      , y = r ? Symbol.for("react.block") : 60121
      , b = r ? Symbol.for("react.fundamental") : 60117
      , x = r ? Symbol.for("react.responder") : 60118
      , w = r ? Symbol.for("react.scope") : 60119;
    function _(e) {
        if ("object" === typeof e && null !== e) {
            var t = e.$$typeof;
            switch (t) {
            case i:
                switch (e = e.type) {
                case h:
                case p:
                case o:
                case l:
                case s:
                case d:
                    return e;
                default:
                    switch (e = e && e.$$typeof) {
                    case c:
                    case f:
                    case v:
                    case g:
                    case u:
                        return e;
                    default:
                        return t
                    }
                }
            case a:
                return t
            }
        }
    }
    function S(e) {
        return _(e) === p
    }
    t.AsyncMode = h,
    t.ConcurrentMode = p,
    t.ContextConsumer = c,
    t.ContextProvider = u,
    t.Element = i,
    t.ForwardRef = f,
    t.Fragment = o,
    t.Lazy = v,
    t.Memo = g,
    t.Portal = a,
    t.Profiler = l,
    t.StrictMode = s,
    t.Suspense = d,
    t.isAsyncMode = function(e) {
        return S(e) || _(e) === h
    }
    ,
    t.isConcurrentMode = S,
    t.isContextConsumer = function(e) {
        return _(e) === c
    }
    ,
    t.isContextProvider = function(e) {
        return _(e) === u
    }
    ,
    t.isElement = function(e) {
        return "object" === typeof e && null !== e && e.$$typeof === i
    }
    ,
    t.isForwardRef = function(e) {
        return _(e) === f
    }
    ,
    t.isFragment = function(e) {
        return _(e) === o
    }
    ,
    t.isLazy = function(e) {
        return _(e) === v
    }
    ,
    t.isMemo = function(e) {
        return _(e) === g
    }
    ,
    t.isPortal = function(e) {
        return _(e) === a
    }
    ,
    t.isProfiler = function(e) {
        return _(e) === l
    }
    ,
    t.isStrictMode = function(e) {
        return _(e) === s
    }
    ,
    t.isSuspense = function(e) {
        return _(e) === d
    }
    ,
    t.isValidElementType = function(e) {
        return "string" === typeof e || "function" === typeof e || e === o || e === p || e === l || e === s || e === d || e === m || "object" === typeof e && null !== e && (e.$$typeof === v || e.$$typeof === g || e.$$typeof === u || e.$$typeof === c || e.$$typeof === f || e.$$typeof === b || e.$$typeof === x || e.$$typeof === w || e.$$typeof === y)
    }
    ,
    t.typeOf = _
}
, , , , , , , , , , , , function(e, t) {
    var n;
    n = function() {
        return this
    }();
    try {
        n = n || new Function("return this")()
    } catch (r) {
        "object" === typeof window && (n = window)
    }
    e.exports = n
}
, function(e, t) {
    e.exports = Array.isArray || function(e) {
        return "[object Array]" == Object.prototype.toString.call(e)
    }
}
, function(e, t, n) {
    "use strict";
    e.exports = n(74)
}
, function(e, t, n) {
    "use strict";
    var r = "function" === typeof Symbol && Symbol.for
      , i = r ? Symbol.for("react.element") : 60103
      , a = r ? Symbol.for("react.portal") : 60106
      , o = r ? Symbol.for("react.fragment") : 60107
      , s = r ? Symbol.for("react.strict_mode") : 60108
      , l = r ? Symbol.for("react.profiler") : 60114
      , u = r ? Symbol.for("react.provider") : 60109
      , c = r ? Symbol.for("react.context") : 60110
      , h = r ? Symbol.for("react.async_mode") : 60111
      , p = r ? Symbol.for("react.concurrent_mode") : 60111
      , f = r ? Symbol.for("react.forward_ref") : 60112
      , d = r ? Symbol.for("react.suspense") : 60113
      , m = r ? Symbol.for("react.suspense_list") : 60120
      , g = r ? Symbol.for("react.memo") : 60115
      , v = r ? Symbol.for("react.lazy") : 60116
      , y = r ? Symbol.for("react.block") : 60121
      , b = r ? Symbol.for("react.fundamental") : 60117
      , x = r ? Symbol.for("react.responder") : 60118
      , w = r ? Symbol.for("react.scope") : 60119;
    function _(e) {
        if ("object" === typeof e && null !== e) {
            var t = e.$$typeof;
            switch (t) {
            case i:
                switch (e = e.type) {
                case h:
                case p:
                case o:
                case l:
                case s:
                case d:
                    return e;
                default:
                    switch (e = e && e.$$typeof) {
                    case c:
                    case f:
                    case v:
                    case g:
                    case u:
                        return e;
                    default:
                        return t
                    }
                }
            case a:
                return t
            }
        }
    }
    function S(e) {
        return _(e) === p
    }
    t.AsyncMode = h,
    t.ConcurrentMode = p,
    t.ContextConsumer = c,
    t.ContextProvider = u,
    t.Element = i,
    t.ForwardRef = f,
    t.Fragment = o,
    t.Lazy = v,
    t.Memo = g,
    t.Portal = a,
    t.Profiler = l,
    t.StrictMode = s,
    t.Suspense = d,
    t.isAsyncMode = function(e) {
        return S(e) || _(e) === h
    }
    ,
    t.isConcurrentMode = S,
    t.isContextConsumer = function(e) {
        return _(e) === c
    }
    ,
    t.isContextProvider = function(e) {
        return _(e) === u
    }
    ,
    t.isElement = function(e) {
        return "object" === typeof e && null !== e && e.$$typeof === i
    }
    ,
    t.isForwardRef = function(e) {
        return _(e) === f
    }
    ,
    t.isFragment = function(e) {
        return _(e) === o
    }
    ,
    t.isLazy = function(e) {
        return _(e) === v
    }
    ,
    t.isMemo = function(e) {
        return _(e) === g
    }
    ,
    t.isPortal = function(e) {
        return _(e) === a
    }
    ,
    t.isProfiler = function(e) {
        return _(e) === l
    }
    ,
    t.isStrictMode = function(e) {
        return _(e) === s
    }
    ,
    t.isSuspense = function(e) {
        return _(e) === d
    }
    ,
    t.isValidElementType = function(e) {
        return "string" === typeof e || "function" === typeof e || e === o || e === p || e === l || e === s || e === d || e === m || "object" === typeof e && null !== e && (e.$$typeof === v || e.$$typeof === g || e.$$typeof === u || e.$$typeof === c || e.$$typeof === f || e.$$typeof === b || e.$$typeof === x || e.$$typeof === w || e.$$typeof === y)
    }
    ,
    t.typeOf = _
}
, , , , , , , , , , , , , , , function(e, t, n) {
    "use strict";
    var r = n(9);
    function i(e, t) {
        if (null == e)
            return {};
        var n, i, a = Object(r.a)(e, t);
        if (Object.getOwnPropertySymbols) {
            var o = Object.getOwnPropertySymbols(e);
            for (i = 0; i < o.length; i++)
                n = o[i],
                t.indexOf(n) >= 0 || Object.prototype.propertyIsEnumerable.call(e, n) && (a[n] = e[n])
        }
        return a
    }
    var a = n(2)
      , o = n(0)
      , s = n.n(o);
    n(11);
    function l(e) {
        var t, n, r = "";
        if ("string" === typeof e || "number" === typeof e)
            r += e;
        else if ("object" === typeof e)
            if (Array.isArray(e))
                for (t = 0; t < e.length; t++)
                    e[t] && (n = l(e[t])) && (r && (r += " "),
                    r += n);
            else
                for (t in e)
                    e[t] && (r && (r += " "),
                    r += t);
        return r
    }
    var u = n(15)
      , c = n.n(u)
      , h = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(e) {
        return typeof e
    }
    : function(e) {
        return e && "function" === typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
    }
      , p = "object" === ("undefined" === typeof window ? "undefined" : h(window)) && "object" === ("undefined" === typeof document ? "undefined" : h(document)) && 9 === document.nodeType;
    n(13);
    function f(e, t) {
        for (var n = 0; n < t.length; n++) {
            var r = t[n];
            r.enumerable = r.enumerable || !1,
            r.configurable = !0,
            "value"in r && (r.writable = !0),
            Object.defineProperty(e, r.key, r)
        }
    }
    function d(e, t, n) {
        return t && f(e.prototype, t),
        n && f(e, n),
        e
    }
    var m = n(10);
    function g(e) {
        if (void 0 === e)
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return e
    }
    var v = {}.constructor;
    function y(e) {
        if (null == e || "object" !== typeof e)
            return e;
        if (Array.isArray(e))
            return e.map(y);
        if (e.constructor !== v)
            return e;
        var t = {};
        for (var n in e)
            t[n] = y(e[n]);
        return t
    }
    function b(e, t, n) {
        void 0 === e && (e = "unnamed");
        var r = n.jss
          , i = y(t)
          , a = r.plugins.onCreateRule(e, i, n);
        return a || (e[0],
        null)
    }
    var x = function(e, t) {
        for (var n = "", r = 0; r < e.length && "!important" !== e[r]; r++)
            n && (n += t),
            n += e[r];
        return n
    }
      , w = function(e, t) {
        if (void 0 === t && (t = !1),
        !Array.isArray(e))
            return e;
        var n = "";
        if (Array.isArray(e[0]))
            for (var r = 0; r < e.length && "!important" !== e[r]; r++)
                n && (n += ", "),
                n += x(e[r], " ");
        else
            n = x(e, ", ");
        return t || "!important" !== e[e.length - 1] || (n += " !important"),
        n
    };
    function _(e, t) {
        for (var n = "", r = 0; r < t; r++)
            n += "  ";
        return n + e
    }
    function S(e, t, n) {
        void 0 === n && (n = {});
        var r = "";
        if (!t)
            return r;
        var i = n.indent
          , a = void 0 === i ? 0 : i
          , o = t.fallbacks;
        if (e && a++,
        o)
            if (Array.isArray(o))
                for (var s = 0; s < o.length; s++) {
                    var l = o[s];
                    for (var u in l) {
                        var c = l[u];
                        null != c && (r && (r += "\n"),
                        r += "" + _(u + ": " + w(c) + ";", a))
                    }
                }
            else
                for (var h in o) {
                    var p = o[h];
                    null != p && (r && (r += "\n"),
                    r += "" + _(h + ": " + w(p) + ";", a))
                }
        for (var f in t) {
            var d = t[f];
            null != d && "fallbacks" !== f && (r && (r += "\n"),
            r += "" + _(f + ": " + w(d) + ";", a))
        }
        return (r || n.allowEmpty) && e ? (r && (r = "\n" + r + "\n"),
        _(e + " {" + r, --a) + _("}", a)) : r
    }
    var E = /([[\].#*$><+~=|^:(),"'`\s])/g
      , M = "undefined" !== typeof CSS && CSS.escape
      , T = function(e) {
        return M ? M(e) : e.replace(E, "\\$1")
    }
      , A = function() {
        function e(e, t, n) {
            this.type = "style",
            this.key = void 0,
            this.isProcessed = !1,
            this.style = void 0,
            this.renderer = void 0,
            this.renderable = void 0,
            this.options = void 0;
            var r = n.sheet
              , i = n.Renderer;
            this.key = e,
            this.options = n,
            this.style = t,
            r ? this.renderer = r.renderer : i && (this.renderer = new i)
        }
        return e.prototype.prop = function(e, t, n) {
            if (void 0 === t)
                return this.style[e];
            var r = !!n && n.force;
            if (!r && this.style[e] === t)
                return this;
            var i = t;
            n && !1 === n.process || (i = this.options.jss.plugins.onChangeValue(t, e, this));
            var a = null == i || !1 === i
              , o = e in this.style;
            if (a && !o && !r)
                return this;
            var s = a && o;
            if (s ? delete this.style[e] : this.style[e] = i,
            this.renderable && this.renderer)
                return s ? this.renderer.removeProperty(this.renderable, e) : this.renderer.setProperty(this.renderable, e, i),
                this;
            var l = this.options.sheet;
            return l && l.attached,
            this
        }
        ,
        e
    }()
      , P = function(e) {
        function t(t, n, r) {
            var i;
            (i = e.call(this, t, n, r) || this).selectorText = void 0,
            i.id = void 0,
            i.renderable = void 0;
            var a = r.selector
              , o = r.scoped
              , s = r.sheet
              , l = r.generateId;
            return a ? i.selectorText = a : !1 !== o && (i.id = l(g(g(i)), s),
            i.selectorText = "." + T(i.id)),
            i
        }
        Object(m.a)(t, e);
        var n = t.prototype;
        return n.applyTo = function(e) {
            var t = this.renderer;
            if (t) {
                var n = this.toJSON();
                for (var r in n)
                    t.setProperty(e, r, n[r])
            }
            return this
        }
        ,
        n.toJSON = function() {
            var e = {};
            for (var t in this.style) {
                var n = this.style[t];
                "object" !== typeof n ? e[t] = n : Array.isArray(n) && (e[t] = w(n))
            }
            return e
        }
        ,
        n.toString = function(e) {
            var t = this.options.sheet
              , n = !!t && t.options.link ? Object(a.a)({}, e, {
                allowEmpty: !0
            }) : e;
            return S(this.selectorText, this.style, n)
        }
        ,
        d(t, [{
            key: "selector",
            set: function(e) {
                if (e !== this.selectorText) {
                    this.selectorText = e;
                    var t = this.renderer
                      , n = this.renderable;
                    if (n && t)
                        t.setSelector(n, e) || t.replaceRule(n, this)
                }
            },
            get: function() {
                return this.selectorText
            }
        }]),
        t
    }(A)
      , C = {
        onCreateRule: function(e, t, n) {
            return "@" === e[0] || n.parent && "keyframes" === n.parent.type ? null : new P(e,t,n)
        }
    }
      , L = {
        indent: 1,
        children: !0
    }
      , R = /@([\w-]+)/
      , k = function() {
        function e(e, t, n) {
            this.type = "conditional",
            this.at = void 0,
            this.key = void 0,
            this.query = void 0,
            this.rules = void 0,
            this.options = void 0,
            this.isProcessed = !1,
            this.renderable = void 0,
            this.key = e;
            var r = e.match(R);
            for (var i in this.at = r ? r[1] : "unknown",
            this.query = n.name || "@" + this.at,
            this.options = n,
            this.rules = new te(Object(a.a)({}, n, {
                parent: this
            })),
            t)
                this.rules.add(i, t[i]);
            this.rules.process()
        }
        var t = e.prototype;
        return t.getRule = function(e) {
            return this.rules.get(e)
        }
        ,
        t.indexOf = function(e) {
            return this.rules.indexOf(e)
        }
        ,
        t.addRule = function(e, t, n) {
            var r = this.rules.add(e, t, n);
            return r ? (this.options.jss.plugins.onProcessRule(r),
            r) : null
        }
        ,
        t.toString = function(e) {
            if (void 0 === e && (e = L),
            null == e.indent && (e.indent = L.indent),
            null == e.children && (e.children = L.children),
            !1 === e.children)
                return this.query + " {}";
            var t = this.rules.toString(e);
            return t ? this.query + " {\n" + t + "\n}" : ""
        }
        ,
        e
    }()
      , D = /@media|@supports\s+/
      , I = {
        onCreateRule: function(e, t, n) {
            return D.test(e) ? new k(e,t,n) : null
        }
    }
      , O = {
        indent: 1,
        children: !0
    }
      , F = /@keyframes\s+([\w-]+)/
      , N = function() {
        function e(e, t, n) {
            this.type = "keyframes",
            this.at = "@keyframes",
            this.key = void 0,
            this.name = void 0,
            this.id = void 0,
            this.rules = void 0,
            this.options = void 0,
            this.isProcessed = !1,
            this.renderable = void 0;
            var r = e.match(F);
            r && r[1] ? this.name = r[1] : this.name = "noname",
            this.key = this.type + "-" + this.name,
            this.options = n;
            var i = n.scoped
              , o = n.sheet
              , s = n.generateId;
            for (var l in this.id = !1 === i ? this.name : T(s(this, o)),
            this.rules = new te(Object(a.a)({}, n, {
                parent: this
            })),
            t)
                this.rules.add(l, t[l], Object(a.a)({}, n, {
                    parent: this
                }));
            this.rules.process()
        }
        return e.prototype.toString = function(e) {
            if (void 0 === e && (e = O),
            null == e.indent && (e.indent = O.indent),
            null == e.children && (e.children = O.children),
            !1 === e.children)
                return this.at + " " + this.id + " {}";
            var t = this.rules.toString(e);
            return t && (t = "\n" + t + "\n"),
            this.at + " " + this.id + " {" + t + "}"
        }
        ,
        e
    }()
      , B = /@keyframes\s+/
      , z = /\$([\w-]+)/g
      , G = function(e, t) {
        return "string" === typeof e ? e.replace(z, (function(e, n) {
            return n in t ? t[n] : e
        }
        )) : e
    }
      , H = function(e, t, n) {
        var r = e[t]
          , i = G(r, n);
        i !== r && (e[t] = i)
    }
      , V = {
        onCreateRule: function(e, t, n) {
            return "string" === typeof e && B.test(e) ? new N(e,t,n) : null
        },
        onProcessStyle: function(e, t, n) {
            return "style" === t.type && n ? ("animation-name"in e && H(e, "animation-name", n.keyframes),
            "animation"in e && H(e, "animation", n.keyframes),
            e) : e
        },
        onChangeValue: function(e, t, n) {
            var r = n.options.sheet;
            if (!r)
                return e;
            switch (t) {
            case "animation":
            case "animation-name":
                return G(e, r.keyframes);
            default:
                return e
            }
        }
    }
      , j = function(e) {
        function t() {
            for (var t, n = arguments.length, r = new Array(n), i = 0; i < n; i++)
                r[i] = arguments[i];
            return (t = e.call.apply(e, [this].concat(r)) || this).renderable = void 0,
            t
        }
        return Object(m.a)(t, e),
        t.prototype.toString = function(e) {
            var t = this.options.sheet
              , n = !!t && t.options.link ? Object(a.a)({}, e, {
                allowEmpty: !0
            }) : e;
            return S(this.key, this.style, n)
        }
        ,
        t
    }(A)
      , U = {
        onCreateRule: function(e, t, n) {
            return n.parent && "keyframes" === n.parent.type ? new j(e,t,n) : null
        }
    }
      , W = function() {
        function e(e, t, n) {
            this.type = "font-face",
            this.at = "@font-face",
            this.key = void 0,
            this.style = void 0,
            this.options = void 0,
            this.isProcessed = !1,
            this.renderable = void 0,
            this.key = e,
            this.style = t,
            this.options = n
        }
        return e.prototype.toString = function(e) {
            if (Array.isArray(this.style)) {
                for (var t = "", n = 0; n < this.style.length; n++)
                    t += S(this.at, this.style[n]),
                    this.style[n + 1] && (t += "\n");
                return t
            }
            return S(this.at, this.style, e)
        }
        ,
        e
    }()
      , q = /@font-face/
      , X = {
        onCreateRule: function(e, t, n) {
            return q.test(e) ? new W(e,t,n) : null
        }
    }
      , Y = function() {
        function e(e, t, n) {
            this.type = "viewport",
            this.at = "@viewport",
            this.key = void 0,
            this.style = void 0,
            this.options = void 0,
            this.isProcessed = !1,
            this.renderable = void 0,
            this.key = e,
            this.style = t,
            this.options = n
        }
        return e.prototype.toString = function(e) {
            return S(this.key, this.style, e)
        }
        ,
        e
    }()
      , Z = {
        onCreateRule: function(e, t, n) {
            return "@viewport" === e || "@-ms-viewport" === e ? new Y(e,t,n) : null
        }
    }
      , $ = function() {
        function e(e, t, n) {
            this.type = "simple",
            this.key = void 0,
            this.value = void 0,
            this.options = void 0,
            this.isProcessed = !1,
            this.renderable = void 0,
            this.key = e,
            this.value = t,
            this.options = n
        }
        return e.prototype.toString = function(e) {
            if (Array.isArray(this.value)) {
                for (var t = "", n = 0; n < this.value.length; n++)
                    t += this.key + " " + this.value[n] + ";",
                    this.value[n + 1] && (t += "\n");
                return t
            }
            return this.key + " " + this.value + ";"
        }
        ,
        e
    }()
      , J = {
        "@charset": !0,
        "@import": !0,
        "@namespace": !0
    }
      , K = [C, I, V, U, X, Z, {
        onCreateRule: function(e, t, n) {
            return e in J ? new $(e,t,n) : null
        }
    }]
      , Q = {
        process: !0
    }
      , ee = {
        force: !0,
        process: !0
    }
      , te = function() {
        function e(e) {
            this.map = {},
            this.raw = {},
            this.index = [],
            this.counter = 0,
            this.options = void 0,
            this.classes = void 0,
            this.keyframes = void 0,
            this.options = e,
            this.classes = e.classes,
            this.keyframes = e.keyframes
        }
        var t = e.prototype;
        return t.add = function(e, t, n) {
            var r = this.options
              , i = r.parent
              , o = r.sheet
              , s = r.jss
              , l = r.Renderer
              , u = r.generateId
              , c = r.scoped
              , h = Object(a.a)({
                classes: this.classes,
                parent: i,
                sheet: o,
                jss: s,
                Renderer: l,
                generateId: u,
                scoped: c,
                name: e,
                keyframes: this.keyframes,
                selector: void 0
            }, n)
              , p = e;
            e in this.raw && (p = e + "-d" + this.counter++),
            this.raw[p] = t,
            p in this.classes && (h.selector = "." + T(this.classes[p]));
            var f = b(p, t, h);
            if (!f)
                return null;
            this.register(f);
            var d = void 0 === h.index ? this.index.length : h.index;
            return this.index.splice(d, 0, f),
            f
        }
        ,
        t.get = function(e) {
            return this.map[e]
        }
        ,
        t.remove = function(e) {
            this.unregister(e),
            delete this.raw[e.key],
            this.index.splice(this.index.indexOf(e), 1)
        }
        ,
        t.indexOf = function(e) {
            return this.index.indexOf(e)
        }
        ,
        t.process = function() {
            var e = this.options.jss.plugins;
            this.index.slice(0).forEach(e.onProcessRule, e)
        }
        ,
        t.register = function(e) {
            this.map[e.key] = e,
            e instanceof P ? (this.map[e.selector] = e,
            e.id && (this.classes[e.key] = e.id)) : e instanceof N && this.keyframes && (this.keyframes[e.name] = e.id)
        }
        ,
        t.unregister = function(e) {
            delete this.map[e.key],
            e instanceof P ? (delete this.map[e.selector],
            delete this.classes[e.key]) : e instanceof N && delete this.keyframes[e.name]
        }
        ,
        t.update = function() {
            var e, t, n;
            if ("string" === typeof (arguments.length <= 0 ? void 0 : arguments[0]) ? (e = arguments.length <= 0 ? void 0 : arguments[0],
            t = arguments.length <= 1 ? void 0 : arguments[1],
            n = arguments.length <= 2 ? void 0 : arguments[2]) : (t = arguments.length <= 0 ? void 0 : arguments[0],
            n = arguments.length <= 1 ? void 0 : arguments[1],
            e = null),
            e)
                this.updateOne(this.map[e], t, n);
            else
                for (var r = 0; r < this.index.length; r++)
                    this.updateOne(this.index[r], t, n)
        }
        ,
        t.updateOne = function(t, n, r) {
            void 0 === r && (r = Q);
            var i = this.options
              , a = i.jss.plugins
              , o = i.sheet;
            if (t.rules instanceof e)
                t.rules.update(n, r);
            else {
                var s = t
                  , l = s.style;
                if (a.onUpdate(n, t, o, r),
                r.process && l && l !== s.style) {
                    for (var u in a.onProcessStyle(s.style, s, o),
                    s.style) {
                        var c = s.style[u];
                        c !== l[u] && s.prop(u, c, ee)
                    }
                    for (var h in l) {
                        var p = s.style[h]
                          , f = l[h];
                        null == p && p !== f && s.prop(h, null, ee)
                    }
                }
            }
        }
        ,
        t.toString = function(e) {
            for (var t = "", n = this.options.sheet, r = !!n && n.options.link, i = 0; i < this.index.length; i++) {
                var a = this.index[i].toString(e);
                (a || r) && (t && (t += "\n"),
                t += a)
            }
            return t
        }
        ,
        e
    }()
      , ne = function() {
        function e(e, t) {
            for (var n in this.options = void 0,
            this.deployed = void 0,
            this.attached = void 0,
            this.rules = void 0,
            this.renderer = void 0,
            this.classes = void 0,
            this.keyframes = void 0,
            this.queue = void 0,
            this.attached = !1,
            this.deployed = !1,
            this.classes = {},
            this.keyframes = {},
            this.options = Object(a.a)({}, t, {
                sheet: this,
                parent: this,
                classes: this.classes,
                keyframes: this.keyframes
            }),
            t.Renderer && (this.renderer = new t.Renderer(this)),
            this.rules = new te(this.options),
            e)
                this.rules.add(n, e[n]);
            this.rules.process()
        }
        var t = e.prototype;
        return t.attach = function() {
            return this.attached || (this.renderer && this.renderer.attach(),
            this.attached = !0,
            this.deployed || this.deploy()),
            this
        }
        ,
        t.detach = function() {
            return this.attached ? (this.renderer && this.renderer.detach(),
            this.attached = !1,
            this) : this
        }
        ,
        t.addRule = function(e, t, n) {
            var r = this.queue;
            this.attached && !r && (this.queue = []);
            var i = this.rules.add(e, t, n);
            return i ? (this.options.jss.plugins.onProcessRule(i),
            this.attached ? this.deployed ? (r ? r.push(i) : (this.insertRule(i),
            this.queue && (this.queue.forEach(this.insertRule, this),
            this.queue = void 0)),
            i) : i : (this.deployed = !1,
            i)) : null
        }
        ,
        t.insertRule = function(e) {
            this.renderer && this.renderer.insertRule(e)
        }
        ,
        t.addRules = function(e, t) {
            var n = [];
            for (var r in e) {
                var i = this.addRule(r, e[r], t);
                i && n.push(i)
            }
            return n
        }
        ,
        t.getRule = function(e) {
            return this.rules.get(e)
        }
        ,
        t.deleteRule = function(e) {
            var t = "object" === typeof e ? e : this.rules.get(e);
            return !(!t || this.attached && !t.renderable) && (this.rules.remove(t),
            !(this.attached && t.renderable && this.renderer) || this.renderer.deleteRule(t.renderable))
        }
        ,
        t.indexOf = function(e) {
            return this.rules.indexOf(e)
        }
        ,
        t.deploy = function() {
            return this.renderer && this.renderer.deploy(),
            this.deployed = !0,
            this
        }
        ,
        t.update = function() {
            var e;
            return (e = this.rules).update.apply(e, arguments),
            this
        }
        ,
        t.updateOne = function(e, t, n) {
            return this.rules.updateOne(e, t, n),
            this
        }
        ,
        t.toString = function(e) {
            return this.rules.toString(e)
        }
        ,
        e
    }()
      , re = function() {
        function e() {
            this.plugins = {
                internal: [],
                external: []
            },
            this.registry = void 0
        }
        var t = e.prototype;
        return t.onCreateRule = function(e, t, n) {
            for (var r = 0; r < this.registry.onCreateRule.length; r++) {
                var i = this.registry.onCreateRule[r](e, t, n);
                if (i)
                    return i
            }
            return null
        }
        ,
        t.onProcessRule = function(e) {
            if (!e.isProcessed) {
                for (var t = e.options.sheet, n = 0; n < this.registry.onProcessRule.length; n++)
                    this.registry.onProcessRule[n](e, t);
                e.style && this.onProcessStyle(e.style, e, t),
                e.isProcessed = !0
            }
        }
        ,
        t.onProcessStyle = function(e, t, n) {
            for (var r = 0; r < this.registry.onProcessStyle.length; r++)
                t.style = this.registry.onProcessStyle[r](t.style, t, n)
        }
        ,
        t.onProcessSheet = function(e) {
            for (var t = 0; t < this.registry.onProcessSheet.length; t++)
                this.registry.onProcessSheet[t](e)
        }
        ,
        t.onUpdate = function(e, t, n, r) {
            for (var i = 0; i < this.registry.onUpdate.length; i++)
                this.registry.onUpdate[i](e, t, n, r)
        }
        ,
        t.onChangeValue = function(e, t, n) {
            for (var r = e, i = 0; i < this.registry.onChangeValue.length; i++)
                r = this.registry.onChangeValue[i](r, t, n);
            return r
        }
        ,
        t.use = function(e, t) {
            void 0 === t && (t = {
                queue: "external"
            });
            var n = this.plugins[t.queue];
            -1 === n.indexOf(e) && (n.push(e),
            this.registry = [].concat(this.plugins.external, this.plugins.internal).reduce((function(e, t) {
                for (var n in t)
                    n in e && e[n].push(t[n]);
                return e
            }
            ), {
                onCreateRule: [],
                onProcessRule: [],
                onProcessStyle: [],
                onProcessSheet: [],
                onChangeValue: [],
                onUpdate: []
            }))
        }
        ,
        e
    }()
      , ie = new (function() {
        function e() {
            this.registry = []
        }
        var t = e.prototype;
        return t.add = function(e) {
            var t = this.registry
              , n = e.options.index;
            if (-1 === t.indexOf(e))
                if (0 === t.length || n >= this.index)
                    t.push(e);
                else
                    for (var r = 0; r < t.length; r++)
                        if (t[r].options.index > n)
                            return void t.splice(r, 0, e)
        }
        ,
        t.reset = function() {
            this.registry = []
        }
        ,
        t.remove = function(e) {
            var t = this.registry.indexOf(e);
            this.registry.splice(t, 1)
        }
        ,
        t.toString = function(e) {
            for (var t = void 0 === e ? {} : e, n = t.attached, i = Object(r.a)(t, ["attached"]), a = "", o = 0; o < this.registry.length; o++) {
                var s = this.registry[o];
                null != n && s.attached !== n || (a && (a += "\n"),
                a += s.toString(i))
            }
            return a
        }
        ,
        d(e, [{
            key: "index",
            get: function() {
                return 0 === this.registry.length ? 0 : this.registry[this.registry.length - 1].options.index
            }
        }]),
        e
    }())
      , ae = "undefined" !== typeof globalThis ? globalThis : "undefined" !== typeof window && window.Math === Math ? window : "undefined" !== typeof self && self.Math === Math ? self : Function("return this")()
      , oe = "2f1acc6c3a606b082e5eef5e54414ffb";
    null == ae[oe] && (ae[oe] = 0);
    var se = ae[oe]++
      , le = function(e) {
        void 0 === e && (e = {});
        var t = 0;
        return function(n, r) {
            t += 1;
            var i = ""
              , a = "";
            return r && (r.options.classNamePrefix && (a = r.options.classNamePrefix),
            null != r.options.jss.id && (i = String(r.options.jss.id))),
            e.minify ? "" + (a || "c") + se + i + t : a + n.key + "-" + se + (i ? "-" + i : "") + "-" + t
        }
    }
      , ue = function(e) {
        var t;
        return function() {
            return t || (t = e()),
            t
        }
    }
      , ce = function(e, t) {
        try {
            return e.attributeStyleMap ? e.attributeStyleMap.get(t) : e.style.getPropertyValue(t)
        } catch (n) {
            return ""
        }
    }
      , he = function(e, t, n) {
        try {
            var r = n;
            if (Array.isArray(n) && (r = w(n, !0),
            "!important" === n[n.length - 1]))
                return e.style.setProperty(t, r, "important"),
                !0;
            e.attributeStyleMap ? e.attributeStyleMap.set(t, r) : e.style.setProperty(t, r)
        } catch (i) {
            return !1
        }
        return !0
    }
      , pe = function(e, t) {
        try {
            e.attributeStyleMap ? e.attributeStyleMap.delete(t) : e.style.removeProperty(t)
        } catch (n) {}
    }
      , fe = function(e, t) {
        return e.selectorText = t,
        e.selectorText === t
    }
      , de = ue((function() {
        return document.querySelector("head")
    }
    ));
    function me(e) {
        var t = ie.registry;
        if (t.length > 0) {
            var n = function(e, t) {
                for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    if (r.attached && r.options.index > t.index && r.options.insertionPoint === t.insertionPoint)
                        return r
                }
                return null
            }(t, e);
            if (n && n.renderer)
                return {
                    parent: n.renderer.element.parentNode,
                    node: n.renderer.element
                };
            if ((n = function(e, t) {
                for (var n = e.length - 1; n >= 0; n--) {
                    var r = e[n];
                    if (r.attached && r.options.insertionPoint === t.insertionPoint)
                        return r
                }
                return null
            }(t, e)) && n.renderer)
                return {
                    parent: n.renderer.element.parentNode,
                    node: n.renderer.element.nextSibling
                }
        }
        var r = e.insertionPoint;
        if (r && "string" === typeof r) {
            var i = function(e) {
                for (var t = de(), n = 0; n < t.childNodes.length; n++) {
                    var r = t.childNodes[n];
                    if (8 === r.nodeType && r.nodeValue.trim() === e)
                        return r
                }
                return null
            }(r);
            if (i)
                return {
                    parent: i.parentNode,
                    node: i.nextSibling
                }
        }
        return !1
    }
    var ge = ue((function() {
        var e = document.querySelector('meta[property="csp-nonce"]');
        return e ? e.getAttribute("content") : null
    }
    ))
      , ve = function(e, t, n) {
        try {
            if ("insertRule"in e)
                e.insertRule(t, n);
            else if ("appendRule"in e) {
                e.appendRule(t)
            }
        } catch (r) {
            return !1
        }
        return e.cssRules[n]
    }
      , ye = function(e, t) {
        var n = e.cssRules.length;
        return void 0 === t || t > n ? n : t
    }
      , be = function() {
        function e(e) {
            this.getPropertyValue = ce,
            this.setProperty = he,
            this.removeProperty = pe,
            this.setSelector = fe,
            this.element = void 0,
            this.sheet = void 0,
            this.hasInsertedRules = !1,
            this.cssRules = [],
            e && ie.add(e),
            this.sheet = e;
            var t = this.sheet ? this.sheet.options : {}
              , n = t.media
              , r = t.meta
              , i = t.element;
            this.element = i || function() {
                var e = document.createElement("style");
                return e.textContent = "\n",
                e
            }(),
            this.element.setAttribute("data-jss", ""),
            n && this.element.setAttribute("media", n),
            r && this.element.setAttribute("data-meta", r);
            var a = ge();
            a && this.element.setAttribute("nonce", a)
        }
        var t = e.prototype;
        return t.attach = function() {
            if (!this.element.parentNode && this.sheet) {
                !function(e, t) {
                    var n = t.insertionPoint
                      , r = me(t);
                    if (!1 !== r && r.parent)
                        r.parent.insertBefore(e, r.node);
                    else if (n && "number" === typeof n.nodeType) {
                        var i = n
                          , a = i.parentNode;
                        a && a.insertBefore(e, i.nextSibling)
                    } else
                        de().appendChild(e)
                }(this.element, this.sheet.options);
                var e = Boolean(this.sheet && this.sheet.deployed);
                this.hasInsertedRules && e && (this.hasInsertedRules = !1,
                this.deploy())
            }
        }
        ,
        t.detach = function() {
            if (this.sheet) {
                var e = this.element.parentNode;
                e && e.removeChild(this.element),
                this.sheet.options.link && (this.cssRules = [],
                this.element.textContent = "\n")
            }
        }
        ,
        t.deploy = function() {
            var e = this.sheet;
            e && (e.options.link ? this.insertRules(e.rules) : this.element.textContent = "\n" + e.toString() + "\n")
        }
        ,
        t.insertRules = function(e, t) {
            for (var n = 0; n < e.index.length; n++)
                this.insertRule(e.index[n], n, t)
        }
        ,
        t.insertRule = function(e, t, n) {
            if (void 0 === n && (n = this.element.sheet),
            e.rules) {
                var r = e
                  , i = n;
                if ("conditional" === e.type || "keyframes" === e.type) {
                    var a = ye(n, t);
                    if (!1 === (i = ve(n, r.toString({
                        children: !1
                    }), a)))
                        return !1;
                    this.refCssRule(e, a, i)
                }
                return this.insertRules(r.rules, i),
                i
            }
            var o = e.toString();
            if (!o)
                return !1;
            var s = ye(n, t)
              , l = ve(n, o, s);
            return !1 !== l && (this.hasInsertedRules = !0,
            this.refCssRule(e, s, l),
            l)
        }
        ,
        t.refCssRule = function(e, t, n) {
            e.renderable = n,
            e.options.parent instanceof ne && (this.cssRules[t] = n)
        }
        ,
        t.deleteRule = function(e) {
            var t = this.element.sheet
              , n = this.indexOf(e);
            return -1 !== n && (t.deleteRule(n),
            this.cssRules.splice(n, 1),
            !0)
        }
        ,
        t.indexOf = function(e) {
            return this.cssRules.indexOf(e)
        }
        ,
        t.replaceRule = function(e, t) {
            var n = this.indexOf(e);
            return -1 !== n && (this.element.sheet.deleteRule(n),
            this.cssRules.splice(n, 1),
            this.insertRule(t, n))
        }
        ,
        t.getRules = function() {
            return this.element.sheet.cssRules
        }
        ,
        e
    }()
      , xe = 0
      , we = function() {
        function e(e) {
            this.id = xe++,
            this.version = "10.6.0",
            this.plugins = new re,
            this.options = {
                id: {
                    minify: !1
                },
                createGenerateId: le,
                Renderer: p ? be : null,
                plugins: []
            },
            this.generateId = le({
                minify: !1
            });
            for (var t = 0; t < K.length; t++)
                this.plugins.use(K[t], {
                    queue: "internal"
                });
            this.setup(e)
        }
        var t = e.prototype;
        return t.setup = function(e) {
            return void 0 === e && (e = {}),
            e.createGenerateId && (this.options.createGenerateId = e.createGenerateId),
            e.id && (this.options.id = Object(a.a)({}, this.options.id, e.id)),
            (e.createGenerateId || e.id) && (this.generateId = this.options.createGenerateId(this.options.id)),
            null != e.insertionPoint && (this.options.insertionPoint = e.insertionPoint),
            "Renderer"in e && (this.options.Renderer = e.Renderer),
            e.plugins && this.use.apply(this, e.plugins),
            this
        }
        ,
        t.createStyleSheet = function(e, t) {
            void 0 === t && (t = {});
            var n = t.index;
            "number" !== typeof n && (n = 0 === ie.index ? 0 : ie.index + 1);
            var r = new ne(e,Object(a.a)({}, t, {
                jss: this,
                generateId: t.generateId || this.generateId,
                insertionPoint: this.options.insertionPoint,
                Renderer: this.options.Renderer,
                index: n
            }));
            return this.plugins.onProcessSheet(r),
            r
        }
        ,
        t.removeStyleSheet = function(e) {
            return e.detach(),
            ie.remove(e),
            this
        }
        ,
        t.createRule = function(e, t, n) {
            if (void 0 === t && (t = {}),
            void 0 === n && (n = {}),
            "object" === typeof e)
                return this.createRule(void 0, e, t);
            var r = Object(a.a)({}, n, {
                name: e,
                jss: this,
                Renderer: this.options.Renderer
            });
            r.generateId || (r.generateId = this.generateId),
            r.classes || (r.classes = {}),
            r.keyframes || (r.keyframes = {});
            var i = b(e, t, r);
            return i && this.plugins.onProcessRule(i),
            i
        }
        ,
        t.use = function() {
            for (var e = this, t = arguments.length, n = new Array(t), r = 0; r < t; r++)
                n[r] = arguments[r];
            return n.forEach((function(t) {
                e.plugins.use(t)
            }
            )),
            this
        }
        ,
        e
    }();
    var _e = "object" === typeof CSS && null != CSS && "number"in CSS
      , Se = function(e) {
        return new we(e)
    };
    Se();
    function Ee() {
        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
          , t = e.baseClasses
          , n = e.newClasses;
        e.Component;
        if (!n)
            return t;
        var r = Object(a.a)({}, t);
        return Object.keys(n).forEach((function(e) {
            n[e] && (r[e] = "".concat(t[e], " ").concat(n[e]))
        }
        )),
        r
    }
    var Me = {
        set: function(e, t, n, r) {
            var i = e.get(t);
            i || (i = new Map,
            e.set(t, i)),
            i.set(n, r)
        },
        get: function(e, t, n) {
            var r = e.get(t);
            return r ? r.get(n) : void 0
        },
        delete: function(e, t, n) {
            e.get(t).delete(n)
        }
    };
    var Te = s.a.createContext(null);
    function Ae() {
        return s.a.useContext(Te)
    }
    var Pe = "function" === typeof Symbol && Symbol.for ? Symbol.for("mui.nested") : "__THEME_NESTED__"
      , Ce = ["checked", "disabled", "error", "focused", "focusVisible", "required", "expanded", "selected"];
    var Le = Date.now()
      , Re = "fnValues" + Le
      , ke = "fnStyle" + ++Le
      , De = function() {
        return {
            onCreateRule: function(e, t, n) {
                if ("function" !== typeof t)
                    return null;
                var r = b(e, {}, n);
                return r[ke] = t,
                r
            },
            onProcessStyle: function(e, t) {
                if (Re in t || ke in t)
                    return e;
                var n = {};
                for (var r in e) {
                    var i = e[r];
                    "function" === typeof i && (delete e[r],
                    n[r] = i)
                }
                return t[Re] = n,
                e
            },
            onUpdate: function(e, t, n, r) {
                var i = t
                  , a = i[ke];
                a && (i.style = a(e) || {});
                var o = i[Re];
                if (o)
                    for (var s in o)
                        i.prop(s, o[s](e), r)
            }
        }
    }
      , Ie = "@global"
      , Oe = function() {
        function e(e, t, n) {
            for (var r in this.type = "global",
            this.at = Ie,
            this.rules = void 0,
            this.options = void 0,
            this.key = void 0,
            this.isProcessed = !1,
            this.key = e,
            this.options = n,
            this.rules = new te(Object(a.a)({}, n, {
                parent: this
            })),
            t)
                this.rules.add(r, t[r]);
            this.rules.process()
        }
        var t = e.prototype;
        return t.getRule = function(e) {
            return this.rules.get(e)
        }
        ,
        t.addRule = function(e, t, n) {
            var r = this.rules.add(e, t, n);
            return r && this.options.jss.plugins.onProcessRule(r),
            r
        }
        ,
        t.indexOf = function(e) {
            return this.rules.indexOf(e)
        }
        ,
        t.toString = function() {
            return this.rules.toString()
        }
        ,
        e
    }()
      , Fe = function() {
        function e(e, t, n) {
            this.type = "global",
            this.at = Ie,
            this.options = void 0,
            this.rule = void 0,
            this.isProcessed = !1,
            this.key = void 0,
            this.key = e,
            this.options = n;
            var r = e.substr("@global ".length);
            this.rule = n.jss.createRule(r, t, Object(a.a)({}, n, {
                parent: this
            }))
        }
        return e.prototype.toString = function(e) {
            return this.rule ? this.rule.toString(e) : ""
        }
        ,
        e
    }()
      , Ne = /\s*,\s*/g;
    function Be(e, t) {
        for (var n = e.split(Ne), r = "", i = 0; i < n.length; i++)
            r += t + " " + n[i].trim(),
            n[i + 1] && (r += ", ");
        return r
    }
    var ze = function() {
        return {
            onCreateRule: function(e, t, n) {
                if (!e)
                    return null;
                if (e === Ie)
                    return new Oe(e,t,n);
                if ("@" === e[0] && "@global " === e.substr(0, "@global ".length))
                    return new Fe(e,t,n);
                var r = n.parent;
                return r && ("global" === r.type || r.options.parent && "global" === r.options.parent.type) && (n.scoped = !1),
                !1 === n.scoped && (n.selector = e),
                null
            },
            onProcessRule: function(e, t) {
                "style" === e.type && t && (function(e, t) {
                    var n = e.options
                      , r = e.style
                      , i = r ? r[Ie] : null;
                    if (i) {
                        for (var o in i)
                            t.addRule(o, i[o], Object(a.a)({}, n, {
                                selector: Be(o, e.selector)
                            }));
                        delete r[Ie]
                    }
                }(e, t),
                function(e, t) {
                    var n = e.options
                      , r = e.style;
                    for (var i in r)
                        if ("@" === i[0] && i.substr(0, Ie.length) === Ie) {
                            var o = Be(i.substr(Ie.length), e.selector);
                            t.addRule(o, r[i], Object(a.a)({}, n, {
                                selector: o
                            })),
                            delete r[i]
                        }
                }(e, t))
            }
        }
    }
      , Ge = /\s*,\s*/g
      , He = /&/g
      , Ve = /\$([\w-]+)/g;
    var je = function() {
        function e(e, t) {
            return function(n, r) {
                var i = e.getRule(r) || t && t.getRule(r);
                return i ? (i = i).selector : r
            }
        }
        function t(e, t) {
            for (var n = t.split(Ge), r = e.split(Ge), i = "", a = 0; a < n.length; a++)
                for (var o = n[a], s = 0; s < r.length; s++) {
                    var l = r[s];
                    i && (i += ", "),
                    i += -1 !== l.indexOf("&") ? l.replace(He, o) : o + " " + l
                }
            return i
        }
        function n(e, t, n) {
            if (n)
                return Object(a.a)({}, n, {
                    index: n.index + 1
                });
            var r = e.options.nestingLevel;
            r = void 0 === r ? 1 : r + 1;
            var i = Object(a.a)({}, e.options, {
                nestingLevel: r,
                index: t.indexOf(e) + 1
            });
            return delete i.name,
            i
        }
        return {
            onProcessStyle: function(r, i, o) {
                if ("style" !== i.type)
                    return r;
                var s, l, u = i, c = u.options.parent;
                for (var h in r) {
                    var p = -1 !== h.indexOf("&")
                      , f = "@" === h[0];
                    if (p || f) {
                        if (s = n(u, c, s),
                        p) {
                            var d = t(h, u.selector);
                            l || (l = e(c, o)),
                            d = d.replace(Ve, l),
                            c.addRule(d, r[h], Object(a.a)({}, s, {
                                selector: d
                            }))
                        } else
                            f && c.addRule(h, {}, s).addRule(u.key, r[h], {
                                selector: u.selector
                            });
                        delete r[h]
                    }
                }
                return r
            }
        }
    }
      , Ue = /[A-Z]/g
      , We = /^ms-/
      , qe = {};
    function Xe(e) {
        return "-" + e.toLowerCase()
    }
    var Ye = function(e) {
        if (qe.hasOwnProperty(e))
            return qe[e];
        var t = e.replace(Ue, Xe);
        return qe[e] = We.test(t) ? "-" + t : t
    };
    function Ze(e) {
        var t = {};
        for (var n in e) {
            t[0 === n.indexOf("--") ? n : Ye(n)] = e[n]
        }
        return e.fallbacks && (Array.isArray(e.fallbacks) ? t.fallbacks = e.fallbacks.map(Ze) : t.fallbacks = Ze(e.fallbacks)),
        t
    }
    var $e = function() {
        return {
            onProcessStyle: function(e) {
                if (Array.isArray(e)) {
                    for (var t = 0; t < e.length; t++)
                        e[t] = Ze(e[t]);
                    return e
                }
                return Ze(e)
            },
            onChangeValue: function(e, t, n) {
                if (0 === t.indexOf("--"))
                    return e;
                var r = Ye(t);
                return t === r ? e : (n.prop(r, e),
                null)
            }
        }
    }
      , Je = _e && CSS ? CSS.px : "px"
      , Ke = _e && CSS ? CSS.ms : "ms"
      , Qe = _e && CSS ? CSS.percent : "%";
    function et(e) {
        var t = /(-[a-z])/g
          , n = function(e) {
            return e[1].toUpperCase()
        }
          , r = {};
        for (var i in e)
            r[i] = e[i],
            r[i.replace(t, n)] = e[i];
        return r
    }
    var tt = et({
        "animation-delay": Ke,
        "animation-duration": Ke,
        "background-position": Je,
        "background-position-x": Je,
        "background-position-y": Je,
        "background-size": Je,
        border: Je,
        "border-bottom": Je,
        "border-bottom-left-radius": Je,
        "border-bottom-right-radius": Je,
        "border-bottom-width": Je,
        "border-left": Je,
        "border-left-width": Je,
        "border-radius": Je,
        "border-right": Je,
        "border-right-width": Je,
        "border-top": Je,
        "border-top-left-radius": Je,
        "border-top-right-radius": Je,
        "border-top-width": Je,
        "border-width": Je,
        "border-block": Je,
        "border-block-end": Je,
        "border-block-end-width": Je,
        "border-block-start": Je,
        "border-block-start-width": Je,
        "border-block-width": Je,
        "border-inline": Je,
        "border-inline-end": Je,
        "border-inline-end-width": Je,
        "border-inline-start": Je,
        "border-inline-start-width": Je,
        "border-inline-width": Je,
        "border-start-start-radius": Je,
        "border-start-end-radius": Je,
        "border-end-start-radius": Je,
        "border-end-end-radius": Je,
        margin: Je,
        "margin-bottom": Je,
        "margin-left": Je,
        "margin-right": Je,
        "margin-top": Je,
        "margin-block": Je,
        "margin-block-end": Je,
        "margin-block-start": Je,
        "margin-inline": Je,
        "margin-inline-end": Je,
        "margin-inline-start": Je,
        padding: Je,
        "padding-bottom": Je,
        "padding-left": Je,
        "padding-right": Je,
        "padding-top": Je,
        "padding-block": Je,
        "padding-block-end": Je,
        "padding-block-start": Je,
        "padding-inline": Je,
        "padding-inline-end": Je,
        "padding-inline-start": Je,
        "mask-position-x": Je,
        "mask-position-y": Je,
        "mask-size": Je,
        height: Je,
        width: Je,
        "min-height": Je,
        "max-height": Je,
        "min-width": Je,
        "max-width": Je,
        bottom: Je,
        left: Je,
        top: Je,
        right: Je,
        inset: Je,
        "inset-block": Je,
        "inset-block-end": Je,
        "inset-block-start": Je,
        "inset-inline": Je,
        "inset-inline-end": Je,
        "inset-inline-start": Je,
        "box-shadow": Je,
        "text-shadow": Je,
        "column-gap": Je,
        "column-rule": Je,
        "column-rule-width": Je,
        "column-width": Je,
        "font-size": Je,
        "font-size-delta": Je,
        "letter-spacing": Je,
        "text-decoration-thickness": Je,
        "text-indent": Je,
        "text-stroke": Je,
        "text-stroke-width": Je,
        "word-spacing": Je,
        motion: Je,
        "motion-offset": Je,
        outline: Je,
        "outline-offset": Je,
        "outline-width": Je,
        perspective: Je,
        "perspective-origin-x": Qe,
        "perspective-origin-y": Qe,
        "transform-origin": Qe,
        "transform-origin-x": Qe,
        "transform-origin-y": Qe,
        "transform-origin-z": Qe,
        "transition-delay": Ke,
        "transition-duration": Ke,
        "vertical-align": Je,
        "flex-basis": Je,
        "shape-margin": Je,
        size: Je,
        gap: Je,
        grid: Je,
        "grid-gap": Je,
        "row-gap": Je,
        "grid-row-gap": Je,
        "grid-column-gap": Je,
        "grid-template-rows": Je,
        "grid-template-columns": Je,
        "grid-auto-rows": Je,
        "grid-auto-columns": Je,
        "box-shadow-x": Je,
        "box-shadow-y": Je,
        "box-shadow-blur": Je,
        "box-shadow-spread": Je,
        "font-line-height": Je,
        "text-shadow-x": Je,
        "text-shadow-y": Je,
        "text-shadow-blur": Je
    });
    function nt(e, t, n) {
        if (null == t)
            return t;
        if (Array.isArray(t))
            for (var r = 0; r < t.length; r++)
                t[r] = nt(e, t[r], n);
        else if ("object" === typeof t)
            if ("fallbacks" === e)
                for (var i in t)
                    t[i] = nt(i, t[i], n);
            else
                for (var a in t)
                    t[a] = nt(e + "-" + a, t[a], n);
        else if ("number" === typeof t && !1 === isNaN(t)) {
            var o = n[e] || tt[e];
            return !o || 0 === t && o === Je ? t.toString() : "function" === typeof o ? o(t).toString() : "" + t + o
        }
        return t
    }
    var rt = function(e) {
        void 0 === e && (e = {});
        var t = et(e);
        return {
            onProcessStyle: function(e, n) {
                if ("style" !== n.type)
                    return e;
                for (var r in e)
                    e[r] = nt(r, e[r], t);
                return e
            },
            onChangeValue: function(e, n) {
                return nt(n, e, t)
            }
        }
    };
    function it(e, t) {
        (null == t || t > e.length) && (t = e.length);
        for (var n = 0, r = new Array(t); n < t; n++)
            r[n] = e[n];
        return r
    }
    function at(e, t) {
        if (e) {
            if ("string" === typeof e)
                return it(e, t);
            var n = Object.prototype.toString.call(e).slice(8, -1);
            return "Object" === n && e.constructor && (n = e.constructor.name),
            "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? it(e, t) : void 0
        }
    }
    function ot(e) {
        return function(e) {
            if (Array.isArray(e))
                return it(e)
        }(e) || function(e) {
            if ("undefined" !== typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"])
                return Array.from(e)
        }(e) || at(e) || function() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }()
    }
    var st = ""
      , lt = ""
      , ut = ""
      , ct = ""
      , ht = p && "ontouchstart"in document.documentElement;
    if (p) {
        var pt = {
            Moz: "-moz-",
            ms: "-ms-",
            O: "-o-",
            Webkit: "-webkit-"
        }
          , ft = document.createElement("p").style;
        for (var dt in pt)
            if (dt + "Transform"in ft) {
                st = dt,
                lt = pt[dt];
                break
            }
        "Webkit" === st && "msHyphens"in ft && (st = "ms",
        lt = pt.ms,
        ct = "edge"),
        "Webkit" === st && "-apple-trailing-word"in ft && (ut = "apple")
    }
    var mt = st
      , gt = lt
      , vt = ut
      , yt = ct
      , bt = ht;
    var xt = {
        noPrefill: ["appearance"],
        supportedProperty: function(e) {
            return "appearance" === e && ("ms" === mt ? "-webkit-" + e : gt + e)
        }
    }
      , wt = {
        noPrefill: ["color-adjust"],
        supportedProperty: function(e) {
            return "color-adjust" === e && ("Webkit" === mt ? gt + "print-" + e : e)
        }
    }
      , _t = /[-\s]+(.)?/g;
    function St(e, t) {
        return t ? t.toUpperCase() : ""
    }
    function Et(e) {
        return e.replace(_t, St)
    }
    function Mt(e) {
        return Et("-" + e)
    }
    var Tt, At = {
        noPrefill: ["mask"],
        supportedProperty: function(e, t) {
            if (!/^mask/.test(e))
                return !1;
            if ("Webkit" === mt) {
                if (Et("mask-image")in t)
                    return e;
                if (mt + Mt("mask-image")in t)
                    return gt + e
            }
            return e
        }
    }, Pt = {
        noPrefill: ["text-orientation"],
        supportedProperty: function(e) {
            return "text-orientation" === e && ("apple" !== vt || bt ? e : gt + e)
        }
    }, Ct = {
        noPrefill: ["transform"],
        supportedProperty: function(e, t, n) {
            return "transform" === e && (n.transform ? e : gt + e)
        }
    }, Lt = {
        noPrefill: ["transition"],
        supportedProperty: function(e, t, n) {
            return "transition" === e && (n.transition ? e : gt + e)
        }
    }, Rt = {
        noPrefill: ["writing-mode"],
        supportedProperty: function(e) {
            return "writing-mode" === e && ("Webkit" === mt || "ms" === mt && "edge" !== yt ? gt + e : e)
        }
    }, kt = {
        noPrefill: ["user-select"],
        supportedProperty: function(e) {
            return "user-select" === e && ("Moz" === mt || "ms" === mt || "apple" === vt ? gt + e : e)
        }
    }, Dt = {
        supportedProperty: function(e, t) {
            return !!/^break-/.test(e) && ("Webkit" === mt ? "WebkitColumn" + Mt(e)in t && gt + "column-" + e : "Moz" === mt && ("page" + Mt(e)in t && "page-" + e))
        }
    }, It = {
        supportedProperty: function(e, t) {
            if (!/^(border|margin|padding)-inline/.test(e))
                return !1;
            if ("Moz" === mt)
                return e;
            var n = e.replace("-inline", "");
            return mt + Mt(n)in t && gt + n
        }
    }, Ot = {
        supportedProperty: function(e, t) {
            return Et(e)in t && e
        }
    }, Ft = {
        supportedProperty: function(e, t) {
            var n = Mt(e);
            return "-" === e[0] || "-" === e[0] && "-" === e[1] ? e : mt + n in t ? gt + e : "Webkit" !== mt && "Webkit" + n in t && "-webkit-" + e
        }
    }, Nt = {
        supportedProperty: function(e) {
            return "scroll-snap" === e.substring(0, 11) && ("ms" === mt ? "" + gt + e : e)
        }
    }, Bt = {
        supportedProperty: function(e) {
            return "overscroll-behavior" === e && ("ms" === mt ? gt + "scroll-chaining" : e)
        }
    }, zt = {
        "flex-grow": "flex-positive",
        "flex-shrink": "flex-negative",
        "flex-basis": "flex-preferred-size",
        "justify-content": "flex-pack",
        order: "flex-order",
        "align-items": "flex-align",
        "align-content": "flex-line-pack"
    }, Gt = {
        supportedProperty: function(e, t) {
            var n = zt[e];
            return !!n && (mt + Mt(n)in t && gt + n)
        }
    }, Ht = {
        flex: "box-flex",
        "flex-grow": "box-flex",
        "flex-direction": ["box-orient", "box-direction"],
        order: "box-ordinal-group",
        "align-items": "box-align",
        "flex-flow": ["box-orient", "box-direction"],
        "justify-content": "box-pack"
    }, Vt = Object.keys(Ht), jt = function(e) {
        return gt + e
    }, Ut = [xt, wt, At, Pt, Ct, Lt, Rt, kt, Dt, It, Ot, Ft, Nt, Bt, Gt, {
        supportedProperty: function(e, t, n) {
            var r = n.multiple;
            if (Vt.indexOf(e) > -1) {
                var i = Ht[e];
                if (!Array.isArray(i))
                    return mt + Mt(i)in t && gt + i;
                if (!r)
                    return !1;
                for (var a = 0; a < i.length; a++)
                    if (!(mt + Mt(i[0])in t))
                        return !1;
                return i.map(jt)
            }
            return !1
        }
    }], Wt = Ut.filter((function(e) {
        return e.supportedProperty
    }
    )).map((function(e) {
        return e.supportedProperty
    }
    )), qt = Ut.filter((function(e) {
        return e.noPrefill
    }
    )).reduce((function(e, t) {
        return e.push.apply(e, ot(t.noPrefill)),
        e
    }
    ), []), Xt = {};
    if (p) {
        Tt = document.createElement("p");
        var Yt = window.getComputedStyle(document.documentElement, "");
        for (var Zt in Yt)
            isNaN(Zt) || (Xt[Yt[Zt]] = Yt[Zt]);
        qt.forEach((function(e) {
            return delete Xt[e]
        }
        ))
    }
    function $t(e, t) {
        if (void 0 === t && (t = {}),
        !Tt)
            return e;
        if (null != Xt[e])
            return Xt[e];
        "transition" !== e && "transform" !== e || (t[e] = e in Tt.style);
        for (var n = 0; n < Wt.length && (Xt[e] = Wt[n](e, Tt.style, t),
        !Xt[e]); n++)
            ;
        try {
            Tt.style[e] = ""
        } catch (r) {
            return !1
        }
        return Xt[e]
    }
    var Jt, Kt = {}, Qt = {
        transition: 1,
        "transition-property": 1,
        "-webkit-transition": 1,
        "-webkit-transition-property": 1
    }, en = /(^\s*[\w-]+)|, (\s*[\w-]+)(?![^()]*\))/g;
    function tn(e, t, n) {
        if ("var" === t)
            return "var";
        if ("all" === t)
            return "all";
        if ("all" === n)
            return ", all";
        var r = t ? $t(t) : ", " + $t(n);
        return r || (t || n)
    }
    function nn(e, t) {
        var n = t;
        if (!Jt || "content" === e)
            return t;
        if ("string" !== typeof n || !isNaN(parseInt(n, 10)))
            return n;
        var r = e + n;
        if (null != Kt[r])
            return Kt[r];
        try {
            Jt.style[e] = n
        } catch (i) {
            return Kt[r] = !1,
            !1
        }
        if (Qt[e])
            n = n.replace(en, tn);
        else if ("" === Jt.style[e] && ("-ms-flex" === (n = gt + n) && (Jt.style[e] = "-ms-flexbox"),
        Jt.style[e] = n,
        "" === Jt.style[e]))
            return Kt[r] = !1,
            !1;
        return Jt.style[e] = "",
        Kt[r] = n,
        Kt[r]
    }
    p && (Jt = document.createElement("p"));
    var rn = function() {
        function e(t) {
            for (var n in t) {
                var r = t[n];
                if ("fallbacks" === n && Array.isArray(r))
                    t[n] = r.map(e);
                else {
                    var i = !1
                      , a = $t(n);
                    a && a !== n && (i = !0);
                    var o = !1
                      , s = nn(a, w(r));
                    s && s !== r && (o = !0),
                    (i || o) && (i && delete t[n],
                    t[a || n] = s || r)
                }
            }
            return t
        }
        return {
            onProcessRule: function(e) {
                if ("keyframes" === e.type) {
                    var t = e;
                    t.at = "-" === (n = t.at)[1] || "ms" === mt ? n : "@" + gt + "keyframes" + n.substr(10)
                }
                var n
            },
            onProcessStyle: function(t, n) {
                return "style" !== n.type ? t : e(t)
            },
            onChangeValue: function(e, t) {
                return nn(t, w(e)) || e
            }
        }
    };
    var an = function() {
        var e = function(e, t) {
            return e.length === t.length ? e > t ? 1 : -1 : e.length - t.length
        };
        return {
            onProcessStyle: function(t, n) {
                if ("style" !== n.type)
                    return t;
                for (var r = {}, i = Object.keys(t).sort(e), a = 0; a < i.length; a++)
                    r[i[a]] = t[i[a]];
                return r
            }
        }
    };
    function on() {
        return {
            plugins: [De(), ze(), je(), $e(), rt(), "undefined" === typeof window ? null : rn(), an()]
        }
    }
    var sn = Se(on())
      , ln = {
        disableGeneration: !1,
        generateClassName: function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
              , t = e.disableGlobal
              , n = void 0 !== t && t
              , r = e.productionPrefix
              , i = void 0 === r ? "jss" : r
              , a = e.seed
              , o = void 0 === a ? "" : a
              , s = "" === o ? "" : "".concat(o, "-")
              , l = 0
              , u = function() {
                return l += 1
            };
            return function(e, t) {
                var r = t.options.name;
                if (r && 0 === r.indexOf("Mui") && !t.options.link && !n) {
                    if (-1 !== Ce.indexOf(e.key))
                        return "Mui-".concat(e.key);
                    var a = "".concat(s).concat(r, "-").concat(e.key);
                    return t.options.theme[Pe] && "" === o ? "".concat(a, "-").concat(u()) : a
                }
                return "".concat(s).concat(i).concat(u())
            }
        }(),
        jss: sn,
        sheetsCache: null,
        sheetsManager: new Map,
        sheetsRegistry: null
    }
      , un = s.a.createContext(ln);
    var cn = -1e9;
    function hn() {
        return cn += 1
    }
    function pn(e) {
        return (pn = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(e) {
            return typeof e
        }
        : function(e) {
            return e && "function" === typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
        }
        )(e)
    }
    function fn(e) {
        return e && "object" === pn(e) && e.constructor === Object
    }
    function dn(e, t) {
        var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {
            clone: !0
        }
          , r = n.clone ? Object(a.a)({}, e) : e;
        return fn(e) && fn(t) && Object.keys(t).forEach((function(i) {
            "__proto__" !== i && (fn(t[i]) && i in e ? r[i] = dn(e[i], t[i], n) : r[i] = t[i])
        }
        )),
        r
    }
    function mn(e) {
        var t = "function" === typeof e;
        return {
            create: function(n, r) {
                var i;
                try {
                    i = t ? e(n) : e
                } catch (l) {
                    throw l
                }
                if (!r || !n.overrides || !n.overrides[r])
                    return i;
                var o = n.overrides[r]
                  , s = Object(a.a)({}, i);
                return Object.keys(o).forEach((function(e) {
                    s[e] = dn(s[e], o[e])
                }
                )),
                s
            },
            options: {}
        }
    }
    var gn = {};
    function vn(e, t, n) {
        var r = e.state;
        if (e.stylesOptions.disableGeneration)
            return t || {};
        r.cacheClasses || (r.cacheClasses = {
            value: null,
            lastProp: null,
            lastJSS: {}
        });
        var i = !1;
        return r.classes !== r.cacheClasses.lastJSS && (r.cacheClasses.lastJSS = r.classes,
        i = !0),
        t !== r.cacheClasses.lastProp && (r.cacheClasses.lastProp = t,
        i = !0),
        i && (r.cacheClasses.value = Ee({
            baseClasses: r.cacheClasses.lastJSS,
            newClasses: t,
            Component: n
        })),
        r.cacheClasses.value
    }
    function yn(e, t) {
        var n = e.state
          , r = e.theme
          , i = e.stylesOptions
          , o = e.stylesCreator
          , s = e.name;
        if (!i.disableGeneration) {
            var l = Me.get(i.sheetsManager, o, r);
            l || (l = {
                refs: 0,
                staticSheet: null,
                dynamicStyles: null
            },
            Me.set(i.sheetsManager, o, r, l));
            var u = Object(a.a)({}, o.options, i, {
                theme: r,
                flip: "boolean" === typeof i.flip ? i.flip : "rtl" === r.direction
            });
            u.generateId = u.serverGenerateClassName || u.generateClassName;
            var c = i.sheetsRegistry;
            if (0 === l.refs) {
                var h;
                i.sheetsCache && (h = Me.get(i.sheetsCache, o, r));
                var p = o.create(r, s);
                h || ((h = i.jss.createStyleSheet(p, Object(a.a)({
                    link: !1
                }, u))).attach(),
                i.sheetsCache && Me.set(i.sheetsCache, o, r, h)),
                c && c.add(h),
                l.staticSheet = h,
                l.dynamicStyles = function e(t) {
                    var n = null;
                    for (var r in t) {
                        var i = t[r]
                          , a = typeof i;
                        if ("function" === a)
                            n || (n = {}),
                            n[r] = i;
                        else if ("object" === a && null !== i && !Array.isArray(i)) {
                            var o = e(i);
                            o && (n || (n = {}),
                            n[r] = o)
                        }
                    }
                    return n
                }(p)
            }
            if (l.dynamicStyles) {
                var f = i.jss.createStyleSheet(l.dynamicStyles, Object(a.a)({
                    link: !0
                }, u));
                f.update(t),
                f.attach(),
                n.dynamicSheet = f,
                n.classes = Ee({
                    baseClasses: l.staticSheet.classes,
                    newClasses: f.classes
                }),
                c && c.add(f)
            } else
                n.classes = l.staticSheet.classes;
            l.refs += 1
        }
    }
    function bn(e, t) {
        var n = e.state;
        n.dynamicSheet && n.dynamicSheet.update(t)
    }
    function xn(e) {
        var t = e.state
          , n = e.theme
          , r = e.stylesOptions
          , i = e.stylesCreator;
        if (!r.disableGeneration) {
            var a = Me.get(r.sheetsManager, i, n);
            a.refs -= 1;
            var o = r.sheetsRegistry;
            0 === a.refs && (Me.delete(r.sheetsManager, i, n),
            r.jss.removeStyleSheet(a.staticSheet),
            o && o.remove(a.staticSheet)),
            t.dynamicSheet && (r.jss.removeStyleSheet(t.dynamicSheet),
            o && o.remove(t.dynamicSheet))
        }
    }
    function wn(e, t) {
        var n, r = s.a.useRef([]), i = s.a.useMemo((function() {
            return {}
        }
        ), t);
        r.current !== i && (r.current = i,
        n = e()),
        s.a.useEffect((function() {
            return function() {
                n && n()
            }
        }
        ), [i])
    }
    function _n(e) {
        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
          , n = t.name
          , r = t.classNamePrefix
          , o = t.Component
          , l = t.defaultTheme
          , u = void 0 === l ? gn : l
          , c = i(t, ["name", "classNamePrefix", "Component", "defaultTheme"])
          , h = mn(e)
          , p = n || r || "makeStyles";
        h.options = {
            index: hn(),
            name: n,
            meta: p,
            classNamePrefix: p
        };
        var f = function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
              , t = Ae() || u
              , r = Object(a.a)({}, s.a.useContext(un), c)
              , i = s.a.useRef()
              , l = s.a.useRef();
            wn((function() {
                var a = {
                    name: n,
                    state: {},
                    stylesCreator: h,
                    stylesOptions: r,
                    theme: t
                };
                return yn(a, e),
                l.current = !1,
                i.current = a,
                function() {
                    xn(a)
                }
            }
            ), [t, h]),
            s.a.useEffect((function() {
                l.current && bn(i.current, e),
                l.current = !0
            }
            ));
            var p = vn(i.current, e.classes, o);
            return p
        };
        return f
    }
    function Sn(e) {
        var t = e.theme
          , n = e.name
          , r = e.props;
        if (!t || !t.props || !t.props[n])
            return r;
        var i, a = t.props[n];
        for (i in a)
            void 0 === r[i] && (r[i] = a[i]);
        return r
    }
    var En = function(e) {
        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
        return function(n) {
            var r = t.defaultTheme
              , o = t.withTheme
              , l = void 0 !== o && o
              , u = t.name
              , h = i(t, ["defaultTheme", "withTheme", "name"]);
            var p = u
              , f = _n(e, Object(a.a)({
                defaultTheme: r,
                Component: n,
                name: u || n.displayName,
                classNamePrefix: p
            }, h))
              , d = s.a.forwardRef((function(e, t) {
                e.classes;
                var o, c = e.innerRef, h = i(e, ["classes", "innerRef"]), p = f(Object(a.a)({}, n.defaultProps, e)), d = h;
                return ("string" === typeof u || l) && (o = Ae() || r,
                u && (d = Sn({
                    theme: o,
                    name: u,
                    props: h
                })),
                l && !d.theme && (d.theme = o)),
                s.a.createElement(n, Object(a.a)({
                    ref: c || t,
                    classes: p
                }, d))
            }
            ));
            return c()(d, n),
            d
        }
    }
      , Mn = n(16)
      , Tn = ["xs", "sm", "md", "lg", "xl"];
    function An(e) {
        var t = e.values
          , n = void 0 === t ? {
            xs: 0,
            sm: 600,
            md: 960,
            lg: 1280,
            xl: 1920
        } : t
          , r = e.unit
          , o = void 0 === r ? "px" : r
          , s = e.step
          , l = void 0 === s ? 5 : s
          , u = i(e, ["values", "unit", "step"]);
        function c(e) {
            var t = "number" === typeof n[e] ? n[e] : e;
            return "@media (min-width:".concat(t).concat(o, ")")
        }
        function h(e, t) {
            var r = Tn.indexOf(t);
            return r === Tn.length - 1 ? c(e) : "@media (min-width:".concat("number" === typeof n[e] ? n[e] : e).concat(o, ") and ") + "(max-width:".concat((-1 !== r && "number" === typeof n[Tn[r + 1]] ? n[Tn[r + 1]] : t) - l / 100).concat(o, ")")
        }
        return Object(a.a)({
            keys: Tn,
            values: n,
            up: c,
            down: function(e) {
                var t = Tn.indexOf(e) + 1
                  , r = n[Tn[t]];
                return t === Tn.length ? c("xs") : "@media (max-width:".concat(("number" === typeof r && t > 0 ? r : e) - l / 100).concat(o, ")")
            },
            between: h,
            only: function(e) {
                return h(e, e)
            },
            width: function(e) {
                return n[e]
            }
        }, u)
    }
    function Pn(e, t, n) {
        var r;
        return Object(a.a)({
            gutters: function() {
                var n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                return Object(a.a)({
                    paddingLeft: t(2),
                    paddingRight: t(2)
                }, n, Object(Mn.a)({}, e.up("sm"), Object(a.a)({
                    paddingLeft: t(3),
                    paddingRight: t(3)
                }, n[e.up("sm")])))
            },
            toolbar: (r = {
                minHeight: 56
            },
            Object(Mn.a)(r, "".concat(e.up("xs"), " and (orientation: landscape)"), {
                minHeight: 48
            }),
            Object(Mn.a)(r, e.up("sm"), {
                minHeight: 64
            }),
            r)
        }, n)
    }
    function Cn(e) {
        for (var t = "https://material-ui.com/production-error/?code=" + e, n = 1; n < arguments.length; n += 1)
            t += "&args[]=" + encodeURIComponent(arguments[n]);
        return "Minified Material-UI error #" + e + "; visit " + t + " for the full message."
    }
    var Ln = {
        black: "#000",
        white: "#fff"
    }
      , Rn = {
        50: "#fafafa",
        100: "#f5f5f5",
        200: "#eeeeee",
        300: "#e0e0e0",
        400: "#bdbdbd",
        500: "#9e9e9e",
        600: "#757575",
        700: "#616161",
        800: "#424242",
        900: "#212121",
        A100: "#d5d5d5",
        A200: "#aaaaaa",
        A400: "#303030",
        A700: "#616161"
    }
      , kn = {
        50: "#e8eaf6",
        100: "#c5cae9",
        200: "#9fa8da",
        300: "#7986cb",
        400: "#5c6bc0",
        500: "#3f51b5",
        600: "#3949ab",
        700: "#303f9f",
        800: "#283593",
        900: "#1a237e",
        A100: "#8c9eff",
        A200: "#536dfe",
        A400: "#3d5afe",
        A700: "#304ffe"
    }
      , Dn = {
        50: "#fce4ec",
        100: "#f8bbd0",
        200: "#f48fb1",
        300: "#f06292",
        400: "#ec407a",
        500: "#e91e63",
        600: "#d81b60",
        700: "#c2185b",
        800: "#ad1457",
        900: "#880e4f",
        A100: "#ff80ab",
        A200: "#ff4081",
        A400: "#f50057",
        A700: "#c51162"
    }
      , In = {
        50: "#ffebee",
        100: "#ffcdd2",
        200: "#ef9a9a",
        300: "#e57373",
        400: "#ef5350",
        500: "#f44336",
        600: "#e53935",
        700: "#d32f2f",
        800: "#c62828",
        900: "#b71c1c",
        A100: "#ff8a80",
        A200: "#ff5252",
        A400: "#ff1744",
        A700: "#d50000"
    }
      , On = {
        50: "#fff3e0",
        100: "#ffe0b2",
        200: "#ffcc80",
        300: "#ffb74d",
        400: "#ffa726",
        500: "#ff9800",
        600: "#fb8c00",
        700: "#f57c00",
        800: "#ef6c00",
        900: "#e65100",
        A100: "#ffd180",
        A200: "#ffab40",
        A400: "#ff9100",
        A700: "#ff6d00"
    }
      , Fn = {
        50: "#e3f2fd",
        100: "#bbdefb",
        200: "#90caf9",
        300: "#64b5f6",
        400: "#42a5f5",
        500: "#2196f3",
        600: "#1e88e5",
        700: "#1976d2",
        800: "#1565c0",
        900: "#0d47a1",
        A100: "#82b1ff",
        A200: "#448aff",
        A400: "#2979ff",
        A700: "#2962ff"
    }
      , Nn = {
        50: "#e8f5e9",
        100: "#c8e6c9",
        200: "#a5d6a7",
        300: "#81c784",
        400: "#66bb6a",
        500: "#4caf50",
        600: "#43a047",
        700: "#388e3c",
        800: "#2e7d32",
        900: "#1b5e20",
        A100: "#b9f6ca",
        A200: "#69f0ae",
        A400: "#00e676",
        A700: "#00c853"
    };
    function Bn(e) {
        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0
          , n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
        return Math.min(Math.max(t, e), n)
    }
    function zn(e) {
        if (e.type)
            return e;
        if ("#" === e.charAt(0))
            return zn(function(e) {
                e = e.substr(1);
                var t = new RegExp(".{1,".concat(e.length >= 6 ? 2 : 1, "}"),"g")
                  , n = e.match(t);
                return n && 1 === n[0].length && (n = n.map((function(e) {
                    return e + e
                }
                ))),
                n ? "rgb".concat(4 === n.length ? "a" : "", "(").concat(n.map((function(e, t) {
                    return t < 3 ? parseInt(e, 16) : Math.round(parseInt(e, 16) / 255 * 1e3) / 1e3
                }
                )).join(", "), ")") : ""
            }(e));
        var t = e.indexOf("(")
          , n = e.substring(0, t);
        if (-1 === ["rgb", "rgba", "hsl", "hsla"].indexOf(n))
            throw new Error(Cn(3, e));
        var r = e.substring(t + 1, e.length - 1).split(",");
        return {
            type: n,
            values: r = r.map((function(e) {
                return parseFloat(e)
            }
            ))
        }
    }
    function Gn(e) {
        var t = e.type
          , n = e.values;
        return -1 !== t.indexOf("rgb") ? n = n.map((function(e, t) {
            return t < 3 ? parseInt(e, 10) : e
        }
        )) : -1 !== t.indexOf("hsl") && (n[1] = "".concat(n[1], "%"),
        n[2] = "".concat(n[2], "%")),
        "".concat(t, "(").concat(n.join(", "), ")")
    }
    function Hn(e) {
        var t = "hsl" === (e = zn(e)).type ? zn(function(e) {
            var t = (e = zn(e)).values
              , n = t[0]
              , r = t[1] / 100
              , i = t[2] / 100
              , a = r * Math.min(i, 1 - i)
              , o = function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : (e + n / 30) % 12;
                return i - a * Math.max(Math.min(t - 3, 9 - t, 1), -1)
            }
              , s = "rgb"
              , l = [Math.round(255 * o(0)), Math.round(255 * o(8)), Math.round(255 * o(4))];
            return "hsla" === e.type && (s += "a",
            l.push(t[3])),
            Gn({
                type: s,
                values: l
            })
        }(e)).values : e.values;
        return t = t.map((function(e) {
            return (e /= 255) <= .03928 ? e / 12.92 : Math.pow((e + .055) / 1.055, 2.4)
        }
        )),
        Number((.2126 * t[0] + .7152 * t[1] + .0722 * t[2]).toFixed(3))
    }
    function Vn(e, t) {
        if (e = zn(e),
        t = Bn(t),
        -1 !== e.type.indexOf("hsl"))
            e.values[2] *= 1 - t;
        else if (-1 !== e.type.indexOf("rgb"))
            for (var n = 0; n < 3; n += 1)
                e.values[n] *= 1 - t;
        return Gn(e)
    }
    function jn(e, t) {
        if (e = zn(e),
        t = Bn(t),
        -1 !== e.type.indexOf("hsl"))
            e.values[2] += (100 - e.values[2]) * t;
        else if (-1 !== e.type.indexOf("rgb"))
            for (var n = 0; n < 3; n += 1)
                e.values[n] += (255 - e.values[n]) * t;
        return Gn(e)
    }
    var Un = {
        text: {
            primary: "rgba(0, 0, 0, 0.87)",
            secondary: "rgba(0, 0, 0, 0.54)",
            disabled: "rgba(0, 0, 0, 0.38)",
            hint: "rgba(0, 0, 0, 0.38)"
        },
        divider: "rgba(0, 0, 0, 0.12)",
        background: {
            paper: Ln.white,
            default: Rn[50]
        },
        action: {
            active: "rgba(0, 0, 0, 0.54)",
            hover: "rgba(0, 0, 0, 0.04)",
            hoverOpacity: .04,
            selected: "rgba(0, 0, 0, 0.08)",
            selectedOpacity: .08,
            disabled: "rgba(0, 0, 0, 0.26)",
            disabledBackground: "rgba(0, 0, 0, 0.12)",
            disabledOpacity: .38,
            focus: "rgba(0, 0, 0, 0.12)",
            focusOpacity: .12,
            activatedOpacity: .12
        }
    }
      , Wn = {
        text: {
            primary: Ln.white,
            secondary: "rgba(255, 255, 255, 0.7)",
            disabled: "rgba(255, 255, 255, 0.5)",
            hint: "rgba(255, 255, 255, 0.5)",
            icon: "rgba(255, 255, 255, 0.5)"
        },
        divider: "rgba(255, 255, 255, 0.12)",
        background: {
            paper: Rn[800],
            default: "#303030"
        },
        action: {
            active: Ln.white,
            hover: "rgba(255, 255, 255, 0.08)",
            hoverOpacity: .08,
            selected: "rgba(255, 255, 255, 0.16)",
            selectedOpacity: .16,
            disabled: "rgba(255, 255, 255, 0.3)",
            disabledBackground: "rgba(255, 255, 255, 0.12)",
            disabledOpacity: .38,
            focus: "rgba(255, 255, 255, 0.12)",
            focusOpacity: .12,
            activatedOpacity: .24
        }
    };
    function qn(e, t, n, r) {
        var i = r.light || r
          , a = r.dark || 1.5 * r;
        e[t] || (e.hasOwnProperty(n) ? e[t] = e[n] : "light" === t ? e.light = jn(e.main, i) : "dark" === t && (e.dark = Vn(e.main, a)))
    }
    function Xn(e) {
        var t = e.primary
          , n = void 0 === t ? {
            light: kn[300],
            main: kn[500],
            dark: kn[700]
        } : t
          , r = e.secondary
          , o = void 0 === r ? {
            light: Dn.A200,
            main: Dn.A400,
            dark: Dn.A700
        } : r
          , s = e.error
          , l = void 0 === s ? {
            light: In[300],
            main: In[500],
            dark: In[700]
        } : s
          , u = e.warning
          , c = void 0 === u ? {
            light: On[300],
            main: On[500],
            dark: On[700]
        } : u
          , h = e.info
          , p = void 0 === h ? {
            light: Fn[300],
            main: Fn[500],
            dark: Fn[700]
        } : h
          , f = e.success
          , d = void 0 === f ? {
            light: Nn[300],
            main: Nn[500],
            dark: Nn[700]
        } : f
          , m = e.type
          , g = void 0 === m ? "light" : m
          , v = e.contrastThreshold
          , y = void 0 === v ? 3 : v
          , b = e.tonalOffset
          , x = void 0 === b ? .2 : b
          , w = i(e, ["primary", "secondary", "error", "warning", "info", "success", "type", "contrastThreshold", "tonalOffset"]);
        function _(e) {
            return function(e, t) {
                var n = Hn(e)
                  , r = Hn(t);
                return (Math.max(n, r) + .05) / (Math.min(n, r) + .05)
            }(e, Wn.text.primary) >= y ? Wn.text.primary : Un.text.primary
        }
        var S = function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 500
              , n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 300
              , r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 700;
            if (!(e = Object(a.a)({}, e)).main && e[t] && (e.main = e[t]),
            !e.main)
                throw new Error(Cn(4, t));
            if ("string" !== typeof e.main)
                throw new Error(Cn(5, JSON.stringify(e.main)));
            return qn(e, "light", n, x),
            qn(e, "dark", r, x),
            e.contrastText || (e.contrastText = _(e.main)),
            e
        }
          , E = {
            dark: Wn,
            light: Un
        };
        return dn(Object(a.a)({
            common: Ln,
            type: g,
            primary: S(n),
            secondary: S(o, "A400", "A200", "A700"),
            error: S(l),
            warning: S(c),
            info: S(p),
            success: S(d),
            grey: Rn,
            contrastThreshold: y,
            getContrastText: _,
            augmentColor: S,
            tonalOffset: x
        }, E[g]), w)
    }
    function Yn(e) {
        return Math.round(1e5 * e) / 1e5
    }
    var Zn = {
        textTransform: "uppercase"
    };
    function $n(e, t) {
        var n = "function" === typeof t ? t(e) : t
          , r = n.fontFamily
          , o = void 0 === r ? '"Roboto", "Helvetica", "Arial", sans-serif' : r
          , s = n.fontSize
          , l = void 0 === s ? 14 : s
          , u = n.fontWeightLight
          , c = void 0 === u ? 300 : u
          , h = n.fontWeightRegular
          , p = void 0 === h ? 400 : h
          , f = n.fontWeightMedium
          , d = void 0 === f ? 500 : f
          , m = n.fontWeightBold
          , g = void 0 === m ? 700 : m
          , v = n.htmlFontSize
          , y = void 0 === v ? 16 : v
          , b = n.allVariants
          , x = n.pxToRem
          , w = i(n, ["fontFamily", "fontSize", "fontWeightLight", "fontWeightRegular", "fontWeightMedium", "fontWeightBold", "htmlFontSize", "allVariants", "pxToRem"]);
        var _ = l / 14
          , S = x || function(e) {
            return "".concat(e / y * _, "rem")
        }
          , E = function(e, t, n, r, i) {
            return Object(a.a)({
                fontFamily: o,
                fontWeight: e,
                fontSize: S(t),
                lineHeight: n
            }, '"Roboto", "Helvetica", "Arial", sans-serif' === o ? {
                letterSpacing: "".concat(Yn(r / t), "em")
            } : {}, i, b)
        }
          , M = {
            h1: E(c, 96, 1.167, -1.5),
            h2: E(c, 60, 1.2, -.5),
            h3: E(p, 48, 1.167, 0),
            h4: E(p, 34, 1.235, .25),
            h5: E(p, 24, 1.334, 0),
            h6: E(d, 20, 1.6, .15),
            subtitle1: E(p, 16, 1.75, .15),
            subtitle2: E(d, 14, 1.57, .1),
            body1: E(p, 16, 1.5, .15),
            body2: E(p, 14, 1.43, .15),
            button: E(d, 14, 1.75, .4, Zn),
            caption: E(p, 12, 1.66, .4),
            overline: E(p, 12, 2.66, 1, Zn)
        };
        return dn(Object(a.a)({
            htmlFontSize: y,
            pxToRem: S,
            round: Yn,
            fontFamily: o,
            fontSize: l,
            fontWeightLight: c,
            fontWeightRegular: p,
            fontWeightMedium: d,
            fontWeightBold: g
        }, M), w, {
            clone: !1
        })
    }
    function Jn() {
        return ["".concat(arguments.length <= 0 ? void 0 : arguments[0], "px ").concat(arguments.length <= 1 ? void 0 : arguments[1], "px ").concat(arguments.length <= 2 ? void 0 : arguments[2], "px ").concat(arguments.length <= 3 ? void 0 : arguments[3], "px rgba(0,0,0,").concat(.2, ")"), "".concat(arguments.length <= 4 ? void 0 : arguments[4], "px ").concat(arguments.length <= 5 ? void 0 : arguments[5], "px ").concat(arguments.length <= 6 ? void 0 : arguments[6], "px ").concat(arguments.length <= 7 ? void 0 : arguments[7], "px rgba(0,0,0,").concat(.14, ")"), "".concat(arguments.length <= 8 ? void 0 : arguments[8], "px ").concat(arguments.length <= 9 ? void 0 : arguments[9], "px ").concat(arguments.length <= 10 ? void 0 : arguments[10], "px ").concat(arguments.length <= 11 ? void 0 : arguments[11], "px rgba(0,0,0,").concat(.12, ")")].join(",")
    }
    var Kn = ["none", Jn(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), Jn(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), Jn(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), Jn(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), Jn(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), Jn(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), Jn(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), Jn(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), Jn(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), Jn(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), Jn(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), Jn(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), Jn(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), Jn(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), Jn(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), Jn(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), Jn(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), Jn(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), Jn(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), Jn(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), Jn(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), Jn(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), Jn(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), Jn(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)]
      , Qn = {
        borderRadius: 4
    };
    function er(e, t) {
        return function(e) {
            if (Array.isArray(e))
                return e
        }(e) || function(e, t) {
            var n = null == e ? null : "undefined" !== typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
            if (null != n) {
                var r, i, a = [], o = !0, s = !1;
                try {
                    for (n = n.call(e); !(o = (r = n.next()).done) && (a.push(r.value),
                    !t || a.length !== t); o = !0)
                        ;
                } catch (l) {
                    s = !0,
                    i = l
                } finally {
                    try {
                        o || null == n.return || n.return()
                    } finally {
                        if (s)
                            throw i
                    }
                }
                return a
            }
        }(e, t) || at(e, t) || function() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }()
    }
    var tr = function(e, t) {
        return t ? dn(e, t, {
            clone: !1
        }) : e
    }
      , nr = {
        xs: 0,
        sm: 600,
        md: 960,
        lg: 1280,
        xl: 1920
    }
      , rr = {
        keys: ["xs", "sm", "md", "lg", "xl"],
        up: function(e) {
            return "@media (min-width:".concat(nr[e], "px)")
        }
    };
    var ir = {
        m: "margin",
        p: "padding"
    }
      , ar = {
        t: "Top",
        r: "Right",
        b: "Bottom",
        l: "Left",
        x: ["Left", "Right"],
        y: ["Top", "Bottom"]
    }
      , or = {
        marginX: "mx",
        marginY: "my",
        paddingX: "px",
        paddingY: "py"
    }
      , sr = function(e) {
        var t = {};
        return function(n) {
            return void 0 === t[n] && (t[n] = e(n)),
            t[n]
        }
    }((function(e) {
        if (e.length > 2) {
            if (!or[e])
                return [e];
            e = or[e]
        }
        var t = er(e.split(""), 2)
          , n = t[0]
          , r = t[1]
          , i = ir[n]
          , a = ar[r] || "";
        return Array.isArray(a) ? a.map((function(e) {
            return i + e
        }
        )) : [i + a]
    }
    ))
      , lr = ["m", "mt", "mr", "mb", "ml", "mx", "my", "p", "pt", "pr", "pb", "pl", "px", "py", "margin", "marginTop", "marginRight", "marginBottom", "marginLeft", "marginX", "marginY", "padding", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "paddingX", "paddingY"];
    function ur(e) {
        var t = e.spacing || 8;
        return "number" === typeof t ? function(e) {
            return t * e
        }
        : Array.isArray(t) ? function(e) {
            return t[e]
        }
        : "function" === typeof t ? t : function() {}
    }
    function cr(e, t) {
        return function(n) {
            return e.reduce((function(e, r) {
                return e[r] = function(e, t) {
                    if ("string" === typeof t || null == t)
                        return t;
                    var n = e(Math.abs(t));
                    return t >= 0 ? n : "number" === typeof n ? -n : "-".concat(n)
                }(t, n),
                e
            }
            ), {})
        }
    }
    function hr(e) {
        var t = ur(e.theme);
        return Object.keys(e).map((function(n) {
            if (-1 === lr.indexOf(n))
                return null;
            var r = cr(sr(n), t)
              , i = e[n];
            return function(e, t, n) {
                if (Array.isArray(t)) {
                    var r = e.theme.breakpoints || rr;
                    return t.reduce((function(e, i, a) {
                        return e[r.up(r.keys[a])] = n(t[a]),
                        e
                    }
                    ), {})
                }
                if ("object" === pn(t)) {
                    var i = e.theme.breakpoints || rr;
                    return Object.keys(t).reduce((function(e, r) {
                        return e[i.up(r)] = n(t[r]),
                        e
                    }
                    ), {})
                }
                return n(t)
            }(e, i, r)
        }
        )).reduce(tr, {})
    }
    hr.propTypes = {},
    hr.filterProps = lr;
    function pr() {
        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 8;
        if (e.mui)
            return e;
        var t = ur({
            spacing: e
        })
          , n = function() {
            for (var e = arguments.length, n = new Array(e), r = 0; r < e; r++)
                n[r] = arguments[r];
            return 0 === n.length ? t(1) : 1 === n.length ? t(n[0]) : n.map((function(e) {
                if ("string" === typeof e)
                    return e;
                var n = t(e);
                return "number" === typeof n ? "".concat(n, "px") : n
            }
            )).join(" ")
        };
        return Object.defineProperty(n, "unit", {
            get: function() {
                return e
            }
        }),
        n.mui = !0,
        n
    }
    var fr = {
        easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
        easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
        easeIn: "cubic-bezier(0.4, 0, 1, 1)",
        sharp: "cubic-bezier(0.4, 0, 0.6, 1)"
    }
      , dr = {
        shortest: 150,
        shorter: 200,
        short: 250,
        standard: 300,
        complex: 375,
        enteringScreen: 225,
        leavingScreen: 195
    };
    function mr(e) {
        return "".concat(Math.round(e), "ms")
    }
    var gr = {
        easing: fr,
        duration: dr,
        create: function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : ["all"]
              , t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
              , n = t.duration
              , r = void 0 === n ? dr.standard : n
              , a = t.easing
              , o = void 0 === a ? fr.easeInOut : a
              , s = t.delay
              , l = void 0 === s ? 0 : s;
            i(t, ["duration", "easing", "delay"]);
            return (Array.isArray(e) ? e : [e]).map((function(e) {
                return "".concat(e, " ").concat("string" === typeof r ? r : mr(r), " ").concat(o, " ").concat("string" === typeof l ? l : mr(l))
            }
            )).join(",")
        },
        getAutoHeightDuration: function(e) {
            if (!e)
                return 0;
            var t = e / 36;
            return Math.round(10 * (4 + 15 * Math.pow(t, .25) + t / 5))
        }
    }
      , vr = {
        mobileStepper: 1e3,
        speedDial: 1050,
        appBar: 1100,
        drawer: 1200,
        modal: 1300,
        snackbar: 1400,
        tooltip: 1500
    };
    var yr = function() {
        for (var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, t = e.breakpoints, n = void 0 === t ? {} : t, r = e.mixins, a = void 0 === r ? {} : r, o = e.palette, s = void 0 === o ? {} : o, l = e.spacing, u = e.typography, c = void 0 === u ? {} : u, h = i(e, ["breakpoints", "mixins", "palette", "spacing", "typography"]), p = Xn(s), f = An(n), d = pr(l), m = dn({
            breakpoints: f,
            direction: "ltr",
            mixins: Pn(f, d, a),
            overrides: {},
            palette: p,
            props: {},
            shadows: Kn,
            typography: $n(p, c),
            spacing: d,
            shape: Qn,
            transitions: gr,
            zIndex: vr
        }, h), g = arguments.length, v = new Array(g > 1 ? g - 1 : 0), y = 1; y < g; y++)
            v[y - 1] = arguments[y];
        return m = v.reduce((function(e, t) {
            return dn(e, t)
        }
        ), m)
    }();
    var br = function(e, t) {
        return En(e, Object(a.a)({
            defaultTheme: yr
        }, t))
    }
      , xr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
      , wr = ["auto", !0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];
    function _r(e) {
        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1
          , n = parseFloat(e);
        return "".concat(n / t).concat(String(e).replace(String(n), "") || "px")
    }
    var Sr = o.forwardRef((function(e, t) {
        var n = e.alignContent
          , r = void 0 === n ? "stretch" : n
          , s = e.alignItems
          , u = void 0 === s ? "stretch" : s
          , c = e.classes
          , h = e.className
          , p = e.component
          , f = void 0 === p ? "div" : p
          , d = e.container
          , m = void 0 !== d && d
          , g = e.direction
          , v = void 0 === g ? "row" : g
          , y = e.item
          , b = void 0 !== y && y
          , x = e.justify
          , w = void 0 === x ? "flex-start" : x
          , _ = e.lg
          , S = void 0 !== _ && _
          , E = e.md
          , M = void 0 !== E && E
          , T = e.sm
          , A = void 0 !== T && T
          , P = e.spacing
          , C = void 0 === P ? 0 : P
          , L = e.wrap
          , R = void 0 === L ? "wrap" : L
          , k = e.xl
          , D = void 0 !== k && k
          , I = e.xs
          , O = void 0 !== I && I
          , F = e.zeroMinWidth
          , N = void 0 !== F && F
          , B = i(e, ["alignContent", "alignItems", "classes", "className", "component", "container", "direction", "item", "justify", "lg", "md", "sm", "spacing", "wrap", "xl", "xs", "zeroMinWidth"])
          , z = function() {
            for (var e, t, n = 0, r = ""; n < arguments.length; )
                (e = arguments[n++]) && (t = l(e)) && (r && (r += " "),
                r += t);
            return r
        }(c.root, h, m && [c.container, 0 !== C && c["spacing-xs-".concat(String(C))]], b && c.item, N && c.zeroMinWidth, "row" !== v && c["direction-xs-".concat(String(v))], "wrap" !== R && c["wrap-xs-".concat(String(R))], "stretch" !== u && c["align-items-xs-".concat(String(u))], "stretch" !== r && c["align-content-xs-".concat(String(r))], "flex-start" !== w && c["justify-xs-".concat(String(w))], !1 !== O && c["grid-xs-".concat(String(O))], !1 !== A && c["grid-sm-".concat(String(A))], !1 !== M && c["grid-md-".concat(String(M))], !1 !== S && c["grid-lg-".concat(String(S))], !1 !== D && c["grid-xl-".concat(String(D))]);
        return o.createElement(f, Object(a.a)({
            className: z,
            ref: t
        }, B))
    }
    ))
      , Er = br((function(e) {
        return Object(a.a)({
            root: {},
            container: {
                boxSizing: "border-box",
                display: "flex",
                flexWrap: "wrap",
                width: "100%"
            },
            item: {
                boxSizing: "border-box",
                margin: "0"
            },
            zeroMinWidth: {
                minWidth: 0
            },
            "direction-xs-column": {
                flexDirection: "column"
            },
            "direction-xs-column-reverse": {
                flexDirection: "column-reverse"
            },
            "direction-xs-row-reverse": {
                flexDirection: "row-reverse"
            },
            "wrap-xs-nowrap": {
                flexWrap: "nowrap"
            },
            "wrap-xs-wrap-reverse": {
                flexWrap: "wrap-reverse"
            },
            "align-items-xs-center": {
                alignItems: "center"
            },
            "align-items-xs-flex-start": {
                alignItems: "flex-start"
            },
            "align-items-xs-flex-end": {
                alignItems: "flex-end"
            },
            "align-items-xs-baseline": {
                alignItems: "baseline"
            },
            "align-content-xs-center": {
                alignContent: "center"
            },
            "align-content-xs-flex-start": {
                alignContent: "flex-start"
            },
            "align-content-xs-flex-end": {
                alignContent: "flex-end"
            },
            "align-content-xs-space-between": {
                alignContent: "space-between"
            },
            "align-content-xs-space-around": {
                alignContent: "space-around"
            },
            "justify-xs-center": {
                justifyContent: "center"
            },
            "justify-xs-flex-end": {
                justifyContent: "flex-end"
            },
            "justify-xs-space-between": {
                justifyContent: "space-between"
            },
            "justify-xs-space-around": {
                justifyContent: "space-around"
            },
            "justify-xs-space-evenly": {
                justifyContent: "space-evenly"
            }
        }, function(e, t) {
            var n = {};
            return xr.forEach((function(r) {
                var i = e.spacing(r);
                0 !== i && (n["spacing-".concat(t, "-").concat(r)] = {
                    margin: "-".concat(_r(i, 2)),
                    width: "calc(100% + ".concat(_r(i), ")"),
                    "& > $item": {
                        padding: _r(i, 2)
                    }
                })
            }
            )),
            n
        }(e, "xs"), e.breakpoints.keys.reduce((function(t, n) {
            return function(e, t, n) {
                var r = {};
                wr.forEach((function(e) {
                    var t = "grid-".concat(n, "-").concat(e);
                    if (!0 !== e)
                        if ("auto" !== e) {
                            var i = "".concat(Math.round(e / 12 * 1e8) / 1e6, "%");
                            r[t] = {
                                flexBasis: i,
                                flexGrow: 0,
                                maxWidth: i
                            }
                        } else
                            r[t] = {
                                flexBasis: "auto",
                                flexGrow: 0,
                                maxWidth: "none"
                            };
                    else
                        r[t] = {
                            flexBasis: 0,
                            flexGrow: 1,
                            maxWidth: "100%"
                        }
                }
                )),
                "xs" === n ? Object(a.a)(e, r) : e[t.breakpoints.up(n)] = r
            }(t, e, n),
            t
        }
        ), {}))
    }
    ), {
        name: "MuiGrid"
    })(Sr);
    t.a = Er
}
]])
//# sourceMappingURL=2.8e276ff6.chunk.js.map
